<?xml version="1.0" encoding="utf-8"?>
<library xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemata.jklnet.org/Decompiler">
  <Types>
    <typedef name="uintptr_t">
      <prim domain="UnsignedInt" size="4" />
    </typedef>
    <typedef name="va_list">
      <ptr>
        <prim domain="Character" size="1" />
      </ptr>
    </typedef>
    <typedef name="size_t">
      <prim domain="UnsignedInt" size="4" />
    </typedef>
    <typedef name="rsize_t">
      <type>size_t</type>
    </typedef>
    <typedef name="intptr_t">
      <prim domain="SignedInt" size="4" />
    </typedef>
    <typedef name="ptrdiff_t">
      <prim domain="SignedInt" size="4" />
    </typedef>
    <typedef name="wint_t">
      <prim domain="UnsignedInt" size="2" />
    </typedef>
    <typedef name="wctype_t">
      <prim domain="UnsignedInt" size="2" />
    </typedef>
    <typedef name="errno_t">
      <prim domain="SignedInt" size="4" />
    </typedef>
    <typedef name="__time32_t">
      <prim domain="SignedInt" size="4" />
    </typedef>
    <typedef name="__time64_t">
      <prim domain="SignedInt" size="8" />
    </typedef>
    <typedef name="time_t">
      <type>__time64_t</type>
    </typedef>
    <typedef name="pthreadlocinfo">
      <ptr>
        <struct name="threadlocaleinfostruct" />
      </ptr>
    </typedef>
    <typedef name="pthreadmbcinfo">
      <ptr>
        <struct name="threadmbcinfostruct" />
      </ptr>
    </typedef>
    <struct name="localeinfo_struct">
      <field offset="0" name="locinfo">
        <type>pthreadlocinfo</type>
      </field>
      <field offset="4" name="mbcinfo">
        <type>pthreadmbcinfo</type>
      </field>
    </struct>
    <typedef name="_locale_tstruct">
      <struct name="localeinfo_struct" />
    </typedef>
    <typedef name="_locale_t">
      <ptr>
        <struct name="localeinfo_struct" />
      </ptr>
    </typedef>
    <struct name="localerefcount">
      <field offset="0" name="locale">
        <ptr>
          <prim domain="Character" size="1" />
        </ptr>
      </field>
      <field offset="4" name="wlocale">
        <ptr>
          <prim domain="Character" size="2" />
        </ptr>
      </field>
      <field offset="8" name="refcount">
        <ptr>
          <prim domain="SignedInt" size="4" />
        </ptr>
      </field>
      <field offset="12" name="wrefcount">
        <ptr>
          <prim domain="SignedInt" size="4" />
        </ptr>
      </field>
    </struct>
    <typedef name="locrefcount">
      <struct name="localerefcount" />
    </typedef>
    <struct name="threadlocaleinfostruct">
      <field offset="0" name="refcount">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="4" name="lc_codepage">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="8" name="lc_collate_cp">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="12" name="lc_time_cp">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="16" name="lc_category">
        <arr length="6">
          <type>locrefcount</type>
        </arr>
      </field>
      <field offset="112" name="lc_clike">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="116" name="mb_cur_max">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="120" name="lconv_intl_refcount">
        <ptr>
          <prim domain="SignedInt" size="4" />
        </ptr>
      </field>
      <field offset="124" name="lconv_num_refcount">
        <ptr>
          <prim domain="SignedInt" size="4" />
        </ptr>
      </field>
      <field offset="128" name="lconv_mon_refcount">
        <ptr>
          <prim domain="SignedInt" size="4" />
        </ptr>
      </field>
      <field offset="132" name="lconv">
        <ptr>
          <struct name="lconv" />
        </ptr>
      </field>
      <field offset="136" name="ctype1_refcount">
        <ptr>
          <prim domain="SignedInt" size="4" />
        </ptr>
      </field>
      <field offset="140" name="ctype1">
        <ptr>
          <prim domain="UnsignedInt" size="2" />
        </ptr>
      </field>
      <field offset="144" name="pctype">
        <ptr>
          <prim domain="UnsignedInt" size="2" />
        </ptr>
      </field>
      <field offset="148" name="pclmap">
        <ptr>
          <prim domain="UnsignedInt" size="1" />
        </ptr>
      </field>
      <field offset="152" name="pcumap">
        <ptr>
          <prim domain="UnsignedInt" size="1" />
        </ptr>
      </field>
      <field offset="156" name="lc_time_curr">
        <ptr>
          <struct name="__lc_time_data" />
        </ptr>
      </field>
      <field offset="160" name="locale_name">
        <arr length="6">
          <ptr>
            <prim domain="Character" size="2" />
          </ptr>
        </arr>
      </field>
    </struct>
    <typedef name="threadlocinfo">
      <struct name="threadlocaleinfostruct" />
    </typedef>
    <enum name="_EXCEPTION_DISPOSITION">
      <member name="ExceptionContinueExecution" value="0" />
      <member name="ExceptionContinueSearch" value="1" />
      <member name="ExceptionNestedException" value="2" />
      <member name="ExceptionCollidedUnwind" value="3" />
    </enum>
    <typedef name="EXCEPTION_DISPOSITION">
      <enum name="_EXCEPTION_DISPOSITION" />
    </typedef>
    <typedef name="ULONG">
      <prim domain="UnsignedInt" size="4" />
    </typedef>
    <typedef name="PULONG">
      <ptr>
        <type>ULONG</type>
      </ptr>
    </typedef>
    <typedef name="USHORT">
      <prim domain="UnsignedInt" size="2" />
    </typedef>
    <typedef name="PUSHORT">
      <ptr>
        <type>USHORT</type>
      </ptr>
    </typedef>
    <typedef name="UCHAR">
      <prim domain="UnsignedInt" size="1" />
    </typedef>
    <typedef name="PUCHAR">
      <ptr>
        <type>UCHAR</type>
      </ptr>
    </typedef>
    <typedef name="PSZ">
      <ptr>
        <prim domain="Character" size="1" />
      </ptr>
    </typedef>
    <typedef name="DWORD">
      <prim domain="UnsignedInt" size="4" />
    </typedef>
    <typedef name="BOOL">
      <prim domain="SignedInt" size="4" />
    </typedef>
    <typedef name="BYTE">
      <prim domain="UnsignedInt" size="1" />
    </typedef>
    <typedef name="WORD">
      <prim domain="UnsignedInt" size="2" />
    </typedef>
    <typedef name="FLOAT">
      <prim domain="Real" size="4" />
    </typedef>
    <typedef name="PFLOAT">
      <ptr>
        <type>FLOAT</type>
      </ptr>
    </typedef>
    <typedef name="PBOOL">
      <ptr>
        <type>BOOL</type>
      </ptr>
    </typedef>
    <typedef name="LPBOOL">
      <ptr>
        <type>BOOL</type>
      </ptr>
    </typedef>
    <typedef name="PBYTE">
      <ptr>
        <type>BYTE</type>
      </ptr>
    </typedef>
    <typedef name="LPBYTE">
      <ptr>
        <type>BYTE</type>
      </ptr>
    </typedef>
    <typedef name="PINT">
      <ptr>
        <prim domain="SignedInt" size="4" />
      </ptr>
    </typedef>
    <typedef name="LPINT">
      <ptr>
        <prim domain="SignedInt" size="4" />
      </ptr>
    </typedef>
    <typedef name="PWORD">
      <ptr>
        <type>WORD</type>
      </ptr>
    </typedef>
    <typedef name="LPWORD">
      <ptr>
        <type>WORD</type>
      </ptr>
    </typedef>
    <typedef name="LPLONG">
      <ptr>
        <prim domain="SignedInt" size="4" />
      </ptr>
    </typedef>
    <typedef name="PDWORD">
      <ptr>
        <type>DWORD</type>
      </ptr>
    </typedef>
    <typedef name="LPDWORD">
      <ptr>
        <type>DWORD</type>
      </ptr>
    </typedef>
    <typedef name="LPVOID">
      <ptr>
        <void />
      </ptr>
    </typedef>
    <typedef name="LPCVOID">
      <ptr>
        <void />
      </ptr>
    </typedef>
    <typedef name="INT">
      <prim domain="SignedInt" size="4" />
    </typedef>
    <typedef name="UINT">
      <prim domain="UnsignedInt" size="4" />
    </typedef>
    <typedef name="PUINT">
      <ptr>
        <prim domain="UnsignedInt" size="4" />
      </ptr>
    </typedef>
    <typedef name="POINTER_64_INT">
      <prim domain="UnsignedInt" size="4" />
    </typedef>
    <typedef name="INT8">
      <prim domain="SignedInt" size="1" />
    </typedef>
    <typedef name="PINT8">
      <ptr>
        <prim domain="SignedInt" size="1" />
      </ptr>
    </typedef>
    <typedef name="INT16">
      <prim domain="SignedInt" size="2" />
    </typedef>
    <typedef name="PINT16">
      <ptr>
        <prim domain="SignedInt" size="2" />
      </ptr>
    </typedef>
    <typedef name="INT32">
      <prim domain="SignedInt" size="4" />
    </typedef>
    <typedef name="PINT32">
      <ptr>
        <prim domain="SignedInt" size="4" />
      </ptr>
    </typedef>
    <typedef name="INT64">
      <prim domain="SignedInt" size="8" />
    </typedef>
    <typedef name="PINT64">
      <ptr>
        <prim domain="SignedInt" size="8" />
      </ptr>
    </typedef>
    <typedef name="UINT8">
      <prim domain="UnsignedInt" size="1" />
    </typedef>
    <typedef name="PUINT8">
      <ptr>
        <prim domain="UnsignedInt" size="1" />
      </ptr>
    </typedef>
    <typedef name="UINT16">
      <prim domain="UnsignedInt" size="2" />
    </typedef>
    <typedef name="PUINT16">
      <ptr>
        <prim domain="UnsignedInt" size="2" />
      </ptr>
    </typedef>
    <typedef name="UINT32">
      <prim domain="UnsignedInt" size="4" />
    </typedef>
    <typedef name="PUINT32">
      <ptr>
        <prim domain="UnsignedInt" size="4" />
      </ptr>
    </typedef>
    <typedef name="UINT64">
      <prim domain="UnsignedInt" size="8" />
    </typedef>
    <typedef name="PUINT64">
      <ptr>
        <prim domain="UnsignedInt" size="8" />
      </ptr>
    </typedef>
    <typedef name="LONG32">
      <prim domain="SignedInt" size="4" />
    </typedef>
    <typedef name="PLONG32">
      <ptr>
        <prim domain="SignedInt" size="4" />
      </ptr>
    </typedef>
    <typedef name="ULONG32">
      <prim domain="UnsignedInt" size="4" />
    </typedef>
    <typedef name="PULONG32">
      <ptr>
        <prim domain="UnsignedInt" size="4" />
      </ptr>
    </typedef>
    <typedef name="DWORD32">
      <prim domain="UnsignedInt" size="4" />
    </typedef>
    <typedef name="PDWORD32">
      <ptr>
        <prim domain="UnsignedInt" size="4" />
      </ptr>
    </typedef>
    <typedef name="INT_PTR">
      <prim domain="SignedInt" size="4" />
    </typedef>
    <typedef name="PINT_PTR">
      <ptr>
        <prim domain="SignedInt" size="4" />
      </ptr>
    </typedef>
    <typedef name="UINT_PTR">
      <prim domain="UnsignedInt" size="4" />
    </typedef>
    <typedef name="PUINT_PTR">
      <ptr>
        <prim domain="UnsignedInt" size="4" />
      </ptr>
    </typedef>
    <typedef name="LONG_PTR">
      <prim domain="SignedInt" size="4" />
    </typedef>
    <typedef name="PLONG_PTR">
      <ptr>
        <prim domain="SignedInt" size="4" />
      </ptr>
    </typedef>
    <typedef name="ULONG_PTR">
      <prim domain="UnsignedInt" size="4" />
    </typedef>
    <typedef name="PULONG_PTR">
      <ptr>
        <prim domain="UnsignedInt" size="4" />
      </ptr>
    </typedef>
    <typedef name="UHALF_PTR">
      <prim domain="UnsignedInt" size="2" />
    </typedef>
    <typedef name="PUHALF_PTR">
      <ptr>
        <prim domain="UnsignedInt" size="2" />
      </ptr>
    </typedef>
    <typedef name="HALF_PTR">
      <prim domain="SignedInt" size="2" />
    </typedef>
    <typedef name="PHALF_PTR">
      <ptr>
        <prim domain="SignedInt" size="2" />
      </ptr>
    </typedef>
    <typedef name="SHANDLE_PTR">
      <prim domain="SignedInt" size="4" />
    </typedef>
    <typedef name="HANDLE_PTR">
      <prim domain="UnsignedInt" size="4" />
    </typedef>
    <typedef name="SIZE_T">
      <type>ULONG_PTR</type>
    </typedef>
    <typedef name="PSIZE_T">
      <ptr>
        <type>ULONG_PTR</type>
      </ptr>
    </typedef>
    <typedef name="SSIZE_T">
      <type>LONG_PTR</type>
    </typedef>
    <typedef name="PSSIZE_T">
      <ptr>
        <type>LONG_PTR</type>
      </ptr>
    </typedef>
    <typedef name="DWORD_PTR">
      <type>ULONG_PTR</type>
    </typedef>
    <typedef name="PDWORD_PTR">
      <ptr>
        <type>ULONG_PTR</type>
      </ptr>
    </typedef>
    <typedef name="LONG64">
      <prim domain="SignedInt" size="8" />
    </typedef>
    <typedef name="PLONG64">
      <ptr>
        <prim domain="SignedInt" size="8" />
      </ptr>
    </typedef>
    <typedef name="ULONG64">
      <prim domain="UnsignedInt" size="8" />
    </typedef>
    <typedef name="PULONG64">
      <ptr>
        <prim domain="UnsignedInt" size="8" />
      </ptr>
    </typedef>
    <typedef name="DWORD64">
      <prim domain="UnsignedInt" size="8" />
    </typedef>
    <typedef name="PDWORD64">
      <ptr>
        <prim domain="UnsignedInt" size="8" />
      </ptr>
    </typedef>
    <typedef name="KAFFINITY">
      <type>ULONG_PTR</type>
    </typedef>
    <typedef name="PKAFFINITY">
      <ptr>
        <type>KAFFINITY</type>
      </ptr>
    </typedef>
    <typedef name="PVOID">
      <ptr>
        <void />
      </ptr>
    </typedef>
    <typedef name="PVOID64">
      <ptr>
        <void />
      </ptr>
    </typedef>
    <typedef name="CHAR">
      <prim domain="Character" size="1" />
    </typedef>
    <typedef name="SHORT">
      <prim domain="SignedInt" size="2" />
    </typedef>
    <typedef name="LONG">
      <prim domain="SignedInt" size="4" />
    </typedef>
    <typedef name="INT">
      <prim domain="SignedInt" size="4" />
    </typedef>
    <typedef name="WCHAR">
      <prim domain="Character" size="2" />
    </typedef>
    <typedef name="PWCHAR">
      <ptr>
        <type>WCHAR</type>
      </ptr>
    </typedef>
    <typedef name="LPWCH">
      <ptr>
        <type>WCHAR</type>
      </ptr>
    </typedef>
    <typedef name="PWCH">
      <ptr>
        <type>WCHAR</type>
      </ptr>
    </typedef>
    <typedef name="LPCWCH">
      <ptr>
        <type>WCHAR</type>
      </ptr>
    </typedef>
    <typedef name="PCWCH">
      <ptr>
        <type>WCHAR</type>
      </ptr>
    </typedef>
    <typedef name="NWPSTR">
      <ptr>
        <type>WCHAR</type>
      </ptr>
    </typedef>
    <typedef name="LPWSTR">
      <ptr>
        <type>WCHAR</type>
      </ptr>
    </typedef>
    <typedef name="PWSTR">
      <ptr>
        <type>WCHAR</type>
      </ptr>
    </typedef>
    <typedef name="PZPWSTR">
      <ptr>
        <type>PWSTR</type>
      </ptr>
    </typedef>
    <typedef name="PCZPWSTR">
      <ptr>
        <type>PWSTR</type>
      </ptr>
    </typedef>
    <typedef name="LPUWSTR">
      <ptr>
        <type>WCHAR</type>
      </ptr>
    </typedef>
    <typedef name="PUWSTR">
      <ptr>
        <type>WCHAR</type>
      </ptr>
    </typedef>
    <typedef name="LPCWSTR">
      <ptr>
        <type>WCHAR</type>
      </ptr>
    </typedef>
    <typedef name="PCWSTR">
      <ptr>
        <type>WCHAR</type>
      </ptr>
    </typedef>
    <typedef name="PZPCWSTR">
      <ptr>
        <type>PCWSTR</type>
      </ptr>
    </typedef>
    <typedef name="LPCUWSTR">
      <ptr>
        <type>WCHAR</type>
      </ptr>
    </typedef>
    <typedef name="PCUWSTR">
      <ptr>
        <type>WCHAR</type>
      </ptr>
    </typedef>
    <typedef name="PZZWSTR">
      <ptr>
        <type>WCHAR</type>
      </ptr>
    </typedef>
    <typedef name="PCZZWSTR">
      <ptr>
        <type>WCHAR</type>
      </ptr>
    </typedef>
    <typedef name="PUZZWSTR">
      <ptr>
        <type>WCHAR</type>
      </ptr>
    </typedef>
    <typedef name="PCUZZWSTR">
      <ptr>
        <type>WCHAR</type>
      </ptr>
    </typedef>
    <typedef name="PNZWCH">
      <ptr>
        <type>WCHAR</type>
      </ptr>
    </typedef>
    <typedef name="PCNZWCH">
      <ptr>
        <type>WCHAR</type>
      </ptr>
    </typedef>
    <typedef name="PUNZWCH">
      <ptr>
        <type>WCHAR</type>
      </ptr>
    </typedef>
    <typedef name="PCUNZWCH">
      <ptr>
        <type>WCHAR</type>
      </ptr>
    </typedef>
    <typedef name="LPCWCHAR">
      <ptr>
        <type>WCHAR</type>
      </ptr>
    </typedef>
    <typedef name="PCWCHAR">
      <ptr>
        <type>WCHAR</type>
      </ptr>
    </typedef>
    <typedef name="LPCUWCHAR">
      <ptr>
        <type>WCHAR</type>
      </ptr>
    </typedef>
    <typedef name="PCUWCHAR">
      <ptr>
        <type>WCHAR</type>
      </ptr>
    </typedef>
    <typedef name="UCSCHAR">
      <prim domain="UnsignedInt" size="4" />
    </typedef>
    <typedef name="PUCSCHAR">
      <ptr>
        <type>UCSCHAR</type>
      </ptr>
    </typedef>
    <typedef name="PCUCSCHAR">
      <ptr>
        <type>UCSCHAR</type>
      </ptr>
    </typedef>
    <typedef name="PUCSSTR">
      <ptr>
        <type>UCSCHAR</type>
      </ptr>
    </typedef>
    <typedef name="PUUCSSTR">
      <ptr>
        <type>UCSCHAR</type>
      </ptr>
    </typedef>
    <typedef name="PCUCSSTR">
      <ptr>
        <type>UCSCHAR</type>
      </ptr>
    </typedef>
    <typedef name="PCUUCSSTR">
      <ptr>
        <type>UCSCHAR</type>
      </ptr>
    </typedef>
    <typedef name="PUUCSCHAR">
      <ptr>
        <type>UCSCHAR</type>
      </ptr>
    </typedef>
    <typedef name="PCUUCSCHAR">
      <ptr>
        <type>UCSCHAR</type>
      </ptr>
    </typedef>
    <typedef name="PCHAR">
      <ptr>
        <type>CHAR</type>
      </ptr>
    </typedef>
    <typedef name="LPCH">
      <ptr>
        <type>CHAR</type>
      </ptr>
    </typedef>
    <typedef name="PCH">
      <ptr>
        <type>CHAR</type>
      </ptr>
    </typedef>
    <typedef name="LPCCH">
      <ptr>
        <type>CHAR</type>
      </ptr>
    </typedef>
    <typedef name="PCCH">
      <ptr>
        <type>CHAR</type>
      </ptr>
    </typedef>
    <typedef name="NPSTR">
      <ptr>
        <type>CHAR</type>
      </ptr>
    </typedef>
    <typedef name="LPSTR">
      <ptr>
        <type>CHAR</type>
      </ptr>
    </typedef>
    <typedef name="PSTR">
      <ptr>
        <type>CHAR</type>
      </ptr>
    </typedef>
    <typedef name="PZPSTR">
      <ptr>
        <type>PSTR</type>
      </ptr>
    </typedef>
    <typedef name="PCZPSTR">
      <ptr>
        <type>PSTR</type>
      </ptr>
    </typedef>
    <typedef name="LPCSTR">
      <ptr>
        <type>CHAR</type>
      </ptr>
    </typedef>
    <typedef name="PCSTR">
      <ptr>
        <type>CHAR</type>
      </ptr>
    </typedef>
    <typedef name="PZPCSTR">
      <ptr>
        <type>PCSTR</type>
      </ptr>
    </typedef>
    <typedef name="PZZSTR">
      <ptr>
        <type>CHAR</type>
      </ptr>
    </typedef>
    <typedef name="PCZZSTR">
      <ptr>
        <type>CHAR</type>
      </ptr>
    </typedef>
    <typedef name="PNZCH">
      <ptr>
        <type>CHAR</type>
      </ptr>
    </typedef>
    <typedef name="PCNZCH">
      <ptr>
        <type>CHAR</type>
      </ptr>
    </typedef>
    <typedef name="TCHAR">
      <prim domain="Character" size="1" />
    </typedef>
    <typedef name="PTCHAR">
      <ptr>
        <prim domain="Character" size="1" />
      </ptr>
    </typedef>
    <typedef name="TBYTE">
      <prim domain="UnsignedInt" size="1" />
    </typedef>
    <typedef name="PTBYTE">
      <ptr>
        <prim domain="UnsignedInt" size="1" />
      </ptr>
    </typedef>
    <typedef name="LPTCH">
      <type>LPCH</type>
    </typedef>
    <typedef name="PTCH">
      <type>LPCH</type>
    </typedef>
    <typedef name="LPCTCH">
      <type>LPCCH</type>
    </typedef>
    <typedef name="PCTCH">
      <type>LPCCH</type>
    </typedef>
    <typedef name="PTSTR">
      <type>LPSTR</type>
    </typedef>
    <typedef name="LPTSTR">
      <type>LPSTR</type>
    </typedef>
    <typedef name="PUTSTR">
      <type>LPSTR</type>
    </typedef>
    <typedef name="LPUTSTR">
      <type>LPSTR</type>
    </typedef>
    <typedef name="PCTSTR">
      <type>LPCSTR</type>
    </typedef>
    <typedef name="LPCTSTR">
      <type>LPCSTR</type>
    </typedef>
    <typedef name="PCUTSTR">
      <type>LPCSTR</type>
    </typedef>
    <typedef name="LPCUTSTR">
      <type>LPCSTR</type>
    </typedef>
    <typedef name="PZZTSTR">
      <type>PZZSTR</type>
    </typedef>
    <typedef name="PUZZTSTR">
      <type>PZZSTR</type>
    </typedef>
    <typedef name="PCZZTSTR">
      <type>PCZZSTR</type>
    </typedef>
    <typedef name="PCUZZTSTR">
      <type>PCZZSTR</type>
    </typedef>
    <typedef name="PNZTCH">
      <type>PNZCH</type>
    </typedef>
    <typedef name="PUNZTCH">
      <type>PNZCH</type>
    </typedef>
    <typedef name="PCNZTCH">
      <type>PCNZCH</type>
    </typedef>
    <typedef name="PCUNZTCH">
      <type>PCNZCH</type>
    </typedef>
    <typedef name="PSHORT">
      <ptr>
        <type>SHORT</type>
      </ptr>
    </typedef>
    <typedef name="PLONG">
      <ptr>
        <type>LONG</type>
      </ptr>
    </typedef>
    <struct name="_PROCESSOR_NUMBER">
      <field offset="0" name="Group">
        <type>WORD</type>
      </field>
      <field offset="2" name="Number">
        <type>BYTE</type>
      </field>
      <field offset="3" name="Reserved">
        <type>BYTE</type>
      </field>
    </struct>
    <typedef name="PROCESSOR_NUMBER">
      <struct name="_PROCESSOR_NUMBER" />
    </typedef>
    <typedef name="PPROCESSOR_NUMBER">
      <ptr>
        <struct name="_PROCESSOR_NUMBER" />
      </ptr>
    </typedef>
    <struct name="_GROUP_AFFINITY">
      <field offset="0" name="Mask">
        <type>KAFFINITY</type>
      </field>
      <field offset="4" name="Group">
        <type>WORD</type>
      </field>
      <field offset="6" name="Reserved">
        <arr length="3">
          <type>WORD</type>
        </arr>
      </field>
    </struct>
    <typedef name="GROUP_AFFINITY">
      <struct name="_GROUP_AFFINITY" />
    </typedef>
    <typedef name="PGROUP_AFFINITY">
      <ptr>
        <struct name="_GROUP_AFFINITY" />
      </ptr>
    </typedef>
    <typedef name="HANDLE">
      <ptr>
        <void />
      </ptr>
    </typedef>
    <typedef name="PHANDLE">
      <ptr>
        <type>HANDLE</type>
      </ptr>
    </typedef>
    <typedef name="FCHAR">
      <type>BYTE</type>
    </typedef>
    <typedef name="FSHORT">
      <type>WORD</type>
    </typedef>
    <typedef name="FLONG">
      <type>DWORD</type>
    </typedef>
    <typedef name="HRESULT">
      <prim domain="SignedInt" size="4" />
    </typedef>
    <typedef name="CCHAR">
      <prim domain="Character" size="1" />
    </typedef>
    <typedef name="LCID">
      <type>DWORD</type>
    </typedef>
    <typedef name="PLCID">
      <type>PDWORD</type>
    </typedef>
    <typedef name="LANGID">
      <type>WORD</type>
    </typedef>
    <struct name="_FLOAT128">
      <field offset="0" name="LowPart">
        <prim domain="SignedInt" size="8" />
      </field>
      <field offset="8" name="HighPart">
        <prim domain="SignedInt" size="8" />
      </field>
    </struct>
    <typedef name="FLOAT128">
      <struct name="_FLOAT128" />
    </typedef>
    <typedef name="PFLOAT128">
      <ptr>
        <type>FLOAT128</type>
      </ptr>
    </typedef>
    <typedef name="LONGLONG">
      <prim domain="SignedInt" size="8" />
    </typedef>
    <typedef name="ULONGLONG">
      <prim domain="UnsignedInt" size="8" />
    </typedef>
    <typedef name="PLONGLONG">
      <ptr>
        <type>LONGLONG</type>
      </ptr>
    </typedef>
    <typedef name="PULONGLONG">
      <ptr>
        <type>ULONGLONG</type>
      </ptr>
    </typedef>
    <typedef name="USN">
      <type>LONGLONG</type>
    </typedef>
    <struct name="struct_0">
      <field offset="0" name="LowPart">
        <type>DWORD</type>
      </field>
      <field offset="4" name="HighPart">
        <type>LONG</type>
      </field>
    </struct>
    <struct name="struct_1">
      <field offset="0" name="LowPart">
        <type>DWORD</type>
      </field>
      <field offset="4" name="HighPart">
        <type>LONG</type>
      </field>
    </struct>
    <union name="_LARGE_INTEGER">
      <alt>
        <struct name="struct_0" />
      </alt>
      <alt name="u">
        <struct name="struct_1" />
      </alt>
      <alt name="QuadPart">
        <type>LONGLONG</type>
      </alt>
    </union>
    <typedef name="LARGE_INTEGER">
      <union name="_LARGE_INTEGER" />
    </typedef>
    <typedef name="PLARGE_INTEGER">
      <ptr>
        <type>LARGE_INTEGER</type>
      </ptr>
    </typedef>
    <struct name="struct_2">
      <field offset="0" name="LowPart">
        <type>DWORD</type>
      </field>
      <field offset="4" name="HighPart">
        <type>DWORD</type>
      </field>
    </struct>
    <struct name="struct_3">
      <field offset="0" name="LowPart">
        <type>DWORD</type>
      </field>
      <field offset="4" name="HighPart">
        <type>DWORD</type>
      </field>
    </struct>
    <union name="_ULARGE_INTEGER">
      <alt>
        <struct name="struct_2" />
      </alt>
      <alt name="u">
        <struct name="struct_3" />
      </alt>
      <alt name="QuadPart">
        <type>ULONGLONG</type>
      </alt>
    </union>
    <typedef name="ULARGE_INTEGER">
      <union name="_ULARGE_INTEGER" />
    </typedef>
    <typedef name="PULARGE_INTEGER">
      <ptr>
        <type>ULARGE_INTEGER</type>
      </ptr>
    </typedef>
    <struct name="_LUID">
      <field offset="0" name="LowPart">
        <type>DWORD</type>
      </field>
      <field offset="4" name="HighPart">
        <type>LONG</type>
      </field>
    </struct>
    <typedef name="LUID">
      <struct name="_LUID" />
    </typedef>
    <typedef name="PLUID">
      <ptr>
        <struct name="_LUID" />
      </ptr>
    </typedef>
    <typedef name="DWORDLONG">
      <type>ULONGLONG</type>
    </typedef>
    <typedef name="PDWORDLONG">
      <ptr>
        <type>DWORDLONG</type>
      </ptr>
    </typedef>
    <typedef name="BOOLEAN">
      <type>BYTE</type>
    </typedef>
    <typedef name="PBOOLEAN">
      <ptr>
        <type>BOOLEAN</type>
      </ptr>
    </typedef>
    <struct name="_LIST_ENTRY">
      <field offset="0" name="Flink">
        <ptr>
          <struct name="_LIST_ENTRY" />
        </ptr>
      </field>
      <field offset="4" name="Blink">
        <ptr>
          <struct name="_LIST_ENTRY" />
        </ptr>
      </field>
    </struct>
    <typedef name="LIST_ENTRY">
      <struct name="_LIST_ENTRY" />
    </typedef>
    <typedef name="PLIST_ENTRY">
      <ptr>
        <struct name="_LIST_ENTRY" />
      </ptr>
    </typedef>
    <typedef name="PRLIST_ENTRY">
      <ptr>
        <struct name="_LIST_ENTRY" />
      </ptr>
    </typedef>
    <struct name="_SINGLE_LIST_ENTRY">
      <field offset="0" name="Next">
        <ptr>
          <struct name="_SINGLE_LIST_ENTRY" />
        </ptr>
      </field>
    </struct>
    <typedef name="SINGLE_LIST_ENTRY">
      <struct name="_SINGLE_LIST_ENTRY" />
    </typedef>
    <typedef name="PSINGLE_LIST_ENTRY">
      <ptr>
        <struct name="_SINGLE_LIST_ENTRY" />
      </ptr>
    </typedef>
    <struct name="LIST_ENTRY32">
      <field offset="0" name="Flink">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Blink">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="LIST_ENTRY32">
      <struct name="LIST_ENTRY32" />
    </typedef>
    <typedef name="PLIST_ENTRY32">
      <ptr>
        <type>LIST_ENTRY32</type>
      </ptr>
    </typedef>
    <struct name="LIST_ENTRY64">
      <field offset="0" name="Flink">
        <type>ULONGLONG</type>
      </field>
      <field offset="8" name="Blink">
        <type>ULONGLONG</type>
      </field>
    </struct>
    <typedef name="LIST_ENTRY64">
      <struct name="LIST_ENTRY64" />
    </typedef>
    <typedef name="PLIST_ENTRY64">
      <ptr>
        <type>LIST_ENTRY64</type>
      </ptr>
    </typedef>
    <struct name="_GUID">
      <field offset="0" name="Data1">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="Data2">
        <prim domain="UnsignedInt" size="2" />
      </field>
      <field offset="6" name="Data3">
        <prim domain="UnsignedInt" size="2" />
      </field>
      <field offset="8" name="Data4">
        <arr length="8">
          <prim domain="UnsignedInt" size="1" />
        </arr>
      </field>
    </struct>
    <typedef name="GUID">
      <struct name="_GUID" />
    </typedef>
    <typedef name="LPGUID">
      <ptr>
        <type>GUID</type>
      </ptr>
    </typedef>
    <typedef name="LPCGUID">
      <ptr>
        <type>GUID</type>
      </ptr>
    </typedef>
    <typedef name="IID">
      <type>GUID</type>
    </typedef>
    <typedef name="LPIID">
      <ptr>
        <type>IID</type>
      </ptr>
    </typedef>
    <typedef name="CLSID">
      <type>GUID</type>
    </typedef>
    <typedef name="LPCLSID">
      <ptr>
        <type>CLSID</type>
      </ptr>
    </typedef>
    <typedef name="FMTID">
      <type>GUID</type>
    </typedef>
    <typedef name="LPFMTID">
      <ptr>
        <type>FMTID</type>
      </ptr>
    </typedef>
    <struct name="_OBJECTID">
      <field offset="0" name="Lineage">
        <type>GUID</type>
      </field>
      <field offset="16" name="Uniquifier">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="OBJECTID">
      <struct name="_OBJECTID" />
    </typedef>
    <typedef name="EXCEPTION_ROUTINE">
      <fn convention="__stdcall">
        <return>
          <type>EXCEPTION_DISPOSITION</type>
          <reg>eax</reg>
        </return>
        <arg name="ExceptionRecord">
          <ptr>
            <struct name="_EXCEPTION_RECORD" />
          </ptr>
          <stack size="4" />
        </arg>
        <arg name="EstablisherFrame">
          <type>PVOID</type>
          <stack size="4" />
        </arg>
        <arg name="ContextRecord">
          <ptr>
            <struct name="_CONTEXT" />
          </ptr>
          <stack size="4" />
        </arg>
        <arg name="DispatcherContext">
          <type>PVOID</type>
          <stack size="4" />
        </arg>
      </fn>
    </typedef>
    <typedef name="PEXCEPTION_ROUTINE">
      <ptr>
        <type>EXCEPTION_ROUTINE</type>
      </ptr>
    </typedef>
    <typedef name="KSPIN_LOCK">
      <type>ULONG_PTR</type>
    </typedef>
    <typedef name="PKSPIN_LOCK">
      <ptr>
        <type>KSPIN_LOCK</type>
      </ptr>
    </typedef>
    <struct name="_M128A">
      <field offset="0" name="Low">
        <type>ULONGLONG</type>
      </field>
      <field offset="8" name="High">
        <type>LONGLONG</type>
      </field>
    </struct>
    <typedef name="M128A">
      <struct name="_M128A" />
    </typedef>
    <typedef name="PM128A">
      <ptr>
        <struct name="_M128A" />
      </ptr>
    </typedef>
    <struct name="_XSAVE_FORMAT">
      <field offset="0" name="ControlWord">
        <type>WORD</type>
      </field>
      <field offset="2" name="StatusWord">
        <type>WORD</type>
      </field>
      <field offset="4" name="TagWord">
        <type>BYTE</type>
      </field>
      <field offset="5" name="Reserved1">
        <type>BYTE</type>
      </field>
      <field offset="6" name="ErrorOpcode">
        <type>WORD</type>
      </field>
      <field offset="8" name="ErrorOffset">
        <type>DWORD</type>
      </field>
      <field offset="12" name="ErrorSelector">
        <type>WORD</type>
      </field>
      <field offset="14" name="Reserved2">
        <type>WORD</type>
      </field>
      <field offset="16" name="DataOffset">
        <type>DWORD</type>
      </field>
      <field offset="20" name="DataSelector">
        <type>WORD</type>
      </field>
      <field offset="22" name="Reserved3">
        <type>WORD</type>
      </field>
      <field offset="24" name="MxCsr">
        <type>DWORD</type>
      </field>
      <field offset="28" name="MxCsr_Mask">
        <type>DWORD</type>
      </field>
      <field offset="32" name="FloatRegisters">
        <arr length="8">
          <type>M128A</type>
        </arr>
      </field>
      <field offset="160" name="XmmRegisters">
        <arr length="8">
          <type>M128A</type>
        </arr>
      </field>
      <field offset="288" name="Reserved4">
        <arr length="192">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="480" name="StackControl">
        <arr length="7">
          <type>DWORD</type>
        </arr>
      </field>
      <field offset="508" name="Cr0NpxState">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="XSAVE_FORMAT">
      <struct name="_XSAVE_FORMAT" />
    </typedef>
    <typedef name="PXSAVE_FORMAT">
      <ptr>
        <struct name="_XSAVE_FORMAT" />
      </ptr>
    </typedef>
    <struct name="_XSAVE_AREA_HEADER">
      <field offset="0" name="Mask">
        <type>DWORD64</type>
      </field>
      <field offset="8" name="Reserved">
        <arr length="7">
          <type>DWORD64</type>
        </arr>
      </field>
    </struct>
    <typedef name="XSAVE_AREA_HEADER">
      <struct name="_XSAVE_AREA_HEADER" />
    </typedef>
    <typedef name="PXSAVE_AREA_HEADER">
      <ptr>
        <struct name="_XSAVE_AREA_HEADER" />
      </ptr>
    </typedef>
    <struct name="_XSAVE_AREA">
      <field offset="0" name="LegacyState">
        <type>XSAVE_FORMAT</type>
      </field>
      <field offset="512" name="Header">
        <type>XSAVE_AREA_HEADER</type>
      </field>
    </struct>
    <typedef name="XSAVE_AREA">
      <struct name="_XSAVE_AREA" />
    </typedef>
    <typedef name="PXSAVE_AREA">
      <ptr>
        <struct name="_XSAVE_AREA" />
      </ptr>
    </typedef>
    <struct name="_XSTATE_CONTEXT">
      <field offset="0" name="Mask">
        <type>DWORD64</type>
      </field>
      <field offset="8" name="Length">
        <type>DWORD</type>
      </field>
      <field offset="12" name="Reserved1">
        <type>DWORD</type>
      </field>
      <field offset="16" name="Area">
        <type>PXSAVE_AREA</type>
      </field>
      <field offset="20" name="Reserved2">
        <type>DWORD</type>
      </field>
      <field offset="24" name="Buffer">
        <type>PVOID</type>
      </field>
      <field offset="28" name="Reserved3">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="XSTATE_CONTEXT">
      <struct name="_XSTATE_CONTEXT" />
    </typedef>
    <typedef name="PXSTATE_CONTEXT">
      <ptr>
        <struct name="_XSTATE_CONTEXT" />
      </ptr>
    </typedef>
    <struct name="_CONTEXT_CHUNK">
      <field offset="0" name="Offset">
        <type>LONG</type>
      </field>
      <field offset="4" name="Length">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CONTEXT_CHUNK">
      <struct name="_CONTEXT_CHUNK" />
    </typedef>
    <typedef name="PCONTEXT_CHUNK">
      <ptr>
        <struct name="_CONTEXT_CHUNK" />
      </ptr>
    </typedef>
    <struct name="_CONTEXT_EX">
      <field offset="0" name="All">
        <type>CONTEXT_CHUNK</type>
      </field>
      <field offset="8" name="Legacy">
        <type>CONTEXT_CHUNK</type>
      </field>
      <field offset="16" name="XState">
        <type>CONTEXT_CHUNK</type>
      </field>
    </struct>
    <typedef name="CONTEXT_EX">
      <struct name="_CONTEXT_EX" />
    </typedef>
    <typedef name="PCONTEXT_EX">
      <ptr>
        <struct name="_CONTEXT_EX" />
      </ptr>
    </typedef>
    <typedef name="__C_ASSERT__">
      <arr length="-1">
        <prim domain="Character" size="1" />
      </arr>
    </typedef>
    <typedef name="__C_ASSERT__">
      <arr length="1">
        <prim domain="Character" size="1" />
      </arr>
    </typedef>
    <typedef name="__C_ASSERT__">
      <arr length="-1">
        <prim domain="Character" size="1" />
      </arr>
    </typedef>
    <struct name="_FLOATING_SAVE_AREA">
      <field offset="0" name="ControlWord">
        <type>DWORD</type>
      </field>
      <field offset="4" name="StatusWord">
        <type>DWORD</type>
      </field>
      <field offset="8" name="TagWord">
        <type>DWORD</type>
      </field>
      <field offset="12" name="ErrorOffset">
        <type>DWORD</type>
      </field>
      <field offset="16" name="ErrorSelector">
        <type>DWORD</type>
      </field>
      <field offset="20" name="DataOffset">
        <type>DWORD</type>
      </field>
      <field offset="24" name="DataSelector">
        <type>DWORD</type>
      </field>
      <field offset="32" name="RegisterArea">
        <arr length="80">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="112" name="Cr0NpxState">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="FLOATING_SAVE_AREA">
      <struct name="_FLOATING_SAVE_AREA" />
    </typedef>
    <typedef name="PFLOATING_SAVE_AREA">
      <ptr>
        <type>FLOATING_SAVE_AREA</type>
      </ptr>
    </typedef>
    <typedef name="__C_ASSERT__">
      <arr length="-1">
        <prim domain="Character" size="1" />
      </arr>
    </typedef>
    <struct name="_CONTEXT">
      <field offset="0" name="ContextFlags">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Dr0">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Dr1">
        <type>DWORD</type>
      </field>
      <field offset="12" name="Dr2">
        <type>DWORD</type>
      </field>
      <field offset="16" name="Dr3">
        <type>DWORD</type>
      </field>
      <field offset="20" name="Dr6">
        <type>DWORD</type>
      </field>
      <field offset="24" name="Dr7">
        <type>DWORD</type>
      </field>
      <field offset="32" name="FloatSave">
        <type>FLOATING_SAVE_AREA</type>
      </field>
      <field offset="144" name="SegGs">
        <type>DWORD</type>
      </field>
      <field offset="148" name="SegFs">
        <type>DWORD</type>
      </field>
      <field offset="152" name="SegEs">
        <type>DWORD</type>
      </field>
      <field offset="156" name="SegDs">
        <type>DWORD</type>
      </field>
      <field offset="160" name="Edi">
        <type>DWORD</type>
      </field>
      <field offset="164" name="Esi">
        <type>DWORD</type>
      </field>
      <field offset="168" name="Ebx">
        <type>DWORD</type>
      </field>
      <field offset="172" name="Edx">
        <type>DWORD</type>
      </field>
      <field offset="176" name="Ecx">
        <type>DWORD</type>
      </field>
      <field offset="180" name="Eax">
        <type>DWORD</type>
      </field>
      <field offset="184" name="Ebp">
        <type>DWORD</type>
      </field>
      <field offset="188" name="Eip">
        <type>DWORD</type>
      </field>
      <field offset="192" name="SegCs">
        <type>DWORD</type>
      </field>
      <field offset="196" name="EFlags">
        <type>DWORD</type>
      </field>
      <field offset="200" name="Esp">
        <type>DWORD</type>
      </field>
      <field offset="204" name="SegSs">
        <type>DWORD</type>
      </field>
      <field offset="208" name="ExtendedRegisters">
        <arr length="512">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="CONTEXT">
      <struct name="_CONTEXT" />
    </typedef>
    <typedef name="PCONTEXT">
      <ptr>
        <type>CONTEXT</type>
      </ptr>
    </typedef>
    <struct name="struct_4">
      <field offset="0" name="BaseMid">
        <type>BYTE</type>
      </field>
      <field offset="1" name="Flags1">
        <type>BYTE</type>
      </field>
      <field offset="2" name="Flags2">
        <type>BYTE</type>
      </field>
      <field offset="3" name="BaseHi">
        <type>BYTE</type>
      </field>
    </struct>
    <struct name="struct_5">
      <field offset="0" name="BaseMid">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Type">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Dpl">
        <type>DWORD</type>
      </field>
      <field offset="12" name="Pres">
        <type>DWORD</type>
      </field>
      <field offset="16" name="LimitHi">
        <type>DWORD</type>
      </field>
      <field offset="20" name="Sys">
        <type>DWORD</type>
      </field>
      <field offset="24" name="Reserved_0">
        <type>DWORD</type>
      </field>
      <field offset="28" name="Default_Big">
        <type>DWORD</type>
      </field>
      <field offset="32" name="Granularity">
        <type>DWORD</type>
      </field>
      <field offset="36" name="BaseHi">
        <type>DWORD</type>
      </field>
    </struct>
    <struct name="_LDT_ENTRY">
      <field offset="0" name="LimitLow">
        <type>WORD</type>
      </field>
      <field offset="2" name="BaseLow">
        <type>WORD</type>
      </field>
      <field offset="8" name="HighWord">
        <union>
          <alt name="Bytes">
            <struct name="struct_4" />
          </alt>
          <alt name="Bits">
            <struct name="struct_5" />
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="LDT_ENTRY">
      <struct name="_LDT_ENTRY" />
    </typedef>
    <typedef name="PLDT_ENTRY">
      <ptr>
        <struct name="_LDT_ENTRY" />
      </ptr>
    </typedef>
    <struct name="_WOW64_FLOATING_SAVE_AREA">
      <field offset="0" name="ControlWord">
        <type>DWORD</type>
      </field>
      <field offset="4" name="StatusWord">
        <type>DWORD</type>
      </field>
      <field offset="8" name="TagWord">
        <type>DWORD</type>
      </field>
      <field offset="12" name="ErrorOffset">
        <type>DWORD</type>
      </field>
      <field offset="16" name="ErrorSelector">
        <type>DWORD</type>
      </field>
      <field offset="20" name="DataOffset">
        <type>DWORD</type>
      </field>
      <field offset="24" name="DataSelector">
        <type>DWORD</type>
      </field>
      <field offset="32" name="RegisterArea">
        <arr length="80">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="112" name="Cr0NpxState">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="WOW64_FLOATING_SAVE_AREA">
      <struct name="_WOW64_FLOATING_SAVE_AREA" />
    </typedef>
    <typedef name="PWOW64_FLOATING_SAVE_AREA">
      <ptr>
        <type>WOW64_FLOATING_SAVE_AREA</type>
      </ptr>
    </typedef>
    <struct name="_WOW64_CONTEXT">
      <field offset="0" name="ContextFlags">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Dr0">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Dr1">
        <type>DWORD</type>
      </field>
      <field offset="12" name="Dr2">
        <type>DWORD</type>
      </field>
      <field offset="16" name="Dr3">
        <type>DWORD</type>
      </field>
      <field offset="20" name="Dr6">
        <type>DWORD</type>
      </field>
      <field offset="24" name="Dr7">
        <type>DWORD</type>
      </field>
      <field offset="32" name="FloatSave">
        <type>WOW64_FLOATING_SAVE_AREA</type>
      </field>
      <field offset="144" name="SegGs">
        <type>DWORD</type>
      </field>
      <field offset="148" name="SegFs">
        <type>DWORD</type>
      </field>
      <field offset="152" name="SegEs">
        <type>DWORD</type>
      </field>
      <field offset="156" name="SegDs">
        <type>DWORD</type>
      </field>
      <field offset="160" name="Edi">
        <type>DWORD</type>
      </field>
      <field offset="164" name="Esi">
        <type>DWORD</type>
      </field>
      <field offset="168" name="Ebx">
        <type>DWORD</type>
      </field>
      <field offset="172" name="Edx">
        <type>DWORD</type>
      </field>
      <field offset="176" name="Ecx">
        <type>DWORD</type>
      </field>
      <field offset="180" name="Eax">
        <type>DWORD</type>
      </field>
      <field offset="184" name="Ebp">
        <type>DWORD</type>
      </field>
      <field offset="188" name="Eip">
        <type>DWORD</type>
      </field>
      <field offset="192" name="SegCs">
        <type>DWORD</type>
      </field>
      <field offset="196" name="EFlags">
        <type>DWORD</type>
      </field>
      <field offset="200" name="Esp">
        <type>DWORD</type>
      </field>
      <field offset="204" name="SegSs">
        <type>DWORD</type>
      </field>
      <field offset="208" name="ExtendedRegisters">
        <arr length="512">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="WOW64_CONTEXT">
      <struct name="_WOW64_CONTEXT" />
    </typedef>
    <typedef name="PWOW64_CONTEXT">
      <ptr>
        <type>WOW64_CONTEXT</type>
      </ptr>
    </typedef>
    <struct name="struct_6">
      <field offset="0" name="BaseMid">
        <type>BYTE</type>
      </field>
      <field offset="1" name="Flags1">
        <type>BYTE</type>
      </field>
      <field offset="2" name="Flags2">
        <type>BYTE</type>
      </field>
      <field offset="3" name="BaseHi">
        <type>BYTE</type>
      </field>
    </struct>
    <struct name="struct_7">
      <field offset="0" name="BaseMid">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Type">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Dpl">
        <type>DWORD</type>
      </field>
      <field offset="12" name="Pres">
        <type>DWORD</type>
      </field>
      <field offset="16" name="LimitHi">
        <type>DWORD</type>
      </field>
      <field offset="20" name="Sys">
        <type>DWORD</type>
      </field>
      <field offset="24" name="Reserved_0">
        <type>DWORD</type>
      </field>
      <field offset="28" name="Default_Big">
        <type>DWORD</type>
      </field>
      <field offset="32" name="Granularity">
        <type>DWORD</type>
      </field>
      <field offset="36" name="BaseHi">
        <type>DWORD</type>
      </field>
    </struct>
    <struct name="_WOW64_LDT_ENTRY">
      <field offset="0" name="LimitLow">
        <type>WORD</type>
      </field>
      <field offset="2" name="BaseLow">
        <type>WORD</type>
      </field>
      <field offset="8" name="HighWord">
        <union>
          <alt name="Bytes">
            <struct name="struct_6" />
          </alt>
          <alt name="Bits">
            <struct name="struct_7" />
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="WOW64_LDT_ENTRY">
      <struct name="_WOW64_LDT_ENTRY" />
    </typedef>
    <typedef name="PWOW64_LDT_ENTRY">
      <ptr>
        <struct name="_WOW64_LDT_ENTRY" />
      </ptr>
    </typedef>
    <struct name="_WOW64_DESCRIPTOR_TABLE_ENTRY">
      <field offset="0" name="Selector">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Descriptor">
        <type>WOW64_LDT_ENTRY</type>
      </field>
    </struct>
    <typedef name="WOW64_DESCRIPTOR_TABLE_ENTRY">
      <struct name="_WOW64_DESCRIPTOR_TABLE_ENTRY" />
    </typedef>
    <typedef name="PWOW64_DESCRIPTOR_TABLE_ENTRY">
      <ptr>
        <struct name="_WOW64_DESCRIPTOR_TABLE_ENTRY" />
      </ptr>
    </typedef>
    <struct name="_EXCEPTION_RECORD">
      <field offset="0" name="ExceptionCode">
        <type>DWORD</type>
      </field>
      <field offset="4" name="ExceptionFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="ExceptionRecord">
        <ptr>
          <struct name="_EXCEPTION_RECORD" />
        </ptr>
      </field>
      <field offset="12" name="ExceptionAddress">
        <type>PVOID</type>
      </field>
      <field offset="16" name="NumberParameters">
        <type>DWORD</type>
      </field>
      <field offset="24" name="ExceptionInformation">
        <arr length="15">
          <type>ULONG_PTR</type>
        </arr>
      </field>
    </struct>
    <typedef name="EXCEPTION_RECORD">
      <struct name="_EXCEPTION_RECORD" />
    </typedef>
    <typedef name="PEXCEPTION_RECORD">
      <ptr>
        <type>EXCEPTION_RECORD</type>
      </ptr>
    </typedef>
    <struct name="_EXCEPTION_RECORD32">
      <field offset="0" name="ExceptionCode">
        <type>DWORD</type>
      </field>
      <field offset="4" name="ExceptionFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="ExceptionRecord">
        <type>DWORD</type>
      </field>
      <field offset="12" name="ExceptionAddress">
        <type>DWORD</type>
      </field>
      <field offset="16" name="NumberParameters">
        <type>DWORD</type>
      </field>
      <field offset="24" name="ExceptionInformation">
        <arr length="15">
          <type>DWORD</type>
        </arr>
      </field>
    </struct>
    <typedef name="EXCEPTION_RECORD32">
      <struct name="_EXCEPTION_RECORD32" />
    </typedef>
    <typedef name="PEXCEPTION_RECORD32">
      <ptr>
        <struct name="_EXCEPTION_RECORD32" />
      </ptr>
    </typedef>
    <struct name="_EXCEPTION_RECORD64">
      <field offset="0" name="ExceptionCode">
        <type>DWORD</type>
      </field>
      <field offset="4" name="ExceptionFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="ExceptionRecord">
        <type>DWORD64</type>
      </field>
      <field offset="16" name="ExceptionAddress">
        <type>DWORD64</type>
      </field>
      <field offset="24" name="NumberParameters">
        <type>DWORD</type>
      </field>
      <field offset="28" name="__unusedAlignment">
        <type>DWORD</type>
      </field>
      <field offset="32" name="ExceptionInformation">
        <arr length="15">
          <type>DWORD64</type>
        </arr>
      </field>
    </struct>
    <typedef name="EXCEPTION_RECORD64">
      <struct name="_EXCEPTION_RECORD64" />
    </typedef>
    <typedef name="PEXCEPTION_RECORD64">
      <ptr>
        <struct name="_EXCEPTION_RECORD64" />
      </ptr>
    </typedef>
    <struct name="_EXCEPTION_POINTERS">
      <field offset="0" name="ExceptionRecord">
        <type>PEXCEPTION_RECORD</type>
      </field>
      <field offset="4" name="ContextRecord">
        <type>PCONTEXT</type>
      </field>
    </struct>
    <typedef name="EXCEPTION_POINTERS">
      <struct name="_EXCEPTION_POINTERS" />
    </typedef>
    <typedef name="PEXCEPTION_POINTERS">
      <ptr>
        <struct name="_EXCEPTION_POINTERS" />
      </ptr>
    </typedef>
    <typedef name="PACCESS_TOKEN">
      <type>PVOID</type>
    </typedef>
    <typedef name="PSECURITY_DESCRIPTOR">
      <type>PVOID</type>
    </typedef>
    <typedef name="PSID">
      <type>PVOID</type>
    </typedef>
    <typedef name="ACCESS_MASK">
      <type>DWORD</type>
    </typedef>
    <typedef name="PACCESS_MASK">
      <ptr>
        <type>ACCESS_MASK</type>
      </ptr>
    </typedef>
    <struct name="_GENERIC_MAPPING">
      <field offset="0" name="GenericRead">
        <type>ACCESS_MASK</type>
      </field>
      <field offset="4" name="GenericWrite">
        <type>ACCESS_MASK</type>
      </field>
      <field offset="8" name="GenericExecute">
        <type>ACCESS_MASK</type>
      </field>
      <field offset="12" name="GenericAll">
        <type>ACCESS_MASK</type>
      </field>
    </struct>
    <typedef name="GENERIC_MAPPING">
      <struct name="_GENERIC_MAPPING" />
    </typedef>
    <typedef name="PGENERIC_MAPPING">
      <ptr>
        <type>GENERIC_MAPPING</type>
      </ptr>
    </typedef>
    <struct name="_LUID_AND_ATTRIBUTES">
      <field offset="0" name="Luid">
        <type>LUID</type>
      </field>
      <field offset="8" name="Attributes">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="LUID_AND_ATTRIBUTES">
      <struct name="_LUID_AND_ATTRIBUTES" />
    </typedef>
    <typedef name="PLUID_AND_ATTRIBUTES">
      <ptr>
        <struct name="_LUID_AND_ATTRIBUTES" />
      </ptr>
    </typedef>
    <typedef name="LUID_AND_ATTRIBUTES_ARRAY">
      <arr length="1">
        <type>LUID_AND_ATTRIBUTES</type>
      </arr>
    </typedef>
    <typedef name="PLUID_AND_ATTRIBUTES_ARRAY">
      <ptr>
        <type>LUID_AND_ATTRIBUTES_ARRAY</type>
      </ptr>
    </typedef>
    <struct name="_SID_IDENTIFIER_AUTHORITY">
      <field offset="0" name="Value">
        <arr length="6">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="SID_IDENTIFIER_AUTHORITY">
      <struct name="_SID_IDENTIFIER_AUTHORITY" />
    </typedef>
    <typedef name="PSID_IDENTIFIER_AUTHORITY">
      <ptr>
        <struct name="_SID_IDENTIFIER_AUTHORITY" />
      </ptr>
    </typedef>
    <struct name="_SID">
      <field offset="0" name="Revision">
        <type>BYTE</type>
      </field>
      <field offset="1" name="SubAuthorityCount">
        <type>BYTE</type>
      </field>
      <field offset="6" name="IdentifierAuthority">
        <type>SID_IDENTIFIER_AUTHORITY</type>
      </field>
      <field offset="12" name="SubAuthority">
        <arr length="1">
          <type>DWORD</type>
        </arr>
      </field>
    </struct>
    <typedef name="SID">
      <struct name="_SID" />
    </typedef>
    <typedef name="PISID">
      <ptr>
        <struct name="_SID" />
      </ptr>
    </typedef>
    <enum name="_SID_NAME_USE">
      <member name="SidTypeUser" value="1" />
      <member name="SidTypeGroup" value="2" />
      <member name="SidTypeDomain" value="3" />
      <member name="SidTypeAlias" value="4" />
      <member name="SidTypeWellKnownGroup" value="5" />
      <member name="SidTypeDeletedAccount" value="6" />
      <member name="SidTypeInvalid" value="7" />
      <member name="SidTypeUnknown" value="8" />
      <member name="SidTypeComputer" value="9" />
      <member name="SidTypeLabel" value="10" />
    </enum>
    <typedef name="SID_NAME_USE">
      <enum name="_SID_NAME_USE" />
    </typedef>
    <typedef name="PSID_NAME_USE">
      <ptr>
        <enum name="_SID_NAME_USE" />
      </ptr>
    </typedef>
    <struct name="_SID_AND_ATTRIBUTES">
      <field offset="0" name="Sid">
        <type>PSID</type>
      </field>
      <field offset="4" name="Attributes">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="SID_AND_ATTRIBUTES">
      <struct name="_SID_AND_ATTRIBUTES" />
    </typedef>
    <typedef name="PSID_AND_ATTRIBUTES">
      <ptr>
        <struct name="_SID_AND_ATTRIBUTES" />
      </ptr>
    </typedef>
    <typedef name="SID_AND_ATTRIBUTES_ARRAY">
      <arr length="1">
        <type>SID_AND_ATTRIBUTES</type>
      </arr>
    </typedef>
    <typedef name="PSID_AND_ATTRIBUTES_ARRAY">
      <ptr>
        <type>SID_AND_ATTRIBUTES_ARRAY</type>
      </ptr>
    </typedef>
    <typedef name="SID_HASH_ENTRY">
      <type>ULONG_PTR</type>
    </typedef>
    <typedef name="PSID_HASH_ENTRY">
      <ptr>
        <type>ULONG_PTR</type>
      </ptr>
    </typedef>
    <struct name="_SID_AND_ATTRIBUTES_HASH">
      <field offset="0" name="SidCount">
        <type>DWORD</type>
      </field>
      <field offset="4" name="SidAttr">
        <type>PSID_AND_ATTRIBUTES</type>
      </field>
      <field offset="8" name="Hash">
        <arr length="32">
          <type>SID_HASH_ENTRY</type>
        </arr>
      </field>
    </struct>
    <typedef name="SID_AND_ATTRIBUTES_HASH">
      <struct name="_SID_AND_ATTRIBUTES_HASH" />
    </typedef>
    <typedef name="PSID_AND_ATTRIBUTES_HASH">
      <ptr>
        <struct name="_SID_AND_ATTRIBUTES_HASH" />
      </ptr>
    </typedef>
    <enum name="enum_2">
      <member name="WinNullSid" value="0" />
      <member name="WinWorldSid" value="1" />
      <member name="WinLocalSid" value="2" />
      <member name="WinCreatorOwnerSid" value="3" />
      <member name="WinCreatorGroupSid" value="4" />
      <member name="WinCreatorOwnerServerSid" value="5" />
      <member name="WinCreatorGroupServerSid" value="6" />
      <member name="WinNtAuthoritySid" value="7" />
      <member name="WinDialupSid" value="8" />
      <member name="WinNetworkSid" value="9" />
      <member name="WinBatchSid" value="10" />
      <member name="WinInteractiveSid" value="11" />
      <member name="WinServiceSid" value="12" />
      <member name="WinAnonymousSid" value="13" />
      <member name="WinProxySid" value="14" />
      <member name="WinEnterpriseControllersSid" value="15" />
      <member name="WinSelfSid" value="16" />
      <member name="WinAuthenticatedUserSid" value="17" />
      <member name="WinRestrictedCodeSid" value="18" />
      <member name="WinTerminalServerSid" value="19" />
      <member name="WinRemoteLogonIdSid" value="20" />
      <member name="WinLogonIdsSid" value="21" />
      <member name="WinLocalSystemSid" value="22" />
      <member name="WinLocalServiceSid" value="23" />
      <member name="WinNetworkServiceSid" value="24" />
      <member name="WinBuiltinDomainSid" value="25" />
      <member name="WinBuiltinAdministratorsSid" value="26" />
      <member name="WinBuiltinUsersSid" value="27" />
      <member name="WinBuiltinGuestsSid" value="28" />
      <member name="WinBuiltinPowerUsersSid" value="29" />
      <member name="WinBuiltinAccountOperatorsSid" value="30" />
      <member name="WinBuiltinSystemOperatorsSid" value="31" />
      <member name="WinBuiltinPrintOperatorsSid" value="32" />
      <member name="WinBuiltinBackupOperatorsSid" value="33" />
      <member name="WinBuiltinReplicatorSid" value="34" />
      <member name="WinBuiltinPreWindows2000CompatibleAccessSid" value="35" />
      <member name="WinBuiltinRemoteDesktopUsersSid" value="36" />
      <member name="WinBuiltinNetworkConfigurationOperatorsSid" value="37" />
      <member name="WinAccountAdministratorSid" value="38" />
      <member name="WinAccountGuestSid" value="39" />
      <member name="WinAccountKrbtgtSid" value="40" />
      <member name="WinAccountDomainAdminsSid" value="41" />
      <member name="WinAccountDomainUsersSid" value="42" />
      <member name="WinAccountDomainGuestsSid" value="43" />
      <member name="WinAccountComputersSid" value="44" />
      <member name="WinAccountControllersSid" value="45" />
      <member name="WinAccountCertAdminsSid" value="46" />
      <member name="WinAccountSchemaAdminsSid" value="47" />
      <member name="WinAccountEnterpriseAdminsSid" value="48" />
      <member name="WinAccountPolicyAdminsSid" value="49" />
      <member name="WinAccountRasAndIasServersSid" value="50" />
      <member name="WinNTLMAuthenticationSid" value="51" />
      <member name="WinDigestAuthenticationSid" value="52" />
      <member name="WinSChannelAuthenticationSid" value="53" />
      <member name="WinThisOrganizationSid" value="54" />
      <member name="WinOtherOrganizationSid" value="55" />
      <member name="WinBuiltinIncomingForestTrustBuildersSid" value="56" />
      <member name="WinBuiltinPerfMonitoringUsersSid" value="57" />
      <member name="WinBuiltinPerfLoggingUsersSid" value="58" />
      <member name="WinBuiltinAuthorizationAccessSid" value="59" />
      <member name="WinBuiltinTerminalServerLicenseServersSid" value="60" />
      <member name="WinBuiltinDCOMUsersSid" value="61" />
      <member name="WinBuiltinIUsersSid" value="62" />
      <member name="WinIUserSid" value="63" />
      <member name="WinBuiltinCryptoOperatorsSid" value="64" />
      <member name="WinUntrustedLabelSid" value="65" />
      <member name="WinLowLabelSid" value="66" />
      <member name="WinMediumLabelSid" value="67" />
      <member name="WinHighLabelSid" value="68" />
      <member name="WinSystemLabelSid" value="69" />
      <member name="WinWriteRestrictedCodeSid" value="70" />
      <member name="WinCreatorOwnerRightsSid" value="71" />
      <member name="WinCacheablePrincipalsGroupSid" value="72" />
      <member name="WinNonCacheablePrincipalsGroupSid" value="73" />
      <member name="WinEnterpriseReadonlyControllersSid" value="74" />
      <member name="WinAccountReadonlyControllersSid" value="75" />
      <member name="WinBuiltinEventLogReadersGroup" value="76" />
      <member name="WinNewEnterpriseReadonlyControllersSid" value="77" />
      <member name="WinBuiltinCertSvcDComAccessGroup" value="78" />
      <member name="WinMediumPlusLabelSid" value="79" />
      <member name="WinLocalLogonSid" value="80" />
      <member name="WinConsoleLogonSid" value="81" />
      <member name="WinThisOrganizationCertificateSid" value="82" />
    </enum>
    <typedef name="WELL_KNOWN_SID_TYPE">
      <enum name="enum_2" />
    </typedef>
    <struct name="_ACL">
      <field offset="0" name="AclRevision">
        <type>BYTE</type>
      </field>
      <field offset="1" name="Sbz1">
        <type>BYTE</type>
      </field>
      <field offset="2" name="AclSize">
        <type>WORD</type>
      </field>
      <field offset="4" name="AceCount">
        <type>WORD</type>
      </field>
      <field offset="6" name="Sbz2">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="ACL">
      <struct name="_ACL" />
    </typedef>
    <typedef name="PACL">
      <ptr>
        <type>ACL</type>
      </ptr>
    </typedef>
    <struct name="_ACE_HEADER">
      <field offset="0" name="AceType">
        <type>BYTE</type>
      </field>
      <field offset="1" name="AceFlags">
        <type>BYTE</type>
      </field>
      <field offset="2" name="AceSize">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="ACE_HEADER">
      <struct name="_ACE_HEADER" />
    </typedef>
    <typedef name="PACE_HEADER">
      <ptr>
        <type>ACE_HEADER</type>
      </ptr>
    </typedef>
    <struct name="_ACCESS_ALLOWED_ACE">
      <field offset="0" name="Header">
        <type>ACE_HEADER</type>
      </field>
      <field offset="4" name="Mask">
        <type>ACCESS_MASK</type>
      </field>
      <field offset="8" name="SidStart">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="ACCESS_ALLOWED_ACE">
      <struct name="_ACCESS_ALLOWED_ACE" />
    </typedef>
    <typedef name="PACCESS_ALLOWED_ACE">
      <ptr>
        <type>ACCESS_ALLOWED_ACE</type>
      </ptr>
    </typedef>
    <struct name="_ACCESS_DENIED_ACE">
      <field offset="0" name="Header">
        <type>ACE_HEADER</type>
      </field>
      <field offset="4" name="Mask">
        <type>ACCESS_MASK</type>
      </field>
      <field offset="8" name="SidStart">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="ACCESS_DENIED_ACE">
      <struct name="_ACCESS_DENIED_ACE" />
    </typedef>
    <typedef name="PACCESS_DENIED_ACE">
      <ptr>
        <type>ACCESS_DENIED_ACE</type>
      </ptr>
    </typedef>
    <struct name="_SYSTEM_AUDIT_ACE">
      <field offset="0" name="Header">
        <type>ACE_HEADER</type>
      </field>
      <field offset="4" name="Mask">
        <type>ACCESS_MASK</type>
      </field>
      <field offset="8" name="SidStart">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="SYSTEM_AUDIT_ACE">
      <struct name="_SYSTEM_AUDIT_ACE" />
    </typedef>
    <typedef name="PSYSTEM_AUDIT_ACE">
      <ptr>
        <type>SYSTEM_AUDIT_ACE</type>
      </ptr>
    </typedef>
    <struct name="_SYSTEM_ALARM_ACE">
      <field offset="0" name="Header">
        <type>ACE_HEADER</type>
      </field>
      <field offset="4" name="Mask">
        <type>ACCESS_MASK</type>
      </field>
      <field offset="8" name="SidStart">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="SYSTEM_ALARM_ACE">
      <struct name="_SYSTEM_ALARM_ACE" />
    </typedef>
    <typedef name="PSYSTEM_ALARM_ACE">
      <ptr>
        <type>SYSTEM_ALARM_ACE</type>
      </ptr>
    </typedef>
    <struct name="_SYSTEM_MANDATORY_LABEL_ACE">
      <field offset="0" name="Header">
        <type>ACE_HEADER</type>
      </field>
      <field offset="4" name="Mask">
        <type>ACCESS_MASK</type>
      </field>
      <field offset="8" name="SidStart">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="SYSTEM_MANDATORY_LABEL_ACE">
      <struct name="_SYSTEM_MANDATORY_LABEL_ACE" />
    </typedef>
    <typedef name="PSYSTEM_MANDATORY_LABEL_ACE">
      <ptr>
        <struct name="_SYSTEM_MANDATORY_LABEL_ACE" />
      </ptr>
    </typedef>
    <struct name="_ACCESS_ALLOWED_OBJECT_ACE">
      <field offset="0" name="Header">
        <type>ACE_HEADER</type>
      </field>
      <field offset="4" name="Mask">
        <type>ACCESS_MASK</type>
      </field>
      <field offset="8" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="16" name="ObjectType">
        <type>GUID</type>
      </field>
      <field offset="32" name="InheritedObjectType">
        <type>GUID</type>
      </field>
      <field offset="48" name="SidStart">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="ACCESS_ALLOWED_OBJECT_ACE">
      <struct name="_ACCESS_ALLOWED_OBJECT_ACE" />
    </typedef>
    <typedef name="PACCESS_ALLOWED_OBJECT_ACE">
      <ptr>
        <struct name="_ACCESS_ALLOWED_OBJECT_ACE" />
      </ptr>
    </typedef>
    <struct name="_ACCESS_DENIED_OBJECT_ACE">
      <field offset="0" name="Header">
        <type>ACE_HEADER</type>
      </field>
      <field offset="4" name="Mask">
        <type>ACCESS_MASK</type>
      </field>
      <field offset="8" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="16" name="ObjectType">
        <type>GUID</type>
      </field>
      <field offset="32" name="InheritedObjectType">
        <type>GUID</type>
      </field>
      <field offset="48" name="SidStart">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="ACCESS_DENIED_OBJECT_ACE">
      <struct name="_ACCESS_DENIED_OBJECT_ACE" />
    </typedef>
    <typedef name="PACCESS_DENIED_OBJECT_ACE">
      <ptr>
        <struct name="_ACCESS_DENIED_OBJECT_ACE" />
      </ptr>
    </typedef>
    <struct name="_SYSTEM_AUDIT_OBJECT_ACE">
      <field offset="0" name="Header">
        <type>ACE_HEADER</type>
      </field>
      <field offset="4" name="Mask">
        <type>ACCESS_MASK</type>
      </field>
      <field offset="8" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="16" name="ObjectType">
        <type>GUID</type>
      </field>
      <field offset="32" name="InheritedObjectType">
        <type>GUID</type>
      </field>
      <field offset="48" name="SidStart">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="SYSTEM_AUDIT_OBJECT_ACE">
      <struct name="_SYSTEM_AUDIT_OBJECT_ACE" />
    </typedef>
    <typedef name="PSYSTEM_AUDIT_OBJECT_ACE">
      <ptr>
        <struct name="_SYSTEM_AUDIT_OBJECT_ACE" />
      </ptr>
    </typedef>
    <struct name="_SYSTEM_ALARM_OBJECT_ACE">
      <field offset="0" name="Header">
        <type>ACE_HEADER</type>
      </field>
      <field offset="4" name="Mask">
        <type>ACCESS_MASK</type>
      </field>
      <field offset="8" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="16" name="ObjectType">
        <type>GUID</type>
      </field>
      <field offset="32" name="InheritedObjectType">
        <type>GUID</type>
      </field>
      <field offset="48" name="SidStart">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="SYSTEM_ALARM_OBJECT_ACE">
      <struct name="_SYSTEM_ALARM_OBJECT_ACE" />
    </typedef>
    <typedef name="PSYSTEM_ALARM_OBJECT_ACE">
      <ptr>
        <struct name="_SYSTEM_ALARM_OBJECT_ACE" />
      </ptr>
    </typedef>
    <struct name="_ACCESS_ALLOWED_CALLBACK_ACE">
      <field offset="0" name="Header">
        <type>ACE_HEADER</type>
      </field>
      <field offset="4" name="Mask">
        <type>ACCESS_MASK</type>
      </field>
      <field offset="8" name="SidStart">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="ACCESS_ALLOWED_CALLBACK_ACE">
      <struct name="_ACCESS_ALLOWED_CALLBACK_ACE" />
    </typedef>
    <typedef name="PACCESS_ALLOWED_CALLBACK_ACE">
      <ptr>
        <struct name="_ACCESS_ALLOWED_CALLBACK_ACE" />
      </ptr>
    </typedef>
    <struct name="_ACCESS_DENIED_CALLBACK_ACE">
      <field offset="0" name="Header">
        <type>ACE_HEADER</type>
      </field>
      <field offset="4" name="Mask">
        <type>ACCESS_MASK</type>
      </field>
      <field offset="8" name="SidStart">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="ACCESS_DENIED_CALLBACK_ACE">
      <struct name="_ACCESS_DENIED_CALLBACK_ACE" />
    </typedef>
    <typedef name="PACCESS_DENIED_CALLBACK_ACE">
      <ptr>
        <struct name="_ACCESS_DENIED_CALLBACK_ACE" />
      </ptr>
    </typedef>
    <struct name="_SYSTEM_AUDIT_CALLBACK_ACE">
      <field offset="0" name="Header">
        <type>ACE_HEADER</type>
      </field>
      <field offset="4" name="Mask">
        <type>ACCESS_MASK</type>
      </field>
      <field offset="8" name="SidStart">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="SYSTEM_AUDIT_CALLBACK_ACE">
      <struct name="_SYSTEM_AUDIT_CALLBACK_ACE" />
    </typedef>
    <typedef name="PSYSTEM_AUDIT_CALLBACK_ACE">
      <ptr>
        <struct name="_SYSTEM_AUDIT_CALLBACK_ACE" />
      </ptr>
    </typedef>
    <struct name="_SYSTEM_ALARM_CALLBACK_ACE">
      <field offset="0" name="Header">
        <type>ACE_HEADER</type>
      </field>
      <field offset="4" name="Mask">
        <type>ACCESS_MASK</type>
      </field>
      <field offset="8" name="SidStart">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="SYSTEM_ALARM_CALLBACK_ACE">
      <struct name="_SYSTEM_ALARM_CALLBACK_ACE" />
    </typedef>
    <typedef name="PSYSTEM_ALARM_CALLBACK_ACE">
      <ptr>
        <struct name="_SYSTEM_ALARM_CALLBACK_ACE" />
      </ptr>
    </typedef>
    <struct name="_ACCESS_ALLOWED_CALLBACK_OBJECT_ACE">
      <field offset="0" name="Header">
        <type>ACE_HEADER</type>
      </field>
      <field offset="4" name="Mask">
        <type>ACCESS_MASK</type>
      </field>
      <field offset="8" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="16" name="ObjectType">
        <type>GUID</type>
      </field>
      <field offset="32" name="InheritedObjectType">
        <type>GUID</type>
      </field>
      <field offset="48" name="SidStart">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="ACCESS_ALLOWED_CALLBACK_OBJECT_ACE">
      <struct name="_ACCESS_ALLOWED_CALLBACK_OBJECT_ACE" />
    </typedef>
    <typedef name="PACCESS_ALLOWED_CALLBACK_OBJECT_ACE">
      <ptr>
        <struct name="_ACCESS_ALLOWED_CALLBACK_OBJECT_ACE" />
      </ptr>
    </typedef>
    <struct name="_ACCESS_DENIED_CALLBACK_OBJECT_ACE">
      <field offset="0" name="Header">
        <type>ACE_HEADER</type>
      </field>
      <field offset="4" name="Mask">
        <type>ACCESS_MASK</type>
      </field>
      <field offset="8" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="16" name="ObjectType">
        <type>GUID</type>
      </field>
      <field offset="32" name="InheritedObjectType">
        <type>GUID</type>
      </field>
      <field offset="48" name="SidStart">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="ACCESS_DENIED_CALLBACK_OBJECT_ACE">
      <struct name="_ACCESS_DENIED_CALLBACK_OBJECT_ACE" />
    </typedef>
    <typedef name="PACCESS_DENIED_CALLBACK_OBJECT_ACE">
      <ptr>
        <struct name="_ACCESS_DENIED_CALLBACK_OBJECT_ACE" />
      </ptr>
    </typedef>
    <struct name="_SYSTEM_AUDIT_CALLBACK_OBJECT_ACE">
      <field offset="0" name="Header">
        <type>ACE_HEADER</type>
      </field>
      <field offset="4" name="Mask">
        <type>ACCESS_MASK</type>
      </field>
      <field offset="8" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="16" name="ObjectType">
        <type>GUID</type>
      </field>
      <field offset="32" name="InheritedObjectType">
        <type>GUID</type>
      </field>
      <field offset="48" name="SidStart">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="SYSTEM_AUDIT_CALLBACK_OBJECT_ACE">
      <struct name="_SYSTEM_AUDIT_CALLBACK_OBJECT_ACE" />
    </typedef>
    <typedef name="PSYSTEM_AUDIT_CALLBACK_OBJECT_ACE">
      <ptr>
        <struct name="_SYSTEM_AUDIT_CALLBACK_OBJECT_ACE" />
      </ptr>
    </typedef>
    <struct name="_SYSTEM_ALARM_CALLBACK_OBJECT_ACE">
      <field offset="0" name="Header">
        <type>ACE_HEADER</type>
      </field>
      <field offset="4" name="Mask">
        <type>ACCESS_MASK</type>
      </field>
      <field offset="8" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="16" name="ObjectType">
        <type>GUID</type>
      </field>
      <field offset="32" name="InheritedObjectType">
        <type>GUID</type>
      </field>
      <field offset="48" name="SidStart">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="SYSTEM_ALARM_CALLBACK_OBJECT_ACE">
      <struct name="_SYSTEM_ALARM_CALLBACK_OBJECT_ACE" />
    </typedef>
    <typedef name="PSYSTEM_ALARM_CALLBACK_OBJECT_ACE">
      <ptr>
        <struct name="_SYSTEM_ALARM_CALLBACK_OBJECT_ACE" />
      </ptr>
    </typedef>
    <enum name="_ACL_INFORMATION_CLASS">
      <member name="AclRevisionInformation" value="1" />
      <member name="AclSizeInformation" value="2" />
    </enum>
    <typedef name="ACL_INFORMATION_CLASS">
      <enum name="_ACL_INFORMATION_CLASS" />
    </typedef>
    <struct name="_ACL_REVISION_INFORMATION">
      <field offset="0" name="AclRevision">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="ACL_REVISION_INFORMATION">
      <struct name="_ACL_REVISION_INFORMATION" />
    </typedef>
    <typedef name="PACL_REVISION_INFORMATION">
      <ptr>
        <type>ACL_REVISION_INFORMATION</type>
      </ptr>
    </typedef>
    <struct name="_ACL_SIZE_INFORMATION">
      <field offset="0" name="AceCount">
        <type>DWORD</type>
      </field>
      <field offset="4" name="AclBytesInUse">
        <type>DWORD</type>
      </field>
      <field offset="8" name="AclBytesFree">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="ACL_SIZE_INFORMATION">
      <struct name="_ACL_SIZE_INFORMATION" />
    </typedef>
    <typedef name="PACL_SIZE_INFORMATION">
      <ptr>
        <type>ACL_SIZE_INFORMATION</type>
      </ptr>
    </typedef>
    <typedef name="SECURITY_DESCRIPTOR_CONTROL">
      <type>WORD</type>
    </typedef>
    <typedef name="PSECURITY_DESCRIPTOR_CONTROL">
      <ptr>
        <type>WORD</type>
      </ptr>
    </typedef>
    <struct name="_SECURITY_DESCRIPTOR_RELATIVE">
      <field offset="0" name="Revision">
        <type>BYTE</type>
      </field>
      <field offset="1" name="Sbz1">
        <type>BYTE</type>
      </field>
      <field offset="2" name="Control">
        <type>SECURITY_DESCRIPTOR_CONTROL</type>
      </field>
      <field offset="4" name="Owner">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Group">
        <type>DWORD</type>
      </field>
      <field offset="12" name="Sacl">
        <type>DWORD</type>
      </field>
      <field offset="16" name="Dacl">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="SECURITY_DESCRIPTOR_RELATIVE">
      <struct name="_SECURITY_DESCRIPTOR_RELATIVE" />
    </typedef>
    <typedef name="PISECURITY_DESCRIPTOR_RELATIVE">
      <ptr>
        <struct name="_SECURITY_DESCRIPTOR_RELATIVE" />
      </ptr>
    </typedef>
    <struct name="_SECURITY_DESCRIPTOR">
      <field offset="0" name="Revision">
        <type>BYTE</type>
      </field>
      <field offset="1" name="Sbz1">
        <type>BYTE</type>
      </field>
      <field offset="2" name="Control">
        <type>SECURITY_DESCRIPTOR_CONTROL</type>
      </field>
      <field offset="4" name="Owner">
        <type>PSID</type>
      </field>
      <field offset="8" name="Group">
        <type>PSID</type>
      </field>
      <field offset="12" name="Sacl">
        <type>PACL</type>
      </field>
      <field offset="16" name="Dacl">
        <type>PACL</type>
      </field>
    </struct>
    <typedef name="SECURITY_DESCRIPTOR">
      <struct name="_SECURITY_DESCRIPTOR" />
    </typedef>
    <typedef name="PISECURITY_DESCRIPTOR">
      <ptr>
        <struct name="_SECURITY_DESCRIPTOR" />
      </ptr>
    </typedef>
    <struct name="_OBJECT_TYPE_LIST">
      <field offset="0" name="Level">
        <type>WORD</type>
      </field>
      <field offset="2" name="Sbz">
        <type>WORD</type>
      </field>
      <field offset="4" name="ObjectType">
        <ptr>
          <type>GUID</type>
        </ptr>
      </field>
    </struct>
    <typedef name="OBJECT_TYPE_LIST">
      <struct name="_OBJECT_TYPE_LIST" />
    </typedef>
    <typedef name="POBJECT_TYPE_LIST">
      <ptr>
        <struct name="_OBJECT_TYPE_LIST" />
      </ptr>
    </typedef>
    <enum name="_AUDIT_EVENT_TYPE">
      <member name="AuditEventObjectAccess" value="0" />
      <member name="AuditEventDirectoryServiceAccess" value="1" />
    </enum>
    <typedef name="AUDIT_EVENT_TYPE">
      <enum name="_AUDIT_EVENT_TYPE" />
    </typedef>
    <typedef name="PAUDIT_EVENT_TYPE">
      <ptr>
        <enum name="_AUDIT_EVENT_TYPE" />
      </ptr>
    </typedef>
    <struct name="_PRIVILEGE_SET">
      <field offset="0" name="PrivilegeCount">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Control">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Privilege">
        <arr length="1">
          <type>LUID_AND_ATTRIBUTES</type>
        </arr>
      </field>
    </struct>
    <typedef name="PRIVILEGE_SET">
      <struct name="_PRIVILEGE_SET" />
    </typedef>
    <typedef name="PPRIVILEGE_SET">
      <ptr>
        <struct name="_PRIVILEGE_SET" />
      </ptr>
    </typedef>
    <enum name="_ACCESS_REASON_TYPE">
      <member name="AccessReasonNone" value="0" />
      <member name="AccessReasonAllowedAce" value="65536" />
      <member name="AccessReasonDeniedAce" value="131072" />
      <member name="AccessReasonAllowedParentAce" value="196608" />
      <member name="AccessReasonDeniedParentAce" value="262144" />
      <member name="AccessReasonMissingPrivilege" value="1048576" />
      <member name="AccessReasonFromPrivilege" value="2097152" />
      <member name="AccessReasonIntegrityLevel" value="3145728" />
      <member name="AccessReasonOwnership" value="4194304" />
      <member name="AccessReasonNullDacl" value="5242880" />
      <member name="AccessReasonEmptyDacl" value="6291456" />
      <member name="AccessReasonNoSD" value="7340032" />
      <member name="AccessReasonNoGrant" value="8388608" />
    </enum>
    <typedef name="ACCESS_REASON_TYPE">
      <enum name="_ACCESS_REASON_TYPE" />
    </typedef>
    <typedef name="ACCESS_REASON">
      <type>DWORD</type>
    </typedef>
    <struct name="_ACCESS_REASONS">
      <field offset="0" name="Data">
        <arr length="32">
          <type>ACCESS_REASON</type>
        </arr>
      </field>
    </struct>
    <typedef name="ACCESS_REASONS">
      <struct name="_ACCESS_REASONS" />
    </typedef>
    <typedef name="PACCESS_REASONS">
      <ptr>
        <struct name="_ACCESS_REASONS" />
      </ptr>
    </typedef>
    <struct name="_SE_SECURITY_DESCRIPTOR">
      <field offset="0" name="Size">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="SecurityDescriptor">
        <type>PSECURITY_DESCRIPTOR</type>
      </field>
    </struct>
    <typedef name="SE_SECURITY_DESCRIPTOR">
      <struct name="_SE_SECURITY_DESCRIPTOR" />
    </typedef>
    <typedef name="PSE_SECURITY_DESCRIPTOR">
      <ptr>
        <struct name="_SE_SECURITY_DESCRIPTOR" />
      </ptr>
    </typedef>
    <struct name="_SE_ACCESS_REQUEST">
      <field offset="0" name="Size">
        <type>DWORD</type>
      </field>
      <field offset="4" name="SeSecurityDescriptor">
        <type>PSE_SECURITY_DESCRIPTOR</type>
      </field>
      <field offset="8" name="DesiredAccess">
        <type>ACCESS_MASK</type>
      </field>
      <field offset="12" name="PreviouslyGrantedAccess">
        <type>ACCESS_MASK</type>
      </field>
      <field offset="16" name="PrincipalSelfSid">
        <type>PSID</type>
      </field>
      <field offset="20" name="GenericMapping">
        <type>PGENERIC_MAPPING</type>
      </field>
      <field offset="24" name="ObjectTypeListCount">
        <type>DWORD</type>
      </field>
      <field offset="28" name="ObjectTypeList">
        <type>POBJECT_TYPE_LIST</type>
      </field>
    </struct>
    <typedef name="SE_ACCESS_REQUEST">
      <struct name="_SE_ACCESS_REQUEST" />
    </typedef>
    <typedef name="PSE_ACCESS_REQUEST">
      <ptr>
        <struct name="_SE_ACCESS_REQUEST" />
      </ptr>
    </typedef>
    <struct name="_SE_ACCESS_REPLY">
      <field offset="0" name="Size">
        <type>DWORD</type>
      </field>
      <field offset="4" name="ResultListCount">
        <type>DWORD</type>
      </field>
      <field offset="8" name="GrantedAccess">
        <type>PACCESS_MASK</type>
      </field>
      <field offset="12" name="AccessStatus">
        <type>PDWORD</type>
      </field>
      <field offset="16" name="AccessReason">
        <type>PACCESS_REASONS</type>
      </field>
      <field offset="20" name="Privileges">
        <ptr>
          <type>PPRIVILEGE_SET</type>
        </ptr>
      </field>
    </struct>
    <typedef name="SE_ACCESS_REPLY">
      <struct name="_SE_ACCESS_REPLY" />
    </typedef>
    <typedef name="PSE_ACCESS_REPLY">
      <ptr>
        <struct name="_SE_ACCESS_REPLY" />
      </ptr>
    </typedef>
    <enum name="_SECURITY_IMPERSONATION_LEVEL">
      <member name="SecurityAnonymous" value="0" />
      <member name="SecurityIdentification" value="1" />
      <member name="SecurityImpersonation" value="2" />
      <member name="SecurityDelegation" value="3" />
    </enum>
    <typedef name="SECURITY_IMPERSONATION_LEVEL">
      <enum name="_SECURITY_IMPERSONATION_LEVEL" />
    </typedef>
    <typedef name="PSECURITY_IMPERSONATION_LEVEL">
      <ptr>
        <enum name="_SECURITY_IMPERSONATION_LEVEL" />
      </ptr>
    </typedef>
    <enum name="_TOKEN_TYPE">
      <member name="TokenPrimary" value="1" />
      <member name="TokenImpersonation" value="2" />
    </enum>
    <typedef name="TOKEN_TYPE">
      <enum name="_TOKEN_TYPE" />
    </typedef>
    <typedef name="PTOKEN_TYPE">
      <ptr>
        <type>TOKEN_TYPE</type>
      </ptr>
    </typedef>
    <enum name="_TOKEN_ELEVATION_TYPE">
      <member name="TokenElevationTypeDefault" value="1" />
      <member name="TokenElevationTypeFull" value="2" />
      <member name="TokenElevationTypeLimited" value="3" />
    </enum>
    <typedef name="TOKEN_ELEVATION_TYPE">
      <enum name="_TOKEN_ELEVATION_TYPE" />
    </typedef>
    <typedef name="PTOKEN_ELEVATION_TYPE">
      <ptr>
        <enum name="_TOKEN_ELEVATION_TYPE" />
      </ptr>
    </typedef>
    <enum name="_TOKEN_INFORMATION_CLASS">
      <member name="TokenUser" value="1" />
      <member name="TokenGroups" value="2" />
      <member name="TokenPrivileges" value="3" />
      <member name="TokenOwner" value="4" />
      <member name="TokenPrimaryGroup" value="5" />
      <member name="TokenDefaultDacl" value="6" />
      <member name="TokenSource" value="7" />
      <member name="TokenType" value="8" />
      <member name="TokenImpersonationLevel" value="9" />
      <member name="TokenStatistics" value="10" />
      <member name="TokenRestrictedSids" value="11" />
      <member name="TokenSessionId" value="12" />
      <member name="TokenGroupsAndPrivileges" value="13" />
      <member name="TokenSessionReference" value="14" />
      <member name="TokenSandBoxInert" value="15" />
      <member name="TokenAuditPolicy" value="16" />
      <member name="TokenOrigin" value="17" />
      <member name="TokenElevationType" value="18" />
      <member name="TokenLinkedToken" value="19" />
      <member name="TokenElevation" value="20" />
      <member name="TokenHasRestrictions" value="21" />
      <member name="TokenAccessInformation" value="22" />
      <member name="TokenVirtualizationAllowed" value="23" />
      <member name="TokenVirtualizationEnabled" value="24" />
      <member name="TokenIntegrityLevel" value="25" />
      <member name="TokenUIAccess" value="26" />
      <member name="TokenMandatoryPolicy" value="27" />
      <member name="TokenLogonSid" value="28" />
      <member name="MaxTokenInfoClass" value="29" />
    </enum>
    <typedef name="TOKEN_INFORMATION_CLASS">
      <enum name="_TOKEN_INFORMATION_CLASS" />
    </typedef>
    <typedef name="PTOKEN_INFORMATION_CLASS">
      <ptr>
        <enum name="_TOKEN_INFORMATION_CLASS" />
      </ptr>
    </typedef>
    <struct name="_TOKEN_USER">
      <field offset="0" name="User">
        <type>SID_AND_ATTRIBUTES</type>
      </field>
    </struct>
    <typedef name="TOKEN_USER">
      <struct name="_TOKEN_USER" />
    </typedef>
    <typedef name="PTOKEN_USER">
      <ptr>
        <struct name="_TOKEN_USER" />
      </ptr>
    </typedef>
    <struct name="_TOKEN_GROUPS">
      <field offset="0" name="GroupCount">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Groups">
        <arr length="1">
          <type>SID_AND_ATTRIBUTES</type>
        </arr>
      </field>
    </struct>
    <typedef name="TOKEN_GROUPS">
      <struct name="_TOKEN_GROUPS" />
    </typedef>
    <typedef name="PTOKEN_GROUPS">
      <ptr>
        <struct name="_TOKEN_GROUPS" />
      </ptr>
    </typedef>
    <struct name="_TOKEN_PRIVILEGES">
      <field offset="0" name="PrivilegeCount">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Privileges">
        <arr length="1">
          <type>LUID_AND_ATTRIBUTES</type>
        </arr>
      </field>
    </struct>
    <typedef name="TOKEN_PRIVILEGES">
      <struct name="_TOKEN_PRIVILEGES" />
    </typedef>
    <typedef name="PTOKEN_PRIVILEGES">
      <ptr>
        <struct name="_TOKEN_PRIVILEGES" />
      </ptr>
    </typedef>
    <struct name="_TOKEN_OWNER">
      <field offset="0" name="Owner">
        <type>PSID</type>
      </field>
    </struct>
    <typedef name="TOKEN_OWNER">
      <struct name="_TOKEN_OWNER" />
    </typedef>
    <typedef name="PTOKEN_OWNER">
      <ptr>
        <struct name="_TOKEN_OWNER" />
      </ptr>
    </typedef>
    <struct name="_TOKEN_PRIMARY_GROUP">
      <field offset="0" name="PrimaryGroup">
        <type>PSID</type>
      </field>
    </struct>
    <typedef name="TOKEN_PRIMARY_GROUP">
      <struct name="_TOKEN_PRIMARY_GROUP" />
    </typedef>
    <typedef name="PTOKEN_PRIMARY_GROUP">
      <ptr>
        <struct name="_TOKEN_PRIMARY_GROUP" />
      </ptr>
    </typedef>
    <struct name="_TOKEN_DEFAULT_DACL">
      <field offset="0" name="DefaultDacl">
        <type>PACL</type>
      </field>
    </struct>
    <typedef name="TOKEN_DEFAULT_DACL">
      <struct name="_TOKEN_DEFAULT_DACL" />
    </typedef>
    <typedef name="PTOKEN_DEFAULT_DACL">
      <ptr>
        <struct name="_TOKEN_DEFAULT_DACL" />
      </ptr>
    </typedef>
    <struct name="_TOKEN_GROUPS_AND_PRIVILEGES">
      <field offset="0" name="SidCount">
        <type>DWORD</type>
      </field>
      <field offset="4" name="SidLength">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Sids">
        <type>PSID_AND_ATTRIBUTES</type>
      </field>
      <field offset="12" name="RestrictedSidCount">
        <type>DWORD</type>
      </field>
      <field offset="16" name="RestrictedSidLength">
        <type>DWORD</type>
      </field>
      <field offset="20" name="RestrictedSids">
        <type>PSID_AND_ATTRIBUTES</type>
      </field>
      <field offset="24" name="PrivilegeCount">
        <type>DWORD</type>
      </field>
      <field offset="28" name="PrivilegeLength">
        <type>DWORD</type>
      </field>
      <field offset="32" name="Privileges">
        <type>PLUID_AND_ATTRIBUTES</type>
      </field>
      <field offset="40" name="AuthenticationId">
        <type>LUID</type>
      </field>
    </struct>
    <typedef name="TOKEN_GROUPS_AND_PRIVILEGES">
      <struct name="_TOKEN_GROUPS_AND_PRIVILEGES" />
    </typedef>
    <typedef name="PTOKEN_GROUPS_AND_PRIVILEGES">
      <ptr>
        <struct name="_TOKEN_GROUPS_AND_PRIVILEGES" />
      </ptr>
    </typedef>
    <struct name="_TOKEN_LINKED_TOKEN">
      <field offset="0" name="LinkedToken">
        <type>HANDLE</type>
      </field>
    </struct>
    <typedef name="TOKEN_LINKED_TOKEN">
      <struct name="_TOKEN_LINKED_TOKEN" />
    </typedef>
    <typedef name="PTOKEN_LINKED_TOKEN">
      <ptr>
        <struct name="_TOKEN_LINKED_TOKEN" />
      </ptr>
    </typedef>
    <struct name="_TOKEN_ELEVATION">
      <field offset="0" name="TokenIsElevated">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="TOKEN_ELEVATION">
      <struct name="_TOKEN_ELEVATION" />
    </typedef>
    <typedef name="PTOKEN_ELEVATION">
      <ptr>
        <struct name="_TOKEN_ELEVATION" />
      </ptr>
    </typedef>
    <struct name="_TOKEN_MANDATORY_LABEL">
      <field offset="0" name="Label">
        <type>SID_AND_ATTRIBUTES</type>
      </field>
    </struct>
    <typedef name="TOKEN_MANDATORY_LABEL">
      <struct name="_TOKEN_MANDATORY_LABEL" />
    </typedef>
    <typedef name="PTOKEN_MANDATORY_LABEL">
      <ptr>
        <struct name="_TOKEN_MANDATORY_LABEL" />
      </ptr>
    </typedef>
    <struct name="_TOKEN_MANDATORY_POLICY">
      <field offset="0" name="Policy">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="TOKEN_MANDATORY_POLICY">
      <struct name="_TOKEN_MANDATORY_POLICY" />
    </typedef>
    <typedef name="PTOKEN_MANDATORY_POLICY">
      <ptr>
        <struct name="_TOKEN_MANDATORY_POLICY" />
      </ptr>
    </typedef>
    <struct name="_TOKEN_ACCESS_INFORMATION">
      <field offset="0" name="SidHash">
        <type>PSID_AND_ATTRIBUTES_HASH</type>
      </field>
      <field offset="4" name="RestrictedSidHash">
        <type>PSID_AND_ATTRIBUTES_HASH</type>
      </field>
      <field offset="8" name="Privileges">
        <type>PTOKEN_PRIVILEGES</type>
      </field>
      <field offset="16" name="AuthenticationId">
        <type>LUID</type>
      </field>
      <field offset="24" name="TokenType">
        <type>TOKEN_TYPE</type>
      </field>
      <field offset="28" name="ImpersonationLevel">
        <type>SECURITY_IMPERSONATION_LEVEL</type>
      </field>
      <field offset="32" name="MandatoryPolicy">
        <type>TOKEN_MANDATORY_POLICY</type>
      </field>
      <field offset="36" name="Flags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="TOKEN_ACCESS_INFORMATION">
      <struct name="_TOKEN_ACCESS_INFORMATION" />
    </typedef>
    <typedef name="PTOKEN_ACCESS_INFORMATION">
      <ptr>
        <struct name="_TOKEN_ACCESS_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_TOKEN_AUDIT_POLICY">
      <field offset="0" name="PerUserPolicy">
        <arr length="27">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="TOKEN_AUDIT_POLICY">
      <struct name="_TOKEN_AUDIT_POLICY" />
    </typedef>
    <typedef name="PTOKEN_AUDIT_POLICY">
      <ptr>
        <struct name="_TOKEN_AUDIT_POLICY" />
      </ptr>
    </typedef>
    <struct name="_TOKEN_SOURCE">
      <field offset="0" name="SourceName">
        <arr length="8">
          <type>CHAR</type>
        </arr>
      </field>
      <field offset="8" name="SourceIdentifier">
        <type>LUID</type>
      </field>
    </struct>
    <typedef name="TOKEN_SOURCE">
      <struct name="_TOKEN_SOURCE" />
    </typedef>
    <typedef name="PTOKEN_SOURCE">
      <ptr>
        <struct name="_TOKEN_SOURCE" />
      </ptr>
    </typedef>
    <struct name="_TOKEN_STATISTICS">
      <field offset="0" name="TokenId">
        <type>LUID</type>
      </field>
      <field offset="8" name="AuthenticationId">
        <type>LUID</type>
      </field>
      <field offset="16" name="ExpirationTime">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="24" name="TokenType">
        <type>TOKEN_TYPE</type>
      </field>
      <field offset="28" name="ImpersonationLevel">
        <type>SECURITY_IMPERSONATION_LEVEL</type>
      </field>
      <field offset="32" name="DynamicCharged">
        <type>DWORD</type>
      </field>
      <field offset="36" name="DynamicAvailable">
        <type>DWORD</type>
      </field>
      <field offset="40" name="GroupCount">
        <type>DWORD</type>
      </field>
      <field offset="44" name="PrivilegeCount">
        <type>DWORD</type>
      </field>
      <field offset="48" name="ModifiedId">
        <type>LUID</type>
      </field>
    </struct>
    <typedef name="TOKEN_STATISTICS">
      <struct name="_TOKEN_STATISTICS" />
    </typedef>
    <typedef name="PTOKEN_STATISTICS">
      <ptr>
        <struct name="_TOKEN_STATISTICS" />
      </ptr>
    </typedef>
    <struct name="_TOKEN_CONTROL">
      <field offset="0" name="TokenId">
        <type>LUID</type>
      </field>
      <field offset="8" name="AuthenticationId">
        <type>LUID</type>
      </field>
      <field offset="16" name="ModifiedId">
        <type>LUID</type>
      </field>
      <field offset="24" name="TokenSource">
        <type>TOKEN_SOURCE</type>
      </field>
    </struct>
    <typedef name="TOKEN_CONTROL">
      <struct name="_TOKEN_CONTROL" />
    </typedef>
    <typedef name="PTOKEN_CONTROL">
      <ptr>
        <struct name="_TOKEN_CONTROL" />
      </ptr>
    </typedef>
    <struct name="_TOKEN_ORIGIN">
      <field offset="0" name="OriginatingLogonSession">
        <type>LUID</type>
      </field>
    </struct>
    <typedef name="TOKEN_ORIGIN">
      <struct name="_TOKEN_ORIGIN" />
    </typedef>
    <typedef name="PTOKEN_ORIGIN">
      <ptr>
        <struct name="_TOKEN_ORIGIN" />
      </ptr>
    </typedef>
    <enum name="_MANDATORY_LEVEL">
      <member name="MandatoryLevelUntrusted" value="0" />
      <member name="MandatoryLevelLow" value="1" />
      <member name="MandatoryLevelMedium" value="2" />
      <member name="MandatoryLevelHigh" value="3" />
      <member name="MandatoryLevelSystem" value="4" />
      <member name="MandatoryLevelSecureProcess" value="5" />
      <member name="MandatoryLevelCount" value="6" />
    </enum>
    <typedef name="MANDATORY_LEVEL">
      <enum name="_MANDATORY_LEVEL" />
    </typedef>
    <typedef name="PMANDATORY_LEVEL">
      <ptr>
        <enum name="_MANDATORY_LEVEL" />
      </ptr>
    </typedef>
    <typedef name="SECURITY_CONTEXT_TRACKING_MODE">
      <type>BOOLEAN</type>
    </typedef>
    <typedef name="PSECURITY_CONTEXT_TRACKING_MODE">
      <ptr>
        <type>BOOLEAN</type>
      </ptr>
    </typedef>
    <struct name="_SECURITY_QUALITY_OF_SERVICE">
      <field offset="0" name="Length">
        <type>DWORD</type>
      </field>
      <field offset="4" name="ImpersonationLevel">
        <type>SECURITY_IMPERSONATION_LEVEL</type>
      </field>
      <field offset="8" name="ContextTrackingMode">
        <type>SECURITY_CONTEXT_TRACKING_MODE</type>
      </field>
      <field offset="9" name="EffectiveOnly">
        <type>BOOLEAN</type>
      </field>
    </struct>
    <typedef name="SECURITY_QUALITY_OF_SERVICE">
      <struct name="_SECURITY_QUALITY_OF_SERVICE" />
    </typedef>
    <typedef name="PSECURITY_QUALITY_OF_SERVICE">
      <ptr>
        <struct name="_SECURITY_QUALITY_OF_SERVICE" />
      </ptr>
    </typedef>
    <struct name="_SE_IMPERSONATION_STATE">
      <field offset="0" name="Token">
        <type>PACCESS_TOKEN</type>
      </field>
      <field offset="4" name="CopyOnOpen">
        <type>BOOLEAN</type>
      </field>
      <field offset="5" name="EffectiveOnly">
        <type>BOOLEAN</type>
      </field>
      <field offset="8" name="Level">
        <type>SECURITY_IMPERSONATION_LEVEL</type>
      </field>
    </struct>
    <typedef name="SE_IMPERSONATION_STATE">
      <struct name="_SE_IMPERSONATION_STATE" />
    </typedef>
    <typedef name="PSE_IMPERSONATION_STATE">
      <ptr>
        <struct name="_SE_IMPERSONATION_STATE" />
      </ptr>
    </typedef>
    <typedef name="SECURITY_INFORMATION">
      <type>DWORD</type>
    </typedef>
    <typedef name="PSECURITY_INFORMATION">
      <ptr>
        <type>DWORD</type>
      </ptr>
    </typedef>
    <struct name="_JOB_SET_ARRAY">
      <field offset="0" name="JobHandle">
        <type>HANDLE</type>
      </field>
      <field offset="4" name="MemberLevel">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Flags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="JOB_SET_ARRAY">
      <struct name="_JOB_SET_ARRAY" />
    </typedef>
    <typedef name="PJOB_SET_ARRAY">
      <ptr>
        <struct name="_JOB_SET_ARRAY" />
      </ptr>
    </typedef>
    <struct name="_NT_TIB">
      <field offset="0" name="ExceptionList">
        <ptr>
          <struct name="_EXCEPTION_REGISTRATION_RECORD" />
        </ptr>
      </field>
      <field offset="4" name="StackBase">
        <type>PVOID</type>
      </field>
      <field offset="8" name="StackLimit">
        <type>PVOID</type>
      </field>
      <field offset="12" name="SubSystemTib">
        <type>PVOID</type>
      </field>
      <field offset="16">
        <union>
          <alt name="FiberData">
            <type>PVOID</type>
          </alt>
          <alt name="Version">
            <type>DWORD</type>
          </alt>
        </union>
      </field>
      <field offset="20" name="ArbitraryUserPointer">
        <type>PVOID</type>
      </field>
      <field offset="24" name="Self">
        <ptr>
          <struct name="_NT_TIB" />
        </ptr>
      </field>
    </struct>
    <typedef name="NT_TIB">
      <struct name="_NT_TIB" />
    </typedef>
    <typedef name="PNT_TIB">
      <ptr>
        <type>NT_TIB</type>
      </ptr>
    </typedef>
    <struct name="_NT_TIB32">
      <field offset="0" name="ExceptionList">
        <type>DWORD</type>
      </field>
      <field offset="4" name="StackBase">
        <type>DWORD</type>
      </field>
      <field offset="8" name="StackLimit">
        <type>DWORD</type>
      </field>
      <field offset="12" name="SubSystemTib">
        <type>DWORD</type>
      </field>
      <field offset="16">
        <union>
          <alt name="FiberData">
            <type>DWORD</type>
          </alt>
          <alt name="Version">
            <type>DWORD</type>
          </alt>
        </union>
      </field>
      <field offset="20" name="ArbitraryUserPointer">
        <type>DWORD</type>
      </field>
      <field offset="24" name="Self">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="NT_TIB32">
      <struct name="_NT_TIB32" />
    </typedef>
    <typedef name="PNT_TIB32">
      <ptr>
        <struct name="_NT_TIB32" />
      </ptr>
    </typedef>
    <struct name="_NT_TIB64">
      <field offset="0" name="ExceptionList">
        <type>DWORD64</type>
      </field>
      <field offset="8" name="StackBase">
        <type>DWORD64</type>
      </field>
      <field offset="16" name="StackLimit">
        <type>DWORD64</type>
      </field>
      <field offset="24" name="SubSystemTib">
        <type>DWORD64</type>
      </field>
      <field offset="32">
        <union>
          <alt name="FiberData">
            <type>DWORD64</type>
          </alt>
          <alt name="Version">
            <type>DWORD</type>
          </alt>
        </union>
      </field>
      <field offset="40" name="ArbitraryUserPointer">
        <type>DWORD64</type>
      </field>
      <field offset="48" name="Self">
        <type>DWORD64</type>
      </field>
    </struct>
    <typedef name="NT_TIB64">
      <struct name="_NT_TIB64" />
    </typedef>
    <typedef name="PNT_TIB64">
      <ptr>
        <struct name="_NT_TIB64" />
      </ptr>
    </typedef>
    <struct name="_UMS_CREATE_THREAD_ATTRIBUTES">
      <field offset="0" name="UmsVersion">
        <type>DWORD</type>
      </field>
      <field offset="4" name="UmsContext">
        <type>PVOID</type>
      </field>
      <field offset="8" name="UmsCompletionList">
        <type>PVOID</type>
      </field>
    </struct>
    <typedef name="UMS_CREATE_THREAD_ATTRIBUTES">
      <struct name="_UMS_CREATE_THREAD_ATTRIBUTES" />
    </typedef>
    <typedef name="PUMS_CREATE_THREAD_ATTRIBUTES">
      <ptr>
        <struct name="_UMS_CREATE_THREAD_ATTRIBUTES" />
      </ptr>
    </typedef>
    <struct name="_QUOTA_LIMITS">
      <field offset="0" name="PagedPoolLimit">
        <type>SIZE_T</type>
      </field>
      <field offset="4" name="NonPagedPoolLimit">
        <type>SIZE_T</type>
      </field>
      <field offset="8" name="MinimumWorkingSetSize">
        <type>SIZE_T</type>
      </field>
      <field offset="12" name="MaximumWorkingSetSize">
        <type>SIZE_T</type>
      </field>
      <field offset="16" name="PagefileLimit">
        <type>SIZE_T</type>
      </field>
      <field offset="24" name="TimeLimit">
        <type>LARGE_INTEGER</type>
      </field>
    </struct>
    <typedef name="QUOTA_LIMITS">
      <struct name="_QUOTA_LIMITS" />
    </typedef>
    <typedef name="PQUOTA_LIMITS">
      <ptr>
        <struct name="_QUOTA_LIMITS" />
      </ptr>
    </typedef>
    <struct name="struct_8">
      <field offset="0" name="RatePercent">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Reserved0">
        <type>DWORD</type>
      </field>
    </struct>
    <union name="_RATE_QUOTA_LIMIT">
      <alt name="RateData">
        <type>DWORD</type>
      </alt>
      <alt>
        <struct name="struct_8" />
      </alt>
    </union>
    <typedef name="RATE_QUOTA_LIMIT">
      <union name="_RATE_QUOTA_LIMIT" />
    </typedef>
    <typedef name="PRATE_QUOTA_LIMIT">
      <ptr>
        <union name="_RATE_QUOTA_LIMIT" />
      </ptr>
    </typedef>
    <struct name="_QUOTA_LIMITS_EX">
      <field offset="0" name="PagedPoolLimit">
        <type>SIZE_T</type>
      </field>
      <field offset="4" name="NonPagedPoolLimit">
        <type>SIZE_T</type>
      </field>
      <field offset="8" name="MinimumWorkingSetSize">
        <type>SIZE_T</type>
      </field>
      <field offset="12" name="MaximumWorkingSetSize">
        <type>SIZE_T</type>
      </field>
      <field offset="16" name="PagefileLimit">
        <type>SIZE_T</type>
      </field>
      <field offset="24" name="TimeLimit">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="32" name="WorkingSetLimit">
        <type>SIZE_T</type>
      </field>
      <field offset="36" name="Reserved2">
        <type>SIZE_T</type>
      </field>
      <field offset="40" name="Reserved3">
        <type>SIZE_T</type>
      </field>
      <field offset="44" name="Reserved4">
        <type>SIZE_T</type>
      </field>
      <field offset="48" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="56" name="CpuRateLimit">
        <type>RATE_QUOTA_LIMIT</type>
      </field>
    </struct>
    <typedef name="QUOTA_LIMITS_EX">
      <struct name="_QUOTA_LIMITS_EX" />
    </typedef>
    <typedef name="PQUOTA_LIMITS_EX">
      <ptr>
        <struct name="_QUOTA_LIMITS_EX" />
      </ptr>
    </typedef>
    <struct name="_IO_COUNTERS">
      <field offset="0" name="ReadOperationCount">
        <type>ULONGLONG</type>
      </field>
      <field offset="8" name="WriteOperationCount">
        <type>ULONGLONG</type>
      </field>
      <field offset="16" name="OtherOperationCount">
        <type>ULONGLONG</type>
      </field>
      <field offset="24" name="ReadTransferCount">
        <type>ULONGLONG</type>
      </field>
      <field offset="32" name="WriteTransferCount">
        <type>ULONGLONG</type>
      </field>
      <field offset="40" name="OtherTransferCount">
        <type>ULONGLONG</type>
      </field>
    </struct>
    <typedef name="IO_COUNTERS">
      <struct name="_IO_COUNTERS" />
    </typedef>
    <typedef name="PIO_COUNTERS">
      <ptr>
        <type>IO_COUNTERS</type>
      </ptr>
    </typedef>
    <enum name="_HARDWARE_COUNTER_TYPE">
      <member name="PMCCounter" value="0" />
      <member name="MaxHardwareCounterType" value="1" />
    </enum>
    <typedef name="HARDWARE_COUNTER_TYPE">
      <enum name="_HARDWARE_COUNTER_TYPE" />
    </typedef>
    <typedef name="PHARDWARE_COUNTER_TYPE">
      <ptr>
        <enum name="_HARDWARE_COUNTER_TYPE" />
      </ptr>
    </typedef>
    <struct name="_JOBOBJECT_BASIC_ACCOUNTING_INFORMATION">
      <field offset="0" name="TotalUserTime">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="8" name="TotalKernelTime">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="16" name="ThisPeriodTotalUserTime">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="24" name="ThisPeriodTotalKernelTime">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="32" name="TotalPageFaultCount">
        <type>DWORD</type>
      </field>
      <field offset="36" name="TotalProcesses">
        <type>DWORD</type>
      </field>
      <field offset="40" name="ActiveProcesses">
        <type>DWORD</type>
      </field>
      <field offset="44" name="TotalTerminatedProcesses">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="JOBOBJECT_BASIC_ACCOUNTING_INFORMATION">
      <struct name="_JOBOBJECT_BASIC_ACCOUNTING_INFORMATION" />
    </typedef>
    <typedef name="PJOBOBJECT_BASIC_ACCOUNTING_INFORMATION">
      <ptr>
        <struct name="_JOBOBJECT_BASIC_ACCOUNTING_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_JOBOBJECT_BASIC_LIMIT_INFORMATION">
      <field offset="0" name="PerProcessUserTimeLimit">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="8" name="PerJobUserTimeLimit">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="16" name="LimitFlags">
        <type>DWORD</type>
      </field>
      <field offset="20" name="MinimumWorkingSetSize">
        <type>SIZE_T</type>
      </field>
      <field offset="24" name="MaximumWorkingSetSize">
        <type>SIZE_T</type>
      </field>
      <field offset="28" name="ActiveProcessLimit">
        <type>DWORD</type>
      </field>
      <field offset="32" name="Affinity">
        <type>ULONG_PTR</type>
      </field>
      <field offset="36" name="PriorityClass">
        <type>DWORD</type>
      </field>
      <field offset="40" name="SchedulingClass">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="JOBOBJECT_BASIC_LIMIT_INFORMATION">
      <struct name="_JOBOBJECT_BASIC_LIMIT_INFORMATION" />
    </typedef>
    <typedef name="PJOBOBJECT_BASIC_LIMIT_INFORMATION">
      <ptr>
        <struct name="_JOBOBJECT_BASIC_LIMIT_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_JOBOBJECT_EXTENDED_LIMIT_INFORMATION">
      <field offset="0" name="BasicLimitInformation">
        <type>JOBOBJECT_BASIC_LIMIT_INFORMATION</type>
      </field>
      <field offset="48" name="IoInfo">
        <type>IO_COUNTERS</type>
      </field>
      <field offset="96" name="ProcessMemoryLimit">
        <type>SIZE_T</type>
      </field>
      <field offset="100" name="JobMemoryLimit">
        <type>SIZE_T</type>
      </field>
      <field offset="104" name="PeakProcessMemoryUsed">
        <type>SIZE_T</type>
      </field>
      <field offset="108" name="PeakJobMemoryUsed">
        <type>SIZE_T</type>
      </field>
    </struct>
    <typedef name="JOBOBJECT_EXTENDED_LIMIT_INFORMATION">
      <struct name="_JOBOBJECT_EXTENDED_LIMIT_INFORMATION" />
    </typedef>
    <typedef name="PJOBOBJECT_EXTENDED_LIMIT_INFORMATION">
      <ptr>
        <struct name="_JOBOBJECT_EXTENDED_LIMIT_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_JOBOBJECT_BASIC_PROCESS_ID_LIST">
      <field offset="0" name="NumberOfAssignedProcesses">
        <type>DWORD</type>
      </field>
      <field offset="4" name="NumberOfProcessIdsInList">
        <type>DWORD</type>
      </field>
      <field offset="8" name="ProcessIdList">
        <arr length="1">
          <type>ULONG_PTR</type>
        </arr>
      </field>
    </struct>
    <typedef name="JOBOBJECT_BASIC_PROCESS_ID_LIST">
      <struct name="_JOBOBJECT_BASIC_PROCESS_ID_LIST" />
    </typedef>
    <typedef name="PJOBOBJECT_BASIC_PROCESS_ID_LIST">
      <ptr>
        <struct name="_JOBOBJECT_BASIC_PROCESS_ID_LIST" />
      </ptr>
    </typedef>
    <struct name="_JOBOBJECT_BASIC_UI_RESTRICTIONS">
      <field offset="0" name="UIRestrictionsClass">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="JOBOBJECT_BASIC_UI_RESTRICTIONS">
      <struct name="_JOBOBJECT_BASIC_UI_RESTRICTIONS" />
    </typedef>
    <typedef name="PJOBOBJECT_BASIC_UI_RESTRICTIONS">
      <ptr>
        <struct name="_JOBOBJECT_BASIC_UI_RESTRICTIONS" />
      </ptr>
    </typedef>
    <struct name="_JOBOBJECT_SECURITY_LIMIT_INFORMATION">
      <field offset="0" name="SecurityLimitFlags">
        <type>DWORD</type>
      </field>
      <field offset="4" name="JobToken">
        <type>HANDLE</type>
      </field>
      <field offset="8" name="SidsToDisable">
        <type>PTOKEN_GROUPS</type>
      </field>
      <field offset="12" name="PrivilegesToDelete">
        <type>PTOKEN_PRIVILEGES</type>
      </field>
      <field offset="16" name="RestrictedSids">
        <type>PTOKEN_GROUPS</type>
      </field>
    </struct>
    <typedef name="JOBOBJECT_SECURITY_LIMIT_INFORMATION">
      <struct name="_JOBOBJECT_SECURITY_LIMIT_INFORMATION" />
    </typedef>
    <typedef name="PJOBOBJECT_SECURITY_LIMIT_INFORMATION">
      <ptr>
        <struct name="_JOBOBJECT_SECURITY_LIMIT_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_JOBOBJECT_END_OF_JOB_TIME_INFORMATION">
      <field offset="0" name="EndOfJobTimeAction">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="JOBOBJECT_END_OF_JOB_TIME_INFORMATION">
      <struct name="_JOBOBJECT_END_OF_JOB_TIME_INFORMATION" />
    </typedef>
    <typedef name="PJOBOBJECT_END_OF_JOB_TIME_INFORMATION">
      <ptr>
        <struct name="_JOBOBJECT_END_OF_JOB_TIME_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_JOBOBJECT_ASSOCIATE_COMPLETION_PORT">
      <field offset="0" name="CompletionKey">
        <type>PVOID</type>
      </field>
      <field offset="4" name="CompletionPort">
        <type>HANDLE</type>
      </field>
    </struct>
    <typedef name="JOBOBJECT_ASSOCIATE_COMPLETION_PORT">
      <struct name="_JOBOBJECT_ASSOCIATE_COMPLETION_PORT" />
    </typedef>
    <typedef name="PJOBOBJECT_ASSOCIATE_COMPLETION_PORT">
      <ptr>
        <struct name="_JOBOBJECT_ASSOCIATE_COMPLETION_PORT" />
      </ptr>
    </typedef>
    <struct name="_JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION">
      <field offset="0" name="BasicInfo">
        <type>JOBOBJECT_BASIC_ACCOUNTING_INFORMATION</type>
      </field>
      <field offset="48" name="IoInfo">
        <type>IO_COUNTERS</type>
      </field>
    </struct>
    <typedef name="JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION">
      <struct name="_JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION" />
    </typedef>
    <typedef name="PJOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION">
      <ptr>
        <struct name="_JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_JOBOBJECT_JOBSET_INFORMATION">
      <field offset="0" name="MemberLevel">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="JOBOBJECT_JOBSET_INFORMATION">
      <struct name="_JOBOBJECT_JOBSET_INFORMATION" />
    </typedef>
    <typedef name="PJOBOBJECT_JOBSET_INFORMATION">
      <ptr>
        <struct name="_JOBOBJECT_JOBSET_INFORMATION" />
      </ptr>
    </typedef>
    <enum name="_JOBOBJECTINFOCLASS">
      <member name="JobObjectBasicAccountingInformation" value="1" />
      <member name="JobObjectBasicLimitInformation" value="2" />
      <member name="JobObjectBasicProcessIdList" value="3" />
      <member name="JobObjectBasicUIRestrictions" value="4" />
      <member name="JobObjectSecurityLimitInformation" value="5" />
      <member name="JobObjectEndOfJobTimeInformation" value="6" />
      <member name="JobObjectAssociateCompletionPortInformation" value="7" />
      <member name="JobObjectBasicAndIoAccountingInformation" value="8" />
      <member name="JobObjectExtendedLimitInformation" value="9" />
      <member name="JobObjectJobSetInformation" value="10" />
      <member name="JobObjectGroupInformation" value="11" />
      <member name="MaxJobObjectInfoClass" value="12" />
    </enum>
    <typedef name="JOBOBJECTINFOCLASS">
      <enum name="_JOBOBJECTINFOCLASS" />
    </typedef>
    <enum name="_LOGICAL_PROCESSOR_RELATIONSHIP">
      <member name="RelationProcessorCore" value="0" />
      <member name="RelationNumaNode" value="1" />
      <member name="RelationCache" value="2" />
      <member name="RelationProcessorPackage" value="3" />
      <member name="RelationGroup" value="4" />
      <member name="RelationAll" value="65535" />
    </enum>
    <typedef name="LOGICAL_PROCESSOR_RELATIONSHIP">
      <enum name="_LOGICAL_PROCESSOR_RELATIONSHIP" />
    </typedef>
    <enum name="_PROCESSOR_CACHE_TYPE">
      <member name="CacheUnified" value="0" />
      <member name="CacheInstruction" value="1" />
      <member name="CacheData" value="2" />
      <member name="CacheTrace" value="3" />
    </enum>
    <typedef name="PROCESSOR_CACHE_TYPE">
      <enum name="_PROCESSOR_CACHE_TYPE" />
    </typedef>
    <struct name="_CACHE_DESCRIPTOR">
      <field offset="0" name="Level">
        <type>BYTE</type>
      </field>
      <field offset="1" name="Associativity">
        <type>BYTE</type>
      </field>
      <field offset="2" name="LineSize">
        <type>WORD</type>
      </field>
      <field offset="4" name="Size">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Type">
        <type>PROCESSOR_CACHE_TYPE</type>
      </field>
    </struct>
    <typedef name="CACHE_DESCRIPTOR">
      <struct name="_CACHE_DESCRIPTOR" />
    </typedef>
    <typedef name="PCACHE_DESCRIPTOR">
      <ptr>
        <struct name="_CACHE_DESCRIPTOR" />
      </ptr>
    </typedef>
    <struct name="struct_9">
      <field offset="0" name="Flags">
        <type>BYTE</type>
      </field>
    </struct>
    <struct name="struct_10">
      <field offset="0" name="NodeNumber">
        <type>DWORD</type>
      </field>
    </struct>
    <struct name="_SYSTEM_LOGICAL_PROCESSOR_INFORMATION">
      <field offset="0" name="ProcessorMask">
        <type>ULONG_PTR</type>
      </field>
      <field offset="4" name="Relationship">
        <type>LOGICAL_PROCESSOR_RELATIONSHIP</type>
      </field>
      <field offset="8">
        <union>
          <alt name="ProcessorCore">
            <struct name="struct_9" />
          </alt>
          <alt name="NumaNode">
            <struct name="struct_10" />
          </alt>
          <alt name="Cache">
            <type>CACHE_DESCRIPTOR</type>
          </alt>
          <alt name="Reserved">
            <arr length="2">
              <type>ULONGLONG</type>
            </arr>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="SYSTEM_LOGICAL_PROCESSOR_INFORMATION">
      <struct name="_SYSTEM_LOGICAL_PROCESSOR_INFORMATION" />
    </typedef>
    <typedef name="PSYSTEM_LOGICAL_PROCESSOR_INFORMATION">
      <ptr>
        <struct name="_SYSTEM_LOGICAL_PROCESSOR_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_PROCESSOR_RELATIONSHIP">
      <field offset="0" name="Flags">
        <type>BYTE</type>
      </field>
      <field offset="8" name="Reserved">
        <arr length="21">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="30" name="GroupCount">
        <type>WORD</type>
      </field>
      <field offset="32" name="GroupMask">
        <arr length="1">
          <type>GROUP_AFFINITY</type>
        </arr>
      </field>
    </struct>
    <typedef name="PROCESSOR_RELATIONSHIP">
      <struct name="_PROCESSOR_RELATIONSHIP" />
    </typedef>
    <typedef name="PPROCESSOR_RELATIONSHIP">
      <ptr>
        <struct name="_PROCESSOR_RELATIONSHIP" />
      </ptr>
    </typedef>
    <struct name="_NUMA_NODE_RELATIONSHIP">
      <field offset="0" name="NodeNumber">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Reserved">
        <arr length="20">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="32" name="GroupMask">
        <type>GROUP_AFFINITY</type>
      </field>
    </struct>
    <typedef name="NUMA_NODE_RELATIONSHIP">
      <struct name="_NUMA_NODE_RELATIONSHIP" />
    </typedef>
    <typedef name="PNUMA_NODE_RELATIONSHIP">
      <ptr>
        <struct name="_NUMA_NODE_RELATIONSHIP" />
      </ptr>
    </typedef>
    <struct name="_CACHE_RELATIONSHIP">
      <field offset="0" name="Level">
        <type>BYTE</type>
      </field>
      <field offset="1" name="Associativity">
        <type>BYTE</type>
      </field>
      <field offset="2" name="LineSize">
        <type>WORD</type>
      </field>
      <field offset="4" name="CacheSize">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Type">
        <type>PROCESSOR_CACHE_TYPE</type>
      </field>
      <field offset="16" name="Reserved">
        <arr length="20">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="40" name="GroupMask">
        <type>GROUP_AFFINITY</type>
      </field>
    </struct>
    <typedef name="CACHE_RELATIONSHIP">
      <struct name="_CACHE_RELATIONSHIP" />
    </typedef>
    <typedef name="PCACHE_RELATIONSHIP">
      <ptr>
        <struct name="_CACHE_RELATIONSHIP" />
      </ptr>
    </typedef>
    <struct name="_PROCESSOR_GROUP_INFO">
      <field offset="0" name="MaximumProcessorCount">
        <type>BYTE</type>
      </field>
      <field offset="1" name="ActiveProcessorCount">
        <type>BYTE</type>
      </field>
      <field offset="8" name="Reserved">
        <arr length="38">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="48" name="ActiveProcessorMask">
        <type>KAFFINITY</type>
      </field>
    </struct>
    <typedef name="PROCESSOR_GROUP_INFO">
      <struct name="_PROCESSOR_GROUP_INFO" />
    </typedef>
    <typedef name="PPROCESSOR_GROUP_INFO">
      <ptr>
        <struct name="_PROCESSOR_GROUP_INFO" />
      </ptr>
    </typedef>
    <struct name="_GROUP_RELATIONSHIP">
      <field offset="0" name="MaximumGroupCount">
        <type>WORD</type>
      </field>
      <field offset="2" name="ActiveGroupCount">
        <type>WORD</type>
      </field>
      <field offset="8" name="Reserved">
        <arr length="20">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="32" name="GroupInfo">
        <arr length="1">
          <type>PROCESSOR_GROUP_INFO</type>
        </arr>
      </field>
    </struct>
    <typedef name="GROUP_RELATIONSHIP">
      <struct name="_GROUP_RELATIONSHIP" />
    </typedef>
    <typedef name="PGROUP_RELATIONSHIP">
      <ptr>
        <struct name="_GROUP_RELATIONSHIP" />
      </ptr>
    </typedef>
    <struct name="_SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX">
      <field offset="0" name="Relationship">
        <type>LOGICAL_PROCESSOR_RELATIONSHIP</type>
      </field>
      <field offset="4" name="Size">
        <type>DWORD</type>
      </field>
      <field offset="8">
        <union>
          <alt name="Processor">
            <type>PROCESSOR_RELATIONSHIP</type>
          </alt>
          <alt name="NumaNode">
            <type>NUMA_NODE_RELATIONSHIP</type>
          </alt>
          <alt name="Cache">
            <type>CACHE_RELATIONSHIP</type>
          </alt>
          <alt name="Group">
            <type>GROUP_RELATIONSHIP</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX">
      <struct name="_SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX" />
    </typedef>
    <typedef name="PSYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX">
      <ptr>
        <struct name="_SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX" />
      </ptr>
    </typedef>
    <struct name="_SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION">
      <field offset="0" name="CycleTime">
        <type>DWORD64</type>
      </field>
    </struct>
    <typedef name="SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION">
      <struct name="_SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION" />
    </typedef>
    <typedef name="PSYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION">
      <ptr>
        <struct name="_SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_XSTATE_FEATURE">
      <field offset="0" name="Offset">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Size">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="XSTATE_FEATURE">
      <struct name="_XSTATE_FEATURE" />
    </typedef>
    <typedef name="PXSTATE_FEATURE">
      <ptr>
        <struct name="_XSTATE_FEATURE" />
      </ptr>
    </typedef>
    <struct name="_XSTATE_CONFIGURATION">
      <field offset="0" name="EnabledFeatures">
        <type>DWORD64</type>
      </field>
      <field offset="8" name="Size">
        <type>DWORD</type>
      </field>
      <field offset="12" name="OptimizedSave">
        <type>DWORD</type>
      </field>
      <field offset="16" name="Features">
        <arr length="64">
          <type>XSTATE_FEATURE</type>
        </arr>
      </field>
    </struct>
    <typedef name="XSTATE_CONFIGURATION">
      <struct name="_XSTATE_CONFIGURATION" />
    </typedef>
    <typedef name="PXSTATE_CONFIGURATION">
      <ptr>
        <struct name="_XSTATE_CONFIGURATION" />
      </ptr>
    </typedef>
    <struct name="_MEMORY_BASIC_INFORMATION">
      <field offset="0" name="BaseAddress">
        <type>PVOID</type>
      </field>
      <field offset="4" name="AllocationBase">
        <type>PVOID</type>
      </field>
      <field offset="8" name="AllocationProtect">
        <type>DWORD</type>
      </field>
      <field offset="12" name="RegionSize">
        <type>SIZE_T</type>
      </field>
      <field offset="16" name="State">
        <type>DWORD</type>
      </field>
      <field offset="20" name="Protect">
        <type>DWORD</type>
      </field>
      <field offset="24" name="Type">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="MEMORY_BASIC_INFORMATION">
      <struct name="_MEMORY_BASIC_INFORMATION" />
    </typedef>
    <typedef name="PMEMORY_BASIC_INFORMATION">
      <ptr>
        <struct name="_MEMORY_BASIC_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_MEMORY_BASIC_INFORMATION32">
      <field offset="0" name="BaseAddress">
        <type>DWORD</type>
      </field>
      <field offset="4" name="AllocationBase">
        <type>DWORD</type>
      </field>
      <field offset="8" name="AllocationProtect">
        <type>DWORD</type>
      </field>
      <field offset="12" name="RegionSize">
        <type>DWORD</type>
      </field>
      <field offset="16" name="State">
        <type>DWORD</type>
      </field>
      <field offset="20" name="Protect">
        <type>DWORD</type>
      </field>
      <field offset="24" name="Type">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="MEMORY_BASIC_INFORMATION32">
      <struct name="_MEMORY_BASIC_INFORMATION32" />
    </typedef>
    <typedef name="PMEMORY_BASIC_INFORMATION32">
      <ptr>
        <struct name="_MEMORY_BASIC_INFORMATION32" />
      </ptr>
    </typedef>
    <struct name="_MEMORY_BASIC_INFORMATION64">
      <field offset="0" name="BaseAddress">
        <type>ULONGLONG</type>
      </field>
      <field offset="8" name="AllocationBase">
        <type>ULONGLONG</type>
      </field>
      <field offset="16" name="AllocationProtect">
        <type>DWORD</type>
      </field>
      <field offset="20" name="__alignment1">
        <type>DWORD</type>
      </field>
      <field offset="24" name="RegionSize">
        <type>ULONGLONG</type>
      </field>
      <field offset="32" name="State">
        <type>DWORD</type>
      </field>
      <field offset="36" name="Protect">
        <type>DWORD</type>
      </field>
      <field offset="40" name="Type">
        <type>DWORD</type>
      </field>
      <field offset="44" name="__alignment2">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="MEMORY_BASIC_INFORMATION64">
      <struct name="_MEMORY_BASIC_INFORMATION64" />
    </typedef>
    <typedef name="PMEMORY_BASIC_INFORMATION64">
      <ptr>
        <struct name="_MEMORY_BASIC_INFORMATION64" />
      </ptr>
    </typedef>
    <struct name="_FILE_NOTIFY_INFORMATION">
      <field offset="0" name="NextEntryOffset">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Action">
        <type>DWORD</type>
      </field>
      <field offset="8" name="FileNameLength">
        <type>DWORD</type>
      </field>
      <field offset="12" name="FileName">
        <arr length="1">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="FILE_NOTIFY_INFORMATION">
      <struct name="_FILE_NOTIFY_INFORMATION" />
    </typedef>
    <typedef name="PFILE_NOTIFY_INFORMATION">
      <ptr>
        <struct name="_FILE_NOTIFY_INFORMATION" />
      </ptr>
    </typedef>
    <union name="_FILE_SEGMENT_ELEMENT">
      <alt name="Buffer">
        <type>PVOID64</type>
      </alt>
      <alt name="Alignment">
        <type>ULONGLONG</type>
      </alt>
    </union>
    <typedef name="FILE_SEGMENT_ELEMENT">
      <union name="_FILE_SEGMENT_ELEMENT" />
    </typedef>
    <typedef name="PFILE_SEGMENT_ELEMENT">
      <ptr>
        <union name="_FILE_SEGMENT_ELEMENT" />
      </ptr>
    </typedef>
    <struct name="struct_11">
      <field offset="0" name="DataBuffer">
        <arr length="1">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <struct name="_REPARSE_GUID_DATA_BUFFER">
      <field offset="0" name="ReparseTag">
        <type>DWORD</type>
      </field>
      <field offset="4" name="ReparseDataLength">
        <type>WORD</type>
      </field>
      <field offset="6" name="Reserved">
        <type>WORD</type>
      </field>
      <field offset="8" name="ReparseGuid">
        <type>GUID</type>
      </field>
      <field offset="24" name="GenericReparseBuffer">
        <struct name="struct_11" />
      </field>
    </struct>
    <typedef name="REPARSE_GUID_DATA_BUFFER">
      <struct name="_REPARSE_GUID_DATA_BUFFER" />
    </typedef>
    <typedef name="PREPARSE_GUID_DATA_BUFFER">
      <ptr>
        <struct name="_REPARSE_GUID_DATA_BUFFER" />
      </ptr>
    </typedef>
    <enum name="_SYSTEM_POWER_STATE">
      <member name="PowerSystemUnspecified" value="0" />
      <member name="PowerSystemWorking" value="1" />
      <member name="PowerSystemSleeping1" value="2" />
      <member name="PowerSystemSleeping2" value="3" />
      <member name="PowerSystemSleeping3" value="4" />
      <member name="PowerSystemHibernate" value="5" />
      <member name="PowerSystemShutdown" value="6" />
      <member name="PowerSystemMaximum" value="7" />
    </enum>
    <typedef name="SYSTEM_POWER_STATE">
      <enum name="_SYSTEM_POWER_STATE" />
    </typedef>
    <typedef name="PSYSTEM_POWER_STATE">
      <ptr>
        <enum name="_SYSTEM_POWER_STATE" />
      </ptr>
    </typedef>
    <enum name="enum_16">
      <member name="PowerActionNone" value="0" />
      <member name="PowerActionReserved" value="1" />
      <member name="PowerActionSleep" value="2" />
      <member name="PowerActionHibernate" value="3" />
      <member name="PowerActionShutdown" value="4" />
      <member name="PowerActionShutdownReset" value="5" />
      <member name="PowerActionShutdownOff" value="6" />
      <member name="PowerActionWarmEject" value="7" />
    </enum>
    <typedef name="POWER_ACTION">
      <enum name="enum_16" />
    </typedef>
    <typedef name="PPOWER_ACTION">
      <ptr>
        <enum name="enum_16" />
      </ptr>
    </typedef>
    <enum name="_DEVICE_POWER_STATE">
      <member name="PowerDeviceUnspecified" value="0" />
      <member name="PowerDeviceD0" value="1" />
      <member name="PowerDeviceD1" value="2" />
      <member name="PowerDeviceD2" value="3" />
      <member name="PowerDeviceD3" value="4" />
      <member name="PowerDeviceMaximum" value="5" />
    </enum>
    <typedef name="DEVICE_POWER_STATE">
      <enum name="_DEVICE_POWER_STATE" />
    </typedef>
    <typedef name="PDEVICE_POWER_STATE">
      <ptr>
        <enum name="_DEVICE_POWER_STATE" />
      </ptr>
    </typedef>
    <enum name="_MONITOR_DISPLAY_STATE">
      <member name="PowerMonitorOff" value="0" />
      <member name="PowerMonitorOn" value="1" />
      <member name="PowerMonitorDim" value="2" />
    </enum>
    <typedef name="MONITOR_DISPLAY_STATE">
      <enum name="_MONITOR_DISPLAY_STATE" />
    </typedef>
    <typedef name="PMONITOR_DISPLAY_STATE">
      <ptr>
        <enum name="_MONITOR_DISPLAY_STATE" />
      </ptr>
    </typedef>
    <typedef name="EXECUTION_STATE">
      <type>DWORD</type>
    </typedef>
    <typedef name="PEXECUTION_STATE">
      <ptr>
        <type>DWORD</type>
      </ptr>
    </typedef>
    <enum name="enum_19">
      <member name="LT_DONT_CARE" value="0" />
      <member name="LT_LOWEST_LATENCY" value="1" />
    </enum>
    <typedef name="LATENCY_TIME">
      <enum name="enum_19" />
    </typedef>
    <enum name="_POWER_REQUEST_TYPE">
      <member name="PowerRequestDisplayRequired" value="0" />
      <member name="PowerRequestSystemRequired" value="1" />
      <member name="PowerRequestAwayModeRequired" value="2" />
    </enum>
    <typedef name="POWER_REQUEST_TYPE">
      <enum name="_POWER_REQUEST_TYPE" />
    </typedef>
    <typedef name="PPOWER_REQUEST_TYPE">
      <ptr>
        <enum name="_POWER_REQUEST_TYPE" />
      </ptr>
    </typedef>
    <struct name="CM_Power_Data_s">
      <field offset="0" name="PD_Size">
        <type>DWORD</type>
      </field>
      <field offset="4" name="PD_MostRecentPowerState">
        <type>DEVICE_POWER_STATE</type>
      </field>
      <field offset="8" name="PD_Capabilities">
        <type>DWORD</type>
      </field>
      <field offset="12" name="PD_D1Latency">
        <type>DWORD</type>
      </field>
      <field offset="16" name="PD_D2Latency">
        <type>DWORD</type>
      </field>
      <field offset="20" name="PD_D3Latency">
        <type>DWORD</type>
      </field>
      <field offset="24" name="PD_PowerStateMapping">
        <arr length="7">
          <type>DEVICE_POWER_STATE</type>
        </arr>
      </field>
      <field offset="52" name="PD_DeepestSystemWake">
        <type>SYSTEM_POWER_STATE</type>
      </field>
    </struct>
    <typedef name="CM_POWER_DATA">
      <struct name="CM_Power_Data_s" />
    </typedef>
    <typedef name="PCM_POWER_DATA">
      <ptr>
        <struct name="CM_Power_Data_s" />
      </ptr>
    </typedef>
    <enum name="enum_21">
      <member name="SystemPowerPolicyAc" value="0" />
      <member name="SystemPowerPolicyDc" value="1" />
      <member name="VerifySystemPolicyAc" value="2" />
      <member name="VerifySystemPolicyDc" value="3" />
      <member name="SystemPowerCapabilities" value="4" />
      <member name="SystemBatteryState" value="5" />
      <member name="SystemPowerStateHandler" value="6" />
      <member name="ProcessorStateHandler" value="7" />
      <member name="SystemPowerPolicyCurrent" value="8" />
      <member name="AdministratorPowerPolicy" value="9" />
      <member name="SystemReserveHiberFile" value="10" />
      <member name="ProcessorInformation" value="11" />
      <member name="SystemPowerInformation" value="12" />
      <member name="ProcessorStateHandler2" value="13" />
      <member name="LastWakeTime" value="14" />
      <member name="LastSleepTime" value="15" />
      <member name="SystemExecutionState" value="16" />
      <member name="SystemPowerStateNotifyHandler" value="17" />
      <member name="ProcessorPowerPolicyAc" value="18" />
      <member name="ProcessorPowerPolicyDc" value="19" />
      <member name="VerifyProcessorPowerPolicyAc" value="20" />
      <member name="VerifyProcessorPowerPolicyDc" value="21" />
      <member name="ProcessorPowerPolicyCurrent" value="22" />
      <member name="SystemPowerStateLogging" value="23" />
      <member name="SystemPowerLoggingEntry" value="24" />
      <member name="SetPowerSettingValue" value="25" />
      <member name="NotifyUserPowerSetting" value="26" />
      <member name="PowerInformationLevelUnused0" value="27" />
      <member name="PowerInformationLevelUnused1" value="28" />
      <member name="SystemVideoState" value="29" />
      <member name="TraceApplicationPowerMessage" value="30" />
      <member name="TraceApplicationPowerMessageEnd" value="31" />
      <member name="ProcessorPerfStates" value="32" />
      <member name="ProcessorIdleStates" value="33" />
      <member name="ProcessorCap" value="34" />
      <member name="SystemWakeSource" value="35" />
      <member name="SystemHiberFileInformation" value="36" />
      <member name="TraceServicePowerMessage" value="37" />
      <member name="ProcessorLoad" value="38" />
      <member name="PowerShutdownNotification" value="39" />
      <member name="MonitorCapabilities" value="40" />
      <member name="SessionPowerInit" value="41" />
      <member name="SessionDisplayState" value="42" />
      <member name="PowerRequestCreate" value="43" />
      <member name="PowerRequestAction" value="44" />
      <member name="GetPowerRequestList" value="45" />
      <member name="ProcessorInformationEx" value="46" />
      <member name="NotifyUserModeLegacyPowerEvent" value="47" />
      <member name="GroupPark" value="48" />
      <member name="ProcessorIdleDomains" value="49" />
      <member name="WakeTimerList" value="50" />
      <member name="SystemHiberFileSize" value="51" />
      <member name="PowerInformationLevelMaximum" value="52" />
    </enum>
    <typedef name="POWER_INFORMATION_LEVEL">
      <enum name="enum_21" />
    </typedef>
    <enum name="enum_22">
      <member name="PoAc" value="0" />
      <member name="PoDc" value="1" />
      <member name="PoHot" value="2" />
      <member name="PoConditionMaximum" value="3" />
    </enum>
    <typedef name="SYSTEM_POWER_CONDITION">
      <enum name="enum_22" />
    </typedef>
    <struct name="struct_12">
      <field offset="0" name="Version">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Guid">
        <type>GUID</type>
      </field>
      <field offset="24" name="PowerCondition">
        <type>SYSTEM_POWER_CONDITION</type>
      </field>
      <field offset="28" name="DataLength">
        <type>DWORD</type>
      </field>
      <field offset="32" name="Data">
        <arr length="1">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="SET_POWER_SETTING_VALUE">
      <struct name="struct_12" />
    </typedef>
    <typedef name="PSET_POWER_SETTING_VALUE">
      <ptr>
        <struct name="struct_12" />
      </ptr>
    </typedef>
    <struct name="struct_13">
      <field offset="0" name="Guid">
        <type>GUID</type>
      </field>
    </struct>
    <typedef name="NOTIFY_USER_POWER_SETTING">
      <struct name="struct_13" />
    </typedef>
    <typedef name="PNOTIFY_USER_POWER_SETTING">
      <ptr>
        <struct name="struct_13" />
      </ptr>
    </typedef>
    <struct name="_APPLICATIONLAUNCH_SETTING_VALUE">
      <field offset="0" name="ActivationTime">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="8" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="12" name="ButtonInstanceID">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="APPLICATIONLAUNCH_SETTING_VALUE">
      <struct name="_APPLICATIONLAUNCH_SETTING_VALUE" />
    </typedef>
    <typedef name="PAPPLICATIONLAUNCH_SETTING_VALUE">
      <ptr>
        <struct name="_APPLICATIONLAUNCH_SETTING_VALUE" />
      </ptr>
    </typedef>
    <enum name="enum_23">
      <member name="PlatformRoleUnspecified" value="0" />
      <member name="PlatformRoleDesktop" value="1" />
      <member name="PlatformRoleMobile" value="2" />
      <member name="PlatformRoleWorkstation" value="3" />
      <member name="PlatformRoleEnterpriseServer" value="4" />
      <member name="PlatformRoleSOHOServer" value="5" />
      <member name="PlatformRoleAppliancePC" value="6" />
      <member name="PlatformRolePerformanceServer" value="7" />
      <member name="PlatformRoleMaximum" value="8" />
    </enum>
    <typedef name="POWER_PLATFORM_ROLE">
      <enum name="enum_23" />
    </typedef>
    <struct name="struct_14">
      <field offset="0" name="Granularity">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Capacity">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="BATTERY_REPORTING_SCALE">
      <struct name="struct_14" />
    </typedef>
    <typedef name="PBATTERY_REPORTING_SCALE">
      <ptr>
        <struct name="struct_14" />
      </ptr>
    </typedef>
    <struct name="struct_15">
      <field offset="0" name="Frequency">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="PercentFrequency">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PPM_WMI_LEGACY_PERFSTATE">
      <struct name="struct_15" />
    </typedef>
    <typedef name="PPPM_WMI_LEGACY_PERFSTATE">
      <ptr>
        <struct name="struct_15" />
      </ptr>
    </typedef>
    <struct name="struct_16">
      <field offset="0" name="Latency">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Power">
        <type>DWORD</type>
      </field>
      <field offset="8" name="TimeCheck">
        <type>DWORD</type>
      </field>
      <field offset="12" name="PromotePercent">
        <type>BYTE</type>
      </field>
      <field offset="13" name="DemotePercent">
        <type>BYTE</type>
      </field>
      <field offset="14" name="StateType">
        <type>BYTE</type>
      </field>
      <field offset="15" name="Reserved">
        <type>BYTE</type>
      </field>
      <field offset="16" name="StateFlags">
        <type>DWORD</type>
      </field>
      <field offset="20" name="Context">
        <type>DWORD</type>
      </field>
      <field offset="24" name="IdleHandler">
        <type>DWORD</type>
      </field>
      <field offset="28" name="Reserved1">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PPM_WMI_IDLE_STATE">
      <struct name="struct_16" />
    </typedef>
    <typedef name="PPPM_WMI_IDLE_STATE">
      <ptr>
        <struct name="struct_16" />
      </ptr>
    </typedef>
    <struct name="struct_17">
      <field offset="0" name="Type">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Count">
        <type>DWORD</type>
      </field>
      <field offset="8" name="TargetState">
        <type>DWORD</type>
      </field>
      <field offset="12" name="OldState">
        <type>DWORD</type>
      </field>
      <field offset="16" name="TargetProcessors">
        <type>DWORD64</type>
      </field>
      <field offset="24" name="State">
        <arr length="1">
          <type>PPM_WMI_IDLE_STATE</type>
        </arr>
      </field>
    </struct>
    <typedef name="PPM_WMI_IDLE_STATES">
      <struct name="struct_17" />
    </typedef>
    <typedef name="PPPM_WMI_IDLE_STATES">
      <ptr>
        <struct name="struct_17" />
      </ptr>
    </typedef>
    <struct name="struct_18">
      <field offset="0" name="Type">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Count">
        <type>DWORD</type>
      </field>
      <field offset="8" name="TargetState">
        <type>DWORD</type>
      </field>
      <field offset="12" name="OldState">
        <type>DWORD</type>
      </field>
      <field offset="16" name="TargetProcessors">
        <type>PVOID</type>
      </field>
      <field offset="24" name="State">
        <arr length="1">
          <type>PPM_WMI_IDLE_STATE</type>
        </arr>
      </field>
    </struct>
    <typedef name="PPM_WMI_IDLE_STATES_EX">
      <struct name="struct_18" />
    </typedef>
    <typedef name="PPPM_WMI_IDLE_STATES_EX">
      <ptr>
        <struct name="struct_18" />
      </ptr>
    </typedef>
    <struct name="struct_19">
      <field offset="0" name="Frequency">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Power">
        <type>DWORD</type>
      </field>
      <field offset="8" name="PercentFrequency">
        <type>BYTE</type>
      </field>
      <field offset="9" name="IncreaseLevel">
        <type>BYTE</type>
      </field>
      <field offset="10" name="DecreaseLevel">
        <type>BYTE</type>
      </field>
      <field offset="11" name="Type">
        <type>BYTE</type>
      </field>
      <field offset="12" name="IncreaseTime">
        <type>DWORD</type>
      </field>
      <field offset="16" name="DecreaseTime">
        <type>DWORD</type>
      </field>
      <field offset="24" name="Control">
        <type>DWORD64</type>
      </field>
      <field offset="32" name="Status">
        <type>DWORD64</type>
      </field>
      <field offset="40" name="HitCount">
        <type>DWORD</type>
      </field>
      <field offset="44" name="Reserved1">
        <type>DWORD</type>
      </field>
      <field offset="48" name="Reserved2">
        <type>DWORD64</type>
      </field>
      <field offset="56" name="Reserved3">
        <type>DWORD64</type>
      </field>
    </struct>
    <typedef name="PPM_WMI_PERF_STATE">
      <struct name="struct_19" />
    </typedef>
    <typedef name="PPPM_WMI_PERF_STATE">
      <ptr>
        <struct name="struct_19" />
      </ptr>
    </typedef>
    <struct name="struct_20">
      <field offset="0" name="Count">
        <type>DWORD</type>
      </field>
      <field offset="4" name="MaxFrequency">
        <type>DWORD</type>
      </field>
      <field offset="8" name="CurrentState">
        <type>DWORD</type>
      </field>
      <field offset="12" name="MaxPerfState">
        <type>DWORD</type>
      </field>
      <field offset="16" name="MinPerfState">
        <type>DWORD</type>
      </field>
      <field offset="20" name="LowestPerfState">
        <type>DWORD</type>
      </field>
      <field offset="24" name="ThermalConstraint">
        <type>DWORD</type>
      </field>
      <field offset="28" name="BusyAdjThreshold">
        <type>BYTE</type>
      </field>
      <field offset="29" name="PolicyType">
        <type>BYTE</type>
      </field>
      <field offset="30" name="Type">
        <type>BYTE</type>
      </field>
      <field offset="31" name="Reserved">
        <type>BYTE</type>
      </field>
      <field offset="32" name="TimerInterval">
        <type>DWORD</type>
      </field>
      <field offset="40" name="TargetProcessors">
        <type>DWORD64</type>
      </field>
      <field offset="48" name="PStateHandler">
        <type>DWORD</type>
      </field>
      <field offset="52" name="PStateContext">
        <type>DWORD</type>
      </field>
      <field offset="56" name="TStateHandler">
        <type>DWORD</type>
      </field>
      <field offset="60" name="TStateContext">
        <type>DWORD</type>
      </field>
      <field offset="64" name="FeedbackHandler">
        <type>DWORD</type>
      </field>
      <field offset="68" name="Reserved1">
        <type>DWORD</type>
      </field>
      <field offset="72" name="Reserved2">
        <type>DWORD64</type>
      </field>
      <field offset="80" name="State">
        <arr length="1">
          <type>PPM_WMI_PERF_STATE</type>
        </arr>
      </field>
    </struct>
    <typedef name="PPM_WMI_PERF_STATES">
      <struct name="struct_20" />
    </typedef>
    <typedef name="PPPM_WMI_PERF_STATES">
      <ptr>
        <struct name="struct_20" />
      </ptr>
    </typedef>
    <struct name="struct_21">
      <field offset="0" name="Count">
        <type>DWORD</type>
      </field>
      <field offset="4" name="MaxFrequency">
        <type>DWORD</type>
      </field>
      <field offset="8" name="CurrentState">
        <type>DWORD</type>
      </field>
      <field offset="12" name="MaxPerfState">
        <type>DWORD</type>
      </field>
      <field offset="16" name="MinPerfState">
        <type>DWORD</type>
      </field>
      <field offset="20" name="LowestPerfState">
        <type>DWORD</type>
      </field>
      <field offset="24" name="ThermalConstraint">
        <type>DWORD</type>
      </field>
      <field offset="28" name="BusyAdjThreshold">
        <type>BYTE</type>
      </field>
      <field offset="29" name="PolicyType">
        <type>BYTE</type>
      </field>
      <field offset="30" name="Type">
        <type>BYTE</type>
      </field>
      <field offset="31" name="Reserved">
        <type>BYTE</type>
      </field>
      <field offset="32" name="TimerInterval">
        <type>DWORD</type>
      </field>
      <field offset="36" name="TargetProcessors">
        <type>PVOID</type>
      </field>
      <field offset="40" name="PStateHandler">
        <type>DWORD</type>
      </field>
      <field offset="44" name="PStateContext">
        <type>DWORD</type>
      </field>
      <field offset="48" name="TStateHandler">
        <type>DWORD</type>
      </field>
      <field offset="52" name="TStateContext">
        <type>DWORD</type>
      </field>
      <field offset="56" name="FeedbackHandler">
        <type>DWORD</type>
      </field>
      <field offset="60" name="Reserved1">
        <type>DWORD</type>
      </field>
      <field offset="64" name="Reserved2">
        <type>DWORD64</type>
      </field>
      <field offset="72" name="State">
        <arr length="1">
          <type>PPM_WMI_PERF_STATE</type>
        </arr>
      </field>
    </struct>
    <typedef name="PPM_WMI_PERF_STATES_EX">
      <struct name="struct_21" />
    </typedef>
    <typedef name="PPPM_WMI_PERF_STATES_EX">
      <ptr>
        <struct name="struct_21" />
      </ptr>
    </typedef>
    <struct name="struct_22">
      <field offset="0" name="IdleTransitions">
        <type>DWORD</type>
      </field>
      <field offset="4" name="FailedTransitions">
        <type>DWORD</type>
      </field>
      <field offset="8" name="InvalidBucketIndex">
        <type>DWORD</type>
      </field>
      <field offset="16" name="TotalTime">
        <type>DWORD64</type>
      </field>
      <field offset="24" name="IdleTimeBuckets">
        <arr length="6">
          <type>DWORD</type>
        </arr>
      </field>
    </struct>
    <typedef name="PPM_IDLE_STATE_ACCOUNTING">
      <struct name="struct_22" />
    </typedef>
    <typedef name="PPPM_IDLE_STATE_ACCOUNTING">
      <ptr>
        <struct name="struct_22" />
      </ptr>
    </typedef>
    <struct name="struct_23">
      <field offset="0" name="StateCount">
        <type>DWORD</type>
      </field>
      <field offset="4" name="TotalTransitions">
        <type>DWORD</type>
      </field>
      <field offset="8" name="ResetCount">
        <type>DWORD</type>
      </field>
      <field offset="16" name="StartTime">
        <type>DWORD64</type>
      </field>
      <field offset="24" name="State">
        <arr length="1">
          <type>PPM_IDLE_STATE_ACCOUNTING</type>
        </arr>
      </field>
    </struct>
    <typedef name="PPM_IDLE_ACCOUNTING">
      <struct name="struct_23" />
    </typedef>
    <typedef name="PPPM_IDLE_ACCOUNTING">
      <ptr>
        <struct name="struct_23" />
      </ptr>
    </typedef>
    <struct name="struct_24">
      <field offset="0" name="TotalTimeUs">
        <type>DWORD64</type>
      </field>
      <field offset="8" name="MinTimeUs">
        <type>DWORD</type>
      </field>
      <field offset="12" name="MaxTimeUs">
        <type>DWORD</type>
      </field>
      <field offset="16" name="Count">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PPM_IDLE_STATE_BUCKET_EX">
      <struct name="struct_24" />
    </typedef>
    <typedef name="PPPM_IDLE_STATE_BUCKET_EX">
      <ptr>
        <struct name="struct_24" />
      </ptr>
    </typedef>
    <struct name="struct_25">
      <field offset="0" name="TotalTime">
        <type>DWORD64</type>
      </field>
      <field offset="8" name="IdleTransitions">
        <type>DWORD</type>
      </field>
      <field offset="12" name="FailedTransitions">
        <type>DWORD</type>
      </field>
      <field offset="16" name="InvalidBucketIndex">
        <type>DWORD</type>
      </field>
      <field offset="20" name="MinTimeUs">
        <type>DWORD</type>
      </field>
      <field offset="24" name="MaxTimeUs">
        <type>DWORD</type>
      </field>
      <field offset="32" name="IdleTimeBuckets">
        <arr length="16">
          <type>PPM_IDLE_STATE_BUCKET_EX</type>
        </arr>
      </field>
    </struct>
    <typedef name="PPM_IDLE_STATE_ACCOUNTING_EX">
      <struct name="struct_25" />
    </typedef>
    <typedef name="PPPM_IDLE_STATE_ACCOUNTING_EX">
      <ptr>
        <struct name="struct_25" />
      </ptr>
    </typedef>
    <struct name="struct_26">
      <field offset="0" name="StateCount">
        <type>DWORD</type>
      </field>
      <field offset="4" name="TotalTransitions">
        <type>DWORD</type>
      </field>
      <field offset="8" name="ResetCount">
        <type>DWORD</type>
      </field>
      <field offset="16" name="StartTime">
        <type>DWORD64</type>
      </field>
      <field offset="24" name="State">
        <arr length="1">
          <type>PPM_IDLE_STATE_ACCOUNTING_EX</type>
        </arr>
      </field>
    </struct>
    <typedef name="PPM_IDLE_ACCOUNTING_EX">
      <struct name="struct_26" />
    </typedef>
    <typedef name="PPPM_IDLE_ACCOUNTING_EX">
      <ptr>
        <struct name="struct_26" />
      </ptr>
    </typedef>
    <struct name="struct_27">
      <field offset="0" name="State">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Status">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Latency">
        <type>DWORD</type>
      </field>
      <field offset="12" name="Speed">
        <type>DWORD</type>
      </field>
      <field offset="16" name="Processor">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PPM_PERFSTATE_EVENT">
      <struct name="struct_27" />
    </typedef>
    <typedef name="PPPM_PERFSTATE_EVENT">
      <ptr>
        <struct name="struct_27" />
      </ptr>
    </typedef>
    <struct name="struct_28">
      <field offset="0" name="State">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Latency">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Speed">
        <type>DWORD</type>
      </field>
      <field offset="16" name="Processors">
        <type>DWORD64</type>
      </field>
    </struct>
    <typedef name="PPM_PERFSTATE_DOMAIN_EVENT">
      <struct name="struct_28" />
    </typedef>
    <typedef name="PPPM_PERFSTATE_DOMAIN_EVENT">
      <ptr>
        <struct name="struct_28" />
      </ptr>
    </typedef>
    <struct name="struct_29">
      <field offset="0" name="NewState">
        <type>DWORD</type>
      </field>
      <field offset="4" name="OldState">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Processors">
        <type>DWORD64</type>
      </field>
    </struct>
    <typedef name="PPM_IDLESTATE_EVENT">
      <struct name="struct_29" />
    </typedef>
    <typedef name="PPPM_IDLESTATE_EVENT">
      <ptr>
        <struct name="struct_29" />
      </ptr>
    </typedef>
    <struct name="struct_30">
      <field offset="0" name="ThermalConstraint">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Processors">
        <type>DWORD64</type>
      </field>
    </struct>
    <typedef name="PPM_THERMALCHANGE_EVENT">
      <struct name="struct_30" />
    </typedef>
    <typedef name="PPPM_THERMALCHANGE_EVENT">
      <ptr>
        <struct name="struct_30" />
      </ptr>
    </typedef>
    <struct name="struct_31">
      <field offset="0" name="Mode">
        <type>BYTE</type>
      </field>
      <field offset="8" name="Processors">
        <type>DWORD64</type>
      </field>
    </struct>
    <typedef name="PPM_THERMAL_POLICY_EVENT">
      <struct name="struct_31" />
    </typedef>
    <typedef name="PPPM_THERMAL_POLICY_EVENT">
      <ptr>
        <struct name="struct_31" />
      </ptr>
    </typedef>
    <struct name="struct_32">
      <field offset="0" name="Action">
        <type>POWER_ACTION</type>
      </field>
      <field offset="4" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="EventCode">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="POWER_ACTION_POLICY">
      <struct name="struct_32" />
    </typedef>
    <typedef name="PPOWER_ACTION_POLICY">
      <ptr>
        <struct name="struct_32" />
      </ptr>
    </typedef>
    <struct name="struct_33">
      <field offset="0" name="Enable">
        <type>BOOLEAN</type>
      </field>
      <field offset="3" name="Spare">
        <arr length="3">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="8" name="BatteryLevel">
        <type>DWORD</type>
      </field>
      <field offset="16" name="PowerPolicy">
        <type>POWER_ACTION_POLICY</type>
      </field>
      <field offset="28" name="MinSystemState">
        <type>SYSTEM_POWER_STATE</type>
      </field>
    </struct>
    <typedef name="SYSTEM_POWER_LEVEL">
      <struct name="struct_33" />
    </typedef>
    <typedef name="PSYSTEM_POWER_LEVEL">
      <ptr>
        <struct name="struct_33" />
      </ptr>
    </typedef>
    <struct name="_SYSTEM_POWER_POLICY">
      <field offset="0" name="Revision">
        <type>DWORD</type>
      </field>
      <field offset="8" name="PowerButton">
        <type>POWER_ACTION_POLICY</type>
      </field>
      <field offset="24" name="SleepButton">
        <type>POWER_ACTION_POLICY</type>
      </field>
      <field offset="40" name="LidClose">
        <type>POWER_ACTION_POLICY</type>
      </field>
      <field offset="52" name="LidOpenWake">
        <type>SYSTEM_POWER_STATE</type>
      </field>
      <field offset="56" name="Reserved">
        <type>DWORD</type>
      </field>
      <field offset="64" name="Idle">
        <type>POWER_ACTION_POLICY</type>
      </field>
      <field offset="76" name="IdleTimeout">
        <type>DWORD</type>
      </field>
      <field offset="80" name="IdleSensitivity">
        <type>BYTE</type>
      </field>
      <field offset="81" name="DynamicThrottle">
        <type>BYTE</type>
      </field>
      <field offset="82" name="Spare2">
        <arr length="2">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="84" name="MinSleep">
        <type>SYSTEM_POWER_STATE</type>
      </field>
      <field offset="88" name="MaxSleep">
        <type>SYSTEM_POWER_STATE</type>
      </field>
      <field offset="92" name="ReducedLatencySleep">
        <type>SYSTEM_POWER_STATE</type>
      </field>
      <field offset="96" name="WinLogonFlags">
        <type>DWORD</type>
      </field>
      <field offset="100" name="Spare3">
        <type>DWORD</type>
      </field>
      <field offset="104" name="DozeS4Timeout">
        <type>DWORD</type>
      </field>
      <field offset="108" name="BroadcastCapacityResolution">
        <type>DWORD</type>
      </field>
      <field offset="112" name="DischargePolicy">
        <arr length="4">
          <type>SYSTEM_POWER_LEVEL</type>
        </arr>
      </field>
      <field offset="208" name="VideoTimeout">
        <type>DWORD</type>
      </field>
      <field offset="212" name="VideoDimDisplay">
        <type>BOOLEAN</type>
      </field>
      <field offset="216" name="VideoReserved">
        <arr length="3">
          <type>DWORD</type>
        </arr>
      </field>
      <field offset="228" name="SpindownTimeout">
        <type>DWORD</type>
      </field>
      <field offset="232" name="OptimizeForPower">
        <type>BOOLEAN</type>
      </field>
      <field offset="233" name="FanThrottleTolerance">
        <type>BYTE</type>
      </field>
      <field offset="234" name="ForcedThrottle">
        <type>BYTE</type>
      </field>
      <field offset="235" name="MinThrottle">
        <type>BYTE</type>
      </field>
      <field offset="240" name="OverThrottled">
        <type>POWER_ACTION_POLICY</type>
      </field>
    </struct>
    <typedef name="SYSTEM_POWER_POLICY">
      <struct name="_SYSTEM_POWER_POLICY" />
    </typedef>
    <typedef name="PSYSTEM_POWER_POLICY">
      <ptr>
        <struct name="_SYSTEM_POWER_POLICY" />
      </ptr>
    </typedef>
    <struct name="struct_34">
      <field offset="0" name="TimeCheck">
        <type>DWORD</type>
      </field>
      <field offset="4" name="DemotePercent">
        <type>BYTE</type>
      </field>
      <field offset="5" name="PromotePercent">
        <type>BYTE</type>
      </field>
      <field offset="6" name="Spare">
        <arr length="2">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="PROCESSOR_IDLESTATE_INFO">
      <struct name="struct_34" />
    </typedef>
    <typedef name="PPROCESSOR_IDLESTATE_INFO">
      <ptr>
        <struct name="struct_34" />
      </ptr>
    </typedef>
    <struct name="struct_36">
      <field offset="0" name="AllowScaling">
        <type>WORD</type>
      </field>
      <field offset="2" name="Disabled">
        <type>WORD</type>
      </field>
      <field offset="4" name="Reserved">
        <type>WORD</type>
      </field>
    </struct>
    <struct name="struct_35">
      <field offset="0" name="Revision">
        <type>WORD</type>
      </field>
      <field offset="6" name="Flags">
        <union>
          <alt name="AsWORD">
            <type>WORD</type>
          </alt>
          <alt>
            <struct name="struct_36" />
          </alt>
        </union>
      </field>
      <field offset="12" name="PolicyCount">
        <type>DWORD</type>
      </field>
      <field offset="16" name="Policy">
        <arr length="3">
          <type>PROCESSOR_IDLESTATE_INFO</type>
        </arr>
      </field>
    </struct>
    <typedef name="PROCESSOR_IDLESTATE_POLICY">
      <struct name="struct_35" />
    </typedef>
    <typedef name="PPROCESSOR_IDLESTATE_POLICY">
      <ptr>
        <struct name="struct_35" />
      </ptr>
    </typedef>
    <struct name="_PROCESSOR_POWER_POLICY_INFO">
      <field offset="0" name="TimeCheck">
        <type>DWORD</type>
      </field>
      <field offset="4" name="DemoteLimit">
        <type>DWORD</type>
      </field>
      <field offset="8" name="PromoteLimit">
        <type>DWORD</type>
      </field>
      <field offset="12" name="DemotePercent">
        <type>BYTE</type>
      </field>
      <field offset="13" name="PromotePercent">
        <type>BYTE</type>
      </field>
      <field offset="14" name="Spare">
        <arr length="2">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="16" name="AllowDemotion">
        <type>DWORD</type>
      </field>
      <field offset="20" name="AllowPromotion">
        <type>DWORD</type>
      </field>
      <field offset="24" name="Reserved">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PROCESSOR_POWER_POLICY_INFO">
      <struct name="_PROCESSOR_POWER_POLICY_INFO" />
    </typedef>
    <typedef name="PPROCESSOR_POWER_POLICY_INFO">
      <ptr>
        <struct name="_PROCESSOR_POWER_POLICY_INFO" />
      </ptr>
    </typedef>
    <struct name="_PROCESSOR_POWER_POLICY">
      <field offset="0" name="Revision">
        <type>DWORD</type>
      </field>
      <field offset="4" name="DynamicThrottle">
        <type>BYTE</type>
      </field>
      <field offset="6" name="Spare">
        <arr length="3">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="12" name="DisableCStates">
        <type>DWORD</type>
      </field>
      <field offset="16" name="Reserved">
        <type>DWORD</type>
      </field>
      <field offset="20" name="PolicyCount">
        <type>DWORD</type>
      </field>
      <field offset="24" name="Policy">
        <arr length="3">
          <type>PROCESSOR_POWER_POLICY_INFO</type>
        </arr>
      </field>
    </struct>
    <typedef name="PROCESSOR_POWER_POLICY">
      <struct name="_PROCESSOR_POWER_POLICY" />
    </typedef>
    <typedef name="PPROCESSOR_POWER_POLICY">
      <ptr>
        <struct name="_PROCESSOR_POWER_POLICY" />
      </ptr>
    </typedef>
    <struct name="struct_38">
      <field offset="0" name="NoDomainAccounting">
        <type>BYTE</type>
      </field>
      <field offset="1" name="IncreasePolicy">
        <type>BYTE</type>
      </field>
      <field offset="2" name="DecreasePolicy">
        <type>BYTE</type>
      </field>
      <field offset="3" name="Reserved">
        <type>BYTE</type>
      </field>
    </struct>
    <struct name="struct_37">
      <field offset="0" name="Revision">
        <type>DWORD</type>
      </field>
      <field offset="4" name="MaxThrottle">
        <type>BYTE</type>
      </field>
      <field offset="5" name="MinThrottle">
        <type>BYTE</type>
      </field>
      <field offset="6" name="BusyAdjThreshold">
        <type>BYTE</type>
      </field>
      <field offset="8">
        <union>
          <alt name="Spare">
            <type>BYTE</type>
          </alt>
          <alt name="Flags">
            <union>
              <alt name="AsBYTE">
                <type>BYTE</type>
              </alt>
              <alt>
                <struct name="struct_38" />
              </alt>
            </union>
          </alt>
        </union>
      </field>
      <field offset="12" name="TimeCheck">
        <type>DWORD</type>
      </field>
      <field offset="16" name="IncreaseTime">
        <type>DWORD</type>
      </field>
      <field offset="20" name="DecreaseTime">
        <type>DWORD</type>
      </field>
      <field offset="24" name="IncreasePercent">
        <type>DWORD</type>
      </field>
      <field offset="28" name="DecreasePercent">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PROCESSOR_PERFSTATE_POLICY">
      <struct name="struct_37" />
    </typedef>
    <typedef name="PPROCESSOR_PERFSTATE_POLICY">
      <ptr>
        <struct name="struct_37" />
      </ptr>
    </typedef>
    <struct name="_ADMINISTRATOR_POWER_POLICY">
      <field offset="0" name="MinSleep">
        <type>SYSTEM_POWER_STATE</type>
      </field>
      <field offset="4" name="MaxSleep">
        <type>SYSTEM_POWER_STATE</type>
      </field>
      <field offset="8" name="MinVideoTimeout">
        <type>DWORD</type>
      </field>
      <field offset="12" name="MaxVideoTimeout">
        <type>DWORD</type>
      </field>
      <field offset="16" name="MinSpindownTimeout">
        <type>DWORD</type>
      </field>
      <field offset="20" name="MaxSpindownTimeout">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="ADMINISTRATOR_POWER_POLICY">
      <struct name="_ADMINISTRATOR_POWER_POLICY" />
    </typedef>
    <typedef name="PADMINISTRATOR_POWER_POLICY">
      <ptr>
        <struct name="_ADMINISTRATOR_POWER_POLICY" />
      </ptr>
    </typedef>
    <struct name="struct_39">
      <field offset="0" name="PowerButtonPresent">
        <type>BOOLEAN</type>
      </field>
      <field offset="1" name="SleepButtonPresent">
        <type>BOOLEAN</type>
      </field>
      <field offset="2" name="LidPresent">
        <type>BOOLEAN</type>
      </field>
      <field offset="3" name="SystemS1">
        <type>BOOLEAN</type>
      </field>
      <field offset="4" name="SystemS2">
        <type>BOOLEAN</type>
      </field>
      <field offset="5" name="SystemS3">
        <type>BOOLEAN</type>
      </field>
      <field offset="6" name="SystemS4">
        <type>BOOLEAN</type>
      </field>
      <field offset="7" name="SystemS5">
        <type>BOOLEAN</type>
      </field>
      <field offset="8" name="HiberFilePresent">
        <type>BOOLEAN</type>
      </field>
      <field offset="9" name="FullWake">
        <type>BOOLEAN</type>
      </field>
      <field offset="10" name="VideoDimPresent">
        <type>BOOLEAN</type>
      </field>
      <field offset="11" name="ApmPresent">
        <type>BOOLEAN</type>
      </field>
      <field offset="12" name="UpsPresent">
        <type>BOOLEAN</type>
      </field>
      <field offset="13" name="ThermalControl">
        <type>BOOLEAN</type>
      </field>
      <field offset="14" name="ProcessorThrottle">
        <type>BOOLEAN</type>
      </field>
      <field offset="15" name="ProcessorMinThrottle">
        <type>BYTE</type>
      </field>
      <field offset="16" name="ProcessorMaxThrottle">
        <type>BYTE</type>
      </field>
      <field offset="17" name="FastSystemS4">
        <type>BOOLEAN</type>
      </field>
      <field offset="18" name="spare2">
        <arr length="3">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="21" name="DiskSpinDown">
        <type>BOOLEAN</type>
      </field>
      <field offset="24" name="spare3">
        <arr length="8">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="32" name="SystemBatteriesPresent">
        <type>BOOLEAN</type>
      </field>
      <field offset="33" name="BatteriesAreShortTerm">
        <type>BOOLEAN</type>
      </field>
      <field offset="40" name="BatteryScale">
        <arr length="3">
          <type>BATTERY_REPORTING_SCALE</type>
        </arr>
      </field>
      <field offset="64" name="AcOnLineWake">
        <type>SYSTEM_POWER_STATE</type>
      </field>
      <field offset="68" name="SoftLidWake">
        <type>SYSTEM_POWER_STATE</type>
      </field>
      <field offset="72" name="RtcWake">
        <type>SYSTEM_POWER_STATE</type>
      </field>
      <field offset="76" name="MinDeviceWakeState">
        <type>SYSTEM_POWER_STATE</type>
      </field>
      <field offset="80" name="DefaultLowLatencyWake">
        <type>SYSTEM_POWER_STATE</type>
      </field>
    </struct>
    <typedef name="SYSTEM_POWER_CAPABILITIES">
      <struct name="struct_39" />
    </typedef>
    <typedef name="PSYSTEM_POWER_CAPABILITIES">
      <ptr>
        <struct name="struct_39" />
      </ptr>
    </typedef>
    <struct name="struct_40">
      <field offset="0" name="AcOnLine">
        <type>BOOLEAN</type>
      </field>
      <field offset="1" name="BatteryPresent">
        <type>BOOLEAN</type>
      </field>
      <field offset="2" name="Charging">
        <type>BOOLEAN</type>
      </field>
      <field offset="3" name="Discharging">
        <type>BOOLEAN</type>
      </field>
      <field offset="4" name="Spare1">
        <arr length="4">
          <type>BOOLEAN</type>
        </arr>
      </field>
      <field offset="8" name="MaxCapacity">
        <type>DWORD</type>
      </field>
      <field offset="12" name="RemainingCapacity">
        <type>DWORD</type>
      </field>
      <field offset="16" name="Rate">
        <type>DWORD</type>
      </field>
      <field offset="20" name="EstimatedTime">
        <type>DWORD</type>
      </field>
      <field offset="24" name="DefaultAlert1">
        <type>DWORD</type>
      </field>
      <field offset="28" name="DefaultAlert2">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="SYSTEM_BATTERY_STATE">
      <struct name="struct_40" />
    </typedef>
    <typedef name="PSYSTEM_BATTERY_STATE">
      <ptr>
        <struct name="struct_40" />
      </ptr>
    </typedef>
    <struct name="_IMAGE_DOS_HEADER">
      <field offset="0" name="e_magic">
        <type>WORD</type>
      </field>
      <field offset="2" name="e_cblp">
        <type>WORD</type>
      </field>
      <field offset="4" name="e_cp">
        <type>WORD</type>
      </field>
      <field offset="6" name="e_crlc">
        <type>WORD</type>
      </field>
      <field offset="8" name="e_cparhdr">
        <type>WORD</type>
      </field>
      <field offset="10" name="e_minalloc">
        <type>WORD</type>
      </field>
      <field offset="12" name="e_maxalloc">
        <type>WORD</type>
      </field>
      <field offset="14" name="e_ss">
        <type>WORD</type>
      </field>
      <field offset="16" name="e_sp">
        <type>WORD</type>
      </field>
      <field offset="18" name="e_csum">
        <type>WORD</type>
      </field>
      <field offset="20" name="e_ip">
        <type>WORD</type>
      </field>
      <field offset="22" name="e_cs">
        <type>WORD</type>
      </field>
      <field offset="24" name="e_lfarlc">
        <type>WORD</type>
      </field>
      <field offset="26" name="e_ovno">
        <type>WORD</type>
      </field>
      <field offset="32" name="e_res">
        <arr length="4">
          <type>WORD</type>
        </arr>
      </field>
      <field offset="40" name="e_oemid">
        <type>WORD</type>
      </field>
      <field offset="42" name="e_oeminfo">
        <type>WORD</type>
      </field>
      <field offset="48" name="e_res2">
        <arr length="10">
          <type>WORD</type>
        </arr>
      </field>
      <field offset="68" name="e_lfanew">
        <type>LONG</type>
      </field>
    </struct>
    <typedef name="IMAGE_DOS_HEADER">
      <struct name="_IMAGE_DOS_HEADER" />
    </typedef>
    <typedef name="PIMAGE_DOS_HEADER">
      <ptr>
        <struct name="_IMAGE_DOS_HEADER" />
      </ptr>
    </typedef>
    <struct name="_IMAGE_OS2_HEADER">
      <field offset="0" name="ne_magic">
        <type>WORD</type>
      </field>
      <field offset="2" name="ne_ver">
        <type>CHAR</type>
      </field>
      <field offset="3" name="ne_rev">
        <type>CHAR</type>
      </field>
      <field offset="4" name="ne_enttab">
        <type>WORD</type>
      </field>
      <field offset="6" name="ne_cbenttab">
        <type>WORD</type>
      </field>
      <field offset="8" name="ne_crc">
        <type>LONG</type>
      </field>
      <field offset="12" name="ne_flags">
        <type>WORD</type>
      </field>
      <field offset="14" name="ne_autodata">
        <type>WORD</type>
      </field>
      <field offset="16" name="ne_heap">
        <type>WORD</type>
      </field>
      <field offset="18" name="ne_stack">
        <type>WORD</type>
      </field>
      <field offset="20" name="ne_csip">
        <type>LONG</type>
      </field>
      <field offset="24" name="ne_sssp">
        <type>LONG</type>
      </field>
      <field offset="28" name="ne_cseg">
        <type>WORD</type>
      </field>
      <field offset="30" name="ne_cmod">
        <type>WORD</type>
      </field>
      <field offset="32" name="ne_cbnrestab">
        <type>WORD</type>
      </field>
      <field offset="34" name="ne_segtab">
        <type>WORD</type>
      </field>
      <field offset="36" name="ne_rsrctab">
        <type>WORD</type>
      </field>
      <field offset="38" name="ne_restab">
        <type>WORD</type>
      </field>
      <field offset="40" name="ne_modtab">
        <type>WORD</type>
      </field>
      <field offset="42" name="ne_imptab">
        <type>WORD</type>
      </field>
      <field offset="44" name="ne_nrestab">
        <type>LONG</type>
      </field>
      <field offset="48" name="ne_cmovent">
        <type>WORD</type>
      </field>
      <field offset="50" name="ne_align">
        <type>WORD</type>
      </field>
      <field offset="52" name="ne_cres">
        <type>WORD</type>
      </field>
      <field offset="54" name="ne_exetyp">
        <type>BYTE</type>
      </field>
      <field offset="55" name="ne_flagsothers">
        <type>BYTE</type>
      </field>
      <field offset="56" name="ne_pretthunks">
        <type>WORD</type>
      </field>
      <field offset="58" name="ne_psegrefbytes">
        <type>WORD</type>
      </field>
      <field offset="60" name="ne_swaparea">
        <type>WORD</type>
      </field>
      <field offset="62" name="ne_expver">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="IMAGE_OS2_HEADER">
      <struct name="_IMAGE_OS2_HEADER" />
    </typedef>
    <typedef name="PIMAGE_OS2_HEADER">
      <ptr>
        <struct name="_IMAGE_OS2_HEADER" />
      </ptr>
    </typedef>
    <struct name="_IMAGE_VXD_HEADER">
      <field offset="0" name="e32_magic">
        <type>WORD</type>
      </field>
      <field offset="2" name="e32_border">
        <type>BYTE</type>
      </field>
      <field offset="3" name="e32_worder">
        <type>BYTE</type>
      </field>
      <field offset="4" name="e32_level">
        <type>DWORD</type>
      </field>
      <field offset="8" name="e32_cpu">
        <type>WORD</type>
      </field>
      <field offset="10" name="e32_os">
        <type>WORD</type>
      </field>
      <field offset="12" name="e32_ver">
        <type>DWORD</type>
      </field>
      <field offset="16" name="e32_mflags">
        <type>DWORD</type>
      </field>
      <field offset="20" name="e32_mpages">
        <type>DWORD</type>
      </field>
      <field offset="24" name="e32_startobj">
        <type>DWORD</type>
      </field>
      <field offset="28" name="e32_eip">
        <type>DWORD</type>
      </field>
      <field offset="32" name="e32_stackobj">
        <type>DWORD</type>
      </field>
      <field offset="36" name="e32_esp">
        <type>DWORD</type>
      </field>
      <field offset="40" name="e32_pagesize">
        <type>DWORD</type>
      </field>
      <field offset="44" name="e32_lastpagesize">
        <type>DWORD</type>
      </field>
      <field offset="48" name="e32_fixupsize">
        <type>DWORD</type>
      </field>
      <field offset="52" name="e32_fixupsum">
        <type>DWORD</type>
      </field>
      <field offset="56" name="e32_ldrsize">
        <type>DWORD</type>
      </field>
      <field offset="60" name="e32_ldrsum">
        <type>DWORD</type>
      </field>
      <field offset="64" name="e32_objtab">
        <type>DWORD</type>
      </field>
      <field offset="68" name="e32_objcnt">
        <type>DWORD</type>
      </field>
      <field offset="72" name="e32_objmap">
        <type>DWORD</type>
      </field>
      <field offset="76" name="e32_itermap">
        <type>DWORD</type>
      </field>
      <field offset="80" name="e32_rsrctab">
        <type>DWORD</type>
      </field>
      <field offset="84" name="e32_rsrccnt">
        <type>DWORD</type>
      </field>
      <field offset="88" name="e32_restab">
        <type>DWORD</type>
      </field>
      <field offset="92" name="e32_enttab">
        <type>DWORD</type>
      </field>
      <field offset="96" name="e32_dirtab">
        <type>DWORD</type>
      </field>
      <field offset="100" name="e32_dircnt">
        <type>DWORD</type>
      </field>
      <field offset="104" name="e32_fpagetab">
        <type>DWORD</type>
      </field>
      <field offset="108" name="e32_frectab">
        <type>DWORD</type>
      </field>
      <field offset="112" name="e32_impmod">
        <type>DWORD</type>
      </field>
      <field offset="116" name="e32_impmodcnt">
        <type>DWORD</type>
      </field>
      <field offset="120" name="e32_impproc">
        <type>DWORD</type>
      </field>
      <field offset="124" name="e32_pagesum">
        <type>DWORD</type>
      </field>
      <field offset="128" name="e32_datapage">
        <type>DWORD</type>
      </field>
      <field offset="132" name="e32_preload">
        <type>DWORD</type>
      </field>
      <field offset="136" name="e32_nrestab">
        <type>DWORD</type>
      </field>
      <field offset="140" name="e32_cbnrestab">
        <type>DWORD</type>
      </field>
      <field offset="144" name="e32_nressum">
        <type>DWORD</type>
      </field>
      <field offset="148" name="e32_autodata">
        <type>DWORD</type>
      </field>
      <field offset="152" name="e32_debuginfo">
        <type>DWORD</type>
      </field>
      <field offset="156" name="e32_debuglen">
        <type>DWORD</type>
      </field>
      <field offset="160" name="e32_instpreload">
        <type>DWORD</type>
      </field>
      <field offset="164" name="e32_instdemand">
        <type>DWORD</type>
      </field>
      <field offset="168" name="e32_heapsize">
        <type>DWORD</type>
      </field>
      <field offset="176" name="e32_res3">
        <arr length="12">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="188" name="e32_winresoff">
        <type>DWORD</type>
      </field>
      <field offset="192" name="e32_winreslen">
        <type>DWORD</type>
      </field>
      <field offset="196" name="e32_devid">
        <type>WORD</type>
      </field>
      <field offset="198" name="e32_ddkver">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="IMAGE_VXD_HEADER">
      <struct name="_IMAGE_VXD_HEADER" />
    </typedef>
    <typedef name="PIMAGE_VXD_HEADER">
      <ptr>
        <struct name="_IMAGE_VXD_HEADER" />
      </ptr>
    </typedef>
    <struct name="_IMAGE_FILE_HEADER">
      <field offset="0" name="Machine">
        <type>WORD</type>
      </field>
      <field offset="2" name="NumberOfSections">
        <type>WORD</type>
      </field>
      <field offset="4" name="TimeDateStamp">
        <type>DWORD</type>
      </field>
      <field offset="8" name="PointerToSymbolTable">
        <type>DWORD</type>
      </field>
      <field offset="12" name="NumberOfSymbols">
        <type>DWORD</type>
      </field>
      <field offset="16" name="SizeOfOptionalHeader">
        <type>WORD</type>
      </field>
      <field offset="18" name="Characteristics">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="IMAGE_FILE_HEADER">
      <struct name="_IMAGE_FILE_HEADER" />
    </typedef>
    <typedef name="PIMAGE_FILE_HEADER">
      <ptr>
        <struct name="_IMAGE_FILE_HEADER" />
      </ptr>
    </typedef>
    <struct name="_IMAGE_DATA_DIRECTORY">
      <field offset="0" name="VirtualAddress">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Size">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="IMAGE_DATA_DIRECTORY">
      <struct name="_IMAGE_DATA_DIRECTORY" />
    </typedef>
    <typedef name="PIMAGE_DATA_DIRECTORY">
      <ptr>
        <struct name="_IMAGE_DATA_DIRECTORY" />
      </ptr>
    </typedef>
    <struct name="_IMAGE_OPTIONAL_HEADER">
      <field offset="0" name="Magic">
        <type>WORD</type>
      </field>
      <field offset="2" name="MajorLinkerVersion">
        <type>BYTE</type>
      </field>
      <field offset="3" name="MinorLinkerVersion">
        <type>BYTE</type>
      </field>
      <field offset="4" name="SizeOfCode">
        <type>DWORD</type>
      </field>
      <field offset="8" name="SizeOfInitializedData">
        <type>DWORD</type>
      </field>
      <field offset="12" name="SizeOfUninitializedData">
        <type>DWORD</type>
      </field>
      <field offset="16" name="AddressOfEntryPoint">
        <type>DWORD</type>
      </field>
      <field offset="20" name="BaseOfCode">
        <type>DWORD</type>
      </field>
      <field offset="24" name="BaseOfData">
        <type>DWORD</type>
      </field>
      <field offset="28" name="ImageBase">
        <type>DWORD</type>
      </field>
      <field offset="32" name="SectionAlignment">
        <type>DWORD</type>
      </field>
      <field offset="36" name="FileAlignment">
        <type>DWORD</type>
      </field>
      <field offset="40" name="MajorOperatingSystemVersion">
        <type>WORD</type>
      </field>
      <field offset="42" name="MinorOperatingSystemVersion">
        <type>WORD</type>
      </field>
      <field offset="44" name="MajorImageVersion">
        <type>WORD</type>
      </field>
      <field offset="46" name="MinorImageVersion">
        <type>WORD</type>
      </field>
      <field offset="48" name="MajorSubsystemVersion">
        <type>WORD</type>
      </field>
      <field offset="50" name="MinorSubsystemVersion">
        <type>WORD</type>
      </field>
      <field offset="52" name="Win32VersionValue">
        <type>DWORD</type>
      </field>
      <field offset="56" name="SizeOfImage">
        <type>DWORD</type>
      </field>
      <field offset="60" name="SizeOfHeaders">
        <type>DWORD</type>
      </field>
      <field offset="64" name="CheckSum">
        <type>DWORD</type>
      </field>
      <field offset="68" name="Subsystem">
        <type>WORD</type>
      </field>
      <field offset="70" name="DllCharacteristics">
        <type>WORD</type>
      </field>
      <field offset="72" name="SizeOfStackReserve">
        <type>DWORD</type>
      </field>
      <field offset="76" name="SizeOfStackCommit">
        <type>DWORD</type>
      </field>
      <field offset="80" name="SizeOfHeapReserve">
        <type>DWORD</type>
      </field>
      <field offset="84" name="SizeOfHeapCommit">
        <type>DWORD</type>
      </field>
      <field offset="88" name="LoaderFlags">
        <type>DWORD</type>
      </field>
      <field offset="92" name="NumberOfRvaAndSizes">
        <type>DWORD</type>
      </field>
      <field offset="96" name="DataDirectory">
        <arr length="16">
          <type>IMAGE_DATA_DIRECTORY</type>
        </arr>
      </field>
    </struct>
    <typedef name="IMAGE_OPTIONAL_HEADER32">
      <struct name="_IMAGE_OPTIONAL_HEADER" />
    </typedef>
    <typedef name="PIMAGE_OPTIONAL_HEADER32">
      <ptr>
        <struct name="_IMAGE_OPTIONAL_HEADER" />
      </ptr>
    </typedef>
    <struct name="_IMAGE_ROM_OPTIONAL_HEADER">
      <field offset="0" name="Magic">
        <type>WORD</type>
      </field>
      <field offset="2" name="MajorLinkerVersion">
        <type>BYTE</type>
      </field>
      <field offset="3" name="MinorLinkerVersion">
        <type>BYTE</type>
      </field>
      <field offset="4" name="SizeOfCode">
        <type>DWORD</type>
      </field>
      <field offset="8" name="SizeOfInitializedData">
        <type>DWORD</type>
      </field>
      <field offset="12" name="SizeOfUninitializedData">
        <type>DWORD</type>
      </field>
      <field offset="16" name="AddressOfEntryPoint">
        <type>DWORD</type>
      </field>
      <field offset="20" name="BaseOfCode">
        <type>DWORD</type>
      </field>
      <field offset="24" name="BaseOfData">
        <type>DWORD</type>
      </field>
      <field offset="28" name="BaseOfBss">
        <type>DWORD</type>
      </field>
      <field offset="32" name="GprMask">
        <type>DWORD</type>
      </field>
      <field offset="40" name="CprMask">
        <arr length="4">
          <type>DWORD</type>
        </arr>
      </field>
      <field offset="56" name="GpValue">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="IMAGE_ROM_OPTIONAL_HEADER">
      <struct name="_IMAGE_ROM_OPTIONAL_HEADER" />
    </typedef>
    <typedef name="PIMAGE_ROM_OPTIONAL_HEADER">
      <ptr>
        <struct name="_IMAGE_ROM_OPTIONAL_HEADER" />
      </ptr>
    </typedef>
    <struct name="_IMAGE_OPTIONAL_HEADER64">
      <field offset="0" name="Magic">
        <type>WORD</type>
      </field>
      <field offset="2" name="MajorLinkerVersion">
        <type>BYTE</type>
      </field>
      <field offset="3" name="MinorLinkerVersion">
        <type>BYTE</type>
      </field>
      <field offset="4" name="SizeOfCode">
        <type>DWORD</type>
      </field>
      <field offset="8" name="SizeOfInitializedData">
        <type>DWORD</type>
      </field>
      <field offset="12" name="SizeOfUninitializedData">
        <type>DWORD</type>
      </field>
      <field offset="16" name="AddressOfEntryPoint">
        <type>DWORD</type>
      </field>
      <field offset="20" name="BaseOfCode">
        <type>DWORD</type>
      </field>
      <field offset="24" name="ImageBase">
        <type>ULONGLONG</type>
      </field>
      <field offset="32" name="SectionAlignment">
        <type>DWORD</type>
      </field>
      <field offset="36" name="FileAlignment">
        <type>DWORD</type>
      </field>
      <field offset="40" name="MajorOperatingSystemVersion">
        <type>WORD</type>
      </field>
      <field offset="42" name="MinorOperatingSystemVersion">
        <type>WORD</type>
      </field>
      <field offset="44" name="MajorImageVersion">
        <type>WORD</type>
      </field>
      <field offset="46" name="MinorImageVersion">
        <type>WORD</type>
      </field>
      <field offset="48" name="MajorSubsystemVersion">
        <type>WORD</type>
      </field>
      <field offset="50" name="MinorSubsystemVersion">
        <type>WORD</type>
      </field>
      <field offset="52" name="Win32VersionValue">
        <type>DWORD</type>
      </field>
      <field offset="56" name="SizeOfImage">
        <type>DWORD</type>
      </field>
      <field offset="60" name="SizeOfHeaders">
        <type>DWORD</type>
      </field>
      <field offset="64" name="CheckSum">
        <type>DWORD</type>
      </field>
      <field offset="68" name="Subsystem">
        <type>WORD</type>
      </field>
      <field offset="70" name="DllCharacteristics">
        <type>WORD</type>
      </field>
      <field offset="72" name="SizeOfStackReserve">
        <type>ULONGLONG</type>
      </field>
      <field offset="80" name="SizeOfStackCommit">
        <type>ULONGLONG</type>
      </field>
      <field offset="88" name="SizeOfHeapReserve">
        <type>ULONGLONG</type>
      </field>
      <field offset="96" name="SizeOfHeapCommit">
        <type>ULONGLONG</type>
      </field>
      <field offset="104" name="LoaderFlags">
        <type>DWORD</type>
      </field>
      <field offset="108" name="NumberOfRvaAndSizes">
        <type>DWORD</type>
      </field>
      <field offset="112" name="DataDirectory">
        <arr length="16">
          <type>IMAGE_DATA_DIRECTORY</type>
        </arr>
      </field>
    </struct>
    <typedef name="IMAGE_OPTIONAL_HEADER64">
      <struct name="_IMAGE_OPTIONAL_HEADER64" />
    </typedef>
    <typedef name="PIMAGE_OPTIONAL_HEADER64">
      <ptr>
        <struct name="_IMAGE_OPTIONAL_HEADER64" />
      </ptr>
    </typedef>
    <typedef name="IMAGE_OPTIONAL_HEADER">
      <type>IMAGE_OPTIONAL_HEADER32</type>
    </typedef>
    <typedef name="PIMAGE_OPTIONAL_HEADER">
      <type>PIMAGE_OPTIONAL_HEADER32</type>
    </typedef>
    <struct name="_IMAGE_NT_HEADERS64">
      <field offset="0" name="Signature">
        <type>DWORD</type>
      </field>
      <field offset="8" name="FileHeader">
        <type>IMAGE_FILE_HEADER</type>
      </field>
      <field offset="32" name="OptionalHeader">
        <type>IMAGE_OPTIONAL_HEADER64</type>
      </field>
    </struct>
    <typedef name="IMAGE_NT_HEADERS64">
      <struct name="_IMAGE_NT_HEADERS64" />
    </typedef>
    <typedef name="PIMAGE_NT_HEADERS64">
      <ptr>
        <struct name="_IMAGE_NT_HEADERS64" />
      </ptr>
    </typedef>
    <struct name="_IMAGE_NT_HEADERS">
      <field offset="0" name="Signature">
        <type>DWORD</type>
      </field>
      <field offset="8" name="FileHeader">
        <type>IMAGE_FILE_HEADER</type>
      </field>
      <field offset="32" name="OptionalHeader">
        <type>IMAGE_OPTIONAL_HEADER32</type>
      </field>
    </struct>
    <typedef name="IMAGE_NT_HEADERS32">
      <struct name="_IMAGE_NT_HEADERS" />
    </typedef>
    <typedef name="PIMAGE_NT_HEADERS32">
      <ptr>
        <struct name="_IMAGE_NT_HEADERS" />
      </ptr>
    </typedef>
    <struct name="_IMAGE_ROM_HEADERS">
      <field offset="0" name="FileHeader">
        <type>IMAGE_FILE_HEADER</type>
      </field>
      <field offset="24" name="OptionalHeader">
        <type>IMAGE_ROM_OPTIONAL_HEADER</type>
      </field>
    </struct>
    <typedef name="IMAGE_ROM_HEADERS">
      <struct name="_IMAGE_ROM_HEADERS" />
    </typedef>
    <typedef name="PIMAGE_ROM_HEADERS">
      <ptr>
        <struct name="_IMAGE_ROM_HEADERS" />
      </ptr>
    </typedef>
    <typedef name="IMAGE_NT_HEADERS">
      <type>IMAGE_NT_HEADERS32</type>
    </typedef>
    <typedef name="PIMAGE_NT_HEADERS">
      <type>PIMAGE_NT_HEADERS32</type>
    </typedef>
    <struct name="ANON_OBJECT_HEADER">
      <field offset="0" name="Sig1">
        <type>WORD</type>
      </field>
      <field offset="2" name="Sig2">
        <type>WORD</type>
      </field>
      <field offset="4" name="Version">
        <type>WORD</type>
      </field>
      <field offset="6" name="Machine">
        <type>WORD</type>
      </field>
      <field offset="8" name="TimeDateStamp">
        <type>DWORD</type>
      </field>
      <field offset="16" name="ClassID">
        <type>CLSID</type>
      </field>
      <field offset="32" name="SizeOfData">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="ANON_OBJECT_HEADER">
      <struct name="ANON_OBJECT_HEADER" />
    </typedef>
    <struct name="ANON_OBJECT_HEADER_V2">
      <field offset="0" name="Sig1">
        <type>WORD</type>
      </field>
      <field offset="2" name="Sig2">
        <type>WORD</type>
      </field>
      <field offset="4" name="Version">
        <type>WORD</type>
      </field>
      <field offset="6" name="Machine">
        <type>WORD</type>
      </field>
      <field offset="8" name="TimeDateStamp">
        <type>DWORD</type>
      </field>
      <field offset="16" name="ClassID">
        <type>CLSID</type>
      </field>
      <field offset="32" name="SizeOfData">
        <type>DWORD</type>
      </field>
      <field offset="36" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="40" name="MetaDataSize">
        <type>DWORD</type>
      </field>
      <field offset="44" name="MetaDataOffset">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="ANON_OBJECT_HEADER_V2">
      <struct name="ANON_OBJECT_HEADER_V2" />
    </typedef>
    <struct name="ANON_OBJECT_HEADER_BIGOBJ">
      <field offset="0" name="Sig1">
        <type>WORD</type>
      </field>
      <field offset="2" name="Sig2">
        <type>WORD</type>
      </field>
      <field offset="4" name="Version">
        <type>WORD</type>
      </field>
      <field offset="6" name="Machine">
        <type>WORD</type>
      </field>
      <field offset="8" name="TimeDateStamp">
        <type>DWORD</type>
      </field>
      <field offset="16" name="ClassID">
        <type>CLSID</type>
      </field>
      <field offset="32" name="SizeOfData">
        <type>DWORD</type>
      </field>
      <field offset="36" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="40" name="MetaDataSize">
        <type>DWORD</type>
      </field>
      <field offset="44" name="MetaDataOffset">
        <type>DWORD</type>
      </field>
      <field offset="48" name="NumberOfSections">
        <type>DWORD</type>
      </field>
      <field offset="52" name="PointerToSymbolTable">
        <type>DWORD</type>
      </field>
      <field offset="56" name="NumberOfSymbols">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="ANON_OBJECT_HEADER_BIGOBJ">
      <struct name="ANON_OBJECT_HEADER_BIGOBJ" />
    </typedef>
    <struct name="_IMAGE_SECTION_HEADER">
      <field offset="0" name="Name">
        <arr length="8">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="8" name="Misc">
        <union>
          <alt name="PhysicalAddress">
            <type>DWORD</type>
          </alt>
          <alt name="VirtualSize">
            <type>DWORD</type>
          </alt>
        </union>
      </field>
      <field offset="12" name="VirtualAddress">
        <type>DWORD</type>
      </field>
      <field offset="16" name="SizeOfRawData">
        <type>DWORD</type>
      </field>
      <field offset="20" name="PointerToRawData">
        <type>DWORD</type>
      </field>
      <field offset="24" name="PointerToRelocations">
        <type>DWORD</type>
      </field>
      <field offset="28" name="PointerToLinenumbers">
        <type>DWORD</type>
      </field>
      <field offset="32" name="NumberOfRelocations">
        <type>WORD</type>
      </field>
      <field offset="34" name="NumberOfLinenumbers">
        <type>WORD</type>
      </field>
      <field offset="36" name="Characteristics">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="IMAGE_SECTION_HEADER">
      <struct name="_IMAGE_SECTION_HEADER" />
    </typedef>
    <typedef name="PIMAGE_SECTION_HEADER">
      <ptr>
        <struct name="_IMAGE_SECTION_HEADER" />
      </ptr>
    </typedef>
    <struct name="struct_41">
      <field offset="0" name="Short">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Long">
        <type>DWORD</type>
      </field>
    </struct>
    <struct name="_IMAGE_SYMBOL">
      <field offset="0" name="N">
        <union>
          <alt name="ShortName">
            <arr length="8">
              <type>BYTE</type>
            </arr>
          </alt>
          <alt name="Name">
            <struct name="struct_41" />
          </alt>
          <alt name="LongName">
            <arr length="2">
              <type>DWORD</type>
            </arr>
          </alt>
        </union>
      </field>
      <field offset="8" name="Value">
        <type>DWORD</type>
      </field>
      <field offset="12" name="SectionNumber">
        <type>SHORT</type>
      </field>
      <field offset="14" name="Type">
        <type>WORD</type>
      </field>
      <field offset="16" name="StorageClass">
        <type>BYTE</type>
      </field>
      <field offset="17" name="NumberOfAuxSymbols">
        <type>BYTE</type>
      </field>
    </struct>
    <typedef name="IMAGE_SYMBOL">
      <struct name="_IMAGE_SYMBOL" />
    </typedef>
    <typedef name="PIMAGE_SYMBOL">
      <ptr>
        <type>IMAGE_SYMBOL</type>
      </ptr>
    </typedef>
    <struct name="struct_42">
      <field offset="0" name="Short">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Long">
        <type>DWORD</type>
      </field>
    </struct>
    <struct name="_IMAGE_SYMBOL_EX">
      <field offset="0" name="N">
        <union>
          <alt name="ShortName">
            <arr length="8">
              <type>BYTE</type>
            </arr>
          </alt>
          <alt name="Name">
            <struct name="struct_42" />
          </alt>
          <alt name="LongName">
            <arr length="2">
              <type>DWORD</type>
            </arr>
          </alt>
        </union>
      </field>
      <field offset="8" name="Value">
        <type>DWORD</type>
      </field>
      <field offset="12" name="SectionNumber">
        <type>LONG</type>
      </field>
      <field offset="16" name="Type">
        <type>WORD</type>
      </field>
      <field offset="18" name="StorageClass">
        <type>BYTE</type>
      </field>
      <field offset="19" name="NumberOfAuxSymbols">
        <type>BYTE</type>
      </field>
    </struct>
    <typedef name="IMAGE_SYMBOL_EX">
      <struct name="_IMAGE_SYMBOL_EX" />
    </typedef>
    <typedef name="PIMAGE_SYMBOL_EX">
      <ptr>
        <type>IMAGE_SYMBOL_EX</type>
      </ptr>
    </typedef>
    <struct name="IMAGE_AUX_SYMBOL_TOKEN_DEF">
      <field offset="0" name="bAuxType">
        <type>BYTE</type>
      </field>
      <field offset="1" name="bReserved">
        <type>BYTE</type>
      </field>
      <field offset="4" name="SymbolTableIndex">
        <type>DWORD</type>
      </field>
      <field offset="8" name="rgbReserved">
        <arr length="12">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="IMAGE_AUX_SYMBOL_TOKEN_DEF">
      <struct name="IMAGE_AUX_SYMBOL_TOKEN_DEF" />
    </typedef>
    <typedef name="PIMAGE_AUX_SYMBOL_TOKEN_DEF">
      <ptr>
        <type>IMAGE_AUX_SYMBOL_TOKEN_DEF</type>
      </ptr>
    </typedef>
    <struct name="struct_44">
      <field offset="0" name="Linenumber">
        <type>WORD</type>
      </field>
      <field offset="2" name="Size">
        <type>WORD</type>
      </field>
    </struct>
    <struct name="struct_45">
      <field offset="0" name="PointerToLinenumber">
        <type>DWORD</type>
      </field>
      <field offset="4" name="PointerToNextFunction">
        <type>DWORD</type>
      </field>
    </struct>
    <struct name="struct_46">
      <field offset="0" name="Dimension">
        <arr length="4">
          <type>WORD</type>
        </arr>
      </field>
    </struct>
    <struct name="struct_43">
      <field offset="0" name="TagIndex">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Misc">
        <union>
          <alt name="LnSz">
            <struct name="struct_44" />
          </alt>
          <alt name="TotalSize">
            <type>DWORD</type>
          </alt>
        </union>
      </field>
      <field offset="8" name="FcnAry">
        <union>
          <alt name="Function">
            <struct name="struct_45" />
          </alt>
          <alt name="Array">
            <struct name="struct_46" />
          </alt>
        </union>
      </field>
      <field offset="16" name="TvIndex">
        <type>WORD</type>
      </field>
    </struct>
    <struct name="struct_47">
      <field offset="0" name="Name">
        <arr length="18">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <struct name="struct_48">
      <field offset="0" name="Length">
        <type>DWORD</type>
      </field>
      <field offset="4" name="NumberOfRelocations">
        <type>WORD</type>
      </field>
      <field offset="6" name="NumberOfLinenumbers">
        <type>WORD</type>
      </field>
      <field offset="8" name="CheckSum">
        <type>DWORD</type>
      </field>
      <field offset="12" name="Number">
        <type>SHORT</type>
      </field>
      <field offset="14" name="Selection">
        <type>BYTE</type>
      </field>
      <field offset="15" name="bReserved">
        <type>BYTE</type>
      </field>
      <field offset="16" name="HighNumber">
        <type>SHORT</type>
      </field>
    </struct>
    <struct name="struct_49">
      <field offset="0" name="crc">
        <type>DWORD</type>
      </field>
      <field offset="8" name="rgbReserved">
        <arr length="14">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <union name="_IMAGE_AUX_SYMBOL">
      <alt name="Sym">
        <struct name="struct_43" />
      </alt>
      <alt name="File">
        <struct name="struct_47" />
      </alt>
      <alt name="Section">
        <struct name="struct_48" />
      </alt>
      <alt name="TokenDef">
        <type>IMAGE_AUX_SYMBOL_TOKEN_DEF</type>
      </alt>
      <alt name="CRC">
        <struct name="struct_49" />
      </alt>
    </union>
    <typedef name="IMAGE_AUX_SYMBOL">
      <union name="_IMAGE_AUX_SYMBOL" />
    </typedef>
    <typedef name="PIMAGE_AUX_SYMBOL">
      <ptr>
        <type>IMAGE_AUX_SYMBOL</type>
      </ptr>
    </typedef>
    <struct name="struct_50">
      <field offset="0" name="WeakDefaultSymIndex">
        <type>DWORD</type>
      </field>
      <field offset="4" name="WeakSearchType">
        <type>DWORD</type>
      </field>
      <field offset="8" name="rgbReserved">
        <arr length="12">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <struct name="struct_51">
      <field offset="0" name="Name">
        <arr length="4">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <struct name="struct_52">
      <field offset="0" name="Length">
        <type>DWORD</type>
      </field>
      <field offset="4" name="NumberOfRelocations">
        <type>WORD</type>
      </field>
      <field offset="6" name="NumberOfLinenumbers">
        <type>WORD</type>
      </field>
      <field offset="8" name="CheckSum">
        <type>DWORD</type>
      </field>
      <field offset="12" name="Number">
        <type>SHORT</type>
      </field>
      <field offset="14" name="Selection">
        <type>BYTE</type>
      </field>
      <field offset="15" name="bReserved">
        <type>BYTE</type>
      </field>
      <field offset="16" name="HighNumber">
        <type>SHORT</type>
      </field>
      <field offset="18" name="rgbReserved">
        <arr length="2">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <struct name="struct_53">
      <field offset="0" name="TokenDef">
        <type>IMAGE_AUX_SYMBOL_TOKEN_DEF</type>
      </field>
      <field offset="18" name="rgbReserved">
        <arr length="2">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <struct name="struct_54">
      <field offset="0" name="crc">
        <type>DWORD</type>
      </field>
      <field offset="8" name="rgbReserved">
        <arr length="16">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <union name="_IMAGE_AUX_SYMBOL_EX">
      <alt name="Sym">
        <struct name="struct_50" />
      </alt>
      <alt name="File">
        <struct name="struct_51" />
      </alt>
      <alt name="Section">
        <struct name="struct_52" />
      </alt>
      <alt>
        <struct name="struct_53" />
      </alt>
      <alt name="CRC">
        <struct name="struct_54" />
      </alt>
    </union>
    <typedef name="IMAGE_AUX_SYMBOL_EX">
      <union name="_IMAGE_AUX_SYMBOL_EX" />
    </typedef>
    <typedef name="PIMAGE_AUX_SYMBOL_EX">
      <ptr>
        <type>IMAGE_AUX_SYMBOL_EX</type>
      </ptr>
    </typedef>
    <enum name="IMAGE_AUX_SYMBOL_TYPE">
      <member name="IMAGE_AUX_SYMBOL_TYPE_TOKEN_DEF" value="1" />
    </enum>
    <typedef name="IMAGE_AUX_SYMBOL_TYPE">
      <enum name="IMAGE_AUX_SYMBOL_TYPE" />
    </typedef>
    <struct name="_IMAGE_RELOCATION">
      <field offset="0">
        <union>
          <alt name="VirtualAddress">
            <type>DWORD</type>
          </alt>
          <alt name="RelocCount">
            <type>DWORD</type>
          </alt>
        </union>
      </field>
      <field offset="4" name="SymbolTableIndex">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Type">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="IMAGE_RELOCATION">
      <struct name="_IMAGE_RELOCATION" />
    </typedef>
    <typedef name="PIMAGE_RELOCATION">
      <ptr>
        <type>IMAGE_RELOCATION</type>
      </ptr>
    </typedef>
    <struct name="_IMAGE_LINENUMBER">
      <field offset="0" name="Type">
        <union>
          <alt name="SymbolTableIndex">
            <type>DWORD</type>
          </alt>
          <alt name="VirtualAddress">
            <type>DWORD</type>
          </alt>
        </union>
      </field>
      <field offset="4" name="Linenumber">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="IMAGE_LINENUMBER">
      <struct name="_IMAGE_LINENUMBER" />
    </typedef>
    <typedef name="PIMAGE_LINENUMBER">
      <ptr>
        <type>IMAGE_LINENUMBER</type>
      </ptr>
    </typedef>
    <struct name="_IMAGE_BASE_RELOCATION">
      <field offset="0" name="VirtualAddress">
        <type>DWORD</type>
      </field>
      <field offset="4" name="SizeOfBlock">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="IMAGE_BASE_RELOCATION">
      <struct name="_IMAGE_BASE_RELOCATION" />
    </typedef>
    <typedef name="PIMAGE_BASE_RELOCATION">
      <ptr>
        <type>IMAGE_BASE_RELOCATION</type>
      </ptr>
    </typedef>
    <struct name="_IMAGE_ARCHIVE_MEMBER_HEADER">
      <field offset="0" name="Name">
        <arr length="16">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="16" name="Date">
        <arr length="12">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="30" name="UserID">
        <arr length="6">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="36" name="GroupID">
        <arr length="6">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="48" name="Mode">
        <arr length="8">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="56" name="Size">
        <arr length="10">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="66" name="EndHeader">
        <arr length="2">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="IMAGE_ARCHIVE_MEMBER_HEADER">
      <struct name="_IMAGE_ARCHIVE_MEMBER_HEADER" />
    </typedef>
    <typedef name="PIMAGE_ARCHIVE_MEMBER_HEADER">
      <ptr>
        <struct name="_IMAGE_ARCHIVE_MEMBER_HEADER" />
      </ptr>
    </typedef>
    <struct name="_IMAGE_EXPORT_DIRECTORY">
      <field offset="0" name="Characteristics">
        <type>DWORD</type>
      </field>
      <field offset="4" name="TimeDateStamp">
        <type>DWORD</type>
      </field>
      <field offset="8" name="MajorVersion">
        <type>WORD</type>
      </field>
      <field offset="10" name="MinorVersion">
        <type>WORD</type>
      </field>
      <field offset="12" name="Name">
        <type>DWORD</type>
      </field>
      <field offset="16" name="Base">
        <type>DWORD</type>
      </field>
      <field offset="20" name="NumberOfFunctions">
        <type>DWORD</type>
      </field>
      <field offset="24" name="NumberOfNames">
        <type>DWORD</type>
      </field>
      <field offset="28" name="AddressOfFunctions">
        <type>DWORD</type>
      </field>
      <field offset="32" name="AddressOfNames">
        <type>DWORD</type>
      </field>
      <field offset="36" name="AddressOfNameOrdinals">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="IMAGE_EXPORT_DIRECTORY">
      <struct name="_IMAGE_EXPORT_DIRECTORY" />
    </typedef>
    <typedef name="PIMAGE_EXPORT_DIRECTORY">
      <ptr>
        <struct name="_IMAGE_EXPORT_DIRECTORY" />
      </ptr>
    </typedef>
    <struct name="_IMAGE_IMPORT_BY_NAME">
      <field offset="0" name="Hint">
        <type>WORD</type>
      </field>
      <field offset="2" name="Name">
        <arr length="1">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="IMAGE_IMPORT_BY_NAME">
      <struct name="_IMAGE_IMPORT_BY_NAME" />
    </typedef>
    <typedef name="PIMAGE_IMPORT_BY_NAME">
      <ptr>
        <struct name="_IMAGE_IMPORT_BY_NAME" />
      </ptr>
    </typedef>
    <struct name="_IMAGE_THUNK_DATA64">
      <field offset="0" name="u1">
        <union>
          <alt name="ForwarderString">
            <type>ULONGLONG</type>
          </alt>
          <alt name="Function">
            <type>ULONGLONG</type>
          </alt>
          <alt name="Ordinal">
            <type>ULONGLONG</type>
          </alt>
          <alt name="AddressOfData">
            <type>ULONGLONG</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="IMAGE_THUNK_DATA64">
      <struct name="_IMAGE_THUNK_DATA64" />
    </typedef>
    <typedef name="PIMAGE_THUNK_DATA64">
      <ptr>
        <type>IMAGE_THUNK_DATA64</type>
      </ptr>
    </typedef>
    <struct name="_IMAGE_THUNK_DATA32">
      <field offset="0" name="u1">
        <union>
          <alt name="ForwarderString">
            <type>DWORD</type>
          </alt>
          <alt name="Function">
            <type>DWORD</type>
          </alt>
          <alt name="Ordinal">
            <type>DWORD</type>
          </alt>
          <alt name="AddressOfData">
            <type>DWORD</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="IMAGE_THUNK_DATA32">
      <struct name="_IMAGE_THUNK_DATA32" />
    </typedef>
    <typedef name="PIMAGE_THUNK_DATA32">
      <ptr>
        <type>IMAGE_THUNK_DATA32</type>
      </ptr>
    </typedef>
    <typedef name="PIMAGE_TLS_CALLBACK">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="DllHandle">
            <type>PVOID</type>
            <stack size="4" />
          </arg>
          <arg name="Reason">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="Reserved">
            <type>PVOID</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="_IMAGE_TLS_DIRECTORY64">
      <field offset="0" name="StartAddressOfRawData">
        <type>ULONGLONG</type>
      </field>
      <field offset="8" name="EndAddressOfRawData">
        <type>ULONGLONG</type>
      </field>
      <field offset="16" name="AddressOfIndex">
        <type>ULONGLONG</type>
      </field>
      <field offset="24" name="AddressOfCallBacks">
        <type>ULONGLONG</type>
      </field>
      <field offset="32" name="SizeOfZeroFill">
        <type>DWORD</type>
      </field>
      <field offset="36" name="Characteristics">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="IMAGE_TLS_DIRECTORY64">
      <struct name="_IMAGE_TLS_DIRECTORY64" />
    </typedef>
    <typedef name="PIMAGE_TLS_DIRECTORY64">
      <ptr>
        <type>IMAGE_TLS_DIRECTORY64</type>
      </ptr>
    </typedef>
    <struct name="_IMAGE_TLS_DIRECTORY32">
      <field offset="0" name="StartAddressOfRawData">
        <type>DWORD</type>
      </field>
      <field offset="4" name="EndAddressOfRawData">
        <type>DWORD</type>
      </field>
      <field offset="8" name="AddressOfIndex">
        <type>DWORD</type>
      </field>
      <field offset="12" name="AddressOfCallBacks">
        <type>DWORD</type>
      </field>
      <field offset="16" name="SizeOfZeroFill">
        <type>DWORD</type>
      </field>
      <field offset="20" name="Characteristics">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="IMAGE_TLS_DIRECTORY32">
      <struct name="_IMAGE_TLS_DIRECTORY32" />
    </typedef>
    <typedef name="PIMAGE_TLS_DIRECTORY32">
      <ptr>
        <type>IMAGE_TLS_DIRECTORY32</type>
      </ptr>
    </typedef>
    <typedef name="IMAGE_THUNK_DATA">
      <type>IMAGE_THUNK_DATA32</type>
    </typedef>
    <typedef name="PIMAGE_THUNK_DATA">
      <type>PIMAGE_THUNK_DATA32</type>
    </typedef>
    <typedef name="IMAGE_TLS_DIRECTORY">
      <type>IMAGE_TLS_DIRECTORY32</type>
    </typedef>
    <typedef name="PIMAGE_TLS_DIRECTORY">
      <type>PIMAGE_TLS_DIRECTORY32</type>
    </typedef>
    <struct name="_IMAGE_IMPORT_DESCRIPTOR">
      <field offset="0">
        <union>
          <alt name="Characteristics">
            <type>DWORD</type>
          </alt>
          <alt name="OriginalFirstThunk">
            <type>DWORD</type>
          </alt>
        </union>
      </field>
      <field offset="4" name="TimeDateStamp">
        <type>DWORD</type>
      </field>
      <field offset="8" name="ForwarderChain">
        <type>DWORD</type>
      </field>
      <field offset="12" name="Name">
        <type>DWORD</type>
      </field>
      <field offset="16" name="FirstThunk">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="IMAGE_IMPORT_DESCRIPTOR">
      <struct name="_IMAGE_IMPORT_DESCRIPTOR" />
    </typedef>
    <typedef name="PIMAGE_IMPORT_DESCRIPTOR">
      <ptr>
        <type>IMAGE_IMPORT_DESCRIPTOR</type>
      </ptr>
    </typedef>
    <struct name="_IMAGE_BOUND_IMPORT_DESCRIPTOR">
      <field offset="0" name="TimeDateStamp">
        <type>DWORD</type>
      </field>
      <field offset="4" name="OffsetModuleName">
        <type>WORD</type>
      </field>
      <field offset="6" name="NumberOfModuleForwarderRefs">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="IMAGE_BOUND_IMPORT_DESCRIPTOR">
      <struct name="_IMAGE_BOUND_IMPORT_DESCRIPTOR" />
    </typedef>
    <typedef name="PIMAGE_BOUND_IMPORT_DESCRIPTOR">
      <ptr>
        <struct name="_IMAGE_BOUND_IMPORT_DESCRIPTOR" />
      </ptr>
    </typedef>
    <struct name="_IMAGE_BOUND_FORWARDER_REF">
      <field offset="0" name="TimeDateStamp">
        <type>DWORD</type>
      </field>
      <field offset="4" name="OffsetModuleName">
        <type>WORD</type>
      </field>
      <field offset="6" name="Reserved">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="IMAGE_BOUND_FORWARDER_REF">
      <struct name="_IMAGE_BOUND_FORWARDER_REF" />
    </typedef>
    <typedef name="PIMAGE_BOUND_FORWARDER_REF">
      <ptr>
        <struct name="_IMAGE_BOUND_FORWARDER_REF" />
      </ptr>
    </typedef>
    <struct name="_IMAGE_RESOURCE_DIRECTORY">
      <field offset="0" name="Characteristics">
        <type>DWORD</type>
      </field>
      <field offset="4" name="TimeDateStamp">
        <type>DWORD</type>
      </field>
      <field offset="8" name="MajorVersion">
        <type>WORD</type>
      </field>
      <field offset="10" name="MinorVersion">
        <type>WORD</type>
      </field>
      <field offset="12" name="NumberOfNamedEntries">
        <type>WORD</type>
      </field>
      <field offset="14" name="NumberOfIdEntries">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="IMAGE_RESOURCE_DIRECTORY">
      <struct name="_IMAGE_RESOURCE_DIRECTORY" />
    </typedef>
    <typedef name="PIMAGE_RESOURCE_DIRECTORY">
      <ptr>
        <struct name="_IMAGE_RESOURCE_DIRECTORY" />
      </ptr>
    </typedef>
    <struct name="struct_55">
      <field offset="0" name="NameOffset">
        <type>DWORD</type>
      </field>
      <field offset="4" name="NameIsString">
        <type>DWORD</type>
      </field>
    </struct>
    <struct name="struct_56">
      <field offset="0" name="OffsetToDirectory">
        <type>DWORD</type>
      </field>
      <field offset="4" name="DataIsDirectory">
        <type>DWORD</type>
      </field>
    </struct>
    <struct name="_IMAGE_RESOURCE_DIRECTORY_ENTRY">
      <field offset="0">
        <union>
          <alt>
            <struct name="struct_55" />
          </alt>
          <alt name="Name">
            <type>DWORD</type>
          </alt>
          <alt name="Id">
            <type>WORD</type>
          </alt>
        </union>
      </field>
      <field offset="8">
        <union>
          <alt name="OffsetToData">
            <type>DWORD</type>
          </alt>
          <alt>
            <struct name="struct_56" />
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="IMAGE_RESOURCE_DIRECTORY_ENTRY">
      <struct name="_IMAGE_RESOURCE_DIRECTORY_ENTRY" />
    </typedef>
    <typedef name="PIMAGE_RESOURCE_DIRECTORY_ENTRY">
      <ptr>
        <struct name="_IMAGE_RESOURCE_DIRECTORY_ENTRY" />
      </ptr>
    </typedef>
    <struct name="_IMAGE_RESOURCE_DIRECTORY_STRING">
      <field offset="0" name="Length">
        <type>WORD</type>
      </field>
      <field offset="2" name="NameString">
        <arr length="1">
          <type>CHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="IMAGE_RESOURCE_DIRECTORY_STRING">
      <struct name="_IMAGE_RESOURCE_DIRECTORY_STRING" />
    </typedef>
    <typedef name="PIMAGE_RESOURCE_DIRECTORY_STRING">
      <ptr>
        <struct name="_IMAGE_RESOURCE_DIRECTORY_STRING" />
      </ptr>
    </typedef>
    <struct name="_IMAGE_RESOURCE_DIR_STRING_U">
      <field offset="0" name="Length">
        <type>WORD</type>
      </field>
      <field offset="2" name="NameString">
        <arr length="1">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="IMAGE_RESOURCE_DIR_STRING_U">
      <struct name="_IMAGE_RESOURCE_DIR_STRING_U" />
    </typedef>
    <typedef name="PIMAGE_RESOURCE_DIR_STRING_U">
      <ptr>
        <struct name="_IMAGE_RESOURCE_DIR_STRING_U" />
      </ptr>
    </typedef>
    <struct name="_IMAGE_RESOURCE_DATA_ENTRY">
      <field offset="0" name="OffsetToData">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Size">
        <type>DWORD</type>
      </field>
      <field offset="8" name="CodePage">
        <type>DWORD</type>
      </field>
      <field offset="12" name="Reserved">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="IMAGE_RESOURCE_DATA_ENTRY">
      <struct name="_IMAGE_RESOURCE_DATA_ENTRY" />
    </typedef>
    <typedef name="PIMAGE_RESOURCE_DATA_ENTRY">
      <ptr>
        <struct name="_IMAGE_RESOURCE_DATA_ENTRY" />
      </ptr>
    </typedef>
    <struct name="struct_57">
      <field offset="0" name="Size">
        <type>DWORD</type>
      </field>
      <field offset="4" name="TimeDateStamp">
        <type>DWORD</type>
      </field>
      <field offset="8" name="MajorVersion">
        <type>WORD</type>
      </field>
      <field offset="10" name="MinorVersion">
        <type>WORD</type>
      </field>
      <field offset="12" name="GlobalFlagsClear">
        <type>DWORD</type>
      </field>
      <field offset="16" name="GlobalFlagsSet">
        <type>DWORD</type>
      </field>
      <field offset="20" name="CriticalSectionDefaultTimeout">
        <type>DWORD</type>
      </field>
      <field offset="24" name="DeCommitFreeBlockThreshold">
        <type>DWORD</type>
      </field>
      <field offset="28" name="DeCommitTotalFreeThreshold">
        <type>DWORD</type>
      </field>
      <field offset="32" name="LockPrefixTable">
        <type>DWORD</type>
      </field>
      <field offset="36" name="MaximumAllocationSize">
        <type>DWORD</type>
      </field>
      <field offset="40" name="VirtualMemoryThreshold">
        <type>DWORD</type>
      </field>
      <field offset="44" name="ProcessHeapFlags">
        <type>DWORD</type>
      </field>
      <field offset="48" name="ProcessAffinityMask">
        <type>DWORD</type>
      </field>
      <field offset="52" name="CSDVersion">
        <type>WORD</type>
      </field>
      <field offset="54" name="Reserved1">
        <type>WORD</type>
      </field>
      <field offset="56" name="EditList">
        <type>DWORD</type>
      </field>
      <field offset="60" name="SecurityCookie">
        <type>DWORD</type>
      </field>
      <field offset="64" name="SEHandlerTable">
        <type>DWORD</type>
      </field>
      <field offset="68" name="SEHandlerCount">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="IMAGE_LOAD_CONFIG_DIRECTORY32">
      <struct name="struct_57" />
    </typedef>
    <typedef name="PIMAGE_LOAD_CONFIG_DIRECTORY32">
      <ptr>
        <struct name="struct_57" />
      </ptr>
    </typedef>
    <struct name="struct_58">
      <field offset="0" name="Size">
        <type>DWORD</type>
      </field>
      <field offset="4" name="TimeDateStamp">
        <type>DWORD</type>
      </field>
      <field offset="8" name="MajorVersion">
        <type>WORD</type>
      </field>
      <field offset="10" name="MinorVersion">
        <type>WORD</type>
      </field>
      <field offset="12" name="GlobalFlagsClear">
        <type>DWORD</type>
      </field>
      <field offset="16" name="GlobalFlagsSet">
        <type>DWORD</type>
      </field>
      <field offset="20" name="CriticalSectionDefaultTimeout">
        <type>DWORD</type>
      </field>
      <field offset="24" name="DeCommitFreeBlockThreshold">
        <type>ULONGLONG</type>
      </field>
      <field offset="32" name="DeCommitTotalFreeThreshold">
        <type>ULONGLONG</type>
      </field>
      <field offset="40" name="LockPrefixTable">
        <type>ULONGLONG</type>
      </field>
      <field offset="48" name="MaximumAllocationSize">
        <type>ULONGLONG</type>
      </field>
      <field offset="56" name="VirtualMemoryThreshold">
        <type>ULONGLONG</type>
      </field>
      <field offset="64" name="ProcessAffinityMask">
        <type>ULONGLONG</type>
      </field>
      <field offset="72" name="ProcessHeapFlags">
        <type>DWORD</type>
      </field>
      <field offset="76" name="CSDVersion">
        <type>WORD</type>
      </field>
      <field offset="78" name="Reserved1">
        <type>WORD</type>
      </field>
      <field offset="80" name="EditList">
        <type>ULONGLONG</type>
      </field>
      <field offset="88" name="SecurityCookie">
        <type>ULONGLONG</type>
      </field>
      <field offset="96" name="SEHandlerTable">
        <type>ULONGLONG</type>
      </field>
      <field offset="104" name="SEHandlerCount">
        <type>ULONGLONG</type>
      </field>
    </struct>
    <typedef name="IMAGE_LOAD_CONFIG_DIRECTORY64">
      <struct name="struct_58" />
    </typedef>
    <typedef name="PIMAGE_LOAD_CONFIG_DIRECTORY64">
      <ptr>
        <struct name="struct_58" />
      </ptr>
    </typedef>
    <typedef name="IMAGE_LOAD_CONFIG_DIRECTORY">
      <type>IMAGE_LOAD_CONFIG_DIRECTORY32</type>
    </typedef>
    <typedef name="PIMAGE_LOAD_CONFIG_DIRECTORY">
      <type>PIMAGE_LOAD_CONFIG_DIRECTORY32</type>
    </typedef>
    <struct name="_IMAGE_CE_RUNTIME_FUNCTION_ENTRY">
      <field offset="0" name="FuncStart">
        <type>DWORD</type>
      </field>
      <field offset="4" name="PrologLen">
        <type>DWORD</type>
      </field>
      <field offset="8" name="FuncLen">
        <type>DWORD</type>
      </field>
      <field offset="12" name="ThirtyTwoBit">
        <type>DWORD</type>
      </field>
      <field offset="16" name="ExceptionFlag">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="IMAGE_CE_RUNTIME_FUNCTION_ENTRY">
      <struct name="_IMAGE_CE_RUNTIME_FUNCTION_ENTRY" />
    </typedef>
    <typedef name="PIMAGE_CE_RUNTIME_FUNCTION_ENTRY">
      <ptr>
        <struct name="_IMAGE_CE_RUNTIME_FUNCTION_ENTRY" />
      </ptr>
    </typedef>
    <struct name="_IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY">
      <field offset="0" name="BeginAddress">
        <type>ULONGLONG</type>
      </field>
      <field offset="8" name="EndAddress">
        <type>ULONGLONG</type>
      </field>
      <field offset="16" name="ExceptionHandler">
        <type>ULONGLONG</type>
      </field>
      <field offset="24" name="HandlerData">
        <type>ULONGLONG</type>
      </field>
      <field offset="32" name="PrologEndAddress">
        <type>ULONGLONG</type>
      </field>
    </struct>
    <typedef name="IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY">
      <struct name="_IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY" />
    </typedef>
    <typedef name="PIMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY">
      <ptr>
        <struct name="_IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY" />
      </ptr>
    </typedef>
    <struct name="_IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY">
      <field offset="0" name="BeginAddress">
        <type>DWORD</type>
      </field>
      <field offset="4" name="EndAddress">
        <type>DWORD</type>
      </field>
      <field offset="8" name="ExceptionHandler">
        <type>DWORD</type>
      </field>
      <field offset="12" name="HandlerData">
        <type>DWORD</type>
      </field>
      <field offset="16" name="PrologEndAddress">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY">
      <struct name="_IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY" />
    </typedef>
    <typedef name="PIMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY">
      <ptr>
        <struct name="_IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY" />
      </ptr>
    </typedef>
    <struct name="_IMAGE_RUNTIME_FUNCTION_ENTRY">
      <field offset="0" name="BeginAddress">
        <type>DWORD</type>
      </field>
      <field offset="4" name="EndAddress">
        <type>DWORD</type>
      </field>
      <field offset="8" name="UnwindInfoAddress">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="_IMAGE_RUNTIME_FUNCTION_ENTRY">
      <struct name="_IMAGE_RUNTIME_FUNCTION_ENTRY" />
    </typedef>
    <typedef name="_PIMAGE_RUNTIME_FUNCTION_ENTRY">
      <ptr>
        <struct name="_IMAGE_RUNTIME_FUNCTION_ENTRY" />
      </ptr>
    </typedef>
    <typedef name="IMAGE_IA64_RUNTIME_FUNCTION_ENTRY">
      <type>_IMAGE_RUNTIME_FUNCTION_ENTRY</type>
    </typedef>
    <typedef name="PIMAGE_IA64_RUNTIME_FUNCTION_ENTRY">
      <type>_PIMAGE_RUNTIME_FUNCTION_ENTRY</type>
    </typedef>
    <typedef name="IMAGE_RUNTIME_FUNCTION_ENTRY">
      <type>_IMAGE_RUNTIME_FUNCTION_ENTRY</type>
    </typedef>
    <typedef name="PIMAGE_RUNTIME_FUNCTION_ENTRY">
      <type>_PIMAGE_RUNTIME_FUNCTION_ENTRY</type>
    </typedef>
    <struct name="_IMAGE_DEBUG_DIRECTORY">
      <field offset="0" name="Characteristics">
        <type>DWORD</type>
      </field>
      <field offset="4" name="TimeDateStamp">
        <type>DWORD</type>
      </field>
      <field offset="8" name="MajorVersion">
        <type>WORD</type>
      </field>
      <field offset="10" name="MinorVersion">
        <type>WORD</type>
      </field>
      <field offset="12" name="Type">
        <type>DWORD</type>
      </field>
      <field offset="16" name="SizeOfData">
        <type>DWORD</type>
      </field>
      <field offset="20" name="AddressOfRawData">
        <type>DWORD</type>
      </field>
      <field offset="24" name="PointerToRawData">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="IMAGE_DEBUG_DIRECTORY">
      <struct name="_IMAGE_DEBUG_DIRECTORY" />
    </typedef>
    <typedef name="PIMAGE_DEBUG_DIRECTORY">
      <ptr>
        <struct name="_IMAGE_DEBUG_DIRECTORY" />
      </ptr>
    </typedef>
    <struct name="_IMAGE_COFF_SYMBOLS_HEADER">
      <field offset="0" name="NumberOfSymbols">
        <type>DWORD</type>
      </field>
      <field offset="4" name="LvaToFirstSymbol">
        <type>DWORD</type>
      </field>
      <field offset="8" name="NumberOfLinenumbers">
        <type>DWORD</type>
      </field>
      <field offset="12" name="LvaToFirstLinenumber">
        <type>DWORD</type>
      </field>
      <field offset="16" name="RvaToFirstByteOfCode">
        <type>DWORD</type>
      </field>
      <field offset="20" name="RvaToLastByteOfCode">
        <type>DWORD</type>
      </field>
      <field offset="24" name="RvaToFirstByteOfData">
        <type>DWORD</type>
      </field>
      <field offset="28" name="RvaToLastByteOfData">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="IMAGE_COFF_SYMBOLS_HEADER">
      <struct name="_IMAGE_COFF_SYMBOLS_HEADER" />
    </typedef>
    <typedef name="PIMAGE_COFF_SYMBOLS_HEADER">
      <ptr>
        <struct name="_IMAGE_COFF_SYMBOLS_HEADER" />
      </ptr>
    </typedef>
    <struct name="_FPO_DATA">
      <field offset="0" name="ulOffStart">
        <type>DWORD</type>
      </field>
      <field offset="4" name="cbProcSize">
        <type>DWORD</type>
      </field>
      <field offset="8" name="cdwLocals">
        <type>DWORD</type>
      </field>
      <field offset="12" name="cdwParams">
        <type>WORD</type>
      </field>
      <field offset="14" name="cbProlog">
        <type>WORD</type>
      </field>
      <field offset="16" name="cbRegs">
        <type>WORD</type>
      </field>
      <field offset="18" name="fHasSEH">
        <type>WORD</type>
      </field>
      <field offset="20" name="fUseBP">
        <type>WORD</type>
      </field>
      <field offset="22" name="reserved">
        <type>WORD</type>
      </field>
      <field offset="24" name="cbFrame">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="FPO_DATA">
      <struct name="_FPO_DATA" />
    </typedef>
    <typedef name="PFPO_DATA">
      <ptr>
        <struct name="_FPO_DATA" />
      </ptr>
    </typedef>
    <struct name="_IMAGE_DEBUG_MISC">
      <field offset="0" name="DataType">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Length">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Unicode">
        <type>BOOLEAN</type>
      </field>
      <field offset="9" name="Reserved">
        <arr length="3">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="12" name="Data">
        <arr length="1">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="IMAGE_DEBUG_MISC">
      <struct name="_IMAGE_DEBUG_MISC" />
    </typedef>
    <typedef name="PIMAGE_DEBUG_MISC">
      <ptr>
        <struct name="_IMAGE_DEBUG_MISC" />
      </ptr>
    </typedef>
    <struct name="_IMAGE_FUNCTION_ENTRY">
      <field offset="0" name="StartingAddress">
        <type>DWORD</type>
      </field>
      <field offset="4" name="EndingAddress">
        <type>DWORD</type>
      </field>
      <field offset="8" name="EndOfPrologue">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="IMAGE_FUNCTION_ENTRY">
      <struct name="_IMAGE_FUNCTION_ENTRY" />
    </typedef>
    <typedef name="PIMAGE_FUNCTION_ENTRY">
      <ptr>
        <struct name="_IMAGE_FUNCTION_ENTRY" />
      </ptr>
    </typedef>
    <struct name="_IMAGE_FUNCTION_ENTRY64">
      <field offset="0" name="StartingAddress">
        <type>ULONGLONG</type>
      </field>
      <field offset="8" name="EndingAddress">
        <type>ULONGLONG</type>
      </field>
      <field offset="16">
        <union>
          <alt name="EndOfPrologue">
            <type>ULONGLONG</type>
          </alt>
          <alt name="UnwindInfoAddress">
            <type>ULONGLONG</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="IMAGE_FUNCTION_ENTRY64">
      <struct name="_IMAGE_FUNCTION_ENTRY64" />
    </typedef>
    <typedef name="PIMAGE_FUNCTION_ENTRY64">
      <ptr>
        <struct name="_IMAGE_FUNCTION_ENTRY64" />
      </ptr>
    </typedef>
    <struct name="_IMAGE_SEPARATE_DEBUG_HEADER">
      <field offset="0" name="Signature">
        <type>WORD</type>
      </field>
      <field offset="2" name="Flags">
        <type>WORD</type>
      </field>
      <field offset="4" name="Machine">
        <type>WORD</type>
      </field>
      <field offset="6" name="Characteristics">
        <type>WORD</type>
      </field>
      <field offset="8" name="TimeDateStamp">
        <type>DWORD</type>
      </field>
      <field offset="12" name="CheckSum">
        <type>DWORD</type>
      </field>
      <field offset="16" name="ImageBase">
        <type>DWORD</type>
      </field>
      <field offset="20" name="SizeOfImage">
        <type>DWORD</type>
      </field>
      <field offset="24" name="NumberOfSections">
        <type>DWORD</type>
      </field>
      <field offset="28" name="ExportedNamesSize">
        <type>DWORD</type>
      </field>
      <field offset="32" name="DebugDirectorySize">
        <type>DWORD</type>
      </field>
      <field offset="36" name="SectionAlignment">
        <type>DWORD</type>
      </field>
      <field offset="40" name="Reserved">
        <arr length="2">
          <type>DWORD</type>
        </arr>
      </field>
    </struct>
    <typedef name="IMAGE_SEPARATE_DEBUG_HEADER">
      <struct name="_IMAGE_SEPARATE_DEBUG_HEADER" />
    </typedef>
    <typedef name="PIMAGE_SEPARATE_DEBUG_HEADER">
      <ptr>
        <struct name="_IMAGE_SEPARATE_DEBUG_HEADER" />
      </ptr>
    </typedef>
    <struct name="_NON_PAGED_DEBUG_INFO">
      <field offset="0" name="Signature">
        <type>WORD</type>
      </field>
      <field offset="2" name="Flags">
        <type>WORD</type>
      </field>
      <field offset="4" name="Size">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Machine">
        <type>WORD</type>
      </field>
      <field offset="10" name="Characteristics">
        <type>WORD</type>
      </field>
      <field offset="12" name="TimeDateStamp">
        <type>DWORD</type>
      </field>
      <field offset="16" name="CheckSum">
        <type>DWORD</type>
      </field>
      <field offset="20" name="SizeOfImage">
        <type>DWORD</type>
      </field>
      <field offset="24" name="ImageBase">
        <type>ULONGLONG</type>
      </field>
    </struct>
    <typedef name="NON_PAGED_DEBUG_INFO">
      <struct name="_NON_PAGED_DEBUG_INFO" />
    </typedef>
    <typedef name="PNON_PAGED_DEBUG_INFO">
      <ptr>
        <struct name="_NON_PAGED_DEBUG_INFO" />
      </ptr>
    </typedef>
    <struct name="_ImageArchitectureHeader">
      <field offset="0" name="AmaskValue">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="AmaskShift">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="12">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="FirstEntryRVA">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="IMAGE_ARCHITECTURE_HEADER">
      <struct name="_ImageArchitectureHeader" />
    </typedef>
    <typedef name="PIMAGE_ARCHITECTURE_HEADER">
      <ptr>
        <struct name="_ImageArchitectureHeader" />
      </ptr>
    </typedef>
    <struct name="_ImageArchitectureEntry">
      <field offset="0" name="FixupInstRVA">
        <type>DWORD</type>
      </field>
      <field offset="4" name="NewInst">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="IMAGE_ARCHITECTURE_ENTRY">
      <struct name="_ImageArchitectureEntry" />
    </typedef>
    <typedef name="PIMAGE_ARCHITECTURE_ENTRY">
      <ptr>
        <struct name="_ImageArchitectureEntry" />
      </ptr>
    </typedef>
    <struct name="IMPORT_OBJECT_HEADER">
      <field offset="0" name="Sig1">
        <type>WORD</type>
      </field>
      <field offset="2" name="Sig2">
        <type>WORD</type>
      </field>
      <field offset="4" name="Version">
        <type>WORD</type>
      </field>
      <field offset="6" name="Machine">
        <type>WORD</type>
      </field>
      <field offset="8" name="TimeDateStamp">
        <type>DWORD</type>
      </field>
      <field offset="12" name="SizeOfData">
        <type>DWORD</type>
      </field>
      <field offset="16">
        <union>
          <alt name="Ordinal">
            <type>WORD</type>
          </alt>
          <alt name="Hint">
            <type>WORD</type>
          </alt>
        </union>
      </field>
      <field offset="18" name="Type">
        <type>WORD</type>
      </field>
      <field offset="20" name="NameType">
        <type>WORD</type>
      </field>
      <field offset="22" name="Reserved">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="IMPORT_OBJECT_HEADER">
      <struct name="IMPORT_OBJECT_HEADER" />
    </typedef>
    <enum name="IMPORT_OBJECT_TYPE">
      <member name="IMPORT_OBJECT_CODE" value="0" />
      <member name="IMPORT_OBJECT_DATA" value="1" />
      <member name="IMPORT_OBJECT_CONST" value="2" />
    </enum>
    <typedef name="IMPORT_OBJECT_TYPE">
      <enum name="IMPORT_OBJECT_TYPE" />
    </typedef>
    <enum name="IMPORT_OBJECT_NAME_TYPE">
      <member name="IMPORT_OBJECT_ORDINAL" value="0" />
      <member name="IMPORT_OBJECT_NAME" value="1" />
      <member name="IMPORT_OBJECT_NAME_NO_PREFIX" value="2" />
      <member name="IMPORT_OBJECT_NAME_UNDECORATE" value="3" />
    </enum>
    <typedef name="IMPORT_OBJECT_NAME_TYPE">
      <enum name="IMPORT_OBJECT_NAME_TYPE" />
    </typedef>
    <enum name="ReplacesCorHdrNumericDefines">
      <member name="COMIMAGE_FLAGS_ILONLY" value="1" />
      <member name="COMIMAGE_FLAGS_32BITREQUIRED" value="2" />
      <member name="COMIMAGE_FLAGS_IL_LIBRARY" value="4" />
      <member name="COMIMAGE_FLAGS_STRONGNAMESIGNED" value="8" />
      <member name="COMIMAGE_FLAGS_NATIVE_ENTRYPOINT" value="16" />
      <member name="COMIMAGE_FLAGS_TRACKDEBUGDATA" value="65536" />
      <member name="COR_VERSION_MAJOR_V2" value="2" />
      <member name="COR_VERSION_MAJOR" value="2" />
      <member name="COR_VERSION_MINOR" value="0" />
      <member name="COR_DELETED_NAME_LENGTH" value="8" />
      <member name="COR_VTABLEGAP_NAME_LENGTH" value="8" />
      <member name="NATIVE_TYPE_MAX_CB" value="1" />
      <member name="COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE" value="255" />
      <member name="IMAGE_COR_MIH_METHODRVA" value="1" />
      <member name="IMAGE_COR_MIH_EHRVA" value="2" />
      <member name="IMAGE_COR_MIH_BASICBLOCK" value="8" />
      <member name="COR_VTABLE_32BIT" value="1" />
      <member name="COR_VTABLE_64BIT" value="2" />
      <member name="COR_VTABLE_FROM_UNMANAGED" value="4" />
      <member name="COR_VTABLE_FROM_UNMANAGED_RETAIN_APPDOMAIN" value="8" />
      <member name="COR_VTABLE_CALL_MOST_DERIVED" value="16" />
      <member name="IMAGE_COR_EATJ_THUNK_SIZE" value="32" />
      <member name="MAX_CLASS_NAME" value="1024" />
      <member name="MAX_PACKAGE_NAME" value="1024" />
    </enum>
    <typedef name="ReplacesCorHdrNumericDefines">
      <enum name="ReplacesCorHdrNumericDefines" />
    </typedef>
    <struct name="IMAGE_COR20_HEADER">
      <field offset="0" name="cb">
        <type>DWORD</type>
      </field>
      <field offset="4" name="MajorRuntimeVersion">
        <type>WORD</type>
      </field>
      <field offset="6" name="MinorRuntimeVersion">
        <type>WORD</type>
      </field>
      <field offset="8" name="MetaData">
        <type>IMAGE_DATA_DIRECTORY</type>
      </field>
      <field offset="16" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="20">
        <union>
          <alt name="EntryPointToken">
            <type>DWORD</type>
          </alt>
          <alt name="EntryPointRVA">
            <type>DWORD</type>
          </alt>
        </union>
      </field>
      <field offset="24" name="Resources">
        <type>IMAGE_DATA_DIRECTORY</type>
      </field>
      <field offset="32" name="StrongNameSignature">
        <type>IMAGE_DATA_DIRECTORY</type>
      </field>
      <field offset="40" name="CodeManagerTable">
        <type>IMAGE_DATA_DIRECTORY</type>
      </field>
      <field offset="48" name="VTableFixups">
        <type>IMAGE_DATA_DIRECTORY</type>
      </field>
      <field offset="56" name="ExportAddressTableJumps">
        <type>IMAGE_DATA_DIRECTORY</type>
      </field>
      <field offset="64" name="ManagedNativeHeader">
        <type>IMAGE_DATA_DIRECTORY</type>
      </field>
    </struct>
    <typedef name="IMAGE_COR20_HEADER">
      <struct name="IMAGE_COR20_HEADER" />
    </typedef>
    <typedef name="PIMAGE_COR20_HEADER">
      <ptr>
        <struct name="IMAGE_COR20_HEADER" />
      </ptr>
    </typedef>
    <typedef name="SLIST_ENTRY32">
      <type>SINGLE_LIST_ENTRY</type>
    </typedef>
    <typedef name="PSLIST_ENTRY32">
      <ptr>
        <type>SINGLE_LIST_ENTRY</type>
      </ptr>
    </typedef>
    <struct name="struct_59">
      <field offset="0" name="Next">
        <type>SINGLE_LIST_ENTRY</type>
      </field>
      <field offset="4" name="Depth">
        <type>WORD</type>
      </field>
      <field offset="6" name="Sequence">
        <type>WORD</type>
      </field>
    </struct>
    <union name="_SLIST_HEADER">
      <alt name="Alignment">
        <type>ULONGLONG</type>
      </alt>
      <alt>
        <struct name="struct_59" />
      </alt>
    </union>
    <typedef name="SLIST_HEADER">
      <union name="_SLIST_HEADER" />
    </typedef>
    <typedef name="PSLIST_HEADER">
      <ptr>
        <union name="_SLIST_HEADER" />
      </ptr>
    </typedef>
    <typedef name="SLIST_HEADER32">
      <type>SLIST_HEADER</type>
    </typedef>
    <typedef name="PSLIST_HEADER32">
      <ptr>
        <type>SLIST_HEADER</type>
      </ptr>
    </typedef>
    <union name="_RTL_RUN_ONCE">
      <alt name="Ptr">
        <type>PVOID</type>
      </alt>
    </union>
    <typedef name="RTL_RUN_ONCE">
      <union name="_RTL_RUN_ONCE" />
    </typedef>
    <typedef name="PRTL_RUN_ONCE">
      <ptr>
        <union name="_RTL_RUN_ONCE" />
      </ptr>
    </typedef>
    <typedef name="RTL_RUN_ONCE_INIT_FN">
      <fn convention="__stdcall">
        <return>
          <type>DWORD</type>
          <reg>eax</reg>
        </return>
        <arg name="RunOnce">
          <type>PRTL_RUN_ONCE</type>
          <stack size="4" />
        </arg>
        <arg name="Parameter">
          <type>PVOID</type>
          <stack size="4" />
        </arg>
        <arg name="Context">
          <ptr>
            <type>PVOID</type>
          </ptr>
          <stack size="4" />
        </arg>
      </fn>
    </typedef>
    <typedef name="PRTL_RUN_ONCE_INIT_FN">
      <ptr>
        <type>RTL_RUN_ONCE_INIT_FN</type>
      </ptr>
    </typedef>
    <struct name="_MESSAGE_RESOURCE_ENTRY">
      <field offset="0" name="Length">
        <type>WORD</type>
      </field>
      <field offset="2" name="Flags">
        <type>WORD</type>
      </field>
      <field offset="4" name="Text">
        <arr length="1">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="MESSAGE_RESOURCE_ENTRY">
      <struct name="_MESSAGE_RESOURCE_ENTRY" />
    </typedef>
    <typedef name="PMESSAGE_RESOURCE_ENTRY">
      <ptr>
        <struct name="_MESSAGE_RESOURCE_ENTRY" />
      </ptr>
    </typedef>
    <struct name="_MESSAGE_RESOURCE_BLOCK">
      <field offset="0" name="LowId">
        <type>DWORD</type>
      </field>
      <field offset="4" name="HighId">
        <type>DWORD</type>
      </field>
      <field offset="8" name="OffsetToEntries">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="MESSAGE_RESOURCE_BLOCK">
      <struct name="_MESSAGE_RESOURCE_BLOCK" />
    </typedef>
    <typedef name="PMESSAGE_RESOURCE_BLOCK">
      <ptr>
        <struct name="_MESSAGE_RESOURCE_BLOCK" />
      </ptr>
    </typedef>
    <struct name="_MESSAGE_RESOURCE_DATA">
      <field offset="0" name="NumberOfBlocks">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Blocks">
        <arr length="1">
          <type>MESSAGE_RESOURCE_BLOCK</type>
        </arr>
      </field>
    </struct>
    <typedef name="MESSAGE_RESOURCE_DATA">
      <struct name="_MESSAGE_RESOURCE_DATA" />
    </typedef>
    <typedef name="PMESSAGE_RESOURCE_DATA">
      <ptr>
        <struct name="_MESSAGE_RESOURCE_DATA" />
      </ptr>
    </typedef>
    <struct name="_OSVERSIONINFOA">
      <field offset="0" name="dwOSVersionInfoSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwMajorVersion">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwMinorVersion">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwBuildNumber">
        <type>DWORD</type>
      </field>
      <field offset="16" name="dwPlatformId">
        <type>DWORD</type>
      </field>
      <field offset="24" name="szCSDVersion">
        <arr length="128">
          <type>CHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="OSVERSIONINFOA">
      <struct name="_OSVERSIONINFOA" />
    </typedef>
    <typedef name="POSVERSIONINFOA">
      <ptr>
        <struct name="_OSVERSIONINFOA" />
      </ptr>
    </typedef>
    <typedef name="LPOSVERSIONINFOA">
      <ptr>
        <struct name="_OSVERSIONINFOA" />
      </ptr>
    </typedef>
    <struct name="_OSVERSIONINFOW">
      <field offset="0" name="dwOSVersionInfoSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwMajorVersion">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwMinorVersion">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwBuildNumber">
        <type>DWORD</type>
      </field>
      <field offset="16" name="dwPlatformId">
        <type>DWORD</type>
      </field>
      <field offset="24" name="szCSDVersion">
        <arr length="128">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="OSVERSIONINFOW">
      <struct name="_OSVERSIONINFOW" />
    </typedef>
    <typedef name="POSVERSIONINFOW">
      <ptr>
        <struct name="_OSVERSIONINFOW" />
      </ptr>
    </typedef>
    <typedef name="LPOSVERSIONINFOW">
      <ptr>
        <struct name="_OSVERSIONINFOW" />
      </ptr>
    </typedef>
    <typedef name="RTL_OSVERSIONINFOW">
      <struct name="_OSVERSIONINFOW" />
    </typedef>
    <typedef name="PRTL_OSVERSIONINFOW">
      <ptr>
        <struct name="_OSVERSIONINFOW" />
      </ptr>
    </typedef>
    <typedef name="OSVERSIONINFO">
      <type>OSVERSIONINFOA</type>
    </typedef>
    <typedef name="POSVERSIONINFO">
      <type>POSVERSIONINFOA</type>
    </typedef>
    <typedef name="LPOSVERSIONINFO">
      <type>LPOSVERSIONINFOA</type>
    </typedef>
    <struct name="_OSVERSIONINFOEXA">
      <field offset="0" name="dwOSVersionInfoSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwMajorVersion">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwMinorVersion">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwBuildNumber">
        <type>DWORD</type>
      </field>
      <field offset="16" name="dwPlatformId">
        <type>DWORD</type>
      </field>
      <field offset="24" name="szCSDVersion">
        <arr length="128">
          <type>CHAR</type>
        </arr>
      </field>
      <field offset="152" name="wServicePackMajor">
        <type>WORD</type>
      </field>
      <field offset="154" name="wServicePackMinor">
        <type>WORD</type>
      </field>
      <field offset="156" name="wSuiteMask">
        <type>WORD</type>
      </field>
      <field offset="158" name="wProductType">
        <type>BYTE</type>
      </field>
      <field offset="159" name="wReserved">
        <type>BYTE</type>
      </field>
    </struct>
    <typedef name="OSVERSIONINFOEXA">
      <struct name="_OSVERSIONINFOEXA" />
    </typedef>
    <typedef name="POSVERSIONINFOEXA">
      <ptr>
        <struct name="_OSVERSIONINFOEXA" />
      </ptr>
    </typedef>
    <typedef name="LPOSVERSIONINFOEXA">
      <ptr>
        <struct name="_OSVERSIONINFOEXA" />
      </ptr>
    </typedef>
    <struct name="_OSVERSIONINFOEXW">
      <field offset="0" name="dwOSVersionInfoSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwMajorVersion">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwMinorVersion">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwBuildNumber">
        <type>DWORD</type>
      </field>
      <field offset="16" name="dwPlatformId">
        <type>DWORD</type>
      </field>
      <field offset="24" name="szCSDVersion">
        <arr length="128">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="280" name="wServicePackMajor">
        <type>WORD</type>
      </field>
      <field offset="282" name="wServicePackMinor">
        <type>WORD</type>
      </field>
      <field offset="284" name="wSuiteMask">
        <type>WORD</type>
      </field>
      <field offset="286" name="wProductType">
        <type>BYTE</type>
      </field>
      <field offset="287" name="wReserved">
        <type>BYTE</type>
      </field>
    </struct>
    <typedef name="OSVERSIONINFOEXW">
      <struct name="_OSVERSIONINFOEXW" />
    </typedef>
    <typedef name="POSVERSIONINFOEXW">
      <ptr>
        <struct name="_OSVERSIONINFOEXW" />
      </ptr>
    </typedef>
    <typedef name="LPOSVERSIONINFOEXW">
      <ptr>
        <struct name="_OSVERSIONINFOEXW" />
      </ptr>
    </typedef>
    <typedef name="RTL_OSVERSIONINFOEXW">
      <struct name="_OSVERSIONINFOEXW" />
    </typedef>
    <typedef name="PRTL_OSVERSIONINFOEXW">
      <ptr>
        <struct name="_OSVERSIONINFOEXW" />
      </ptr>
    </typedef>
    <typedef name="OSVERSIONINFOEX">
      <type>OSVERSIONINFOEXA</type>
    </typedef>
    <typedef name="POSVERSIONINFOEX">
      <type>POSVERSIONINFOEXA</type>
    </typedef>
    <typedef name="LPOSVERSIONINFOEX">
      <type>LPOSVERSIONINFOEXA</type>
    </typedef>
    <enum name="_RTL_UMS_THREAD_INFO_CLASS">
      <member name="UmsThreadInvalidInfoClass" value="0" />
      <member name="UmsThreadUserContext" value="1" />
      <member name="UmsThreadPriority" value="2" />
      <member name="UmsThreadAffinity" value="3" />
      <member name="UmsThreadTeb" value="4" />
      <member name="UmsThreadIsSuspended" value="5" />
      <member name="UmsThreadIsTerminated" value="6" />
      <member name="UmsThreadMaxInfoClass" value="7" />
    </enum>
    <typedef name="RTL_UMS_THREAD_INFO_CLASS">
      <enum name="_RTL_UMS_THREAD_INFO_CLASS" />
    </typedef>
    <typedef name="PRTL_UMS_THREAD_INFO_CLASS">
      <ptr>
        <enum name="_RTL_UMS_THREAD_INFO_CLASS" />
      </ptr>
    </typedef>
    <enum name="_RTL_UMS_SCHEDULER_REASON">
      <member name="UmsSchedulerStartup" value="0" />
      <member name="UmsSchedulerThreadBlocked" value="1" />
      <member name="UmsSchedulerThreadYield" value="2" />
    </enum>
    <typedef name="RTL_UMS_SCHEDULER_REASON">
      <enum name="_RTL_UMS_SCHEDULER_REASON" />
    </typedef>
    <typedef name="PRTL_UMS_SCHEDULER_REASON">
      <ptr>
        <enum name="_RTL_UMS_SCHEDULER_REASON" />
      </ptr>
    </typedef>
    <typedef name="RTL_UMS_SCHEDULER_ENTRY_POINT">
      <fn convention="__stdcall">
        <return>
          <void />
        </return>
        <arg name="Reason">
          <type>RTL_UMS_SCHEDULER_REASON</type>
          <stack size="4" />
        </arg>
        <arg name="ActivationPayload">
          <type>ULONG_PTR</type>
          <stack size="4" />
        </arg>
        <arg name="SchedulerParam">
          <type>PVOID</type>
          <stack size="4" />
        </arg>
      </fn>
    </typedef>
    <typedef name="PRTL_UMS_SCHEDULER_ENTRY_POINT">
      <ptr>
        <type>RTL_UMS_SCHEDULER_ENTRY_POINT</type>
      </ptr>
    </typedef>
    <struct name="_RTL_CRITICAL_SECTION_DEBUG">
      <field offset="0" name="Type">
        <type>WORD</type>
      </field>
      <field offset="2" name="CreatorBackTraceIndex">
        <type>WORD</type>
      </field>
      <field offset="4" name="CriticalSection">
        <ptr>
          <struct name="_RTL_CRITICAL_SECTION" />
        </ptr>
      </field>
      <field offset="8" name="ProcessLocksList">
        <type>LIST_ENTRY</type>
      </field>
      <field offset="16" name="EntryCount">
        <type>DWORD</type>
      </field>
      <field offset="20" name="ContentionCount">
        <type>DWORD</type>
      </field>
      <field offset="24" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="28" name="CreatorBackTraceIndexHigh">
        <type>WORD</type>
      </field>
      <field offset="30" name="SpareWORD">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="RTL_CRITICAL_SECTION_DEBUG">
      <struct name="_RTL_CRITICAL_SECTION_DEBUG" />
    </typedef>
    <typedef name="PRTL_CRITICAL_SECTION_DEBUG">
      <ptr>
        <struct name="_RTL_CRITICAL_SECTION_DEBUG" />
      </ptr>
    </typedef>
    <typedef name="RTL_RESOURCE_DEBUG">
      <struct name="_RTL_CRITICAL_SECTION_DEBUG" />
    </typedef>
    <typedef name="PRTL_RESOURCE_DEBUG">
      <ptr>
        <struct name="_RTL_CRITICAL_SECTION_DEBUG" />
      </ptr>
    </typedef>
    <struct name="_RTL_CRITICAL_SECTION">
      <field offset="0" name="DebugInfo">
        <type>PRTL_CRITICAL_SECTION_DEBUG</type>
      </field>
      <field offset="4" name="LockCount">
        <type>LONG</type>
      </field>
      <field offset="8" name="RecursionCount">
        <type>LONG</type>
      </field>
      <field offset="12" name="OwningThread">
        <type>HANDLE</type>
      </field>
      <field offset="16" name="LockSemaphore">
        <type>HANDLE</type>
      </field>
      <field offset="20" name="SpinCount">
        <type>ULONG_PTR</type>
      </field>
    </struct>
    <typedef name="RTL_CRITICAL_SECTION">
      <struct name="_RTL_CRITICAL_SECTION" />
    </typedef>
    <typedef name="PRTL_CRITICAL_SECTION">
      <ptr>
        <struct name="_RTL_CRITICAL_SECTION" />
      </ptr>
    </typedef>
    <struct name="_RTL_SRWLOCK">
      <field offset="0" name="Ptr">
        <type>PVOID</type>
      </field>
    </struct>
    <typedef name="RTL_SRWLOCK">
      <struct name="_RTL_SRWLOCK" />
    </typedef>
    <typedef name="PRTL_SRWLOCK">
      <ptr>
        <struct name="_RTL_SRWLOCK" />
      </ptr>
    </typedef>
    <struct name="_RTL_CONDITION_VARIABLE">
      <field offset="0" name="Ptr">
        <type>PVOID</type>
      </field>
    </struct>
    <typedef name="RTL_CONDITION_VARIABLE">
      <struct name="_RTL_CONDITION_VARIABLE" />
    </typedef>
    <typedef name="PRTL_CONDITION_VARIABLE">
      <ptr>
        <struct name="_RTL_CONDITION_VARIABLE" />
      </ptr>
    </typedef>
    <typedef name="PAPCFUNC">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="Parameter">
            <type>ULONG_PTR</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PVECTORED_EXCEPTION_HANDLER">
      <ptr>
        <fn>
          <return>
            <type>LONG</type>
            <reg>eax</reg>
          </return>
          <arg name="ExceptionInfo">
            <ptr>
              <struct name="_EXCEPTION_POINTERS" />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <enum name="_HEAP_INFORMATION_CLASS">
      <member name="HeapCompatibilityInformation" value="0" />
      <member name="HeapEnableTerminationOnCorruption" value="1" />
    </enum>
    <typedef name="HEAP_INFORMATION_CLASS">
      <enum name="_HEAP_INFORMATION_CLASS" />
    </typedef>
    <typedef name="WAITORTIMERCALLBACKFUNC">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg>
            <type>PVOID</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>BOOLEAN</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="WORKERCALLBACKFUNC">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg>
            <type>PVOID</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="APC_CALLBACK_FUNCTION">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg>
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>PVOID</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>PVOID</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFLS_CALLBACK_FUNCTION">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="lpFlsData">
            <type>PVOID</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PSECURE_MEMORY_CACHE_CALLBACK">
      <ptr>
        <fn>
          <return>
            <type>BOOLEAN</type>
            <reg>eax</reg>
          </return>
          <arg name="Addr">
            <type>PVOID</type>
            <stack size="4" />
          </arg>
          <arg name="Range">
            <type>SIZE_T</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <enum name="_ACTIVATION_CONTEXT_INFO_CLASS">
      <member name="ActivationContextBasicInformation" value="1" />
      <member name="ActivationContextDetailedInformation" value="2" />
      <member name="AssemblyDetailedInformationInActivationContext" value="3" />
      <member name="FileInformationInAssemblyOfAssemblyInActivationContext" value="4" />
      <member name="RunlevelInformationInActivationContext" value="5" />
      <member name="CompatibilityInformationInActivationContext" value="6" />
      <member name="ActivationContextManifestResourceName" value="7" />
      <member name="MaxActivationContextInfoClass" value="8" />
      <member name="AssemblyDetailedInformationInActivationContxt" value="3" />
      <member name="FileInformationInAssemblyOfAssemblyInActivationContxt" value="4" />
    </enum>
    <typedef name="ACTIVATION_CONTEXT_INFO_CLASS">
      <enum name="_ACTIVATION_CONTEXT_INFO_CLASS" />
    </typedef>
    <struct name="_ACTIVATION_CONTEXT_QUERY_INDEX">
      <field offset="0" name="ulAssemblyIndex">
        <type>DWORD</type>
      </field>
      <field offset="4" name="ulFileIndexInAssembly">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="ACTIVATION_CONTEXT_QUERY_INDEX">
      <struct name="_ACTIVATION_CONTEXT_QUERY_INDEX" />
    </typedef>
    <typedef name="PACTIVATION_CONTEXT_QUERY_INDEX">
      <ptr>
        <struct name="_ACTIVATION_CONTEXT_QUERY_INDEX" />
      </ptr>
    </typedef>
    <typedef name="PCACTIVATION_CONTEXT_QUERY_INDEX">
      <ptr>
        <struct name="_ACTIVATION_CONTEXT_QUERY_INDEX" />
      </ptr>
    </typedef>
    <struct name="_ASSEMBLY_FILE_DETAILED_INFORMATION">
      <field offset="0" name="ulFlags">
        <type>DWORD</type>
      </field>
      <field offset="4" name="ulFilenameLength">
        <type>DWORD</type>
      </field>
      <field offset="8" name="ulPathLength">
        <type>DWORD</type>
      </field>
      <field offset="12" name="lpFileName">
        <type>PCWSTR</type>
      </field>
      <field offset="16" name="lpFilePath">
        <type>PCWSTR</type>
      </field>
    </struct>
    <typedef name="ASSEMBLY_FILE_DETAILED_INFORMATION">
      <struct name="_ASSEMBLY_FILE_DETAILED_INFORMATION" />
    </typedef>
    <typedef name="PASSEMBLY_FILE_DETAILED_INFORMATION">
      <ptr>
        <struct name="_ASSEMBLY_FILE_DETAILED_INFORMATION" />
      </ptr>
    </typedef>
    <typedef name="PCASSEMBLY_FILE_DETAILED_INFORMATION">
      <ptr>
        <type>ASSEMBLY_FILE_DETAILED_INFORMATION</type>
      </ptr>
    </typedef>
    <struct name="_ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION">
      <field offset="0" name="ulFlags">
        <type>DWORD</type>
      </field>
      <field offset="4" name="ulEncodedAssemblyIdentityLength">
        <type>DWORD</type>
      </field>
      <field offset="8" name="ulManifestPathType">
        <type>DWORD</type>
      </field>
      <field offset="12" name="ulManifestPathLength">
        <type>DWORD</type>
      </field>
      <field offset="16" name="liManifestLastWriteTime">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="24" name="ulPolicyPathType">
        <type>DWORD</type>
      </field>
      <field offset="28" name="ulPolicyPathLength">
        <type>DWORD</type>
      </field>
      <field offset="32" name="liPolicyLastWriteTime">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="40" name="ulMetadataSatelliteRosterIndex">
        <type>DWORD</type>
      </field>
      <field offset="44" name="ulManifestVersionMajor">
        <type>DWORD</type>
      </field>
      <field offset="48" name="ulManifestVersionMinor">
        <type>DWORD</type>
      </field>
      <field offset="52" name="ulPolicyVersionMajor">
        <type>DWORD</type>
      </field>
      <field offset="56" name="ulPolicyVersionMinor">
        <type>DWORD</type>
      </field>
      <field offset="60" name="ulAssemblyDirectoryNameLength">
        <type>DWORD</type>
      </field>
      <field offset="64" name="lpAssemblyEncodedAssemblyIdentity">
        <type>PCWSTR</type>
      </field>
      <field offset="68" name="lpAssemblyManifestPath">
        <type>PCWSTR</type>
      </field>
      <field offset="72" name="lpAssemblyPolicyPath">
        <type>PCWSTR</type>
      </field>
      <field offset="76" name="lpAssemblyDirectoryName">
        <type>PCWSTR</type>
      </field>
      <field offset="80" name="ulFileCount">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION">
      <struct name="_ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION" />
    </typedef>
    <typedef name="PACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION">
      <ptr>
        <struct name="_ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION" />
      </ptr>
    </typedef>
    <typedef name="PCACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION">
      <ptr>
        <struct name="_ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION" />
      </ptr>
    </typedef>
    <enum name="enum_32">
      <member name="ACTCTX_RUN_LEVEL_UNSPECIFIED" value="0" />
      <member name="ACTCTX_RUN_LEVEL_AS_INVOKER" value="1" />
      <member name="ACTCTX_RUN_LEVEL_HIGHEST_AVAILABLE" value="2" />
      <member name="ACTCTX_RUN_LEVEL_REQUIRE_ADMIN" value="3" />
      <member name="ACTCTX_RUN_LEVEL_NUMBERS" value="4" />
    </enum>
    <typedef name="ACTCTX_REQUESTED_RUN_LEVEL">
      <enum name="enum_32" />
    </typedef>
    <struct name="_ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION">
      <field offset="0" name="ulFlags">
        <type>DWORD</type>
      </field>
      <field offset="4" name="RunLevel">
        <type>ACTCTX_REQUESTED_RUN_LEVEL</type>
      </field>
      <field offset="8" name="UiAccess">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION">
      <struct name="_ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION" />
    </typedef>
    <typedef name="PACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION">
      <ptr>
        <struct name="_ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION" />
      </ptr>
    </typedef>
    <typedef name="PCACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION">
      <ptr>
        <struct name="_ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION" />
      </ptr>
    </typedef>
    <enum name="enum_33">
      <member name="ACTCTX_COMPATIBILITY_ELEMENT_TYPE_UNKNOWN" value="0" />
      <member name="ACTCTX_COMPATIBILITY_ELEMENT_TYPE_OS" value="1" />
      <member name="ACTCTX_COMPATIBILITY_ELEMENT_TYPE_MITIGATION" value="2" />
    </enum>
    <typedef name="ACTCTX_COMPATIBILITY_ELEMENT_TYPE">
      <enum name="enum_33" />
    </typedef>
    <struct name="_COMPATIBILITY_CONTEXT_ELEMENT">
      <field offset="0" name="Id">
        <type>GUID</type>
      </field>
      <field offset="16" name="Type">
        <type>ACTCTX_COMPATIBILITY_ELEMENT_TYPE</type>
      </field>
    </struct>
    <typedef name="COMPATIBILITY_CONTEXT_ELEMENT">
      <struct name="_COMPATIBILITY_CONTEXT_ELEMENT" />
    </typedef>
    <typedef name="PCOMPATIBILITY_CONTEXT_ELEMENT">
      <ptr>
        <struct name="_COMPATIBILITY_CONTEXT_ELEMENT" />
      </ptr>
    </typedef>
    <typedef name="PCCOMPATIBILITY_CONTEXT_ELEMENT">
      <ptr>
        <struct name="_COMPATIBILITY_CONTEXT_ELEMENT" />
      </ptr>
    </typedef>
    <struct name="_ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION">
      <field offset="0" name="ElementCount">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Elements">
        <arr length="0">
          <type>COMPATIBILITY_CONTEXT_ELEMENT</type>
        </arr>
      </field>
    </struct>
    <typedef name="ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION">
      <struct name="_ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION" />
    </typedef>
    <typedef name="PACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION">
      <ptr>
        <struct name="_ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION" />
      </ptr>
    </typedef>
    <typedef name="PCACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION">
      <ptr>
        <struct name="_ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_SUPPORTED_OS_INFO">
      <field offset="0" name="OsCount">
        <type>WORD</type>
      </field>
      <field offset="2" name="MitigationExist">
        <type>WORD</type>
      </field>
      <field offset="8" name="OsList">
        <arr length="4">
          <type>WORD</type>
        </arr>
      </field>
    </struct>
    <typedef name="SUPPORTED_OS_INFO">
      <struct name="_SUPPORTED_OS_INFO" />
    </typedef>
    <typedef name="PSUPPORTED_OS_INFO">
      <ptr>
        <struct name="_SUPPORTED_OS_INFO" />
      </ptr>
    </typedef>
    <struct name="_ACTIVATION_CONTEXT_DETAILED_INFORMATION">
      <field offset="0" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="4" name="ulFormatVersion">
        <type>DWORD</type>
      </field>
      <field offset="8" name="ulAssemblyCount">
        <type>DWORD</type>
      </field>
      <field offset="12" name="ulRootManifestPathType">
        <type>DWORD</type>
      </field>
      <field offset="16" name="ulRootManifestPathChars">
        <type>DWORD</type>
      </field>
      <field offset="20" name="ulRootConfigurationPathType">
        <type>DWORD</type>
      </field>
      <field offset="24" name="ulRootConfigurationPathChars">
        <type>DWORD</type>
      </field>
      <field offset="28" name="ulAppDirPathType">
        <type>DWORD</type>
      </field>
      <field offset="32" name="ulAppDirPathChars">
        <type>DWORD</type>
      </field>
      <field offset="36" name="lpRootManifestPath">
        <type>PCWSTR</type>
      </field>
      <field offset="40" name="lpRootConfigurationPath">
        <type>PCWSTR</type>
      </field>
      <field offset="44" name="lpAppDirPath">
        <type>PCWSTR</type>
      </field>
    </struct>
    <typedef name="ACTIVATION_CONTEXT_DETAILED_INFORMATION">
      <struct name="_ACTIVATION_CONTEXT_DETAILED_INFORMATION" />
    </typedef>
    <typedef name="PACTIVATION_CONTEXT_DETAILED_INFORMATION">
      <ptr>
        <struct name="_ACTIVATION_CONTEXT_DETAILED_INFORMATION" />
      </ptr>
    </typedef>
    <typedef name="PCACTIVATION_CONTEXT_DETAILED_INFORMATION">
      <ptr>
        <struct name="_ACTIVATION_CONTEXT_DETAILED_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_HARDWARE_COUNTER_DATA">
      <field offset="0" name="Type">
        <type>HARDWARE_COUNTER_TYPE</type>
      </field>
      <field offset="4" name="Reserved">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Value">
        <type>DWORD64</type>
      </field>
    </struct>
    <typedef name="HARDWARE_COUNTER_DATA">
      <struct name="_HARDWARE_COUNTER_DATA" />
    </typedef>
    <typedef name="PHARDWARE_COUNTER_DATA">
      <ptr>
        <struct name="_HARDWARE_COUNTER_DATA" />
      </ptr>
    </typedef>
    <struct name="_PERFORMANCE_DATA">
      <field offset="0" name="Size">
        <type>WORD</type>
      </field>
      <field offset="2" name="Version">
        <type>BYTE</type>
      </field>
      <field offset="3" name="HwCountersCount">
        <type>BYTE</type>
      </field>
      <field offset="4" name="ContextSwitchCount">
        <type>DWORD</type>
      </field>
      <field offset="8" name="WaitReasonBitMap">
        <type>DWORD64</type>
      </field>
      <field offset="16" name="CycleTime">
        <type>DWORD64</type>
      </field>
      <field offset="24" name="RetryCount">
        <type>DWORD</type>
      </field>
      <field offset="28" name="Reserved">
        <type>DWORD</type>
      </field>
      <field offset="32" name="HwCounters">
        <arr length="16">
          <type>HARDWARE_COUNTER_DATA</type>
        </arr>
      </field>
    </struct>
    <typedef name="PERFORMANCE_DATA">
      <struct name="_PERFORMANCE_DATA" />
    </typedef>
    <typedef name="PPERFORMANCE_DATA">
      <ptr>
        <struct name="_PERFORMANCE_DATA" />
      </ptr>
    </typedef>
    <struct name="_EVENTLOGRECORD">
      <field offset="0" name="Length">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Reserved">
        <type>DWORD</type>
      </field>
      <field offset="8" name="RecordNumber">
        <type>DWORD</type>
      </field>
      <field offset="12" name="TimeGenerated">
        <type>DWORD</type>
      </field>
      <field offset="16" name="TimeWritten">
        <type>DWORD</type>
      </field>
      <field offset="20" name="EventID">
        <type>DWORD</type>
      </field>
      <field offset="24" name="EventType">
        <type>WORD</type>
      </field>
      <field offset="26" name="NumStrings">
        <type>WORD</type>
      </field>
      <field offset="28" name="EventCategory">
        <type>WORD</type>
      </field>
      <field offset="30" name="ReservedFlags">
        <type>WORD</type>
      </field>
      <field offset="32" name="ClosingRecordNumber">
        <type>DWORD</type>
      </field>
      <field offset="36" name="StringOffset">
        <type>DWORD</type>
      </field>
      <field offset="40" name="UserSidLength">
        <type>DWORD</type>
      </field>
      <field offset="44" name="UserSidOffset">
        <type>DWORD</type>
      </field>
      <field offset="48" name="DataLength">
        <type>DWORD</type>
      </field>
      <field offset="52" name="DataOffset">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="EVENTLOGRECORD">
      <struct name="_EVENTLOGRECORD" />
    </typedef>
    <typedef name="PEVENTLOGRECORD">
      <ptr>
        <struct name="_EVENTLOGRECORD" />
      </ptr>
    </typedef>
    <typedef name="EVENTSFORLOGFILE">
      <struct name="_EVENTSFORLOGFILE" />
    </typedef>
    <typedef name="PEVENTSFORLOGFILE">
      <ptr>
        <struct name="_EVENTSFORLOGFILE" />
      </ptr>
    </typedef>
    <typedef name="PACKEDEVENTINFO">
      <struct name="_PACKEDEVENTINFO" />
    </typedef>
    <typedef name="PPACKEDEVENTINFO">
      <ptr>
        <struct name="_PACKEDEVENTINFO" />
      </ptr>
    </typedef>
    <struct name="_EVENTSFORLOGFILE">
      <field offset="0" name="ulSize">
        <type>DWORD</type>
      </field>
      <field offset="8" name="szLogicalLogFile">
        <arr length="256">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="520" name="ulNumRecords">
        <type>DWORD</type>
      </field>
      <field offset="528" name="pEventLogRecords">
        <arr length="0">
          <type>EVENTLOGRECORD</type>
        </arr>
      </field>
    </struct>
    <struct name="_PACKEDEVENTINFO">
      <field offset="0" name="ulSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="ulNumEventsForLogFile">
        <type>DWORD</type>
      </field>
      <field offset="8" name="ulOffsets">
        <arr length="0">
          <type>DWORD</type>
        </arr>
      </field>
    </struct>
    <enum name="_CM_SERVICE_NODE_TYPE">
      <member name="DriverType" value="1" />
      <member name="FileSystemType" value="2" />
      <member name="Win32ServiceOwnProcess" value="16" />
      <member name="Win32ServiceShareProcess" value="32" />
      <member name="AdapterType" value="4" />
      <member name="RecognizerType" value="8" />
    </enum>
    <typedef name="SERVICE_NODE_TYPE">
      <enum name="_CM_SERVICE_NODE_TYPE" />
    </typedef>
    <enum name="_CM_SERVICE_LOAD_TYPE">
      <member name="BootLoad" value="0" />
      <member name="SystemLoad" value="1" />
      <member name="AutoLoad" value="2" />
      <member name="DemandLoad" value="3" />
      <member name="DisableLoad" value="4" />
    </enum>
    <typedef name="SERVICE_LOAD_TYPE">
      <enum name="_CM_SERVICE_LOAD_TYPE" />
    </typedef>
    <enum name="_CM_ERROR_CONTROL_TYPE">
      <member name="IgnoreError" value="0" />
      <member name="NormalError" value="1" />
      <member name="SevereError" value="2" />
      <member name="CriticalError" value="3" />
    </enum>
    <typedef name="SERVICE_ERROR_TYPE">
      <enum name="_CM_ERROR_CONTROL_TYPE" />
    </typedef>
    <struct name="_TAPE_ERASE">
      <field offset="0" name="Type">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Immediate">
        <type>BOOLEAN</type>
      </field>
    </struct>
    <typedef name="TAPE_ERASE">
      <struct name="_TAPE_ERASE" />
    </typedef>
    <typedef name="PTAPE_ERASE">
      <ptr>
        <struct name="_TAPE_ERASE" />
      </ptr>
    </typedef>
    <struct name="_TAPE_PREPARE">
      <field offset="0" name="Operation">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Immediate">
        <type>BOOLEAN</type>
      </field>
    </struct>
    <typedef name="TAPE_PREPARE">
      <struct name="_TAPE_PREPARE" />
    </typedef>
    <typedef name="PTAPE_PREPARE">
      <ptr>
        <struct name="_TAPE_PREPARE" />
      </ptr>
    </typedef>
    <struct name="_TAPE_WRITE_MARKS">
      <field offset="0" name="Type">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Count">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Immediate">
        <type>BOOLEAN</type>
      </field>
    </struct>
    <typedef name="TAPE_WRITE_MARKS">
      <struct name="_TAPE_WRITE_MARKS" />
    </typedef>
    <typedef name="PTAPE_WRITE_MARKS">
      <ptr>
        <struct name="_TAPE_WRITE_MARKS" />
      </ptr>
    </typedef>
    <struct name="_TAPE_GET_POSITION">
      <field offset="0" name="Type">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Partition">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Offset">
        <type>LARGE_INTEGER</type>
      </field>
    </struct>
    <typedef name="TAPE_GET_POSITION">
      <struct name="_TAPE_GET_POSITION" />
    </typedef>
    <typedef name="PTAPE_GET_POSITION">
      <ptr>
        <struct name="_TAPE_GET_POSITION" />
      </ptr>
    </typedef>
    <struct name="_TAPE_SET_POSITION">
      <field offset="0" name="Method">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Partition">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Offset">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="16" name="Immediate">
        <type>BOOLEAN</type>
      </field>
    </struct>
    <typedef name="TAPE_SET_POSITION">
      <struct name="_TAPE_SET_POSITION" />
    </typedef>
    <typedef name="PTAPE_SET_POSITION">
      <ptr>
        <struct name="_TAPE_SET_POSITION" />
      </ptr>
    </typedef>
    <struct name="_TAPE_GET_DRIVE_PARAMETERS">
      <field offset="0" name="ECC">
        <type>BOOLEAN</type>
      </field>
      <field offset="1" name="Compression">
        <type>BOOLEAN</type>
      </field>
      <field offset="2" name="DataPadding">
        <type>BOOLEAN</type>
      </field>
      <field offset="3" name="ReportSetmarks">
        <type>BOOLEAN</type>
      </field>
      <field offset="4" name="DefaultBlockSize">
        <type>DWORD</type>
      </field>
      <field offset="8" name="MaximumBlockSize">
        <type>DWORD</type>
      </field>
      <field offset="12" name="MinimumBlockSize">
        <type>DWORD</type>
      </field>
      <field offset="16" name="MaximumPartitionCount">
        <type>DWORD</type>
      </field>
      <field offset="20" name="FeaturesLow">
        <type>DWORD</type>
      </field>
      <field offset="24" name="FeaturesHigh">
        <type>DWORD</type>
      </field>
      <field offset="28" name="EOTWarningZoneSize">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="TAPE_GET_DRIVE_PARAMETERS">
      <struct name="_TAPE_GET_DRIVE_PARAMETERS" />
    </typedef>
    <typedef name="PTAPE_GET_DRIVE_PARAMETERS">
      <ptr>
        <struct name="_TAPE_GET_DRIVE_PARAMETERS" />
      </ptr>
    </typedef>
    <struct name="_TAPE_SET_DRIVE_PARAMETERS">
      <field offset="0" name="ECC">
        <type>BOOLEAN</type>
      </field>
      <field offset="1" name="Compression">
        <type>BOOLEAN</type>
      </field>
      <field offset="2" name="DataPadding">
        <type>BOOLEAN</type>
      </field>
      <field offset="3" name="ReportSetmarks">
        <type>BOOLEAN</type>
      </field>
      <field offset="4" name="EOTWarningZoneSize">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="TAPE_SET_DRIVE_PARAMETERS">
      <struct name="_TAPE_SET_DRIVE_PARAMETERS" />
    </typedef>
    <typedef name="PTAPE_SET_DRIVE_PARAMETERS">
      <ptr>
        <struct name="_TAPE_SET_DRIVE_PARAMETERS" />
      </ptr>
    </typedef>
    <struct name="_TAPE_GET_MEDIA_PARAMETERS">
      <field offset="0" name="Capacity">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="8" name="Remaining">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="16" name="BlockSize">
        <type>DWORD</type>
      </field>
      <field offset="20" name="PartitionCount">
        <type>DWORD</type>
      </field>
      <field offset="24" name="WriteProtected">
        <type>BOOLEAN</type>
      </field>
    </struct>
    <typedef name="TAPE_GET_MEDIA_PARAMETERS">
      <struct name="_TAPE_GET_MEDIA_PARAMETERS" />
    </typedef>
    <typedef name="PTAPE_GET_MEDIA_PARAMETERS">
      <ptr>
        <struct name="_TAPE_GET_MEDIA_PARAMETERS" />
      </ptr>
    </typedef>
    <struct name="_TAPE_SET_MEDIA_PARAMETERS">
      <field offset="0" name="BlockSize">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="TAPE_SET_MEDIA_PARAMETERS">
      <struct name="_TAPE_SET_MEDIA_PARAMETERS" />
    </typedef>
    <typedef name="PTAPE_SET_MEDIA_PARAMETERS">
      <ptr>
        <struct name="_TAPE_SET_MEDIA_PARAMETERS" />
      </ptr>
    </typedef>
    <struct name="_TAPE_CREATE_PARTITION">
      <field offset="0" name="Method">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Count">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Size">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="TAPE_CREATE_PARTITION">
      <struct name="_TAPE_CREATE_PARTITION" />
    </typedef>
    <typedef name="PTAPE_CREATE_PARTITION">
      <ptr>
        <struct name="_TAPE_CREATE_PARTITION" />
      </ptr>
    </typedef>
    <struct name="_TAPE_WMI_OPERATIONS">
      <field offset="0" name="Method">
        <type>DWORD</type>
      </field>
      <field offset="4" name="DataBufferSize">
        <type>DWORD</type>
      </field>
      <field offset="8" name="DataBuffer">
        <type>PVOID</type>
      </field>
    </struct>
    <typedef name="TAPE_WMI_OPERATIONS">
      <struct name="_TAPE_WMI_OPERATIONS" />
    </typedef>
    <typedef name="PTAPE_WMI_OPERATIONS">
      <ptr>
        <struct name="_TAPE_WMI_OPERATIONS" />
      </ptr>
    </typedef>
    <enum name="_TAPE_DRIVE_PROBLEM_TYPE">
      <member name="TapeDriveProblemNone" value="0" />
      <member name="TapeDriveReadWriteWarning" value="1" />
      <member name="TapeDriveReadWriteError" value="2" />
      <member name="TapeDriveReadWarning" value="3" />
      <member name="TapeDriveWriteWarning" value="4" />
      <member name="TapeDriveReadError" value="5" />
      <member name="TapeDriveWriteError" value="6" />
      <member name="TapeDriveHardwareError" value="7" />
      <member name="TapeDriveUnsupportedMedia" value="8" />
      <member name="TapeDriveScsiConnectionError" value="9" />
      <member name="TapeDriveTimetoClean" value="10" />
      <member name="TapeDriveCleanDriveNow" value="11" />
      <member name="TapeDriveMediaLifeExpired" value="12" />
      <member name="TapeDriveSnappedTape" value="13" />
    </enum>
    <typedef name="TAPE_DRIVE_PROBLEM_TYPE">
      <enum name="_TAPE_DRIVE_PROBLEM_TYPE" />
    </typedef>
    <typedef name="UOW">
      <type>GUID</type>
    </typedef>
    <typedef name="PUOW">
      <ptr>
        <type>GUID</type>
      </ptr>
    </typedef>
    <typedef name="CRM_PROTOCOL_ID">
      <type>GUID</type>
    </typedef>
    <typedef name="PCRM_PROTOCOL_ID">
      <ptr>
        <type>GUID</type>
      </ptr>
    </typedef>
    <typedef name="NOTIFICATION_MASK">
      <type>ULONG</type>
    </typedef>
    <struct name="_TRANSACTION_NOTIFICATION">
      <field offset="0" name="TransactionKey">
        <type>PVOID</type>
      </field>
      <field offset="4" name="TransactionNotification">
        <type>ULONG</type>
      </field>
      <field offset="8" name="TmVirtualClock">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="16" name="ArgumentLength">
        <type>ULONG</type>
      </field>
    </struct>
    <typedef name="TRANSACTION_NOTIFICATION">
      <struct name="_TRANSACTION_NOTIFICATION" />
    </typedef>
    <typedef name="PTRANSACTION_NOTIFICATION">
      <ptr>
        <struct name="_TRANSACTION_NOTIFICATION" />
      </ptr>
    </typedef>
    <struct name="_TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT">
      <field offset="0" name="EnlistmentId">
        <type>GUID</type>
      </field>
      <field offset="16">
        <type>UOW</type>
      </field>
    </struct>
    <typedef name="TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT">
      <struct name="_TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT" />
    </typedef>
    <typedef name="PTRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT">
      <ptr>
        <struct name="_TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT" />
      </ptr>
    </typedef>
    <struct name="_TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT">
      <field offset="0" name="TmIdentity">
        <type>GUID</type>
      </field>
      <field offset="16" name="Flags">
        <type>ULONG</type>
      </field>
    </struct>
    <typedef name="TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT">
      <struct name="_TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT" />
    </typedef>
    <typedef name="PTRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT">
      <ptr>
        <struct name="_TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT" />
      </ptr>
    </typedef>
    <typedef name="SAVEPOINT_ID">
      <type>ULONG</type>
    </typedef>
    <typedef name="PSAVEPOINT_ID">
      <ptr>
        <type>ULONG</type>
      </ptr>
    </typedef>
    <struct name="_TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT">
      <field offset="0" name="SavepointId">
        <type>SAVEPOINT_ID</type>
      </field>
    </struct>
    <typedef name="TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT">
      <struct name="_TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT" />
    </typedef>
    <typedef name="PTRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT">
      <ptr>
        <struct name="_TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT" />
      </ptr>
    </typedef>
    <struct name="_TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT">
      <field offset="0" name="PropagationCookie">
        <type>ULONG</type>
      </field>
      <field offset="8">
        <type>UOW</type>
      </field>
      <field offset="24" name="TmIdentity">
        <type>GUID</type>
      </field>
      <field offset="40" name="BufferLength">
        <type>ULONG</type>
      </field>
    </struct>
    <typedef name="TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT">
      <struct name="_TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT" />
    </typedef>
    <typedef name="PTRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT">
      <ptr>
        <struct name="_TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT" />
      </ptr>
    </typedef>
    <struct name="_TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT">
      <field offset="0" name="MarshalCookie">
        <type>ULONG</type>
      </field>
      <field offset="8">
        <type>UOW</type>
      </field>
    </struct>
    <typedef name="TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT">
      <struct name="_TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT" />
    </typedef>
    <typedef name="PTRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT">
      <ptr>
        <struct name="_TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT" />
      </ptr>
    </typedef>
    <typedef name="TRANSACTION_NOTIFICATION_PROMOTE_ARGUMENT">
      <type>TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT</type>
    </typedef>
    <typedef name="PTRANSACTION_NOTIFICATION_PROMOTE_ARGUMENT">
      <ptr>
        <type>TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT</type>
      </ptr>
    </typedef>
    <struct name="_KCRM_MARSHAL_HEADER">
      <field offset="0" name="VersionMajor">
        <type>ULONG</type>
      </field>
      <field offset="4" name="VersionMinor">
        <type>ULONG</type>
      </field>
      <field offset="8" name="NumProtocols">
        <type>ULONG</type>
      </field>
      <field offset="12" name="Unused">
        <type>ULONG</type>
      </field>
    </struct>
    <typedef name="KCRM_MARSHAL_HEADER">
      <struct name="_KCRM_MARSHAL_HEADER" />
    </typedef>
    <typedef name="PKCRM_MARSHAL_HEADER">
      <ptr>
        <struct name="_KCRM_MARSHAL_HEADER" />
      </ptr>
    </typedef>
    <typedef name="PRKCRM_MARSHAL_HEADER">
      <ptr>
        <struct name="_KCRM_MARSHAL_HEADER" />
      </ptr>
    </typedef>
    <struct name="_KCRM_TRANSACTION_BLOB">
      <field offset="0">
        <type>UOW</type>
      </field>
      <field offset="16" name="TmIdentity">
        <type>GUID</type>
      </field>
      <field offset="32" name="IsolationLevel">
        <type>ULONG</type>
      </field>
      <field offset="36" name="IsolationFlags">
        <type>ULONG</type>
      </field>
      <field offset="40" name="Timeout">
        <type>ULONG</type>
      </field>
      <field offset="48" name="Description">
        <arr length="64">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="KCRM_TRANSACTION_BLOB">
      <struct name="_KCRM_TRANSACTION_BLOB" />
    </typedef>
    <typedef name="PKCRM_TRANSACTION_BLOB">
      <ptr>
        <struct name="_KCRM_TRANSACTION_BLOB" />
      </ptr>
    </typedef>
    <typedef name="PRKCRM_TRANSACTION_BLOB">
      <ptr>
        <struct name="_KCRM_TRANSACTION_BLOB" />
      </ptr>
    </typedef>
    <struct name="_KCRM_PROTOCOL_BLOB">
      <field offset="0" name="ProtocolId">
        <type>CRM_PROTOCOL_ID</type>
      </field>
      <field offset="16" name="StaticInfoLength">
        <type>ULONG</type>
      </field>
      <field offset="20" name="TransactionIdInfoLength">
        <type>ULONG</type>
      </field>
      <field offset="24" name="Unused1">
        <type>ULONG</type>
      </field>
      <field offset="28" name="Unused2">
        <type>ULONG</type>
      </field>
    </struct>
    <typedef name="KCRM_PROTOCOL_BLOB">
      <struct name="_KCRM_PROTOCOL_BLOB" />
    </typedef>
    <typedef name="PKCRM_PROTOCOL_BLOB">
      <ptr>
        <struct name="_KCRM_PROTOCOL_BLOB" />
      </ptr>
    </typedef>
    <typedef name="PRKCRM_PROTOCOL_BLOB">
      <ptr>
        <struct name="_KCRM_PROTOCOL_BLOB" />
      </ptr>
    </typedef>
    <enum name="_TRANSACTION_OUTCOME">
      <member name="TransactionOutcomeUndetermined" value="1" />
      <member name="TransactionOutcomeCommitted" value="2" />
      <member name="TransactionOutcomeAborted" value="3" />
    </enum>
    <typedef name="TRANSACTION_OUTCOME">
      <enum name="_TRANSACTION_OUTCOME" />
    </typedef>
    <enum name="_TRANSACTION_STATE">
      <member name="TransactionStateNormal" value="1" />
      <member name="TransactionStateIndoubt" value="2" />
      <member name="TransactionStateCommittedNotify" value="3" />
    </enum>
    <typedef name="TRANSACTION_STATE">
      <enum name="_TRANSACTION_STATE" />
    </typedef>
    <struct name="_TRANSACTION_BASIC_INFORMATION">
      <field offset="0" name="TransactionId">
        <type>GUID</type>
      </field>
      <field offset="16" name="State">
        <type>DWORD</type>
      </field>
      <field offset="20" name="Outcome">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="TRANSACTION_BASIC_INFORMATION">
      <struct name="_TRANSACTION_BASIC_INFORMATION" />
    </typedef>
    <typedef name="PTRANSACTION_BASIC_INFORMATION">
      <ptr>
        <struct name="_TRANSACTION_BASIC_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_TRANSACTIONMANAGER_BASIC_INFORMATION">
      <field offset="0" name="TmIdentity">
        <type>GUID</type>
      </field>
      <field offset="16" name="VirtualClock">
        <type>LARGE_INTEGER</type>
      </field>
    </struct>
    <typedef name="TRANSACTIONMANAGER_BASIC_INFORMATION">
      <struct name="_TRANSACTIONMANAGER_BASIC_INFORMATION" />
    </typedef>
    <typedef name="PTRANSACTIONMANAGER_BASIC_INFORMATION">
      <ptr>
        <struct name="_TRANSACTIONMANAGER_BASIC_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_TRANSACTIONMANAGER_LOG_INFORMATION">
      <field offset="0" name="LogIdentity">
        <type>GUID</type>
      </field>
    </struct>
    <typedef name="TRANSACTIONMANAGER_LOG_INFORMATION">
      <struct name="_TRANSACTIONMANAGER_LOG_INFORMATION" />
    </typedef>
    <typedef name="PTRANSACTIONMANAGER_LOG_INFORMATION">
      <ptr>
        <struct name="_TRANSACTIONMANAGER_LOG_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_TRANSACTIONMANAGER_LOGPATH_INFORMATION">
      <field offset="0" name="LogPathLength">
        <type>DWORD</type>
      </field>
      <field offset="4" name="LogPath">
        <arr length="1">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="TRANSACTIONMANAGER_LOGPATH_INFORMATION">
      <struct name="_TRANSACTIONMANAGER_LOGPATH_INFORMATION" />
    </typedef>
    <typedef name="PTRANSACTIONMANAGER_LOGPATH_INFORMATION">
      <ptr>
        <struct name="_TRANSACTIONMANAGER_LOGPATH_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_TRANSACTIONMANAGER_RECOVERY_INFORMATION">
      <field offset="0" name="LastRecoveredLsn">
        <type>ULONGLONG</type>
      </field>
    </struct>
    <typedef name="TRANSACTIONMANAGER_RECOVERY_INFORMATION">
      <struct name="_TRANSACTIONMANAGER_RECOVERY_INFORMATION" />
    </typedef>
    <typedef name="PTRANSACTIONMANAGER_RECOVERY_INFORMATION">
      <ptr>
        <struct name="_TRANSACTIONMANAGER_RECOVERY_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_TRANSACTIONMANAGER_OLDEST_INFORMATION">
      <field offset="0" name="OldestTransactionGuid">
        <type>GUID</type>
      </field>
    </struct>
    <typedef name="TRANSACTIONMANAGER_OLDEST_INFORMATION">
      <struct name="_TRANSACTIONMANAGER_OLDEST_INFORMATION" />
    </typedef>
    <typedef name="PTRANSACTIONMANAGER_OLDEST_INFORMATION">
      <ptr>
        <struct name="_TRANSACTIONMANAGER_OLDEST_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_TRANSACTION_PROPERTIES_INFORMATION">
      <field offset="0" name="IsolationLevel">
        <type>DWORD</type>
      </field>
      <field offset="4" name="IsolationFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Timeout">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="16" name="Outcome">
        <type>DWORD</type>
      </field>
      <field offset="20" name="DescriptionLength">
        <type>DWORD</type>
      </field>
      <field offset="24" name="Description">
        <arr length="1">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="TRANSACTION_PROPERTIES_INFORMATION">
      <struct name="_TRANSACTION_PROPERTIES_INFORMATION" />
    </typedef>
    <typedef name="PTRANSACTION_PROPERTIES_INFORMATION">
      <ptr>
        <struct name="_TRANSACTION_PROPERTIES_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_TRANSACTION_BIND_INFORMATION">
      <field offset="0" name="TmHandle">
        <type>HANDLE</type>
      </field>
    </struct>
    <typedef name="TRANSACTION_BIND_INFORMATION">
      <struct name="_TRANSACTION_BIND_INFORMATION" />
    </typedef>
    <typedef name="PTRANSACTION_BIND_INFORMATION">
      <ptr>
        <struct name="_TRANSACTION_BIND_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_TRANSACTION_ENLISTMENT_PAIR">
      <field offset="0" name="EnlistmentId">
        <type>GUID</type>
      </field>
      <field offset="16" name="ResourceManagerId">
        <type>GUID</type>
      </field>
    </struct>
    <typedef name="TRANSACTION_ENLISTMENT_PAIR">
      <struct name="_TRANSACTION_ENLISTMENT_PAIR" />
    </typedef>
    <typedef name="PTRANSACTION_ENLISTMENT_PAIR">
      <ptr>
        <struct name="_TRANSACTION_ENLISTMENT_PAIR" />
      </ptr>
    </typedef>
    <struct name="_TRANSACTION_ENLISTMENTS_INFORMATION">
      <field offset="0" name="NumberOfEnlistments">
        <type>DWORD</type>
      </field>
      <field offset="8" name="EnlistmentPair">
        <arr length="1">
          <type>TRANSACTION_ENLISTMENT_PAIR</type>
        </arr>
      </field>
    </struct>
    <typedef name="TRANSACTION_ENLISTMENTS_INFORMATION">
      <struct name="_TRANSACTION_ENLISTMENTS_INFORMATION" />
    </typedef>
    <typedef name="PTRANSACTION_ENLISTMENTS_INFORMATION">
      <ptr>
        <struct name="_TRANSACTION_ENLISTMENTS_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION">
      <field offset="0" name="SuperiorEnlistmentPair">
        <type>TRANSACTION_ENLISTMENT_PAIR</type>
      </field>
    </struct>
    <typedef name="TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION">
      <struct name="_TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION" />
    </typedef>
    <typedef name="PTRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION">
      <ptr>
        <struct name="_TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_RESOURCEMANAGER_BASIC_INFORMATION">
      <field offset="0" name="ResourceManagerId">
        <type>GUID</type>
      </field>
      <field offset="16" name="DescriptionLength">
        <type>DWORD</type>
      </field>
      <field offset="20" name="Description">
        <arr length="1">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="RESOURCEMANAGER_BASIC_INFORMATION">
      <struct name="_RESOURCEMANAGER_BASIC_INFORMATION" />
    </typedef>
    <typedef name="PRESOURCEMANAGER_BASIC_INFORMATION">
      <ptr>
        <struct name="_RESOURCEMANAGER_BASIC_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_RESOURCEMANAGER_COMPLETION_INFORMATION">
      <field offset="0" name="IoCompletionPortHandle">
        <type>HANDLE</type>
      </field>
      <field offset="4" name="CompletionKey">
        <type>ULONG_PTR</type>
      </field>
    </struct>
    <typedef name="RESOURCEMANAGER_COMPLETION_INFORMATION">
      <struct name="_RESOURCEMANAGER_COMPLETION_INFORMATION" />
    </typedef>
    <typedef name="PRESOURCEMANAGER_COMPLETION_INFORMATION">
      <ptr>
        <struct name="_RESOURCEMANAGER_COMPLETION_INFORMATION" />
      </ptr>
    </typedef>
    <enum name="_TRANSACTION_INFORMATION_CLASS">
      <member name="TransactionBasicInformation" value="0" />
      <member name="TransactionPropertiesInformation" value="1" />
      <member name="TransactionEnlistmentInformation" value="2" />
      <member name="TransactionSuperiorEnlistmentInformation" value="3" />
      <member name="TransactionBindInformation" value="4" />
      <member name="TransactionDTCPrivateInformation" value="5" />
    </enum>
    <typedef name="TRANSACTION_INFORMATION_CLASS">
      <enum name="_TRANSACTION_INFORMATION_CLASS" />
    </typedef>
    <enum name="_TRANSACTIONMANAGER_INFORMATION_CLASS">
      <member name="TransactionManagerBasicInformation" value="0" />
      <member name="TransactionManagerLogInformation" value="1" />
      <member name="TransactionManagerLogPathInformation" value="2" />
      <member name="TransactionManagerRecoveryInformation" value="4" />
      <member name="TransactionManagerOnlineProbeInformation" value="3" />
      <member name="TransactionManagerOldestTransactionInformation" value="5" />
    </enum>
    <typedef name="TRANSACTIONMANAGER_INFORMATION_CLASS">
      <enum name="_TRANSACTIONMANAGER_INFORMATION_CLASS" />
    </typedef>
    <enum name="_RESOURCEMANAGER_INFORMATION_CLASS">
      <member name="ResourceManagerBasicInformation" value="0" />
      <member name="ResourceManagerCompletionInformation" value="1" />
    </enum>
    <typedef name="RESOURCEMANAGER_INFORMATION_CLASS">
      <enum name="_RESOURCEMANAGER_INFORMATION_CLASS" />
    </typedef>
    <struct name="_ENLISTMENT_BASIC_INFORMATION">
      <field offset="0" name="EnlistmentId">
        <type>GUID</type>
      </field>
      <field offset="16" name="TransactionId">
        <type>GUID</type>
      </field>
      <field offset="32" name="ResourceManagerId">
        <type>GUID</type>
      </field>
    </struct>
    <typedef name="ENLISTMENT_BASIC_INFORMATION">
      <struct name="_ENLISTMENT_BASIC_INFORMATION" />
    </typedef>
    <typedef name="PENLISTMENT_BASIC_INFORMATION">
      <ptr>
        <struct name="_ENLISTMENT_BASIC_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_ENLISTMENT_CRM_INFORMATION">
      <field offset="0" name="CrmTransactionManagerId">
        <type>GUID</type>
      </field>
      <field offset="16" name="CrmResourceManagerId">
        <type>GUID</type>
      </field>
      <field offset="32" name="CrmEnlistmentId">
        <type>GUID</type>
      </field>
    </struct>
    <typedef name="ENLISTMENT_CRM_INFORMATION">
      <struct name="_ENLISTMENT_CRM_INFORMATION" />
    </typedef>
    <typedef name="PENLISTMENT_CRM_INFORMATION">
      <ptr>
        <struct name="_ENLISTMENT_CRM_INFORMATION" />
      </ptr>
    </typedef>
    <enum name="_ENLISTMENT_INFORMATION_CLASS">
      <member name="EnlistmentBasicInformation" value="0" />
      <member name="EnlistmentRecoveryInformation" value="1" />
      <member name="EnlistmentCrmInformation" value="2" />
    </enum>
    <typedef name="ENLISTMENT_INFORMATION_CLASS">
      <enum name="_ENLISTMENT_INFORMATION_CLASS" />
    </typedef>
    <struct name="_TRANSACTION_LIST_ENTRY">
      <field offset="0">
        <type>UOW</type>
      </field>
    </struct>
    <typedef name="TRANSACTION_LIST_ENTRY">
      <struct name="_TRANSACTION_LIST_ENTRY" />
    </typedef>
    <typedef name="PTRANSACTION_LIST_ENTRY">
      <ptr>
        <struct name="_TRANSACTION_LIST_ENTRY" />
      </ptr>
    </typedef>
    <struct name="_TRANSACTION_LIST_INFORMATION">
      <field offset="0" name="NumberOfTransactions">
        <type>DWORD</type>
      </field>
      <field offset="8" name="TransactionInformation">
        <arr length="1">
          <type>TRANSACTION_LIST_ENTRY</type>
        </arr>
      </field>
    </struct>
    <typedef name="TRANSACTION_LIST_INFORMATION">
      <struct name="_TRANSACTION_LIST_INFORMATION" />
    </typedef>
    <typedef name="PTRANSACTION_LIST_INFORMATION">
      <ptr>
        <struct name="_TRANSACTION_LIST_INFORMATION" />
      </ptr>
    </typedef>
    <enum name="_KTMOBJECT_TYPE">
      <member name="KTMOBJECT_TRANSACTION" value="0" />
      <member name="KTMOBJECT_TRANSACTION_MANAGER" value="1" />
      <member name="KTMOBJECT_RESOURCE_MANAGER" value="2" />
      <member name="KTMOBJECT_ENLISTMENT" value="3" />
      <member name="KTMOBJECT_INVALID" value="4" />
    </enum>
    <typedef name="KTMOBJECT_TYPE">
      <enum name="_KTMOBJECT_TYPE" />
    </typedef>
    <typedef name="PKTMOBJECT_TYPE">
      <ptr>
        <enum name="_KTMOBJECT_TYPE" />
      </ptr>
    </typedef>
    <struct name="_KTMOBJECT_CURSOR">
      <field offset="0" name="LastQuery">
        <type>GUID</type>
      </field>
      <field offset="16" name="ObjectIdCount">
        <type>DWORD</type>
      </field>
      <field offset="24" name="ObjectIds">
        <arr length="1">
          <type>GUID</type>
        </arr>
      </field>
    </struct>
    <typedef name="KTMOBJECT_CURSOR">
      <struct name="_KTMOBJECT_CURSOR" />
    </typedef>
    <typedef name="PKTMOBJECT_CURSOR">
      <ptr>
        <struct name="_KTMOBJECT_CURSOR" />
      </ptr>
    </typedef>
    <typedef name="TP_VERSION">
      <type>DWORD</type>
    </typedef>
    <typedef name="PTP_VERSION">
      <ptr>
        <type>DWORD</type>
      </ptr>
    </typedef>
    <typedef name="TP_CALLBACK_INSTANCE">
      <struct name="_TP_CALLBACK_INSTANCE" />
    </typedef>
    <typedef name="PTP_CALLBACK_INSTANCE">
      <ptr>
        <struct name="_TP_CALLBACK_INSTANCE" />
      </ptr>
    </typedef>
    <typedef name="PTP_SIMPLE_CALLBACK">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="Instance">
            <type>PTP_CALLBACK_INSTANCE</type>
            <stack size="4" />
          </arg>
          <arg name="Context">
            <type>PVOID</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="TP_POOL">
      <struct name="_TP_POOL" />
    </typedef>
    <typedef name="PTP_POOL">
      <ptr>
        <struct name="_TP_POOL" />
      </ptr>
    </typedef>
    <enum name="_TP_CALLBACK_PRIORITY">
      <member name="TP_CALLBACK_PRIORITY_HIGH" value="0" />
      <member name="TP_CALLBACK_PRIORITY_NORMAL" value="1" />
      <member name="TP_CALLBACK_PRIORITY_LOW" value="2" />
      <member name="TP_CALLBACK_PRIORITY_INVALID" value="3" />
    </enum>
    <typedef name="TP_CALLBACK_PRIORITY">
      <enum name="_TP_CALLBACK_PRIORITY" />
    </typedef>
    <struct name="_TP_POOL_STACK_INFORMATION">
      <field offset="0" name="StackReserve">
        <type>SIZE_T</type>
      </field>
      <field offset="4" name="StackCommit">
        <type>SIZE_T</type>
      </field>
    </struct>
    <typedef name="TP_POOL_STACK_INFORMATION">
      <struct name="_TP_POOL_STACK_INFORMATION" />
    </typedef>
    <typedef name="PTP_POOL_STACK_INFORMATION">
      <ptr>
        <struct name="_TP_POOL_STACK_INFORMATION" />
      </ptr>
    </typedef>
    <typedef name="TP_CLEANUP_GROUP">
      <struct name="_TP_CLEANUP_GROUP" />
    </typedef>
    <typedef name="PTP_CLEANUP_GROUP">
      <ptr>
        <struct name="_TP_CLEANUP_GROUP" />
      </ptr>
    </typedef>
    <typedef name="PTP_CLEANUP_GROUP_CANCEL_CALLBACK">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="ObjectContext">
            <type>PVOID</type>
            <stack size="4" />
          </arg>
          <arg name="CleanupContext">
            <type>PVOID</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="struct_60">
      <field offset="0" name="LongFunction">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Persistent">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Private">
        <type>DWORD</type>
      </field>
    </struct>
    <struct name="_TP_CALLBACK_ENVIRON_V3">
      <field offset="0" name="Version">
        <type>TP_VERSION</type>
      </field>
      <field offset="4" name="Pool">
        <type>PTP_POOL</type>
      </field>
      <field offset="8" name="CleanupGroup">
        <type>PTP_CLEANUP_GROUP</type>
      </field>
      <field offset="12" name="CleanupGroupCancelCallback">
        <type>PTP_CLEANUP_GROUP_CANCEL_CALLBACK</type>
      </field>
      <field offset="16" name="RaceDll">
        <type>PVOID</type>
      </field>
      <field offset="20" name="ActivationContext">
        <ptr>
          <struct name="_ACTIVATION_CONTEXT" />
        </ptr>
      </field>
      <field offset="24" name="FinalizationCallback">
        <type>PTP_SIMPLE_CALLBACK</type>
      </field>
      <field offset="32" name="u">
        <union>
          <alt name="Flags">
            <type>DWORD</type>
          </alt>
          <alt name="s">
            <struct name="struct_60" />
          </alt>
        </union>
      </field>
      <field offset="44" name="CallbackPriority">
        <type>TP_CALLBACK_PRIORITY</type>
      </field>
      <field offset="48" name="Size">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="TP_CALLBACK_ENVIRON_V3">
      <struct name="_TP_CALLBACK_ENVIRON_V3" />
    </typedef>
    <typedef name="TP_CALLBACK_ENVIRON">
      <type>TP_CALLBACK_ENVIRON_V3</type>
    </typedef>
    <typedef name="PTP_CALLBACK_ENVIRON">
      <ptr>
        <type>TP_CALLBACK_ENVIRON_V3</type>
      </ptr>
    </typedef>
    <typedef name="TP_WORK">
      <struct name="_TP_WORK" />
    </typedef>
    <typedef name="PTP_WORK">
      <ptr>
        <struct name="_TP_WORK" />
      </ptr>
    </typedef>
    <typedef name="PTP_WORK_CALLBACK">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="Instance">
            <type>PTP_CALLBACK_INSTANCE</type>
            <stack size="4" />
          </arg>
          <arg name="Context">
            <type>PVOID</type>
            <stack size="4" />
          </arg>
          <arg name="Work">
            <type>PTP_WORK</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="TP_TIMER">
      <struct name="_TP_TIMER" />
    </typedef>
    <typedef name="PTP_TIMER">
      <ptr>
        <struct name="_TP_TIMER" />
      </ptr>
    </typedef>
    <typedef name="PTP_TIMER_CALLBACK">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="Instance">
            <type>PTP_CALLBACK_INSTANCE</type>
            <stack size="4" />
          </arg>
          <arg name="Context">
            <type>PVOID</type>
            <stack size="4" />
          </arg>
          <arg name="Timer">
            <type>PTP_TIMER</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="TP_WAIT_RESULT">
      <type>DWORD</type>
    </typedef>
    <typedef name="TP_WAIT">
      <struct name="_TP_WAIT" />
    </typedef>
    <typedef name="PTP_WAIT">
      <ptr>
        <struct name="_TP_WAIT" />
      </ptr>
    </typedef>
    <typedef name="PTP_WAIT_CALLBACK">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="Instance">
            <type>PTP_CALLBACK_INSTANCE</type>
            <stack size="4" />
          </arg>
          <arg name="Context">
            <type>PVOID</type>
            <stack size="4" />
          </arg>
          <arg name="Wait">
            <type>PTP_WAIT</type>
            <stack size="4" />
          </arg>
          <arg name="WaitResult">
            <type>TP_WAIT_RESULT</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="TP_IO">
      <struct name="_TP_IO" />
    </typedef>
    <typedef name="PTP_IO">
      <ptr>
        <struct name="_TP_IO" />
      </ptr>
    </typedef>
    <typedef name="WPARAM">
      <type>UINT_PTR</type>
    </typedef>
    <typedef name="LPARAM">
      <type>LONG_PTR</type>
    </typedef>
    <typedef name="LRESULT">
      <type>LONG_PTR</type>
    </typedef>
    <struct name="HWND__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HWND">
      <ptr>
        <struct name="HWND__" />
      </ptr>
    </typedef>
    <struct name="HHOOK__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HHOOK">
      <ptr>
        <struct name="HHOOK__" />
      </ptr>
    </typedef>
    <typedef name="ATOM">
      <type>WORD</type>
    </typedef>
    <typedef name="SPHANDLE">
      <ptr>
        <type>HANDLE</type>
      </ptr>
    </typedef>
    <typedef name="LPHANDLE">
      <ptr>
        <type>HANDLE</type>
      </ptr>
    </typedef>
    <typedef name="HGLOBAL">
      <type>HANDLE</type>
    </typedef>
    <typedef name="HLOCAL">
      <type>HANDLE</type>
    </typedef>
    <typedef name="GLOBALHANDLE">
      <type>HANDLE</type>
    </typedef>
    <typedef name="LOCALHANDLE">
      <type>HANDLE</type>
    </typedef>
    <typedef name="FARPROC">
      <ptr>
        <fn>
          <return>
            <prim domain="SignedInt" size="4" />
            <reg>eax</reg>
          </return>
        </fn>
      </ptr>
    </typedef>
    <typedef name="NEARPROC">
      <ptr>
        <fn>
          <return>
            <prim domain="SignedInt" size="4" />
            <reg>eax</reg>
          </return>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PROC">
      <ptr>
        <fn>
          <return>
            <prim domain="SignedInt" size="4" />
            <reg>eax</reg>
          </return>
        </fn>
      </ptr>
    </typedef>
    <typedef name="HGDIOBJ">
      <ptr>
        <void />
      </ptr>
    </typedef>
    <struct name="HKEY__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HKEY">
      <ptr>
        <struct name="HKEY__" />
      </ptr>
    </typedef>
    <typedef name="PHKEY">
      <ptr>
        <type>HKEY</type>
      </ptr>
    </typedef>
    <struct name="HACCEL__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HACCEL">
      <ptr>
        <struct name="HACCEL__" />
      </ptr>
    </typedef>
    <struct name="HBITMAP__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HBITMAP">
      <ptr>
        <struct name="HBITMAP__" />
      </ptr>
    </typedef>
    <struct name="HBRUSH__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HBRUSH">
      <ptr>
        <struct name="HBRUSH__" />
      </ptr>
    </typedef>
    <struct name="HCOLORSPACE__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HCOLORSPACE">
      <ptr>
        <struct name="HCOLORSPACE__" />
      </ptr>
    </typedef>
    <struct name="HDC__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HDC">
      <ptr>
        <struct name="HDC__" />
      </ptr>
    </typedef>
    <struct name="HGLRC__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HGLRC">
      <ptr>
        <struct name="HGLRC__" />
      </ptr>
    </typedef>
    <struct name="HDESK__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HDESK">
      <ptr>
        <struct name="HDESK__" />
      </ptr>
    </typedef>
    <struct name="HENHMETAFILE__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HENHMETAFILE">
      <ptr>
        <struct name="HENHMETAFILE__" />
      </ptr>
    </typedef>
    <struct name="HFONT__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HFONT">
      <ptr>
        <struct name="HFONT__" />
      </ptr>
    </typedef>
    <struct name="HICON__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HICON">
      <ptr>
        <struct name="HICON__" />
      </ptr>
    </typedef>
    <struct name="HMENU__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HMENU">
      <ptr>
        <struct name="HMENU__" />
      </ptr>
    </typedef>
    <struct name="HMETAFILE__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HMETAFILE">
      <ptr>
        <struct name="HMETAFILE__" />
      </ptr>
    </typedef>
    <struct name="HINSTANCE__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HINSTANCE">
      <ptr>
        <struct name="HINSTANCE__" />
      </ptr>
    </typedef>
    <typedef name="HMODULE">
      <type>HINSTANCE</type>
    </typedef>
    <struct name="HPALETTE__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HPALETTE">
      <ptr>
        <struct name="HPALETTE__" />
      </ptr>
    </typedef>
    <struct name="HPEN__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HPEN">
      <ptr>
        <struct name="HPEN__" />
      </ptr>
    </typedef>
    <struct name="HRGN__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HRGN">
      <ptr>
        <struct name="HRGN__" />
      </ptr>
    </typedef>
    <struct name="HRSRC__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HRSRC">
      <ptr>
        <struct name="HRSRC__" />
      </ptr>
    </typedef>
    <struct name="HSPRITE__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HSPRITE">
      <ptr>
        <struct name="HSPRITE__" />
      </ptr>
    </typedef>
    <struct name="HLSURF__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HLSURF">
      <ptr>
        <struct name="HLSURF__" />
      </ptr>
    </typedef>
    <struct name="HSTR__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HSTR">
      <ptr>
        <struct name="HSTR__" />
      </ptr>
    </typedef>
    <struct name="HTASK__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HTASK">
      <ptr>
        <struct name="HTASK__" />
      </ptr>
    </typedef>
    <struct name="HWINSTA__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HWINSTA">
      <ptr>
        <struct name="HWINSTA__" />
      </ptr>
    </typedef>
    <struct name="HKL__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HKL">
      <ptr>
        <struct name="HKL__" />
      </ptr>
    </typedef>
    <struct name="HWINEVENTHOOK__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HWINEVENTHOOK">
      <ptr>
        <struct name="HWINEVENTHOOK__" />
      </ptr>
    </typedef>
    <struct name="HMONITOR__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HMONITOR">
      <ptr>
        <struct name="HMONITOR__" />
      </ptr>
    </typedef>
    <struct name="HUMPD__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HUMPD">
      <ptr>
        <struct name="HUMPD__" />
      </ptr>
    </typedef>
    <typedef name="HFILE">
      <prim domain="SignedInt" size="4" />
    </typedef>
    <typedef name="HCURSOR">
      <type>HICON</type>
    </typedef>
    <typedef name="COLORREF">
      <type>DWORD</type>
    </typedef>
    <typedef name="LPCOLORREF">
      <ptr>
        <type>DWORD</type>
      </ptr>
    </typedef>
    <struct name="tagRECT">
      <field offset="0" name="left">
        <type>LONG</type>
      </field>
      <field offset="4" name="top">
        <type>LONG</type>
      </field>
      <field offset="8" name="right">
        <type>LONG</type>
      </field>
      <field offset="12" name="bottom">
        <type>LONG</type>
      </field>
    </struct>
    <typedef name="RECT">
      <struct name="tagRECT" />
    </typedef>
    <typedef name="PRECT">
      <ptr>
        <struct name="tagRECT" />
      </ptr>
    </typedef>
    <typedef name="NPRECT">
      <ptr>
        <struct name="tagRECT" />
      </ptr>
    </typedef>
    <typedef name="LPRECT">
      <ptr>
        <struct name="tagRECT" />
      </ptr>
    </typedef>
    <typedef name="LPCRECT">
      <ptr>
        <type>RECT</type>
      </ptr>
    </typedef>
    <struct name="_RECTL">
      <field offset="0" name="left">
        <type>LONG</type>
      </field>
      <field offset="4" name="top">
        <type>LONG</type>
      </field>
      <field offset="8" name="right">
        <type>LONG</type>
      </field>
      <field offset="12" name="bottom">
        <type>LONG</type>
      </field>
    </struct>
    <typedef name="RECTL">
      <struct name="_RECTL" />
    </typedef>
    <typedef name="PRECTL">
      <ptr>
        <struct name="_RECTL" />
      </ptr>
    </typedef>
    <typedef name="LPRECTL">
      <ptr>
        <struct name="_RECTL" />
      </ptr>
    </typedef>
    <typedef name="LPCRECTL">
      <ptr>
        <type>RECTL</type>
      </ptr>
    </typedef>
    <struct name="tagPOINT">
      <field offset="0" name="x">
        <type>LONG</type>
      </field>
      <field offset="4" name="y">
        <type>LONG</type>
      </field>
    </struct>
    <typedef name="POINT">
      <struct name="tagPOINT" />
    </typedef>
    <typedef name="PPOINT">
      <ptr>
        <struct name="tagPOINT" />
      </ptr>
    </typedef>
    <typedef name="NPPOINT">
      <ptr>
        <struct name="tagPOINT" />
      </ptr>
    </typedef>
    <typedef name="LPPOINT">
      <ptr>
        <struct name="tagPOINT" />
      </ptr>
    </typedef>
    <struct name="_POINTL">
      <field offset="0" name="x">
        <type>LONG</type>
      </field>
      <field offset="4" name="y">
        <type>LONG</type>
      </field>
    </struct>
    <typedef name="POINTL">
      <struct name="_POINTL" />
    </typedef>
    <typedef name="PPOINTL">
      <ptr>
        <struct name="_POINTL" />
      </ptr>
    </typedef>
    <struct name="tagSIZE">
      <field offset="0" name="cx">
        <type>LONG</type>
      </field>
      <field offset="4" name="cy">
        <type>LONG</type>
      </field>
    </struct>
    <typedef name="SIZE">
      <struct name="tagSIZE" />
    </typedef>
    <typedef name="PSIZE">
      <ptr>
        <struct name="tagSIZE" />
      </ptr>
    </typedef>
    <typedef name="LPSIZE">
      <ptr>
        <struct name="tagSIZE" />
      </ptr>
    </typedef>
    <typedef name="SIZEL">
      <type>SIZE</type>
    </typedef>
    <typedef name="PSIZEL">
      <ptr>
        <type>SIZE</type>
      </ptr>
    </typedef>
    <typedef name="LPSIZEL">
      <ptr>
        <type>SIZE</type>
      </ptr>
    </typedef>
    <struct name="tagPOINTS">
      <field offset="0" name="x">
        <type>SHORT</type>
      </field>
      <field offset="2" name="y">
        <type>SHORT</type>
      </field>
    </struct>
    <typedef name="POINTS">
      <struct name="tagPOINTS" />
    </typedef>
    <typedef name="PPOINTS">
      <ptr>
        <struct name="tagPOINTS" />
      </ptr>
    </typedef>
    <typedef name="LPPOINTS">
      <ptr>
        <struct name="tagPOINTS" />
      </ptr>
    </typedef>
    <struct name="_FILETIME">
      <field offset="0" name="dwLowDateTime">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwHighDateTime">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="FILETIME">
      <struct name="_FILETIME" />
    </typedef>
    <typedef name="PFILETIME">
      <ptr>
        <struct name="_FILETIME" />
      </ptr>
    </typedef>
    <typedef name="LPFILETIME">
      <ptr>
        <struct name="_FILETIME" />
      </ptr>
    </typedef>
    <struct name="struct_61">
      <field offset="0" name="Offset">
        <type>DWORD</type>
      </field>
      <field offset="4" name="OffsetHigh">
        <type>DWORD</type>
      </field>
    </struct>
    <struct name="_OVERLAPPED">
      <field offset="0" name="Internal">
        <type>ULONG_PTR</type>
      </field>
      <field offset="4" name="InternalHigh">
        <type>ULONG_PTR</type>
      </field>
      <field offset="8">
        <union>
          <alt>
            <struct name="struct_61" />
          </alt>
          <alt name="Pointer">
            <type>PVOID</type>
          </alt>
        </union>
      </field>
      <field offset="16" name="hEvent">
        <type>HANDLE</type>
      </field>
    </struct>
    <typedef name="OVERLAPPED">
      <struct name="_OVERLAPPED" />
    </typedef>
    <typedef name="LPOVERLAPPED">
      <ptr>
        <struct name="_OVERLAPPED" />
      </ptr>
    </typedef>
    <struct name="_OVERLAPPED_ENTRY">
      <field offset="0" name="lpCompletionKey">
        <type>ULONG_PTR</type>
      </field>
      <field offset="4" name="lpOverlapped">
        <type>LPOVERLAPPED</type>
      </field>
      <field offset="8" name="Internal">
        <type>ULONG_PTR</type>
      </field>
      <field offset="12" name="dwNumberOfBytesTransferred">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="OVERLAPPED_ENTRY">
      <struct name="_OVERLAPPED_ENTRY" />
    </typedef>
    <typedef name="LPOVERLAPPED_ENTRY">
      <ptr>
        <struct name="_OVERLAPPED_ENTRY" />
      </ptr>
    </typedef>
    <struct name="_SECURITY_ATTRIBUTES">
      <field offset="0" name="nLength">
        <type>DWORD</type>
      </field>
      <field offset="4" name="lpSecurityDescriptor">
        <type>LPVOID</type>
      </field>
      <field offset="8" name="bInheritHandle">
        <type>BOOL</type>
      </field>
    </struct>
    <typedef name="SECURITY_ATTRIBUTES">
      <struct name="_SECURITY_ATTRIBUTES" />
    </typedef>
    <typedef name="PSECURITY_ATTRIBUTES">
      <ptr>
        <struct name="_SECURITY_ATTRIBUTES" />
      </ptr>
    </typedef>
    <typedef name="LPSECURITY_ATTRIBUTES">
      <ptr>
        <struct name="_SECURITY_ATTRIBUTES" />
      </ptr>
    </typedef>
    <struct name="_PROCESS_INFORMATION">
      <field offset="0" name="hProcess">
        <type>HANDLE</type>
      </field>
      <field offset="4" name="hThread">
        <type>HANDLE</type>
      </field>
      <field offset="8" name="dwProcessId">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwThreadId">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PROCESS_INFORMATION">
      <struct name="_PROCESS_INFORMATION" />
    </typedef>
    <typedef name="PPROCESS_INFORMATION">
      <ptr>
        <struct name="_PROCESS_INFORMATION" />
      </ptr>
    </typedef>
    <typedef name="LPPROCESS_INFORMATION">
      <ptr>
        <struct name="_PROCESS_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_SYSTEMTIME">
      <field offset="0" name="wYear">
        <type>WORD</type>
      </field>
      <field offset="2" name="wMonth">
        <type>WORD</type>
      </field>
      <field offset="4" name="wDayOfWeek">
        <type>WORD</type>
      </field>
      <field offset="6" name="wDay">
        <type>WORD</type>
      </field>
      <field offset="8" name="wHour">
        <type>WORD</type>
      </field>
      <field offset="10" name="wMinute">
        <type>WORD</type>
      </field>
      <field offset="12" name="wSecond">
        <type>WORD</type>
      </field>
      <field offset="14" name="wMilliseconds">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="SYSTEMTIME">
      <struct name="_SYSTEMTIME" />
    </typedef>
    <typedef name="PSYSTEMTIME">
      <ptr>
        <struct name="_SYSTEMTIME" />
      </ptr>
    </typedef>
    <typedef name="LPSYSTEMTIME">
      <ptr>
        <struct name="_SYSTEMTIME" />
      </ptr>
    </typedef>
    <typedef name="PTHREAD_START_ROUTINE">
      <ptr>
        <fn>
          <return>
            <type>DWORD</type>
            <reg>eax</reg>
          </return>
          <arg name="lpThreadParameter">
            <type>LPVOID</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="LPTHREAD_START_ROUTINE">
      <type>PTHREAD_START_ROUTINE</type>
    </typedef>
    <typedef name="PFIBER_START_ROUTINE">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="lpFiberParameter">
            <type>LPVOID</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="LPFIBER_START_ROUTINE">
      <type>PFIBER_START_ROUTINE</type>
    </typedef>
    <typedef name="CRITICAL_SECTION">
      <type>RTL_CRITICAL_SECTION</type>
    </typedef>
    <typedef name="PCRITICAL_SECTION">
      <type>PRTL_CRITICAL_SECTION</type>
    </typedef>
    <typedef name="LPCRITICAL_SECTION">
      <type>PRTL_CRITICAL_SECTION</type>
    </typedef>
    <typedef name="CRITICAL_SECTION_DEBUG">
      <type>RTL_CRITICAL_SECTION_DEBUG</type>
    </typedef>
    <typedef name="PCRITICAL_SECTION_DEBUG">
      <type>PRTL_CRITICAL_SECTION_DEBUG</type>
    </typedef>
    <typedef name="LPCRITICAL_SECTION_DEBUG">
      <type>PRTL_CRITICAL_SECTION_DEBUG</type>
    </typedef>
    <typedef name="INIT_ONCE">
      <type>RTL_RUN_ONCE</type>
    </typedef>
    <typedef name="PINIT_ONCE">
      <type>PRTL_RUN_ONCE</type>
    </typedef>
    <typedef name="LPINIT_ONCE">
      <type>PRTL_RUN_ONCE</type>
    </typedef>
    <typedef name="PINIT_ONCE_FN">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="InitOnce">
            <type>PINIT_ONCE</type>
            <stack size="4" />
          </arg>
          <arg name="Parameter">
            <type>PVOID</type>
            <stack size="4" />
          </arg>
          <arg name="Context">
            <ptr>
              <type>PVOID</type>
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="SRWLOCK">
      <type>RTL_SRWLOCK</type>
    </typedef>
    <typedef name="PSRWLOCK">
      <ptr>
        <type>RTL_SRWLOCK</type>
      </ptr>
    </typedef>
    <typedef name="CONDITION_VARIABLE">
      <type>RTL_CONDITION_VARIABLE</type>
    </typedef>
    <typedef name="PCONDITION_VARIABLE">
      <ptr>
        <type>RTL_CONDITION_VARIABLE</type>
      </ptr>
    </typedef>
    <typedef name="LPLDT_ENTRY">
      <type>PLDT_ENTRY</type>
    </typedef>
    <struct name="_COMMPROP">
      <field offset="0" name="wPacketLength">
        <type>WORD</type>
      </field>
      <field offset="2" name="wPacketVersion">
        <type>WORD</type>
      </field>
      <field offset="4" name="dwServiceMask">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwReserved1">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwMaxTxQueue">
        <type>DWORD</type>
      </field>
      <field offset="16" name="dwMaxRxQueue">
        <type>DWORD</type>
      </field>
      <field offset="20" name="dwMaxBaud">
        <type>DWORD</type>
      </field>
      <field offset="24" name="dwProvSubType">
        <type>DWORD</type>
      </field>
      <field offset="28" name="dwProvCapabilities">
        <type>DWORD</type>
      </field>
      <field offset="32" name="dwSettableParams">
        <type>DWORD</type>
      </field>
      <field offset="36" name="dwSettableBaud">
        <type>DWORD</type>
      </field>
      <field offset="40" name="wSettableData">
        <type>WORD</type>
      </field>
      <field offset="42" name="wSettableStopParity">
        <type>WORD</type>
      </field>
      <field offset="44" name="dwCurrentTxQueue">
        <type>DWORD</type>
      </field>
      <field offset="48" name="dwCurrentRxQueue">
        <type>DWORD</type>
      </field>
      <field offset="52" name="dwProvSpec1">
        <type>DWORD</type>
      </field>
      <field offset="56" name="dwProvSpec2">
        <type>DWORD</type>
      </field>
      <field offset="60" name="wcProvChar">
        <arr length="1">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="COMMPROP">
      <struct name="_COMMPROP" />
    </typedef>
    <typedef name="LPCOMMPROP">
      <ptr>
        <struct name="_COMMPROP" />
      </ptr>
    </typedef>
    <struct name="_COMSTAT">
      <field offset="0" name="fCtsHold">
        <type>DWORD</type>
      </field>
      <field offset="4" name="fDsrHold">
        <type>DWORD</type>
      </field>
      <field offset="8" name="fRlsdHold">
        <type>DWORD</type>
      </field>
      <field offset="12" name="fXoffHold">
        <type>DWORD</type>
      </field>
      <field offset="16" name="fXoffSent">
        <type>DWORD</type>
      </field>
      <field offset="20" name="fEof">
        <type>DWORD</type>
      </field>
      <field offset="24" name="fTxim">
        <type>DWORD</type>
      </field>
      <field offset="28" name="fReserved">
        <type>DWORD</type>
      </field>
      <field offset="32" name="cbInQue">
        <type>DWORD</type>
      </field>
      <field offset="36" name="cbOutQue">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="COMSTAT">
      <struct name="_COMSTAT" />
    </typedef>
    <typedef name="LPCOMSTAT">
      <ptr>
        <struct name="_COMSTAT" />
      </ptr>
    </typedef>
    <struct name="_DCB">
      <field offset="0" name="DCBlength">
        <type>DWORD</type>
      </field>
      <field offset="4" name="BaudRate">
        <type>DWORD</type>
      </field>
      <field offset="8" name="fBinary">
        <type>DWORD</type>
      </field>
      <field offset="12" name="fParity">
        <type>DWORD</type>
      </field>
      <field offset="16" name="fOutxCtsFlow">
        <type>DWORD</type>
      </field>
      <field offset="20" name="fOutxDsrFlow">
        <type>DWORD</type>
      </field>
      <field offset="24" name="fDtrControl">
        <type>DWORD</type>
      </field>
      <field offset="28" name="fDsrSensitivity">
        <type>DWORD</type>
      </field>
      <field offset="32" name="fTXContinueOnXoff">
        <type>DWORD</type>
      </field>
      <field offset="36" name="fOutX">
        <type>DWORD</type>
      </field>
      <field offset="40" name="fInX">
        <type>DWORD</type>
      </field>
      <field offset="44" name="fErrorChar">
        <type>DWORD</type>
      </field>
      <field offset="48" name="fNull">
        <type>DWORD</type>
      </field>
      <field offset="52" name="fRtsControl">
        <type>DWORD</type>
      </field>
      <field offset="56" name="fAbortOnError">
        <type>DWORD</type>
      </field>
      <field offset="60" name="fDummy2">
        <type>DWORD</type>
      </field>
      <field offset="64" name="wReserved">
        <type>WORD</type>
      </field>
      <field offset="66" name="XonLim">
        <type>WORD</type>
      </field>
      <field offset="68" name="XoffLim">
        <type>WORD</type>
      </field>
      <field offset="70" name="ByteSize">
        <type>BYTE</type>
      </field>
      <field offset="71" name="Parity">
        <type>BYTE</type>
      </field>
      <field offset="72" name="StopBits">
        <type>BYTE</type>
      </field>
      <field offset="73" name="XonChar">
        <prim domain="Character" size="1" />
      </field>
      <field offset="74" name="XoffChar">
        <prim domain="Character" size="1" />
      </field>
      <field offset="75" name="ErrorChar">
        <prim domain="Character" size="1" />
      </field>
      <field offset="76" name="EofChar">
        <prim domain="Character" size="1" />
      </field>
      <field offset="77" name="EvtChar">
        <prim domain="Character" size="1" />
      </field>
      <field offset="78" name="wReserved1">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="DCB">
      <struct name="_DCB" />
    </typedef>
    <typedef name="LPDCB">
      <ptr>
        <struct name="_DCB" />
      </ptr>
    </typedef>
    <struct name="_COMMTIMEOUTS">
      <field offset="0" name="ReadIntervalTimeout">
        <type>DWORD</type>
      </field>
      <field offset="4" name="ReadTotalTimeoutMultiplier">
        <type>DWORD</type>
      </field>
      <field offset="8" name="ReadTotalTimeoutConstant">
        <type>DWORD</type>
      </field>
      <field offset="12" name="WriteTotalTimeoutMultiplier">
        <type>DWORD</type>
      </field>
      <field offset="16" name="WriteTotalTimeoutConstant">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="COMMTIMEOUTS">
      <struct name="_COMMTIMEOUTS" />
    </typedef>
    <typedef name="LPCOMMTIMEOUTS">
      <ptr>
        <struct name="_COMMTIMEOUTS" />
      </ptr>
    </typedef>
    <struct name="_COMMCONFIG">
      <field offset="0" name="dwSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="wVersion">
        <type>WORD</type>
      </field>
      <field offset="6" name="wReserved">
        <type>WORD</type>
      </field>
      <field offset="8" name="dcb">
        <type>DCB</type>
      </field>
      <field offset="88" name="dwProviderSubType">
        <type>DWORD</type>
      </field>
      <field offset="92" name="dwProviderOffset">
        <type>DWORD</type>
      </field>
      <field offset="96" name="dwProviderSize">
        <type>DWORD</type>
      </field>
      <field offset="100" name="wcProviderData">
        <arr length="1">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="COMMCONFIG">
      <struct name="_COMMCONFIG" />
    </typedef>
    <typedef name="LPCOMMCONFIG">
      <ptr>
        <struct name="_COMMCONFIG" />
      </ptr>
    </typedef>
    <struct name="struct_62">
      <field offset="0" name="wProcessorArchitecture">
        <type>WORD</type>
      </field>
      <field offset="2" name="wReserved">
        <type>WORD</type>
      </field>
    </struct>
    <struct name="_SYSTEM_INFO">
      <field offset="0">
        <union>
          <alt name="dwOemId">
            <type>DWORD</type>
          </alt>
          <alt>
            <struct name="struct_62" />
          </alt>
        </union>
      </field>
      <field offset="4" name="dwPageSize">
        <type>DWORD</type>
      </field>
      <field offset="8" name="lpMinimumApplicationAddress">
        <type>LPVOID</type>
      </field>
      <field offset="12" name="lpMaximumApplicationAddress">
        <type>LPVOID</type>
      </field>
      <field offset="16" name="dwActiveProcessorMask">
        <type>DWORD_PTR</type>
      </field>
      <field offset="20" name="dwNumberOfProcessors">
        <type>DWORD</type>
      </field>
      <field offset="24" name="dwProcessorType">
        <type>DWORD</type>
      </field>
      <field offset="28" name="dwAllocationGranularity">
        <type>DWORD</type>
      </field>
      <field offset="32" name="wProcessorLevel">
        <type>WORD</type>
      </field>
      <field offset="34" name="wProcessorRevision">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="SYSTEM_INFO">
      <struct name="_SYSTEM_INFO" />
    </typedef>
    <typedef name="LPSYSTEM_INFO">
      <ptr>
        <struct name="_SYSTEM_INFO" />
      </ptr>
    </typedef>
    <struct name="_MEMORYSTATUS">
      <field offset="0" name="dwLength">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwMemoryLoad">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwTotalPhys">
        <type>SIZE_T</type>
      </field>
      <field offset="12" name="dwAvailPhys">
        <type>SIZE_T</type>
      </field>
      <field offset="16" name="dwTotalPageFile">
        <type>SIZE_T</type>
      </field>
      <field offset="20" name="dwAvailPageFile">
        <type>SIZE_T</type>
      </field>
      <field offset="24" name="dwTotalVirtual">
        <type>SIZE_T</type>
      </field>
      <field offset="28" name="dwAvailVirtual">
        <type>SIZE_T</type>
      </field>
    </struct>
    <typedef name="MEMORYSTATUS">
      <struct name="_MEMORYSTATUS" />
    </typedef>
    <typedef name="LPMEMORYSTATUS">
      <ptr>
        <struct name="_MEMORYSTATUS" />
      </ptr>
    </typedef>
    <struct name="_EXCEPTION_DEBUG_INFO">
      <field offset="0" name="ExceptionRecord">
        <type>EXCEPTION_RECORD</type>
      </field>
      <field offset="80" name="dwFirstChance">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="EXCEPTION_DEBUG_INFO">
      <struct name="_EXCEPTION_DEBUG_INFO" />
    </typedef>
    <typedef name="LPEXCEPTION_DEBUG_INFO">
      <ptr>
        <struct name="_EXCEPTION_DEBUG_INFO" />
      </ptr>
    </typedef>
    <struct name="_CREATE_THREAD_DEBUG_INFO">
      <field offset="0" name="hThread">
        <type>HANDLE</type>
      </field>
      <field offset="4" name="lpThreadLocalBase">
        <type>LPVOID</type>
      </field>
      <field offset="8" name="lpStartAddress">
        <type>LPTHREAD_START_ROUTINE</type>
      </field>
    </struct>
    <typedef name="CREATE_THREAD_DEBUG_INFO">
      <struct name="_CREATE_THREAD_DEBUG_INFO" />
    </typedef>
    <typedef name="LPCREATE_THREAD_DEBUG_INFO">
      <ptr>
        <struct name="_CREATE_THREAD_DEBUG_INFO" />
      </ptr>
    </typedef>
    <struct name="_CREATE_PROCESS_DEBUG_INFO">
      <field offset="0" name="hFile">
        <type>HANDLE</type>
      </field>
      <field offset="4" name="hProcess">
        <type>HANDLE</type>
      </field>
      <field offset="8" name="hThread">
        <type>HANDLE</type>
      </field>
      <field offset="12" name="lpBaseOfImage">
        <type>LPVOID</type>
      </field>
      <field offset="16" name="dwDebugInfoFileOffset">
        <type>DWORD</type>
      </field>
      <field offset="20" name="nDebugInfoSize">
        <type>DWORD</type>
      </field>
      <field offset="24" name="lpThreadLocalBase">
        <type>LPVOID</type>
      </field>
      <field offset="28" name="lpStartAddress">
        <type>LPTHREAD_START_ROUTINE</type>
      </field>
      <field offset="32" name="lpImageName">
        <type>LPVOID</type>
      </field>
      <field offset="36" name="fUnicode">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="CREATE_PROCESS_DEBUG_INFO">
      <struct name="_CREATE_PROCESS_DEBUG_INFO" />
    </typedef>
    <typedef name="LPCREATE_PROCESS_DEBUG_INFO">
      <ptr>
        <struct name="_CREATE_PROCESS_DEBUG_INFO" />
      </ptr>
    </typedef>
    <struct name="_EXIT_THREAD_DEBUG_INFO">
      <field offset="0" name="dwExitCode">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="EXIT_THREAD_DEBUG_INFO">
      <struct name="_EXIT_THREAD_DEBUG_INFO" />
    </typedef>
    <typedef name="LPEXIT_THREAD_DEBUG_INFO">
      <ptr>
        <struct name="_EXIT_THREAD_DEBUG_INFO" />
      </ptr>
    </typedef>
    <struct name="_EXIT_PROCESS_DEBUG_INFO">
      <field offset="0" name="dwExitCode">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="EXIT_PROCESS_DEBUG_INFO">
      <struct name="_EXIT_PROCESS_DEBUG_INFO" />
    </typedef>
    <typedef name="LPEXIT_PROCESS_DEBUG_INFO">
      <ptr>
        <struct name="_EXIT_PROCESS_DEBUG_INFO" />
      </ptr>
    </typedef>
    <struct name="_LOAD_DLL_DEBUG_INFO">
      <field offset="0" name="hFile">
        <type>HANDLE</type>
      </field>
      <field offset="4" name="lpBaseOfDll">
        <type>LPVOID</type>
      </field>
      <field offset="8" name="dwDebugInfoFileOffset">
        <type>DWORD</type>
      </field>
      <field offset="12" name="nDebugInfoSize">
        <type>DWORD</type>
      </field>
      <field offset="16" name="lpImageName">
        <type>LPVOID</type>
      </field>
      <field offset="20" name="fUnicode">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="LOAD_DLL_DEBUG_INFO">
      <struct name="_LOAD_DLL_DEBUG_INFO" />
    </typedef>
    <typedef name="LPLOAD_DLL_DEBUG_INFO">
      <ptr>
        <struct name="_LOAD_DLL_DEBUG_INFO" />
      </ptr>
    </typedef>
    <struct name="_UNLOAD_DLL_DEBUG_INFO">
      <field offset="0" name="lpBaseOfDll">
        <type>LPVOID</type>
      </field>
    </struct>
    <typedef name="UNLOAD_DLL_DEBUG_INFO">
      <struct name="_UNLOAD_DLL_DEBUG_INFO" />
    </typedef>
    <typedef name="LPUNLOAD_DLL_DEBUG_INFO">
      <ptr>
        <struct name="_UNLOAD_DLL_DEBUG_INFO" />
      </ptr>
    </typedef>
    <struct name="_OUTPUT_DEBUG_STRING_INFO">
      <field offset="0" name="lpDebugStringData">
        <type>LPSTR</type>
      </field>
      <field offset="4" name="fUnicode">
        <type>WORD</type>
      </field>
      <field offset="6" name="nDebugStringLength">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="OUTPUT_DEBUG_STRING_INFO">
      <struct name="_OUTPUT_DEBUG_STRING_INFO" />
    </typedef>
    <typedef name="LPOUTPUT_DEBUG_STRING_INFO">
      <ptr>
        <struct name="_OUTPUT_DEBUG_STRING_INFO" />
      </ptr>
    </typedef>
    <struct name="_RIP_INFO">
      <field offset="0" name="dwError">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwType">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="RIP_INFO">
      <struct name="_RIP_INFO" />
    </typedef>
    <typedef name="LPRIP_INFO">
      <ptr>
        <struct name="_RIP_INFO" />
      </ptr>
    </typedef>
    <struct name="_DEBUG_EVENT">
      <field offset="0" name="dwDebugEventCode">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwProcessId">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwThreadId">
        <type>DWORD</type>
      </field>
      <field offset="16" name="u">
        <union>
          <alt name="Exception">
            <type>EXCEPTION_DEBUG_INFO</type>
          </alt>
          <alt name="CreateThread">
            <type>CREATE_THREAD_DEBUG_INFO</type>
          </alt>
          <alt name="CreateProcessInfo">
            <type>CREATE_PROCESS_DEBUG_INFO</type>
          </alt>
          <alt name="ExitThread">
            <type>EXIT_THREAD_DEBUG_INFO</type>
          </alt>
          <alt name="ExitProcess">
            <type>EXIT_PROCESS_DEBUG_INFO</type>
          </alt>
          <alt name="LoadDll">
            <type>LOAD_DLL_DEBUG_INFO</type>
          </alt>
          <alt name="UnloadDll">
            <type>UNLOAD_DLL_DEBUG_INFO</type>
          </alt>
          <alt name="DebugString">
            <type>OUTPUT_DEBUG_STRING_INFO</type>
          </alt>
          <alt name="RipInfo">
            <type>RIP_INFO</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="DEBUG_EVENT">
      <struct name="_DEBUG_EVENT" />
    </typedef>
    <typedef name="LPDEBUG_EVENT">
      <ptr>
        <struct name="_DEBUG_EVENT" />
      </ptr>
    </typedef>
    <struct name="_JIT_DEBUG_INFO">
      <field offset="0" name="dwSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwProcessorArchitecture">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwThreadID">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwReserved0">
        <type>DWORD</type>
      </field>
      <field offset="16" name="lpExceptionAddress">
        <type>ULONG64</type>
      </field>
      <field offset="24" name="lpExceptionRecord">
        <type>ULONG64</type>
      </field>
      <field offset="32" name="lpContextRecord">
        <type>ULONG64</type>
      </field>
    </struct>
    <typedef name="JIT_DEBUG_INFO">
      <struct name="_JIT_DEBUG_INFO" />
    </typedef>
    <typedef name="LPJIT_DEBUG_INFO">
      <ptr>
        <struct name="_JIT_DEBUG_INFO" />
      </ptr>
    </typedef>
    <typedef name="JIT_DEBUG_INFO32">
      <type>JIT_DEBUG_INFO</type>
    </typedef>
    <typedef name="LPJIT_DEBUG_INFO32">
      <ptr>
        <type>JIT_DEBUG_INFO</type>
      </ptr>
    </typedef>
    <typedef name="JIT_DEBUG_INFO64">
      <type>JIT_DEBUG_INFO</type>
    </typedef>
    <typedef name="LPJIT_DEBUG_INFO64">
      <ptr>
        <type>JIT_DEBUG_INFO</type>
      </ptr>
    </typedef>
    <typedef name="LPCONTEXT">
      <type>PCONTEXT</type>
    </typedef>
    <typedef name="LPEXCEPTION_RECORD">
      <type>PEXCEPTION_RECORD</type>
    </typedef>
    <typedef name="LPEXCEPTION_POINTERS">
      <type>PEXCEPTION_POINTERS</type>
    </typedef>
    <struct name="_OFSTRUCT">
      <field offset="0" name="cBytes">
        <type>BYTE</type>
      </field>
      <field offset="1" name="fFixedDisk">
        <type>BYTE</type>
      </field>
      <field offset="2" name="nErrCode">
        <type>WORD</type>
      </field>
      <field offset="4" name="Reserved1">
        <type>WORD</type>
      </field>
      <field offset="6" name="Reserved2">
        <type>WORD</type>
      </field>
      <field offset="8" name="szPathName">
        <arr length="128">
          <type>CHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="OFSTRUCT">
      <struct name="_OFSTRUCT" />
    </typedef>
    <typedef name="LPOFSTRUCT">
      <ptr>
        <struct name="_OFSTRUCT" />
      </ptr>
    </typedef>
    <typedef name="POFSTRUCT">
      <ptr>
        <struct name="_OFSTRUCT" />
      </ptr>
    </typedef>
    <struct name="_MEMORYSTATUSEX">
      <field offset="0" name="dwLength">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwMemoryLoad">
        <type>DWORD</type>
      </field>
      <field offset="8" name="ullTotalPhys">
        <type>DWORDLONG</type>
      </field>
      <field offset="16" name="ullAvailPhys">
        <type>DWORDLONG</type>
      </field>
      <field offset="24" name="ullTotalPageFile">
        <type>DWORDLONG</type>
      </field>
      <field offset="32" name="ullAvailPageFile">
        <type>DWORDLONG</type>
      </field>
      <field offset="40" name="ullTotalVirtual">
        <type>DWORDLONG</type>
      </field>
      <field offset="48" name="ullAvailVirtual">
        <type>DWORDLONG</type>
      </field>
      <field offset="56" name="ullAvailExtendedVirtual">
        <type>DWORDLONG</type>
      </field>
    </struct>
    <typedef name="MEMORYSTATUSEX">
      <struct name="_MEMORYSTATUSEX" />
    </typedef>
    <typedef name="LPMEMORYSTATUSEX">
      <ptr>
        <struct name="_MEMORYSTATUSEX" />
      </ptr>
    </typedef>
    <struct name="struct_63">
      <field offset="0" name="hMem">
        <type>HANDLE</type>
      </field>
      <field offset="8" name="dwReserved">
        <arr length="3">
          <type>DWORD</type>
        </arr>
      </field>
    </struct>
    <struct name="struct_64">
      <field offset="0" name="dwCommittedSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwUnCommittedSize">
        <type>DWORD</type>
      </field>
      <field offset="8" name="lpFirstBlock">
        <type>LPVOID</type>
      </field>
      <field offset="12" name="lpLastBlock">
        <type>LPVOID</type>
      </field>
    </struct>
    <struct name="_PROCESS_HEAP_ENTRY">
      <field offset="0" name="lpData">
        <type>PVOID</type>
      </field>
      <field offset="4" name="cbData">
        <type>DWORD</type>
      </field>
      <field offset="8" name="cbOverhead">
        <type>BYTE</type>
      </field>
      <field offset="9" name="iRegionIndex">
        <type>BYTE</type>
      </field>
      <field offset="10" name="wFlags">
        <type>WORD</type>
      </field>
      <field offset="16">
        <union>
          <alt name="Block">
            <struct name="struct_63" />
          </alt>
          <alt name="Region">
            <struct name="struct_64" />
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="PROCESS_HEAP_ENTRY">
      <struct name="_PROCESS_HEAP_ENTRY" />
    </typedef>
    <typedef name="LPPROCESS_HEAP_ENTRY">
      <ptr>
        <struct name="_PROCESS_HEAP_ENTRY" />
      </ptr>
    </typedef>
    <typedef name="PPROCESS_HEAP_ENTRY">
      <ptr>
        <struct name="_PROCESS_HEAP_ENTRY" />
      </ptr>
    </typedef>
    <typedef name="PTOP_LEVEL_EXCEPTION_FILTER">
      <ptr>
        <fn>
          <return>
            <type>LONG</type>
            <reg>eax</reg>
          </return>
          <arg name="ExceptionInfo">
            <ptr>
              <struct name="_EXCEPTION_POINTERS" />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="LPTOP_LEVEL_EXCEPTION_FILTER">
      <type>PTOP_LEVEL_EXCEPTION_FILTER</type>
    </typedef>
    <typedef name="PUMS_CONTEXT">
      <ptr>
        <void />
      </ptr>
    </typedef>
    <typedef name="PUMS_COMPLETION_LIST">
      <ptr>
        <void />
      </ptr>
    </typedef>
    <typedef name="UMS_THREAD_INFO_CLASS">
      <enum name="_RTL_UMS_THREAD_INFO_CLASS" />
    </typedef>
    <typedef name="PUMS_THREAD_INFO_CLASS">
      <ptr>
        <enum name="_RTL_UMS_THREAD_INFO_CLASS" />
      </ptr>
    </typedef>
    <typedef name="UMS_SCHEDULER_REASON">
      <enum name="_RTL_UMS_SCHEDULER_REASON" />
    </typedef>
    <typedef name="PUMS_SCHEDULER_ENTRY_POINT">
      <type>PRTL_UMS_SCHEDULER_ENTRY_POINT</type>
    </typedef>
    <struct name="_UMS_SCHEDULER_STARTUP_INFO">
      <field offset="0" name="UmsVersion">
        <type>ULONG</type>
      </field>
      <field offset="4" name="CompletionList">
        <type>PUMS_COMPLETION_LIST</type>
      </field>
      <field offset="8" name="SchedulerProc">
        <type>PUMS_SCHEDULER_ENTRY_POINT</type>
      </field>
      <field offset="12" name="SchedulerParam">
        <type>PVOID</type>
      </field>
    </struct>
    <typedef name="UMS_SCHEDULER_STARTUP_INFO">
      <struct name="_UMS_SCHEDULER_STARTUP_INFO" />
    </typedef>
    <typedef name="PUMS_SCHEDULER_STARTUP_INFO">
      <ptr>
        <struct name="_UMS_SCHEDULER_STARTUP_INFO" />
      </ptr>
    </typedef>
    <typedef name="PPROC_THREAD_ATTRIBUTE_LIST">
      <ptr>
        <struct name="_PROC_THREAD_ATTRIBUTE_LIST" />
      </ptr>
    </typedef>
    <typedef name="LPPROC_THREAD_ATTRIBUTE_LIST">
      <ptr>
        <struct name="_PROC_THREAD_ATTRIBUTE_LIST" />
      </ptr>
    </typedef>
    <struct name="struct_65">
      <field offset="0" name="LocalizedReasonModule">
        <type>HMODULE</type>
      </field>
      <field offset="4" name="LocalizedReasonId">
        <type>ULONG</type>
      </field>
      <field offset="8" name="ReasonStringCount">
        <type>ULONG</type>
      </field>
      <field offset="12" name="ReasonStrings">
        <ptr>
          <type>LPWSTR</type>
        </ptr>
      </field>
    </struct>
    <struct name="_REASON_CONTEXT">
      <field offset="0" name="Version">
        <type>ULONG</type>
      </field>
      <field offset="4" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Reason">
        <union>
          <alt name="Detailed">
            <struct name="struct_65" />
          </alt>
          <alt name="SimpleReasonString">
            <type>LPWSTR</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="REASON_CONTEXT">
      <struct name="_REASON_CONTEXT" />
    </typedef>
    <typedef name="PREASON_CONTEXT">
      <ptr>
        <struct name="_REASON_CONTEXT" />
      </ptr>
    </typedef>
    <typedef name="POWER_REQUEST_CONTEXT">
      <type>REASON_CONTEXT</type>
    </typedef>
    <typedef name="PPOWER_REQUEST_CONTEXT">
      <ptr>
        <type>REASON_CONTEXT</type>
      </ptr>
    </typedef>
    <typedef name="LPPOWER_REQUEST_CONTEXT">
      <ptr>
        <type>REASON_CONTEXT</type>
      </ptr>
    </typedef>
    <struct name="_BY_HANDLE_FILE_INFORMATION">
      <field offset="0" name="dwFileAttributes">
        <type>DWORD</type>
      </field>
      <field offset="8" name="ftCreationTime">
        <type>FILETIME</type>
      </field>
      <field offset="16" name="ftLastAccessTime">
        <type>FILETIME</type>
      </field>
      <field offset="24" name="ftLastWriteTime">
        <type>FILETIME</type>
      </field>
      <field offset="32" name="dwVolumeSerialNumber">
        <type>DWORD</type>
      </field>
      <field offset="36" name="nFileSizeHigh">
        <type>DWORD</type>
      </field>
      <field offset="40" name="nFileSizeLow">
        <type>DWORD</type>
      </field>
      <field offset="44" name="nNumberOfLinks">
        <type>DWORD</type>
      </field>
      <field offset="48" name="nFileIndexHigh">
        <type>DWORD</type>
      </field>
      <field offset="52" name="nFileIndexLow">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="BY_HANDLE_FILE_INFORMATION">
      <struct name="_BY_HANDLE_FILE_INFORMATION" />
    </typedef>
    <typedef name="PBY_HANDLE_FILE_INFORMATION">
      <ptr>
        <struct name="_BY_HANDLE_FILE_INFORMATION" />
      </ptr>
    </typedef>
    <typedef name="LPBY_HANDLE_FILE_INFORMATION">
      <ptr>
        <struct name="_BY_HANDLE_FILE_INFORMATION" />
      </ptr>
    </typedef>
    <enum name="_DEP_SYSTEM_POLICY_TYPE">
      <member name="DEPPolicyAlwaysOff" value="0" />
      <member name="DEPPolicyAlwaysOn" value="1" />
      <member name="DEPPolicyOptIn" value="2" />
      <member name="DEPPolicyOptOut" value="3" />
      <member name="DEPTotalPolicyCount" value="4" />
    </enum>
    <typedef name="DEP_SYSTEM_POLICY_TYPE">
      <enum name="_DEP_SYSTEM_POLICY_TYPE" />
    </typedef>
    <struct name="_TIME_ZONE_INFORMATION">
      <field offset="0" name="Bias">
        <type>LONG</type>
      </field>
      <field offset="8" name="StandardName">
        <arr length="32">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="72" name="StandardDate">
        <type>SYSTEMTIME</type>
      </field>
      <field offset="88" name="StandardBias">
        <type>LONG</type>
      </field>
      <field offset="96" name="DaylightName">
        <arr length="32">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="160" name="DaylightDate">
        <type>SYSTEMTIME</type>
      </field>
      <field offset="176" name="DaylightBias">
        <type>LONG</type>
      </field>
    </struct>
    <typedef name="TIME_ZONE_INFORMATION">
      <struct name="_TIME_ZONE_INFORMATION" />
    </typedef>
    <typedef name="PTIME_ZONE_INFORMATION">
      <ptr>
        <struct name="_TIME_ZONE_INFORMATION" />
      </ptr>
    </typedef>
    <typedef name="LPTIME_ZONE_INFORMATION">
      <ptr>
        <struct name="_TIME_ZONE_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_TIME_DYNAMIC_ZONE_INFORMATION">
      <field offset="0" name="Bias">
        <type>LONG</type>
      </field>
      <field offset="8" name="StandardName">
        <arr length="32">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="72" name="StandardDate">
        <type>SYSTEMTIME</type>
      </field>
      <field offset="88" name="StandardBias">
        <type>LONG</type>
      </field>
      <field offset="96" name="DaylightName">
        <arr length="32">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="160" name="DaylightDate">
        <type>SYSTEMTIME</type>
      </field>
      <field offset="176" name="DaylightBias">
        <type>LONG</type>
      </field>
      <field offset="184" name="TimeZoneKeyName">
        <arr length="128">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="440" name="DynamicDaylightTimeDisabled">
        <type>BOOLEAN</type>
      </field>
    </struct>
    <typedef name="DYNAMIC_TIME_ZONE_INFORMATION">
      <struct name="_TIME_DYNAMIC_ZONE_INFORMATION" />
    </typedef>
    <typedef name="PDYNAMIC_TIME_ZONE_INFORMATION">
      <ptr>
        <struct name="_TIME_DYNAMIC_ZONE_INFORMATION" />
      </ptr>
    </typedef>
    <typedef name="PFE_EXPORT_FUNC">
      <ptr>
        <fn>
          <return>
            <type>DWORD</type>
            <reg>eax</reg>
          </return>
          <arg name="pbData">
            <type>PBYTE</type>
            <stack size="4" />
          </arg>
          <arg name="pvCallbackContext">
            <type>PVOID</type>
            <stack size="4" />
          </arg>
          <arg name="ulLength">
            <type>ULONG</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFE_IMPORT_FUNC">
      <ptr>
        <fn>
          <return>
            <type>DWORD</type>
            <reg>eax</reg>
          </return>
          <arg name="pbData">
            <type>PBYTE</type>
            <stack size="4" />
          </arg>
          <arg name="pvCallbackContext">
            <type>PVOID</type>
            <stack size="4" />
          </arg>
          <arg name="ulLength">
            <type>PULONG</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="LPOVERLAPPED_COMPLETION_ROUTINE">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="dwErrorCode">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="dwNumberOfBytesTransfered">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="lpOverlapped">
            <type>LPOVERLAPPED</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="_WIN32_STREAM_ID">
      <field offset="0" name="dwStreamId">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwStreamAttributes">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Size">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="16" name="dwStreamNameSize">
        <type>DWORD</type>
      </field>
      <field offset="20" name="cStreamName">
        <arr length="1">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="WIN32_STREAM_ID">
      <struct name="_WIN32_STREAM_ID" />
    </typedef>
    <typedef name="LPWIN32_STREAM_ID">
      <ptr>
        <struct name="_WIN32_STREAM_ID" />
      </ptr>
    </typedef>
    <struct name="_STARTUPINFOA">
      <field offset="0" name="cb">
        <type>DWORD</type>
      </field>
      <field offset="4" name="lpReserved">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="lpDesktop">
        <type>LPSTR</type>
      </field>
      <field offset="12" name="lpTitle">
        <type>LPSTR</type>
      </field>
      <field offset="16" name="dwX">
        <type>DWORD</type>
      </field>
      <field offset="20" name="dwY">
        <type>DWORD</type>
      </field>
      <field offset="24" name="dwXSize">
        <type>DWORD</type>
      </field>
      <field offset="28" name="dwYSize">
        <type>DWORD</type>
      </field>
      <field offset="32" name="dwXCountChars">
        <type>DWORD</type>
      </field>
      <field offset="36" name="dwYCountChars">
        <type>DWORD</type>
      </field>
      <field offset="40" name="dwFillAttribute">
        <type>DWORD</type>
      </field>
      <field offset="44" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="48" name="wShowWindow">
        <type>WORD</type>
      </field>
      <field offset="50" name="cbReserved2">
        <type>WORD</type>
      </field>
      <field offset="52" name="lpReserved2">
        <type>LPBYTE</type>
      </field>
      <field offset="56" name="hStdInput">
        <type>HANDLE</type>
      </field>
      <field offset="60" name="hStdOutput">
        <type>HANDLE</type>
      </field>
      <field offset="64" name="hStdError">
        <type>HANDLE</type>
      </field>
    </struct>
    <typedef name="STARTUPINFOA">
      <struct name="_STARTUPINFOA" />
    </typedef>
    <typedef name="LPSTARTUPINFOA">
      <ptr>
        <struct name="_STARTUPINFOA" />
      </ptr>
    </typedef>
    <struct name="_STARTUPINFOW">
      <field offset="0" name="cb">
        <type>DWORD</type>
      </field>
      <field offset="4" name="lpReserved">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="lpDesktop">
        <type>LPWSTR</type>
      </field>
      <field offset="12" name="lpTitle">
        <type>LPWSTR</type>
      </field>
      <field offset="16" name="dwX">
        <type>DWORD</type>
      </field>
      <field offset="20" name="dwY">
        <type>DWORD</type>
      </field>
      <field offset="24" name="dwXSize">
        <type>DWORD</type>
      </field>
      <field offset="28" name="dwYSize">
        <type>DWORD</type>
      </field>
      <field offset="32" name="dwXCountChars">
        <type>DWORD</type>
      </field>
      <field offset="36" name="dwYCountChars">
        <type>DWORD</type>
      </field>
      <field offset="40" name="dwFillAttribute">
        <type>DWORD</type>
      </field>
      <field offset="44" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="48" name="wShowWindow">
        <type>WORD</type>
      </field>
      <field offset="50" name="cbReserved2">
        <type>WORD</type>
      </field>
      <field offset="52" name="lpReserved2">
        <type>LPBYTE</type>
      </field>
      <field offset="56" name="hStdInput">
        <type>HANDLE</type>
      </field>
      <field offset="60" name="hStdOutput">
        <type>HANDLE</type>
      </field>
      <field offset="64" name="hStdError">
        <type>HANDLE</type>
      </field>
    </struct>
    <typedef name="STARTUPINFOW">
      <struct name="_STARTUPINFOW" />
    </typedef>
    <typedef name="LPSTARTUPINFOW">
      <ptr>
        <struct name="_STARTUPINFOW" />
      </ptr>
    </typedef>
    <typedef name="STARTUPINFO">
      <type>STARTUPINFOA</type>
    </typedef>
    <typedef name="LPSTARTUPINFO">
      <type>LPSTARTUPINFOA</type>
    </typedef>
    <struct name="_STARTUPINFOEXA">
      <field offset="0" name="StartupInfo">
        <type>STARTUPINFOA</type>
      </field>
      <field offset="68" name="lpAttributeList">
        <type>LPPROC_THREAD_ATTRIBUTE_LIST</type>
      </field>
    </struct>
    <typedef name="STARTUPINFOEXA">
      <struct name="_STARTUPINFOEXA" />
    </typedef>
    <typedef name="LPSTARTUPINFOEXA">
      <ptr>
        <struct name="_STARTUPINFOEXA" />
      </ptr>
    </typedef>
    <struct name="_STARTUPINFOEXW">
      <field offset="0" name="StartupInfo">
        <type>STARTUPINFOW</type>
      </field>
      <field offset="68" name="lpAttributeList">
        <type>LPPROC_THREAD_ATTRIBUTE_LIST</type>
      </field>
    </struct>
    <typedef name="STARTUPINFOEXW">
      <struct name="_STARTUPINFOEXW" />
    </typedef>
    <typedef name="LPSTARTUPINFOEXW">
      <ptr>
        <struct name="_STARTUPINFOEXW" />
      </ptr>
    </typedef>
    <typedef name="STARTUPINFOEX">
      <type>STARTUPINFOEXA</type>
    </typedef>
    <typedef name="LPSTARTUPINFOEX">
      <type>LPSTARTUPINFOEXA</type>
    </typedef>
    <struct name="_WIN32_FIND_DATAA">
      <field offset="0" name="dwFileAttributes">
        <type>DWORD</type>
      </field>
      <field offset="8" name="ftCreationTime">
        <type>FILETIME</type>
      </field>
      <field offset="16" name="ftLastAccessTime">
        <type>FILETIME</type>
      </field>
      <field offset="24" name="ftLastWriteTime">
        <type>FILETIME</type>
      </field>
      <field offset="32" name="nFileSizeHigh">
        <type>DWORD</type>
      </field>
      <field offset="36" name="nFileSizeLow">
        <type>DWORD</type>
      </field>
      <field offset="40" name="dwReserved0">
        <type>DWORD</type>
      </field>
      <field offset="44" name="dwReserved1">
        <type>DWORD</type>
      </field>
      <field offset="48" name="cFileName">
        <arr length="260">
          <type>CHAR</type>
        </arr>
      </field>
      <field offset="312" name="cAlternateFileName">
        <arr length="14">
          <type>CHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="WIN32_FIND_DATAA">
      <struct name="_WIN32_FIND_DATAA" />
    </typedef>
    <typedef name="PWIN32_FIND_DATAA">
      <ptr>
        <struct name="_WIN32_FIND_DATAA" />
      </ptr>
    </typedef>
    <typedef name="LPWIN32_FIND_DATAA">
      <ptr>
        <struct name="_WIN32_FIND_DATAA" />
      </ptr>
    </typedef>
    <struct name="_WIN32_FIND_DATAW">
      <field offset="0" name="dwFileAttributes">
        <type>DWORD</type>
      </field>
      <field offset="8" name="ftCreationTime">
        <type>FILETIME</type>
      </field>
      <field offset="16" name="ftLastAccessTime">
        <type>FILETIME</type>
      </field>
      <field offset="24" name="ftLastWriteTime">
        <type>FILETIME</type>
      </field>
      <field offset="32" name="nFileSizeHigh">
        <type>DWORD</type>
      </field>
      <field offset="36" name="nFileSizeLow">
        <type>DWORD</type>
      </field>
      <field offset="40" name="dwReserved0">
        <type>DWORD</type>
      </field>
      <field offset="44" name="dwReserved1">
        <type>DWORD</type>
      </field>
      <field offset="48" name="cFileName">
        <arr length="260">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="568" name="cAlternateFileName">
        <arr length="14">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="WIN32_FIND_DATAW">
      <struct name="_WIN32_FIND_DATAW" />
    </typedef>
    <typedef name="PWIN32_FIND_DATAW">
      <ptr>
        <struct name="_WIN32_FIND_DATAW" />
      </ptr>
    </typedef>
    <typedef name="LPWIN32_FIND_DATAW">
      <ptr>
        <struct name="_WIN32_FIND_DATAW" />
      </ptr>
    </typedef>
    <typedef name="WIN32_FIND_DATA">
      <type>WIN32_FIND_DATAA</type>
    </typedef>
    <typedef name="PWIN32_FIND_DATA">
      <type>PWIN32_FIND_DATAA</type>
    </typedef>
    <typedef name="LPWIN32_FIND_DATA">
      <type>LPWIN32_FIND_DATAA</type>
    </typedef>
    <struct name="_WIN32_FILE_ATTRIBUTE_DATA">
      <field offset="0" name="dwFileAttributes">
        <type>DWORD</type>
      </field>
      <field offset="8" name="ftCreationTime">
        <type>FILETIME</type>
      </field>
      <field offset="16" name="ftLastAccessTime">
        <type>FILETIME</type>
      </field>
      <field offset="24" name="ftLastWriteTime">
        <type>FILETIME</type>
      </field>
      <field offset="32" name="nFileSizeHigh">
        <type>DWORD</type>
      </field>
      <field offset="36" name="nFileSizeLow">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="WIN32_FILE_ATTRIBUTE_DATA">
      <struct name="_WIN32_FILE_ATTRIBUTE_DATA" />
    </typedef>
    <typedef name="LPWIN32_FILE_ATTRIBUTE_DATA">
      <ptr>
        <struct name="_WIN32_FILE_ATTRIBUTE_DATA" />
      </ptr>
    </typedef>
    <typedef name="PTIMERAPCROUTINE">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="lpArgToCompletionRoutine">
            <type>LPVOID</type>
            <stack size="4" />
          </arg>
          <arg name="dwTimerLowValue">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="dwTimerHighValue">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <enum name="_MEMORY_RESOURCE_NOTIFICATION_TYPE">
      <member name="LowMemoryResourceNotification" value="0" />
      <member name="HighMemoryResourceNotification" value="1" />
    </enum>
    <typedef name="MEMORY_RESOURCE_NOTIFICATION_TYPE">
      <enum name="_MEMORY_RESOURCE_NOTIFICATION_TYPE" />
    </typedef>
    <typedef name="PGET_MODULE_HANDLE_EXA">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="lpModuleName">
            <type>LPCSTR</type>
            <stack size="4" />
          </arg>
          <arg name="phModule">
            <ptr>
              <type>HMODULE</type>
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PGET_MODULE_HANDLE_EXW">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="lpModuleName">
            <type>LPCWSTR</type>
            <stack size="4" />
          </arg>
          <arg name="phModule">
            <ptr>
              <type>HMODULE</type>
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <enum name="_PROC_THREAD_ATTRIBUTE_NUM">
      <member name="ProcThreadAttributeParentProcess" value="0" />
      <member name="ProcThreadAttributeExtendedFlags" value="1" />
      <member name="ProcThreadAttributeHandleList" value="2" />
      <member name="ProcThreadAttributeGroupAffinity" value="3" />
      <member name="ProcThreadAttributePreferredNode" value="4" />
      <member name="ProcThreadAttributeIdealProcessor" value="5" />
      <member name="ProcThreadAttributeUmsThread" value="6" />
      <member name="ProcThreadAttributeMitigationPolicy" value="7" />
      <member name="ProcThreadAttributeMax" value="8" />
    </enum>
    <typedef name="PROC_THREAD_ATTRIBUTE_NUM">
      <enum name="_PROC_THREAD_ATTRIBUTE_NUM" />
    </typedef>
    <typedef name="ENUMRESTYPEPROCA">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="hModule">
            <type>HMODULE</type>
            <stack size="4" />
          </arg>
          <arg name="lpType">
            <type>LPSTR</type>
            <stack size="4" />
          </arg>
          <arg name="lParam">
            <type>LONG_PTR</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="ENUMRESTYPEPROCW">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="hModule">
            <type>HMODULE</type>
            <stack size="4" />
          </arg>
          <arg name="lpType">
            <type>LPWSTR</type>
            <stack size="4" />
          </arg>
          <arg name="lParam">
            <type>LONG_PTR</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="ENUMRESNAMEPROCA">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="hModule">
            <type>HMODULE</type>
            <stack size="4" />
          </arg>
          <arg name="lpType">
            <type>LPCSTR</type>
            <stack size="4" />
          </arg>
          <arg name="lpName">
            <type>LPSTR</type>
            <stack size="4" />
          </arg>
          <arg name="lParam">
            <type>LONG_PTR</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="ENUMRESNAMEPROCW">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="hModule">
            <type>HMODULE</type>
            <stack size="4" />
          </arg>
          <arg name="lpType">
            <type>LPCWSTR</type>
            <stack size="4" />
          </arg>
          <arg name="lpName">
            <type>LPWSTR</type>
            <stack size="4" />
          </arg>
          <arg name="lParam">
            <type>LONG_PTR</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="ENUMRESLANGPROCA">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="hModule">
            <type>HMODULE</type>
            <stack size="4" />
          </arg>
          <arg name="lpType">
            <type>LPCSTR</type>
            <stack size="4" />
          </arg>
          <arg name="lpName">
            <type>LPCSTR</type>
            <stack size="4" />
          </arg>
          <arg name="wLanguage">
            <type>WORD</type>
            <stack size="4" />
          </arg>
          <arg name="lParam">
            <type>LONG_PTR</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="ENUMRESLANGPROCW">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="hModule">
            <type>HMODULE</type>
            <stack size="4" />
          </arg>
          <arg name="lpType">
            <type>LPCWSTR</type>
            <stack size="4" />
          </arg>
          <arg name="lpName">
            <type>LPCWSTR</type>
            <stack size="4" />
          </arg>
          <arg name="wLanguage">
            <type>WORD</type>
            <stack size="4" />
          </arg>
          <arg name="lParam">
            <type>LONG_PTR</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PGET_SYSTEM_WOW64_DIRECTORY_A">
      <ptr>
        <fn>
          <return>
            <type>UINT</type>
            <reg>eax</reg>
          </return>
          <arg name="lpBuffer">
            <type>LPSTR</type>
            <stack size="4" />
          </arg>
          <arg name="uSize">
            <type>UINT</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PGET_SYSTEM_WOW64_DIRECTORY_W">
      <ptr>
        <fn>
          <return>
            <type>UINT</type>
            <reg>eax</reg>
          </return>
          <arg name="lpBuffer">
            <type>LPWSTR</type>
            <stack size="4" />
          </arg>
          <arg name="uSize">
            <type>UINT</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <enum name="_GET_FILEEX_INFO_LEVELS">
      <member name="GetFileExInfoStandard" value="0" />
      <member name="GetFileExMaxInfoLevel" value="1" />
    </enum>
    <typedef name="GET_FILEEX_INFO_LEVELS">
      <enum name="_GET_FILEEX_INFO_LEVELS" />
    </typedef>
    <enum name="_FINDEX_INFO_LEVELS">
      <member name="FindExInfoStandard" value="0" />
      <member name="FindExInfoBasic" value="1" />
      <member name="FindExInfoMaxInfoLevel" value="2" />
    </enum>
    <typedef name="FINDEX_INFO_LEVELS">
      <enum name="_FINDEX_INFO_LEVELS" />
    </typedef>
    <enum name="_FINDEX_SEARCH_OPS">
      <member name="FindExSearchNameMatch" value="0" />
      <member name="FindExSearchLimitToDirectories" value="1" />
      <member name="FindExSearchLimitToDevices" value="2" />
      <member name="FindExSearchMaxSearchOp" value="3" />
    </enum>
    <typedef name="FINDEX_SEARCH_OPS">
      <enum name="_FINDEX_SEARCH_OPS" />
    </typedef>
    <typedef name="LPPROGRESS_ROUTINE">
      <ptr>
        <fn>
          <return>
            <type>DWORD</type>
            <reg>eax</reg>
          </return>
          <arg name="TotalFileSize">
            <type>LARGE_INTEGER</type>
            <stack size="8" />
          </arg>
          <arg name="TotalBytesTransferred">
            <type>LARGE_INTEGER</type>
            <stack size="8" />
          </arg>
          <arg name="StreamSize">
            <type>LARGE_INTEGER</type>
            <stack size="8" />
          </arg>
          <arg name="StreamBytesTransferred">
            <type>LARGE_INTEGER</type>
            <stack size="8" />
          </arg>
          <arg name="dwStreamNumber">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="dwCallbackReason">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="hSourceFile">
            <type>HANDLE</type>
            <stack size="4" />
          </arg>
          <arg name="hDestinationFile">
            <type>HANDLE</type>
            <stack size="4" />
          </arg>
          <arg name="lpData">
            <type>LPVOID</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <enum name="_STREAM_INFO_LEVELS">
      <member name="FindStreamInfoStandard" value="0" />
      <member name="FindStreamInfoMaxInfoLevel" value="1" />
    </enum>
    <typedef name="STREAM_INFO_LEVELS">
      <enum name="_STREAM_INFO_LEVELS" />
    </typedef>
    <struct name="_WIN32_FIND_STREAM_DATA">
      <field offset="0" name="StreamSize">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="8" name="cStreamName">
        <arr length="296">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="WIN32_FIND_STREAM_DATA">
      <struct name="_WIN32_FIND_STREAM_DATA" />
    </typedef>
    <typedef name="PWIN32_FIND_STREAM_DATA">
      <ptr>
        <struct name="_WIN32_FIND_STREAM_DATA" />
      </ptr>
    </typedef>
    <enum name="enum_53">
      <member name="PipeAttribute" value="0" />
      <member name="PipeConnectionAttribute" value="1" />
      <member name="PipeHandleAttribute" value="2" />
    </enum>
    <typedef name="PIPE_ATTRIBUTE_TYPE">
      <enum name="enum_53" />
    </typedef>
    <struct name="_EVENTLOG_FULL_INFORMATION">
      <field offset="0" name="dwFull">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="EVENTLOG_FULL_INFORMATION">
      <struct name="_EVENTLOG_FULL_INFORMATION" />
    </typedef>
    <typedef name="LPEVENTLOG_FULL_INFORMATION">
      <ptr>
        <struct name="_EVENTLOG_FULL_INFORMATION" />
      </ptr>
    </typedef>
    <enum name="_COMPUTER_NAME_FORMAT">
      <member name="ComputerNameNetBIOS" value="0" />
      <member name="ComputerNameDnsHostname" value="1" />
      <member name="ComputerNameDnsDomain" value="2" />
      <member name="ComputerNameDnsFullyQualified" value="3" />
      <member name="ComputerNamePhysicalNetBIOS" value="4" />
      <member name="ComputerNamePhysicalDnsHostname" value="5" />
      <member name="ComputerNamePhysicalDnsDomain" value="6" />
      <member name="ComputerNamePhysicalDnsFullyQualified" value="7" />
      <member name="ComputerNameMax" value="8" />
    </enum>
    <typedef name="COMPUTER_NAME_FORMAT">
      <enum name="_COMPUTER_NAME_FORMAT" />
    </typedef>
    <typedef name="WAITORTIMERCALLBACK">
      <type>WAITORTIMERCALLBACKFUNC</type>
    </typedef>
    <typedef name="PTP_WIN32_IO_CALLBACK">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="Instance">
            <type>PTP_CALLBACK_INSTANCE</type>
            <stack size="4" />
          </arg>
          <arg name="Context">
            <type>PVOID</type>
            <stack size="4" />
          </arg>
          <arg name="Overlapped">
            <type>PVOID</type>
            <stack size="4" />
          </arg>
          <arg name="IoResult">
            <type>ULONG</type>
            <stack size="4" />
          </arg>
          <arg name="NumberOfBytesTransferred">
            <type>ULONG_PTR</type>
            <stack size="4" />
          </arg>
          <arg name="Io">
            <type>PTP_IO</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="tagHW_PROFILE_INFOA">
      <field offset="0" name="dwDockInfo">
        <type>DWORD</type>
      </field>
      <field offset="8" name="szHwProfileGuid">
        <arr length="39">
          <type>CHAR</type>
        </arr>
      </field>
      <field offset="48" name="szHwProfileName">
        <arr length="80">
          <type>CHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="HW_PROFILE_INFOA">
      <struct name="tagHW_PROFILE_INFOA" />
    </typedef>
    <typedef name="LPHW_PROFILE_INFOA">
      <ptr>
        <struct name="tagHW_PROFILE_INFOA" />
      </ptr>
    </typedef>
    <struct name="tagHW_PROFILE_INFOW">
      <field offset="0" name="dwDockInfo">
        <type>DWORD</type>
      </field>
      <field offset="8" name="szHwProfileGuid">
        <arr length="39">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="88" name="szHwProfileName">
        <arr length="80">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="HW_PROFILE_INFOW">
      <struct name="tagHW_PROFILE_INFOW" />
    </typedef>
    <typedef name="LPHW_PROFILE_INFOW">
      <ptr>
        <struct name="tagHW_PROFILE_INFOW" />
      </ptr>
    </typedef>
    <typedef name="HW_PROFILE_INFO">
      <type>HW_PROFILE_INFOA</type>
    </typedef>
    <typedef name="LPHW_PROFILE_INFO">
      <type>LPHW_PROFILE_INFOA</type>
    </typedef>
    <struct name="_SYSTEM_POWER_STATUS">
      <field offset="0" name="ACLineStatus">
        <type>BYTE</type>
      </field>
      <field offset="1" name="BatteryFlag">
        <type>BYTE</type>
      </field>
      <field offset="2" name="BatteryLifePercent">
        <type>BYTE</type>
      </field>
      <field offset="3" name="Reserved1">
        <type>BYTE</type>
      </field>
      <field offset="4" name="BatteryLifeTime">
        <type>DWORD</type>
      </field>
      <field offset="8" name="BatteryFullLifeTime">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="SYSTEM_POWER_STATUS">
      <struct name="_SYSTEM_POWER_STATUS" />
    </typedef>
    <typedef name="LPSYSTEM_POWER_STATUS">
      <ptr>
        <struct name="_SYSTEM_POWER_STATUS" />
      </ptr>
    </typedef>
    <struct name="tagACTCTXA">
      <field offset="0" name="cbSize">
        <type>ULONG</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="lpSource">
        <type>LPCSTR</type>
      </field>
      <field offset="12" name="wProcessorArchitecture">
        <type>USHORT</type>
      </field>
      <field offset="14" name="wLangId">
        <type>LANGID</type>
      </field>
      <field offset="16" name="lpAssemblyDirectory">
        <type>LPCSTR</type>
      </field>
      <field offset="20" name="lpResourceName">
        <type>LPCSTR</type>
      </field>
      <field offset="24" name="lpApplicationName">
        <type>LPCSTR</type>
      </field>
      <field offset="28" name="hModule">
        <type>HMODULE</type>
      </field>
    </struct>
    <typedef name="ACTCTXA">
      <struct name="tagACTCTXA" />
    </typedef>
    <typedef name="PACTCTXA">
      <ptr>
        <struct name="tagACTCTXA" />
      </ptr>
    </typedef>
    <struct name="tagACTCTXW">
      <field offset="0" name="cbSize">
        <type>ULONG</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="lpSource">
        <type>LPCWSTR</type>
      </field>
      <field offset="12" name="wProcessorArchitecture">
        <type>USHORT</type>
      </field>
      <field offset="14" name="wLangId">
        <type>LANGID</type>
      </field>
      <field offset="16" name="lpAssemblyDirectory">
        <type>LPCWSTR</type>
      </field>
      <field offset="20" name="lpResourceName">
        <type>LPCWSTR</type>
      </field>
      <field offset="24" name="lpApplicationName">
        <type>LPCWSTR</type>
      </field>
      <field offset="28" name="hModule">
        <type>HMODULE</type>
      </field>
    </struct>
    <typedef name="ACTCTXW">
      <struct name="tagACTCTXW" />
    </typedef>
    <typedef name="PACTCTXW">
      <ptr>
        <struct name="tagACTCTXW" />
      </ptr>
    </typedef>
    <typedef name="ACTCTX">
      <type>ACTCTXA</type>
    </typedef>
    <typedef name="PACTCTX">
      <type>PACTCTXA</type>
    </typedef>
    <typedef name="PCACTCTXA">
      <ptr>
        <type>ACTCTXA</type>
      </ptr>
    </typedef>
    <typedef name="PCACTCTXW">
      <ptr>
        <type>ACTCTXW</type>
      </ptr>
    </typedef>
    <typedef name="PCACTCTX">
      <type>PCACTCTXA</type>
    </typedef>
    <struct name="tagACTCTX_SECTION_KEYED_DATA_2600">
      <field offset="0" name="cbSize">
        <type>ULONG</type>
      </field>
      <field offset="4" name="ulDataFormatVersion">
        <type>ULONG</type>
      </field>
      <field offset="8" name="lpData">
        <type>PVOID</type>
      </field>
      <field offset="12" name="ulLength">
        <type>ULONG</type>
      </field>
      <field offset="16" name="lpSectionGlobalData">
        <type>PVOID</type>
      </field>
      <field offset="20" name="ulSectionGlobalDataLength">
        <type>ULONG</type>
      </field>
      <field offset="24" name="lpSectionBase">
        <type>PVOID</type>
      </field>
      <field offset="28" name="ulSectionTotalLength">
        <type>ULONG</type>
      </field>
      <field offset="32" name="hActCtx">
        <type>HANDLE</type>
      </field>
      <field offset="36" name="ulAssemblyRosterIndex">
        <type>ULONG</type>
      </field>
    </struct>
    <typedef name="ACTCTX_SECTION_KEYED_DATA_2600">
      <struct name="tagACTCTX_SECTION_KEYED_DATA_2600" />
    </typedef>
    <typedef name="PACTCTX_SECTION_KEYED_DATA_2600">
      <ptr>
        <struct name="tagACTCTX_SECTION_KEYED_DATA_2600" />
      </ptr>
    </typedef>
    <typedef name="PCACTCTX_SECTION_KEYED_DATA_2600">
      <ptr>
        <type>ACTCTX_SECTION_KEYED_DATA_2600</type>
      </ptr>
    </typedef>
    <struct name="tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA">
      <field offset="0" name="lpInformation">
        <type>PVOID</type>
      </field>
      <field offset="4" name="lpSectionBase">
        <type>PVOID</type>
      </field>
      <field offset="8" name="ulSectionLength">
        <type>ULONG</type>
      </field>
      <field offset="12" name="lpSectionGlobalDataBase">
        <type>PVOID</type>
      </field>
      <field offset="16" name="ulSectionGlobalDataLength">
        <type>ULONG</type>
      </field>
    </struct>
    <typedef name="ACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA">
      <struct name="tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA" />
    </typedef>
    <typedef name="PACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA">
      <ptr>
        <struct name="tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA" />
      </ptr>
    </typedef>
    <typedef name="PCACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA">
      <ptr>
        <type>ACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA</type>
      </ptr>
    </typedef>
    <struct name="tagACTCTX_SECTION_KEYED_DATA">
      <field offset="0" name="cbSize">
        <type>ULONG</type>
      </field>
      <field offset="4" name="ulDataFormatVersion">
        <type>ULONG</type>
      </field>
      <field offset="8" name="lpData">
        <type>PVOID</type>
      </field>
      <field offset="12" name="ulLength">
        <type>ULONG</type>
      </field>
      <field offset="16" name="lpSectionGlobalData">
        <type>PVOID</type>
      </field>
      <field offset="20" name="ulSectionGlobalDataLength">
        <type>ULONG</type>
      </field>
      <field offset="24" name="lpSectionBase">
        <type>PVOID</type>
      </field>
      <field offset="28" name="ulSectionTotalLength">
        <type>ULONG</type>
      </field>
      <field offset="32" name="hActCtx">
        <type>HANDLE</type>
      </field>
      <field offset="36" name="ulAssemblyRosterIndex">
        <type>ULONG</type>
      </field>
      <field offset="40" name="ulFlags">
        <type>ULONG</type>
      </field>
      <field offset="48" name="AssemblyMetadata">
        <type>ACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA</type>
      </field>
    </struct>
    <typedef name="ACTCTX_SECTION_KEYED_DATA">
      <struct name="tagACTCTX_SECTION_KEYED_DATA" />
    </typedef>
    <typedef name="PACTCTX_SECTION_KEYED_DATA">
      <ptr>
        <struct name="tagACTCTX_SECTION_KEYED_DATA" />
      </ptr>
    </typedef>
    <typedef name="PCACTCTX_SECTION_KEYED_DATA">
      <ptr>
        <type>ACTCTX_SECTION_KEYED_DATA</type>
      </ptr>
    </typedef>
    <struct name="_ACTIVATION_CONTEXT_BASIC_INFORMATION">
      <field offset="0" name="hActCtx">
        <type>HANDLE</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="ACTIVATION_CONTEXT_BASIC_INFORMATION">
      <struct name="_ACTIVATION_CONTEXT_BASIC_INFORMATION" />
    </typedef>
    <typedef name="PACTIVATION_CONTEXT_BASIC_INFORMATION">
      <ptr>
        <struct name="_ACTIVATION_CONTEXT_BASIC_INFORMATION" />
      </ptr>
    </typedef>
    <typedef name="PCACTIVATION_CONTEXT_BASIC_INFORMATION">
      <ptr>
        <struct name="_ACTIVATION_CONTEXT_BASIC_INFORMATION" />
      </ptr>
    </typedef>
    <typedef name="PQUERYACTCTXW_FUNC">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="hActCtx">
            <type>HANDLE</type>
            <stack size="4" />
          </arg>
          <arg name="pvSubInstance">
            <type>PVOID</type>
            <stack size="4" />
          </arg>
          <arg name="ulInfoClass">
            <type>ULONG</type>
            <stack size="4" />
          </arg>
          <arg name="pvBuffer">
            <type>PVOID</type>
            <stack size="4" />
          </arg>
          <arg name="cbBuffer">
            <type>SIZE_T</type>
            <stack size="4" />
          </arg>
          <arg name="pcbWrittenOrRequired">
            <ptr>
              <type>SIZE_T</type>
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="APPLICATION_RECOVERY_CALLBACK">
      <ptr>
        <fn>
          <return>
            <type>DWORD</type>
            <reg>eax</reg>
          </return>
          <arg name="pvParameter">
            <type>PVOID</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <enum name="_FILE_INFO_BY_HANDLE_CLASS">
      <member name="FileBasicInfo" value="0" />
      <member name="FileStandardInfo" value="1" />
      <member name="FileNameInfo" value="2" />
      <member name="FileRenameInfo" value="3" />
      <member name="FileDispositionInfo" value="4" />
      <member name="FileAllocationInfo" value="5" />
      <member name="FileEndOfFileInfo" value="6" />
      <member name="FileStreamInfo" value="7" />
      <member name="FileCompressionInfo" value="8" />
      <member name="FileAttributeTagInfo" value="9" />
      <member name="FileIdBothDirectoryInfo" value="10" />
      <member name="FileIdBothDirectoryRestartInfo" value="11" />
      <member name="FileIoPriorityHintInfo" value="12" />
      <member name="FileRemoteProtocolInfo" value="13" />
      <member name="MaximumFileInfoByHandleClass" value="14" />
    </enum>
    <typedef name="FILE_INFO_BY_HANDLE_CLASS">
      <enum name="_FILE_INFO_BY_HANDLE_CLASS" />
    </typedef>
    <typedef name="PFILE_INFO_BY_HANDLE_CLASS">
      <ptr>
        <enum name="_FILE_INFO_BY_HANDLE_CLASS" />
      </ptr>
    </typedef>
    <struct name="_FILE_BASIC_INFO">
      <field offset="0" name="CreationTime">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="8" name="LastAccessTime">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="16" name="LastWriteTime">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="24" name="ChangeTime">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="32" name="FileAttributes">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="FILE_BASIC_INFO">
      <struct name="_FILE_BASIC_INFO" />
    </typedef>
    <typedef name="PFILE_BASIC_INFO">
      <ptr>
        <struct name="_FILE_BASIC_INFO" />
      </ptr>
    </typedef>
    <struct name="_FILE_STANDARD_INFO">
      <field offset="0" name="AllocationSize">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="8" name="EndOfFile">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="16" name="NumberOfLinks">
        <type>DWORD</type>
      </field>
      <field offset="20" name="DeletePending">
        <type>BOOLEAN</type>
      </field>
      <field offset="21" name="Directory">
        <type>BOOLEAN</type>
      </field>
    </struct>
    <typedef name="FILE_STANDARD_INFO">
      <struct name="_FILE_STANDARD_INFO" />
    </typedef>
    <typedef name="PFILE_STANDARD_INFO">
      <ptr>
        <struct name="_FILE_STANDARD_INFO" />
      </ptr>
    </typedef>
    <struct name="_FILE_NAME_INFO">
      <field offset="0" name="FileNameLength">
        <type>DWORD</type>
      </field>
      <field offset="4" name="FileName">
        <arr length="1">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="FILE_NAME_INFO">
      <struct name="_FILE_NAME_INFO" />
    </typedef>
    <typedef name="PFILE_NAME_INFO">
      <ptr>
        <struct name="_FILE_NAME_INFO" />
      </ptr>
    </typedef>
    <struct name="_FILE_RENAME_INFO">
      <field offset="0" name="ReplaceIfExists">
        <type>BOOLEAN</type>
      </field>
      <field offset="4" name="RootDirectory">
        <type>HANDLE</type>
      </field>
      <field offset="8" name="FileNameLength">
        <type>DWORD</type>
      </field>
      <field offset="12" name="FileName">
        <arr length="1">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="FILE_RENAME_INFO">
      <struct name="_FILE_RENAME_INFO" />
    </typedef>
    <typedef name="PFILE_RENAME_INFO">
      <ptr>
        <struct name="_FILE_RENAME_INFO" />
      </ptr>
    </typedef>
    <struct name="_FILE_ALLOCATION_INFO">
      <field offset="0" name="AllocationSize">
        <type>LARGE_INTEGER</type>
      </field>
    </struct>
    <typedef name="FILE_ALLOCATION_INFO">
      <struct name="_FILE_ALLOCATION_INFO" />
    </typedef>
    <typedef name="PFILE_ALLOCATION_INFO">
      <ptr>
        <struct name="_FILE_ALLOCATION_INFO" />
      </ptr>
    </typedef>
    <struct name="_FILE_END_OF_FILE_INFO">
      <field offset="0" name="EndOfFile">
        <type>LARGE_INTEGER</type>
      </field>
    </struct>
    <typedef name="FILE_END_OF_FILE_INFO">
      <struct name="_FILE_END_OF_FILE_INFO" />
    </typedef>
    <typedef name="PFILE_END_OF_FILE_INFO">
      <ptr>
        <struct name="_FILE_END_OF_FILE_INFO" />
      </ptr>
    </typedef>
    <struct name="_FILE_STREAM_INFO">
      <field offset="0" name="NextEntryOffset">
        <type>DWORD</type>
      </field>
      <field offset="4" name="StreamNameLength">
        <type>DWORD</type>
      </field>
      <field offset="8" name="StreamSize">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="16" name="StreamAllocationSize">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="24" name="StreamName">
        <arr length="1">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="FILE_STREAM_INFO">
      <struct name="_FILE_STREAM_INFO" />
    </typedef>
    <typedef name="PFILE_STREAM_INFO">
      <ptr>
        <struct name="_FILE_STREAM_INFO" />
      </ptr>
    </typedef>
    <struct name="_FILE_COMPRESSION_INFO">
      <field offset="0" name="CompressedFileSize">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="8" name="CompressionFormat">
        <type>WORD</type>
      </field>
      <field offset="10" name="CompressionUnitShift">
        <type>UCHAR</type>
      </field>
      <field offset="11" name="ChunkShift">
        <type>UCHAR</type>
      </field>
      <field offset="12" name="ClusterShift">
        <type>UCHAR</type>
      </field>
      <field offset="15" name="Reserved">
        <arr length="3">
          <type>UCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="FILE_COMPRESSION_INFO">
      <struct name="_FILE_COMPRESSION_INFO" />
    </typedef>
    <typedef name="PFILE_COMPRESSION_INFO">
      <ptr>
        <struct name="_FILE_COMPRESSION_INFO" />
      </ptr>
    </typedef>
    <struct name="_FILE_ATTRIBUTE_TAG_INFO">
      <field offset="0" name="FileAttributes">
        <type>DWORD</type>
      </field>
      <field offset="4" name="ReparseTag">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="FILE_ATTRIBUTE_TAG_INFO">
      <struct name="_FILE_ATTRIBUTE_TAG_INFO" />
    </typedef>
    <typedef name="PFILE_ATTRIBUTE_TAG_INFO">
      <ptr>
        <struct name="_FILE_ATTRIBUTE_TAG_INFO" />
      </ptr>
    </typedef>
    <struct name="_FILE_DISPOSITION_INFO">
      <field offset="0" name="DeleteFileA">
        <type>BOOLEAN</type>
      </field>
    </struct>
    <typedef name="FILE_DISPOSITION_INFO">
      <struct name="_FILE_DISPOSITION_INFO" />
    </typedef>
    <typedef name="PFILE_DISPOSITION_INFO">
      <ptr>
        <struct name="_FILE_DISPOSITION_INFO" />
      </ptr>
    </typedef>
    <struct name="_FILE_ID_BOTH_DIR_INFO">
      <field offset="0" name="NextEntryOffset">
        <type>DWORD</type>
      </field>
      <field offset="4" name="FileIndex">
        <type>DWORD</type>
      </field>
      <field offset="8" name="CreationTime">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="16" name="LastAccessTime">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="24" name="LastWriteTime">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="32" name="ChangeTime">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="40" name="EndOfFile">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="48" name="AllocationSize">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="56" name="FileAttributes">
        <type>DWORD</type>
      </field>
      <field offset="60" name="FileNameLength">
        <type>DWORD</type>
      </field>
      <field offset="64" name="EaSize">
        <type>DWORD</type>
      </field>
      <field offset="68" name="ShortNameLength">
        <type>CCHAR</type>
      </field>
      <field offset="72" name="ShortName">
        <arr length="12">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="96" name="FileId">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="104" name="FileName">
        <arr length="1">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="FILE_ID_BOTH_DIR_INFO">
      <struct name="_FILE_ID_BOTH_DIR_INFO" />
    </typedef>
    <typedef name="PFILE_ID_BOTH_DIR_INFO">
      <ptr>
        <struct name="_FILE_ID_BOTH_DIR_INFO" />
      </ptr>
    </typedef>
    <enum name="_PRIORITY_HINT">
      <member name="IoPriorityHintVeryLow" value="0" />
      <member name="IoPriorityHintLow" value="1" />
      <member name="IoPriorityHintNormal" value="2" />
      <member name="MaximumIoPriorityHintType" value="3" />
    </enum>
    <typedef name="PRIORITY_HINT">
      <enum name="_PRIORITY_HINT" />
    </typedef>
    <struct name="_FILE_IO_PRIORITY_HINT_INFO">
      <field offset="0" name="PriorityHint">
        <type>PRIORITY_HINT</type>
      </field>
    </struct>
    <typedef name="FILE_IO_PRIORITY_HINT_INFO">
      <struct name="_FILE_IO_PRIORITY_HINT_INFO" />
    </typedef>
    <typedef name="PFILE_IO_PRIORITY_HINT_INFO">
      <ptr>
        <struct name="_FILE_IO_PRIORITY_HINT_INFO" />
      </ptr>
    </typedef>
    <struct name="struct_66">
      <field offset="0" name="Reserved">
        <arr length="8">
          <type>DWORD</type>
        </arr>
      </field>
    </struct>
    <struct name="struct_67">
      <field offset="0" name="Reserved">
        <arr length="16">
          <type>DWORD</type>
        </arr>
      </field>
    </struct>
    <struct name="_FILE_REMOTE_PROTOCOL_INFO">
      <field offset="0" name="StructureVersion">
        <type>USHORT</type>
      </field>
      <field offset="2" name="StructureSize">
        <type>USHORT</type>
      </field>
      <field offset="4" name="Protocol">
        <type>DWORD</type>
      </field>
      <field offset="8" name="ProtocolMajorVersion">
        <type>USHORT</type>
      </field>
      <field offset="10" name="ProtocolMinorVersion">
        <type>USHORT</type>
      </field>
      <field offset="12" name="ProtocolRevision">
        <type>USHORT</type>
      </field>
      <field offset="14" name="Reserved">
        <type>USHORT</type>
      </field>
      <field offset="16" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="24" name="GenericReserved">
        <struct name="struct_66" />
      </field>
      <field offset="56" name="ProtocolSpecificReserved">
        <struct name="struct_67" />
      </field>
    </struct>
    <typedef name="FILE_REMOTE_PROTOCOL_INFO">
      <struct name="_FILE_REMOTE_PROTOCOL_INFO" />
    </typedef>
    <typedef name="PFILE_REMOTE_PROTOCOL_INFO">
      <ptr>
        <struct name="_FILE_REMOTE_PROTOCOL_INFO" />
      </ptr>
    </typedef>
    <enum name="_FILE_ID_TYPE">
      <member name="FileIdType" value="0" />
      <member name="ObjectIdType" value="1" />
      <member name="MaximumFileIdType" value="2" />
    </enum>
    <typedef name="FILE_ID_TYPE">
      <enum name="_FILE_ID_TYPE" />
    </typedef>
    <typedef name="PFILE_ID_TYPE">
      <ptr>
        <enum name="_FILE_ID_TYPE" />
      </ptr>
    </typedef>
    <struct name="FILE_ID_DESCRIPTOR">
      <field offset="0" name="dwSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Type">
        <type>FILE_ID_TYPE</type>
      </field>
      <field offset="8">
        <union>
          <alt name="FileId">
            <type>LARGE_INTEGER</type>
          </alt>
          <alt name="ObjectId">
            <type>GUID</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="FILE_ID_DESCRIPTOR">
      <struct name="FILE_ID_DESCRIPTOR" />
    </typedef>
    <typedef name="LPFILE_ID_DESCRIPTOR">
      <ptr>
        <struct name="FILE_ID_DESCRIPTOR" />
      </ptr>
    </typedef>
    <struct name="_DRAWPATRECT">
      <field offset="0" name="ptPosition">
        <type>POINT</type>
      </field>
      <field offset="8" name="ptSize">
        <type>POINT</type>
      </field>
      <field offset="16" name="wStyle">
        <type>WORD</type>
      </field>
      <field offset="18" name="wPattern">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="DRAWPATRECT">
      <struct name="_DRAWPATRECT" />
    </typedef>
    <typedef name="PDRAWPATRECT">
      <ptr>
        <struct name="_DRAWPATRECT" />
      </ptr>
    </typedef>
    <struct name="_PSINJECTDATA">
      <field offset="0" name="DataBytes">
        <type>DWORD</type>
      </field>
      <field offset="4" name="InjectionPoint">
        <type>WORD</type>
      </field>
      <field offset="6" name="PageNumber">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="PSINJECTDATA">
      <struct name="_PSINJECTDATA" />
    </typedef>
    <typedef name="PPSINJECTDATA">
      <ptr>
        <struct name="_PSINJECTDATA" />
      </ptr>
    </typedef>
    <struct name="_PSFEATURE_OUTPUT">
      <field offset="0" name="bPageIndependent">
        <type>BOOL</type>
      </field>
      <field offset="4" name="bSetPageDevice">
        <type>BOOL</type>
      </field>
    </struct>
    <typedef name="PSFEATURE_OUTPUT">
      <struct name="_PSFEATURE_OUTPUT" />
    </typedef>
    <typedef name="PPSFEATURE_OUTPUT">
      <ptr>
        <struct name="_PSFEATURE_OUTPUT" />
      </ptr>
    </typedef>
    <struct name="_PSFEATURE_CUSTPAPER">
      <field offset="0" name="lOrientation">
        <type>LONG</type>
      </field>
      <field offset="4" name="lWidth">
        <type>LONG</type>
      </field>
      <field offset="8" name="lHeight">
        <type>LONG</type>
      </field>
      <field offset="12" name="lWidthOffset">
        <type>LONG</type>
      </field>
      <field offset="16" name="lHeightOffset">
        <type>LONG</type>
      </field>
    </struct>
    <typedef name="PSFEATURE_CUSTPAPER">
      <struct name="_PSFEATURE_CUSTPAPER" />
    </typedef>
    <typedef name="PPSFEATURE_CUSTPAPER">
      <ptr>
        <struct name="_PSFEATURE_CUSTPAPER" />
      </ptr>
    </typedef>
    <struct name="tagXFORM">
      <field offset="0" name="eM11">
        <type>FLOAT</type>
      </field>
      <field offset="4" name="eM12">
        <type>FLOAT</type>
      </field>
      <field offset="8" name="eM21">
        <type>FLOAT</type>
      </field>
      <field offset="12" name="eM22">
        <type>FLOAT</type>
      </field>
      <field offset="16" name="eDx">
        <type>FLOAT</type>
      </field>
      <field offset="20" name="eDy">
        <type>FLOAT</type>
      </field>
    </struct>
    <typedef name="XFORM">
      <struct name="tagXFORM" />
    </typedef>
    <typedef name="PXFORM">
      <ptr>
        <struct name="tagXFORM" />
      </ptr>
    </typedef>
    <typedef name="LPXFORM">
      <ptr>
        <struct name="tagXFORM" />
      </ptr>
    </typedef>
    <struct name="tagBITMAP">
      <field offset="0" name="bmType">
        <type>LONG</type>
      </field>
      <field offset="4" name="bmWidth">
        <type>LONG</type>
      </field>
      <field offset="8" name="bmHeight">
        <type>LONG</type>
      </field>
      <field offset="12" name="bmWidthBytes">
        <type>LONG</type>
      </field>
      <field offset="16" name="bmPlanes">
        <type>WORD</type>
      </field>
      <field offset="18" name="bmBitsPixel">
        <type>WORD</type>
      </field>
      <field offset="20" name="bmBits">
        <type>LPVOID</type>
      </field>
    </struct>
    <typedef name="BITMAP">
      <struct name="tagBITMAP" />
    </typedef>
    <typedef name="PBITMAP">
      <ptr>
        <struct name="tagBITMAP" />
      </ptr>
    </typedef>
    <typedef name="NPBITMAP">
      <ptr>
        <struct name="tagBITMAP" />
      </ptr>
    </typedef>
    <typedef name="LPBITMAP">
      <ptr>
        <struct name="tagBITMAP" />
      </ptr>
    </typedef>
    <struct name="tagRGBTRIPLE">
      <field offset="0" name="rgbtBlue">
        <type>BYTE</type>
      </field>
      <field offset="1" name="rgbtGreen">
        <type>BYTE</type>
      </field>
      <field offset="2" name="rgbtRed">
        <type>BYTE</type>
      </field>
    </struct>
    <typedef name="RGBTRIPLE">
      <struct name="tagRGBTRIPLE" />
    </typedef>
    <typedef name="PRGBTRIPLE">
      <ptr>
        <struct name="tagRGBTRIPLE" />
      </ptr>
    </typedef>
    <typedef name="NPRGBTRIPLE">
      <ptr>
        <struct name="tagRGBTRIPLE" />
      </ptr>
    </typedef>
    <typedef name="LPRGBTRIPLE">
      <ptr>
        <struct name="tagRGBTRIPLE" />
      </ptr>
    </typedef>
    <struct name="tagRGBQUAD">
      <field offset="0" name="rgbBlue">
        <type>BYTE</type>
      </field>
      <field offset="1" name="rgbGreen">
        <type>BYTE</type>
      </field>
      <field offset="2" name="rgbRed">
        <type>BYTE</type>
      </field>
      <field offset="3" name="rgbReserved">
        <type>BYTE</type>
      </field>
    </struct>
    <typedef name="RGBQUAD">
      <struct name="tagRGBQUAD" />
    </typedef>
    <typedef name="LPRGBQUAD">
      <ptr>
        <type>RGBQUAD</type>
      </ptr>
    </typedef>
    <typedef name="LCSCSTYPE">
      <type>LONG</type>
    </typedef>
    <typedef name="LCSGAMUTMATCH">
      <type>LONG</type>
    </typedef>
    <typedef name="FXPT16DOT16">
      <prim domain="SignedInt" size="4" />
    </typedef>
    <typedef name="LPFXPT16DOT16">
      <ptr>
        <prim domain="SignedInt" size="4" />
      </ptr>
    </typedef>
    <typedef name="FXPT2DOT30">
      <prim domain="SignedInt" size="4" />
    </typedef>
    <typedef name="LPFXPT2DOT30">
      <ptr>
        <prim domain="SignedInt" size="4" />
      </ptr>
    </typedef>
    <struct name="tagCIEXYZ">
      <field offset="0" name="ciexyzX">
        <type>FXPT2DOT30</type>
      </field>
      <field offset="4" name="ciexyzY">
        <type>FXPT2DOT30</type>
      </field>
      <field offset="8" name="ciexyzZ">
        <type>FXPT2DOT30</type>
      </field>
    </struct>
    <typedef name="CIEXYZ">
      <struct name="tagCIEXYZ" />
    </typedef>
    <typedef name="LPCIEXYZ">
      <ptr>
        <type>CIEXYZ</type>
      </ptr>
    </typedef>
    <struct name="tagICEXYZTRIPLE">
      <field offset="0" name="ciexyzRed">
        <type>CIEXYZ</type>
      </field>
      <field offset="16" name="ciexyzGreen">
        <type>CIEXYZ</type>
      </field>
      <field offset="32" name="ciexyzBlue">
        <type>CIEXYZ</type>
      </field>
    </struct>
    <typedef name="CIEXYZTRIPLE">
      <struct name="tagICEXYZTRIPLE" />
    </typedef>
    <typedef name="LPCIEXYZTRIPLE">
      <ptr>
        <type>CIEXYZTRIPLE</type>
      </ptr>
    </typedef>
    <struct name="tagLOGCOLORSPACEA">
      <field offset="0" name="lcsSignature">
        <type>DWORD</type>
      </field>
      <field offset="4" name="lcsVersion">
        <type>DWORD</type>
      </field>
      <field offset="8" name="lcsSize">
        <type>DWORD</type>
      </field>
      <field offset="12" name="lcsCSType">
        <type>LCSCSTYPE</type>
      </field>
      <field offset="16" name="lcsIntent">
        <type>LCSGAMUTMATCH</type>
      </field>
      <field offset="24" name="lcsEndpoints">
        <type>CIEXYZTRIPLE</type>
      </field>
      <field offset="60" name="lcsGammaRed">
        <type>DWORD</type>
      </field>
      <field offset="64" name="lcsGammaGreen">
        <type>DWORD</type>
      </field>
      <field offset="68" name="lcsGammaBlue">
        <type>DWORD</type>
      </field>
      <field offset="72" name="lcsFilename">
        <arr length="260">
          <type>CHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="LOGCOLORSPACEA">
      <struct name="tagLOGCOLORSPACEA" />
    </typedef>
    <typedef name="LPLOGCOLORSPACEA">
      <ptr>
        <struct name="tagLOGCOLORSPACEA" />
      </ptr>
    </typedef>
    <struct name="tagLOGCOLORSPACEW">
      <field offset="0" name="lcsSignature">
        <type>DWORD</type>
      </field>
      <field offset="4" name="lcsVersion">
        <type>DWORD</type>
      </field>
      <field offset="8" name="lcsSize">
        <type>DWORD</type>
      </field>
      <field offset="12" name="lcsCSType">
        <type>LCSCSTYPE</type>
      </field>
      <field offset="16" name="lcsIntent">
        <type>LCSGAMUTMATCH</type>
      </field>
      <field offset="24" name="lcsEndpoints">
        <type>CIEXYZTRIPLE</type>
      </field>
      <field offset="60" name="lcsGammaRed">
        <type>DWORD</type>
      </field>
      <field offset="64" name="lcsGammaGreen">
        <type>DWORD</type>
      </field>
      <field offset="68" name="lcsGammaBlue">
        <type>DWORD</type>
      </field>
      <field offset="72" name="lcsFilename">
        <arr length="260">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="LOGCOLORSPACEW">
      <struct name="tagLOGCOLORSPACEW" />
    </typedef>
    <typedef name="LPLOGCOLORSPACEW">
      <ptr>
        <struct name="tagLOGCOLORSPACEW" />
      </ptr>
    </typedef>
    <typedef name="LOGCOLORSPACE">
      <type>LOGCOLORSPACEA</type>
    </typedef>
    <typedef name="LPLOGCOLORSPACE">
      <type>LPLOGCOLORSPACEA</type>
    </typedef>
    <struct name="tagBITMAPCOREHEADER">
      <field offset="0" name="bcSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="bcWidth">
        <type>WORD</type>
      </field>
      <field offset="6" name="bcHeight">
        <type>WORD</type>
      </field>
      <field offset="8" name="bcPlanes">
        <type>WORD</type>
      </field>
      <field offset="10" name="bcBitCount">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="BITMAPCOREHEADER">
      <struct name="tagBITMAPCOREHEADER" />
    </typedef>
    <typedef name="LPBITMAPCOREHEADER">
      <ptr>
        <struct name="tagBITMAPCOREHEADER" />
      </ptr>
    </typedef>
    <typedef name="PBITMAPCOREHEADER">
      <ptr>
        <struct name="tagBITMAPCOREHEADER" />
      </ptr>
    </typedef>
    <struct name="tagBITMAPINFOHEADER">
      <field offset="0" name="biSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="biWidth">
        <type>LONG</type>
      </field>
      <field offset="8" name="biHeight">
        <type>LONG</type>
      </field>
      <field offset="12" name="biPlanes">
        <type>WORD</type>
      </field>
      <field offset="14" name="biBitCount">
        <type>WORD</type>
      </field>
      <field offset="16" name="biCompression">
        <type>DWORD</type>
      </field>
      <field offset="20" name="biSizeImage">
        <type>DWORD</type>
      </field>
      <field offset="24" name="biXPelsPerMeter">
        <type>LONG</type>
      </field>
      <field offset="28" name="biYPelsPerMeter">
        <type>LONG</type>
      </field>
      <field offset="32" name="biClrUsed">
        <type>DWORD</type>
      </field>
      <field offset="36" name="biClrImportant">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="BITMAPINFOHEADER">
      <struct name="tagBITMAPINFOHEADER" />
    </typedef>
    <typedef name="LPBITMAPINFOHEADER">
      <ptr>
        <struct name="tagBITMAPINFOHEADER" />
      </ptr>
    </typedef>
    <typedef name="PBITMAPINFOHEADER">
      <ptr>
        <struct name="tagBITMAPINFOHEADER" />
      </ptr>
    </typedef>
    <struct name="struct_68">
      <field offset="0" name="bV4Size">
        <type>DWORD</type>
      </field>
      <field offset="4" name="bV4Width">
        <type>LONG</type>
      </field>
      <field offset="8" name="bV4Height">
        <type>LONG</type>
      </field>
      <field offset="12" name="bV4Planes">
        <type>WORD</type>
      </field>
      <field offset="14" name="bV4BitCount">
        <type>WORD</type>
      </field>
      <field offset="16" name="bV4V4Compression">
        <type>DWORD</type>
      </field>
      <field offset="20" name="bV4SizeImage">
        <type>DWORD</type>
      </field>
      <field offset="24" name="bV4XPelsPerMeter">
        <type>LONG</type>
      </field>
      <field offset="28" name="bV4YPelsPerMeter">
        <type>LONG</type>
      </field>
      <field offset="32" name="bV4ClrUsed">
        <type>DWORD</type>
      </field>
      <field offset="36" name="bV4ClrImportant">
        <type>DWORD</type>
      </field>
      <field offset="40" name="bV4RedMask">
        <type>DWORD</type>
      </field>
      <field offset="44" name="bV4GreenMask">
        <type>DWORD</type>
      </field>
      <field offset="48" name="bV4BlueMask">
        <type>DWORD</type>
      </field>
      <field offset="52" name="bV4AlphaMask">
        <type>DWORD</type>
      </field>
      <field offset="56" name="bV4CSType">
        <type>DWORD</type>
      </field>
      <field offset="64" name="bV4Endpoints">
        <type>CIEXYZTRIPLE</type>
      </field>
      <field offset="100" name="bV4GammaRed">
        <type>DWORD</type>
      </field>
      <field offset="104" name="bV4GammaGreen">
        <type>DWORD</type>
      </field>
      <field offset="108" name="bV4GammaBlue">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="BITMAPV4HEADER">
      <struct name="struct_68" />
    </typedef>
    <typedef name="LPBITMAPV4HEADER">
      <ptr>
        <struct name="struct_68" />
      </ptr>
    </typedef>
    <typedef name="PBITMAPV4HEADER">
      <ptr>
        <struct name="struct_68" />
      </ptr>
    </typedef>
    <struct name="struct_69">
      <field offset="0" name="bV5Size">
        <type>DWORD</type>
      </field>
      <field offset="4" name="bV5Width">
        <type>LONG</type>
      </field>
      <field offset="8" name="bV5Height">
        <type>LONG</type>
      </field>
      <field offset="12" name="bV5Planes">
        <type>WORD</type>
      </field>
      <field offset="14" name="bV5BitCount">
        <type>WORD</type>
      </field>
      <field offset="16" name="bV5Compression">
        <type>DWORD</type>
      </field>
      <field offset="20" name="bV5SizeImage">
        <type>DWORD</type>
      </field>
      <field offset="24" name="bV5XPelsPerMeter">
        <type>LONG</type>
      </field>
      <field offset="28" name="bV5YPelsPerMeter">
        <type>LONG</type>
      </field>
      <field offset="32" name="bV5ClrUsed">
        <type>DWORD</type>
      </field>
      <field offset="36" name="bV5ClrImportant">
        <type>DWORD</type>
      </field>
      <field offset="40" name="bV5RedMask">
        <type>DWORD</type>
      </field>
      <field offset="44" name="bV5GreenMask">
        <type>DWORD</type>
      </field>
      <field offset="48" name="bV5BlueMask">
        <type>DWORD</type>
      </field>
      <field offset="52" name="bV5AlphaMask">
        <type>DWORD</type>
      </field>
      <field offset="56" name="bV5CSType">
        <type>DWORD</type>
      </field>
      <field offset="64" name="bV5Endpoints">
        <type>CIEXYZTRIPLE</type>
      </field>
      <field offset="100" name="bV5GammaRed">
        <type>DWORD</type>
      </field>
      <field offset="104" name="bV5GammaGreen">
        <type>DWORD</type>
      </field>
      <field offset="108" name="bV5GammaBlue">
        <type>DWORD</type>
      </field>
      <field offset="112" name="bV5Intent">
        <type>DWORD</type>
      </field>
      <field offset="116" name="bV5ProfileData">
        <type>DWORD</type>
      </field>
      <field offset="120" name="bV5ProfileSize">
        <type>DWORD</type>
      </field>
      <field offset="124" name="bV5Reserved">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="BITMAPV5HEADER">
      <struct name="struct_69" />
    </typedef>
    <typedef name="LPBITMAPV5HEADER">
      <ptr>
        <struct name="struct_69" />
      </ptr>
    </typedef>
    <typedef name="PBITMAPV5HEADER">
      <ptr>
        <struct name="struct_69" />
      </ptr>
    </typedef>
    <struct name="tagBITMAPINFO">
      <field offset="0" name="bmiHeader">
        <type>BITMAPINFOHEADER</type>
      </field>
      <field offset="40" name="bmiColors">
        <arr length="1">
          <type>RGBQUAD</type>
        </arr>
      </field>
    </struct>
    <typedef name="BITMAPINFO">
      <struct name="tagBITMAPINFO" />
    </typedef>
    <typedef name="LPBITMAPINFO">
      <ptr>
        <struct name="tagBITMAPINFO" />
      </ptr>
    </typedef>
    <typedef name="PBITMAPINFO">
      <ptr>
        <struct name="tagBITMAPINFO" />
      </ptr>
    </typedef>
    <struct name="tagBITMAPCOREINFO">
      <field offset="0" name="bmciHeader">
        <type>BITMAPCOREHEADER</type>
      </field>
      <field offset="12" name="bmciColors">
        <arr length="1">
          <type>RGBTRIPLE</type>
        </arr>
      </field>
    </struct>
    <typedef name="BITMAPCOREINFO">
      <struct name="tagBITMAPCOREINFO" />
    </typedef>
    <typedef name="LPBITMAPCOREINFO">
      <ptr>
        <struct name="tagBITMAPCOREINFO" />
      </ptr>
    </typedef>
    <typedef name="PBITMAPCOREINFO">
      <ptr>
        <struct name="tagBITMAPCOREINFO" />
      </ptr>
    </typedef>
    <struct name="tagBITMAPFILEHEADER">
      <field offset="0" name="bfType">
        <type>WORD</type>
      </field>
      <field offset="4" name="bfSize">
        <type>DWORD</type>
      </field>
      <field offset="8" name="bfReserved1">
        <type>WORD</type>
      </field>
      <field offset="10" name="bfReserved2">
        <type>WORD</type>
      </field>
      <field offset="12" name="bfOffBits">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="BITMAPFILEHEADER">
      <struct name="tagBITMAPFILEHEADER" />
    </typedef>
    <typedef name="LPBITMAPFILEHEADER">
      <ptr>
        <struct name="tagBITMAPFILEHEADER" />
      </ptr>
    </typedef>
    <typedef name="PBITMAPFILEHEADER">
      <ptr>
        <struct name="tagBITMAPFILEHEADER" />
      </ptr>
    </typedef>
    <struct name="tagFONTSIGNATURE">
      <field offset="0" name="fsUsb">
        <arr length="4">
          <type>DWORD</type>
        </arr>
      </field>
      <field offset="16" name="fsCsb">
        <arr length="2">
          <type>DWORD</type>
        </arr>
      </field>
    </struct>
    <typedef name="FONTSIGNATURE">
      <struct name="tagFONTSIGNATURE" />
    </typedef>
    <typedef name="PFONTSIGNATURE">
      <ptr>
        <struct name="tagFONTSIGNATURE" />
      </ptr>
    </typedef>
    <typedef name="LPFONTSIGNATURE">
      <ptr>
        <struct name="tagFONTSIGNATURE" />
      </ptr>
    </typedef>
    <struct name="tagCHARSETINFO">
      <field offset="0" name="ciCharset">
        <type>UINT</type>
      </field>
      <field offset="4" name="ciACP">
        <type>UINT</type>
      </field>
      <field offset="8" name="fs">
        <type>FONTSIGNATURE</type>
      </field>
    </struct>
    <typedef name="CHARSETINFO">
      <struct name="tagCHARSETINFO" />
    </typedef>
    <typedef name="PCHARSETINFO">
      <ptr>
        <struct name="tagCHARSETINFO" />
      </ptr>
    </typedef>
    <typedef name="NPCHARSETINFO">
      <ptr>
        <struct name="tagCHARSETINFO" />
      </ptr>
    </typedef>
    <typedef name="LPCHARSETINFO">
      <ptr>
        <struct name="tagCHARSETINFO" />
      </ptr>
    </typedef>
    <struct name="tagLOCALESIGNATURE">
      <field offset="0" name="lsUsb">
        <arr length="4">
          <type>DWORD</type>
        </arr>
      </field>
      <field offset="16" name="lsCsbDefault">
        <arr length="2">
          <type>DWORD</type>
        </arr>
      </field>
      <field offset="24" name="lsCsbSupported">
        <arr length="2">
          <type>DWORD</type>
        </arr>
      </field>
    </struct>
    <typedef name="LOCALESIGNATURE">
      <struct name="tagLOCALESIGNATURE" />
    </typedef>
    <typedef name="PLOCALESIGNATURE">
      <ptr>
        <struct name="tagLOCALESIGNATURE" />
      </ptr>
    </typedef>
    <typedef name="LPLOCALESIGNATURE">
      <ptr>
        <struct name="tagLOCALESIGNATURE" />
      </ptr>
    </typedef>
    <struct name="tagHANDLETABLE">
      <field offset="0" name="objectHandle">
        <arr length="1">
          <type>HGDIOBJ</type>
        </arr>
      </field>
    </struct>
    <typedef name="HANDLETABLE">
      <struct name="tagHANDLETABLE" />
    </typedef>
    <typedef name="PHANDLETABLE">
      <ptr>
        <struct name="tagHANDLETABLE" />
      </ptr>
    </typedef>
    <typedef name="LPHANDLETABLE">
      <ptr>
        <struct name="tagHANDLETABLE" />
      </ptr>
    </typedef>
    <struct name="tagMETARECORD">
      <field offset="0" name="rdSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="rdFunction">
        <type>WORD</type>
      </field>
      <field offset="6" name="rdParm">
        <arr length="1">
          <type>WORD</type>
        </arr>
      </field>
    </struct>
    <typedef name="METARECORD">
      <struct name="tagMETARECORD" />
    </typedef>
    <typedef name="PMETARECORD">
      <ptr>
        <struct name="tagMETARECORD" />
      </ptr>
    </typedef>
    <typedef name="LPMETARECORD">
      <ptr>
        <struct name="tagMETARECORD" />
      </ptr>
    </typedef>
    <struct name="tagMETAFILEPICT">
      <field offset="0" name="mm">
        <type>LONG</type>
      </field>
      <field offset="4" name="xExt">
        <type>LONG</type>
      </field>
      <field offset="8" name="yExt">
        <type>LONG</type>
      </field>
      <field offset="12" name="hMF">
        <type>HMETAFILE</type>
      </field>
    </struct>
    <typedef name="METAFILEPICT">
      <struct name="tagMETAFILEPICT" />
    </typedef>
    <typedef name="LPMETAFILEPICT">
      <ptr>
        <struct name="tagMETAFILEPICT" />
      </ptr>
    </typedef>
    <struct name="tagMETAHEADER">
      <field offset="0" name="mtType">
        <type>WORD</type>
      </field>
      <field offset="2" name="mtHeaderSize">
        <type>WORD</type>
      </field>
      <field offset="4" name="mtVersion">
        <type>WORD</type>
      </field>
      <field offset="8" name="mtSize">
        <type>DWORD</type>
      </field>
      <field offset="12" name="mtNoObjects">
        <type>WORD</type>
      </field>
      <field offset="16" name="mtMaxRecord">
        <type>DWORD</type>
      </field>
      <field offset="20" name="mtNoParameters">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="METAHEADER">
      <struct name="tagMETAHEADER" />
    </typedef>
    <typedef name="PMETAHEADER">
      <ptr>
        <struct name="tagMETAHEADER" />
      </ptr>
    </typedef>
    <typedef name="LPMETAHEADER">
      <ptr>
        <struct name="tagMETAHEADER" />
      </ptr>
    </typedef>
    <struct name="tagENHMETARECORD">
      <field offset="0" name="iType">
        <type>DWORD</type>
      </field>
      <field offset="4" name="nSize">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dParm">
        <arr length="1">
          <type>DWORD</type>
        </arr>
      </field>
    </struct>
    <typedef name="ENHMETARECORD">
      <struct name="tagENHMETARECORD" />
    </typedef>
    <typedef name="PENHMETARECORD">
      <ptr>
        <struct name="tagENHMETARECORD" />
      </ptr>
    </typedef>
    <typedef name="LPENHMETARECORD">
      <ptr>
        <struct name="tagENHMETARECORD" />
      </ptr>
    </typedef>
    <struct name="tagENHMETAHEADER">
      <field offset="0" name="iType">
        <type>DWORD</type>
      </field>
      <field offset="4" name="nSize">
        <type>DWORD</type>
      </field>
      <field offset="8" name="rclBounds">
        <type>RECTL</type>
      </field>
      <field offset="24" name="rclFrame">
        <type>RECTL</type>
      </field>
      <field offset="40" name="dSignature">
        <type>DWORD</type>
      </field>
      <field offset="44" name="nVersion">
        <type>DWORD</type>
      </field>
      <field offset="48" name="nBytes">
        <type>DWORD</type>
      </field>
      <field offset="52" name="nRecords">
        <type>DWORD</type>
      </field>
      <field offset="56" name="nHandles">
        <type>WORD</type>
      </field>
      <field offset="58" name="sReserved">
        <type>WORD</type>
      </field>
      <field offset="60" name="nDescription">
        <type>DWORD</type>
      </field>
      <field offset="64" name="offDescription">
        <type>DWORD</type>
      </field>
      <field offset="68" name="nPalEntries">
        <type>DWORD</type>
      </field>
      <field offset="72" name="szlDevice">
        <type>SIZEL</type>
      </field>
      <field offset="80" name="szlMillimeters">
        <type>SIZEL</type>
      </field>
      <field offset="88" name="cbPixelFormat">
        <type>DWORD</type>
      </field>
      <field offset="92" name="offPixelFormat">
        <type>DWORD</type>
      </field>
      <field offset="96" name="bOpenGL">
        <type>DWORD</type>
      </field>
      <field offset="104" name="szlMicrometers">
        <type>SIZEL</type>
      </field>
    </struct>
    <typedef name="ENHMETAHEADER">
      <struct name="tagENHMETAHEADER" />
    </typedef>
    <typedef name="PENHMETAHEADER">
      <ptr>
        <struct name="tagENHMETAHEADER" />
      </ptr>
    </typedef>
    <typedef name="LPENHMETAHEADER">
      <ptr>
        <struct name="tagENHMETAHEADER" />
      </ptr>
    </typedef>
    <typedef name="BCHAR">
      <type>BYTE</type>
    </typedef>
    <struct name="tagTEXTMETRICA">
      <field offset="0" name="tmHeight">
        <type>LONG</type>
      </field>
      <field offset="4" name="tmAscent">
        <type>LONG</type>
      </field>
      <field offset="8" name="tmDescent">
        <type>LONG</type>
      </field>
      <field offset="12" name="tmInternalLeading">
        <type>LONG</type>
      </field>
      <field offset="16" name="tmExternalLeading">
        <type>LONG</type>
      </field>
      <field offset="20" name="tmAveCharWidth">
        <type>LONG</type>
      </field>
      <field offset="24" name="tmMaxCharWidth">
        <type>LONG</type>
      </field>
      <field offset="28" name="tmWeight">
        <type>LONG</type>
      </field>
      <field offset="32" name="tmOverhang">
        <type>LONG</type>
      </field>
      <field offset="36" name="tmDigitizedAspectX">
        <type>LONG</type>
      </field>
      <field offset="40" name="tmDigitizedAspectY">
        <type>LONG</type>
      </field>
      <field offset="44" name="tmFirstChar">
        <type>BYTE</type>
      </field>
      <field offset="45" name="tmLastChar">
        <type>BYTE</type>
      </field>
      <field offset="46" name="tmDefaultChar">
        <type>BYTE</type>
      </field>
      <field offset="47" name="tmBreakChar">
        <type>BYTE</type>
      </field>
      <field offset="48" name="tmItalic">
        <type>BYTE</type>
      </field>
      <field offset="49" name="tmUnderlined">
        <type>BYTE</type>
      </field>
      <field offset="50" name="tmStruckOut">
        <type>BYTE</type>
      </field>
      <field offset="51" name="tmPitchAndFamily">
        <type>BYTE</type>
      </field>
      <field offset="52" name="tmCharSet">
        <type>BYTE</type>
      </field>
    </struct>
    <typedef name="TEXTMETRICA">
      <struct name="tagTEXTMETRICA" />
    </typedef>
    <typedef name="PTEXTMETRICA">
      <ptr>
        <struct name="tagTEXTMETRICA" />
      </ptr>
    </typedef>
    <typedef name="NPTEXTMETRICA">
      <ptr>
        <struct name="tagTEXTMETRICA" />
      </ptr>
    </typedef>
    <typedef name="LPTEXTMETRICA">
      <ptr>
        <struct name="tagTEXTMETRICA" />
      </ptr>
    </typedef>
    <struct name="tagTEXTMETRICW">
      <field offset="0" name="tmHeight">
        <type>LONG</type>
      </field>
      <field offset="4" name="tmAscent">
        <type>LONG</type>
      </field>
      <field offset="8" name="tmDescent">
        <type>LONG</type>
      </field>
      <field offset="12" name="tmInternalLeading">
        <type>LONG</type>
      </field>
      <field offset="16" name="tmExternalLeading">
        <type>LONG</type>
      </field>
      <field offset="20" name="tmAveCharWidth">
        <type>LONG</type>
      </field>
      <field offset="24" name="tmMaxCharWidth">
        <type>LONG</type>
      </field>
      <field offset="28" name="tmWeight">
        <type>LONG</type>
      </field>
      <field offset="32" name="tmOverhang">
        <type>LONG</type>
      </field>
      <field offset="36" name="tmDigitizedAspectX">
        <type>LONG</type>
      </field>
      <field offset="40" name="tmDigitizedAspectY">
        <type>LONG</type>
      </field>
      <field offset="44" name="tmFirstChar">
        <type>WCHAR</type>
      </field>
      <field offset="46" name="tmLastChar">
        <type>WCHAR</type>
      </field>
      <field offset="48" name="tmDefaultChar">
        <type>WCHAR</type>
      </field>
      <field offset="50" name="tmBreakChar">
        <type>WCHAR</type>
      </field>
      <field offset="52" name="tmItalic">
        <type>BYTE</type>
      </field>
      <field offset="53" name="tmUnderlined">
        <type>BYTE</type>
      </field>
      <field offset="54" name="tmStruckOut">
        <type>BYTE</type>
      </field>
      <field offset="55" name="tmPitchAndFamily">
        <type>BYTE</type>
      </field>
      <field offset="56" name="tmCharSet">
        <type>BYTE</type>
      </field>
    </struct>
    <typedef name="TEXTMETRICW">
      <struct name="tagTEXTMETRICW" />
    </typedef>
    <typedef name="PTEXTMETRICW">
      <ptr>
        <struct name="tagTEXTMETRICW" />
      </ptr>
    </typedef>
    <typedef name="NPTEXTMETRICW">
      <ptr>
        <struct name="tagTEXTMETRICW" />
      </ptr>
    </typedef>
    <typedef name="LPTEXTMETRICW">
      <ptr>
        <struct name="tagTEXTMETRICW" />
      </ptr>
    </typedef>
    <typedef name="TEXTMETRIC">
      <type>TEXTMETRICA</type>
    </typedef>
    <typedef name="PTEXTMETRIC">
      <type>PTEXTMETRICA</type>
    </typedef>
    <typedef name="NPTEXTMETRIC">
      <type>NPTEXTMETRICA</type>
    </typedef>
    <typedef name="LPTEXTMETRIC">
      <type>LPTEXTMETRICA</type>
    </typedef>
    <struct name="tagNEWTEXTMETRICA">
      <field offset="0" name="tmHeight">
        <type>LONG</type>
      </field>
      <field offset="4" name="tmAscent">
        <type>LONG</type>
      </field>
      <field offset="8" name="tmDescent">
        <type>LONG</type>
      </field>
      <field offset="12" name="tmInternalLeading">
        <type>LONG</type>
      </field>
      <field offset="16" name="tmExternalLeading">
        <type>LONG</type>
      </field>
      <field offset="20" name="tmAveCharWidth">
        <type>LONG</type>
      </field>
      <field offset="24" name="tmMaxCharWidth">
        <type>LONG</type>
      </field>
      <field offset="28" name="tmWeight">
        <type>LONG</type>
      </field>
      <field offset="32" name="tmOverhang">
        <type>LONG</type>
      </field>
      <field offset="36" name="tmDigitizedAspectX">
        <type>LONG</type>
      </field>
      <field offset="40" name="tmDigitizedAspectY">
        <type>LONG</type>
      </field>
      <field offset="44" name="tmFirstChar">
        <type>BYTE</type>
      </field>
      <field offset="45" name="tmLastChar">
        <type>BYTE</type>
      </field>
      <field offset="46" name="tmDefaultChar">
        <type>BYTE</type>
      </field>
      <field offset="47" name="tmBreakChar">
        <type>BYTE</type>
      </field>
      <field offset="48" name="tmItalic">
        <type>BYTE</type>
      </field>
      <field offset="49" name="tmUnderlined">
        <type>BYTE</type>
      </field>
      <field offset="50" name="tmStruckOut">
        <type>BYTE</type>
      </field>
      <field offset="51" name="tmPitchAndFamily">
        <type>BYTE</type>
      </field>
      <field offset="52" name="tmCharSet">
        <type>BYTE</type>
      </field>
      <field offset="56" name="ntmFlags">
        <type>DWORD</type>
      </field>
      <field offset="60" name="ntmSizeEM">
        <type>UINT</type>
      </field>
      <field offset="64" name="ntmCellHeight">
        <type>UINT</type>
      </field>
      <field offset="68" name="ntmAvgWidth">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="NEWTEXTMETRICA">
      <struct name="tagNEWTEXTMETRICA" />
    </typedef>
    <typedef name="PNEWTEXTMETRICA">
      <ptr>
        <struct name="tagNEWTEXTMETRICA" />
      </ptr>
    </typedef>
    <typedef name="NPNEWTEXTMETRICA">
      <ptr>
        <struct name="tagNEWTEXTMETRICA" />
      </ptr>
    </typedef>
    <typedef name="LPNEWTEXTMETRICA">
      <ptr>
        <struct name="tagNEWTEXTMETRICA" />
      </ptr>
    </typedef>
    <struct name="tagNEWTEXTMETRICW">
      <field offset="0" name="tmHeight">
        <type>LONG</type>
      </field>
      <field offset="4" name="tmAscent">
        <type>LONG</type>
      </field>
      <field offset="8" name="tmDescent">
        <type>LONG</type>
      </field>
      <field offset="12" name="tmInternalLeading">
        <type>LONG</type>
      </field>
      <field offset="16" name="tmExternalLeading">
        <type>LONG</type>
      </field>
      <field offset="20" name="tmAveCharWidth">
        <type>LONG</type>
      </field>
      <field offset="24" name="tmMaxCharWidth">
        <type>LONG</type>
      </field>
      <field offset="28" name="tmWeight">
        <type>LONG</type>
      </field>
      <field offset="32" name="tmOverhang">
        <type>LONG</type>
      </field>
      <field offset="36" name="tmDigitizedAspectX">
        <type>LONG</type>
      </field>
      <field offset="40" name="tmDigitizedAspectY">
        <type>LONG</type>
      </field>
      <field offset="44" name="tmFirstChar">
        <type>WCHAR</type>
      </field>
      <field offset="46" name="tmLastChar">
        <type>WCHAR</type>
      </field>
      <field offset="48" name="tmDefaultChar">
        <type>WCHAR</type>
      </field>
      <field offset="50" name="tmBreakChar">
        <type>WCHAR</type>
      </field>
      <field offset="52" name="tmItalic">
        <type>BYTE</type>
      </field>
      <field offset="53" name="tmUnderlined">
        <type>BYTE</type>
      </field>
      <field offset="54" name="tmStruckOut">
        <type>BYTE</type>
      </field>
      <field offset="55" name="tmPitchAndFamily">
        <type>BYTE</type>
      </field>
      <field offset="56" name="tmCharSet">
        <type>BYTE</type>
      </field>
      <field offset="60" name="ntmFlags">
        <type>DWORD</type>
      </field>
      <field offset="64" name="ntmSizeEM">
        <type>UINT</type>
      </field>
      <field offset="68" name="ntmCellHeight">
        <type>UINT</type>
      </field>
      <field offset="72" name="ntmAvgWidth">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="NEWTEXTMETRICW">
      <struct name="tagNEWTEXTMETRICW" />
    </typedef>
    <typedef name="PNEWTEXTMETRICW">
      <ptr>
        <struct name="tagNEWTEXTMETRICW" />
      </ptr>
    </typedef>
    <typedef name="NPNEWTEXTMETRICW">
      <ptr>
        <struct name="tagNEWTEXTMETRICW" />
      </ptr>
    </typedef>
    <typedef name="LPNEWTEXTMETRICW">
      <ptr>
        <struct name="tagNEWTEXTMETRICW" />
      </ptr>
    </typedef>
    <typedef name="NEWTEXTMETRIC">
      <type>NEWTEXTMETRICA</type>
    </typedef>
    <typedef name="PNEWTEXTMETRIC">
      <type>PNEWTEXTMETRICA</type>
    </typedef>
    <typedef name="NPNEWTEXTMETRIC">
      <type>NPNEWTEXTMETRICA</type>
    </typedef>
    <typedef name="LPNEWTEXTMETRIC">
      <type>LPNEWTEXTMETRICA</type>
    </typedef>
    <struct name="tagNEWTEXTMETRICEXA">
      <field offset="0" name="ntmTm">
        <type>NEWTEXTMETRICA</type>
      </field>
      <field offset="72" name="ntmFontSig">
        <type>FONTSIGNATURE</type>
      </field>
    </struct>
    <typedef name="NEWTEXTMETRICEXA">
      <struct name="tagNEWTEXTMETRICEXA" />
    </typedef>
    <struct name="tagNEWTEXTMETRICEXW">
      <field offset="0" name="ntmTm">
        <type>NEWTEXTMETRICW</type>
      </field>
      <field offset="80" name="ntmFontSig">
        <type>FONTSIGNATURE</type>
      </field>
    </struct>
    <typedef name="NEWTEXTMETRICEXW">
      <struct name="tagNEWTEXTMETRICEXW" />
    </typedef>
    <typedef name="NEWTEXTMETRICEX">
      <type>NEWTEXTMETRICEXA</type>
    </typedef>
    <struct name="tagPELARRAY">
      <field offset="0" name="paXCount">
        <type>LONG</type>
      </field>
      <field offset="4" name="paYCount">
        <type>LONG</type>
      </field>
      <field offset="8" name="paXExt">
        <type>LONG</type>
      </field>
      <field offset="12" name="paYExt">
        <type>LONG</type>
      </field>
      <field offset="16" name="paRGBs">
        <type>BYTE</type>
      </field>
    </struct>
    <typedef name="PELARRAY">
      <struct name="tagPELARRAY" />
    </typedef>
    <typedef name="PPELARRAY">
      <ptr>
        <struct name="tagPELARRAY" />
      </ptr>
    </typedef>
    <typedef name="NPPELARRAY">
      <ptr>
        <struct name="tagPELARRAY" />
      </ptr>
    </typedef>
    <typedef name="LPPELARRAY">
      <ptr>
        <struct name="tagPELARRAY" />
      </ptr>
    </typedef>
    <struct name="tagLOGBRUSH">
      <field offset="0" name="lbStyle">
        <type>UINT</type>
      </field>
      <field offset="4" name="lbColor">
        <type>COLORREF</type>
      </field>
      <field offset="8" name="lbHatch">
        <type>ULONG_PTR</type>
      </field>
    </struct>
    <typedef name="LOGBRUSH">
      <struct name="tagLOGBRUSH" />
    </typedef>
    <typedef name="PLOGBRUSH">
      <ptr>
        <struct name="tagLOGBRUSH" />
      </ptr>
    </typedef>
    <typedef name="NPLOGBRUSH">
      <ptr>
        <struct name="tagLOGBRUSH" />
      </ptr>
    </typedef>
    <typedef name="LPLOGBRUSH">
      <ptr>
        <struct name="tagLOGBRUSH" />
      </ptr>
    </typedef>
    <struct name="tagLOGBRUSH32">
      <field offset="0" name="lbStyle">
        <type>UINT</type>
      </field>
      <field offset="4" name="lbColor">
        <type>COLORREF</type>
      </field>
      <field offset="8" name="lbHatch">
        <type>ULONG</type>
      </field>
    </struct>
    <typedef name="LOGBRUSH32">
      <struct name="tagLOGBRUSH32" />
    </typedef>
    <typedef name="PLOGBRUSH32">
      <ptr>
        <struct name="tagLOGBRUSH32" />
      </ptr>
    </typedef>
    <typedef name="NPLOGBRUSH32">
      <ptr>
        <struct name="tagLOGBRUSH32" />
      </ptr>
    </typedef>
    <typedef name="LPLOGBRUSH32">
      <ptr>
        <struct name="tagLOGBRUSH32" />
      </ptr>
    </typedef>
    <typedef name="PATTERN">
      <type>LOGBRUSH</type>
    </typedef>
    <typedef name="PPATTERN">
      <ptr>
        <type>PATTERN</type>
      </ptr>
    </typedef>
    <typedef name="NPPATTERN">
      <ptr>
        <type>PATTERN</type>
      </ptr>
    </typedef>
    <typedef name="LPPATTERN">
      <ptr>
        <type>PATTERN</type>
      </ptr>
    </typedef>
    <struct name="tagLOGPEN">
      <field offset="0" name="lopnStyle">
        <type>UINT</type>
      </field>
      <field offset="8" name="lopnWidth">
        <type>POINT</type>
      </field>
      <field offset="16" name="lopnColor">
        <type>COLORREF</type>
      </field>
    </struct>
    <typedef name="LOGPEN">
      <struct name="tagLOGPEN" />
    </typedef>
    <typedef name="PLOGPEN">
      <ptr>
        <struct name="tagLOGPEN" />
      </ptr>
    </typedef>
    <typedef name="NPLOGPEN">
      <ptr>
        <struct name="tagLOGPEN" />
      </ptr>
    </typedef>
    <typedef name="LPLOGPEN">
      <ptr>
        <struct name="tagLOGPEN" />
      </ptr>
    </typedef>
    <struct name="tagEXTLOGPEN">
      <field offset="0" name="elpPenStyle">
        <type>DWORD</type>
      </field>
      <field offset="4" name="elpWidth">
        <type>DWORD</type>
      </field>
      <field offset="8" name="elpBrushStyle">
        <type>UINT</type>
      </field>
      <field offset="12" name="elpColor">
        <type>COLORREF</type>
      </field>
      <field offset="16" name="elpHatch">
        <type>ULONG_PTR</type>
      </field>
      <field offset="20" name="elpNumEntries">
        <type>DWORD</type>
      </field>
      <field offset="24" name="elpStyleEntry">
        <arr length="1">
          <type>DWORD</type>
        </arr>
      </field>
    </struct>
    <typedef name="EXTLOGPEN">
      <struct name="tagEXTLOGPEN" />
    </typedef>
    <typedef name="PEXTLOGPEN">
      <ptr>
        <struct name="tagEXTLOGPEN" />
      </ptr>
    </typedef>
    <typedef name="NPEXTLOGPEN">
      <ptr>
        <struct name="tagEXTLOGPEN" />
      </ptr>
    </typedef>
    <typedef name="LPEXTLOGPEN">
      <ptr>
        <struct name="tagEXTLOGPEN" />
      </ptr>
    </typedef>
    <struct name="tagEXTLOGPEN32">
      <field offset="0" name="elpPenStyle">
        <type>DWORD</type>
      </field>
      <field offset="4" name="elpWidth">
        <type>DWORD</type>
      </field>
      <field offset="8" name="elpBrushStyle">
        <type>UINT</type>
      </field>
      <field offset="12" name="elpColor">
        <type>COLORREF</type>
      </field>
      <field offset="16" name="elpHatch">
        <type>ULONG</type>
      </field>
      <field offset="20" name="elpNumEntries">
        <type>DWORD</type>
      </field>
      <field offset="24" name="elpStyleEntry">
        <arr length="1">
          <type>DWORD</type>
        </arr>
      </field>
    </struct>
    <typedef name="EXTLOGPEN32">
      <struct name="tagEXTLOGPEN32" />
    </typedef>
    <typedef name="PEXTLOGPEN32">
      <ptr>
        <struct name="tagEXTLOGPEN32" />
      </ptr>
    </typedef>
    <typedef name="NPEXTLOGPEN32">
      <ptr>
        <struct name="tagEXTLOGPEN32" />
      </ptr>
    </typedef>
    <typedef name="LPEXTLOGPEN32">
      <ptr>
        <struct name="tagEXTLOGPEN32" />
      </ptr>
    </typedef>
    <struct name="tagPALETTEENTRY">
      <field offset="0" name="peRed">
        <type>BYTE</type>
      </field>
      <field offset="1" name="peGreen">
        <type>BYTE</type>
      </field>
      <field offset="2" name="peBlue">
        <type>BYTE</type>
      </field>
      <field offset="3" name="peFlags">
        <type>BYTE</type>
      </field>
    </struct>
    <typedef name="PALETTEENTRY">
      <struct name="tagPALETTEENTRY" />
    </typedef>
    <typedef name="PPALETTEENTRY">
      <ptr>
        <struct name="tagPALETTEENTRY" />
      </ptr>
    </typedef>
    <typedef name="LPPALETTEENTRY">
      <ptr>
        <struct name="tagPALETTEENTRY" />
      </ptr>
    </typedef>
    <struct name="tagLOGPALETTE">
      <field offset="0" name="palVersion">
        <type>WORD</type>
      </field>
      <field offset="2" name="palNumEntries">
        <type>WORD</type>
      </field>
      <field offset="4" name="palPalEntry">
        <arr length="1">
          <type>PALETTEENTRY</type>
        </arr>
      </field>
    </struct>
    <typedef name="LOGPALETTE">
      <struct name="tagLOGPALETTE" />
    </typedef>
    <typedef name="PLOGPALETTE">
      <ptr>
        <struct name="tagLOGPALETTE" />
      </ptr>
    </typedef>
    <typedef name="NPLOGPALETTE">
      <ptr>
        <struct name="tagLOGPALETTE" />
      </ptr>
    </typedef>
    <typedef name="LPLOGPALETTE">
      <ptr>
        <struct name="tagLOGPALETTE" />
      </ptr>
    </typedef>
    <struct name="tagLOGFONTA">
      <field offset="0" name="lfHeight">
        <type>LONG</type>
      </field>
      <field offset="4" name="lfWidth">
        <type>LONG</type>
      </field>
      <field offset="8" name="lfEscapement">
        <type>LONG</type>
      </field>
      <field offset="12" name="lfOrientation">
        <type>LONG</type>
      </field>
      <field offset="16" name="lfWeight">
        <type>LONG</type>
      </field>
      <field offset="20" name="lfItalic">
        <type>BYTE</type>
      </field>
      <field offset="21" name="lfUnderline">
        <type>BYTE</type>
      </field>
      <field offset="22" name="lfStrikeOut">
        <type>BYTE</type>
      </field>
      <field offset="23" name="lfCharSet">
        <type>BYTE</type>
      </field>
      <field offset="24" name="lfOutPrecision">
        <type>BYTE</type>
      </field>
      <field offset="25" name="lfClipPrecision">
        <type>BYTE</type>
      </field>
      <field offset="26" name="lfQuality">
        <type>BYTE</type>
      </field>
      <field offset="27" name="lfPitchAndFamily">
        <type>BYTE</type>
      </field>
      <field offset="32" name="lfFaceName">
        <arr length="32">
          <type>CHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="LOGFONTA">
      <struct name="tagLOGFONTA" />
    </typedef>
    <typedef name="PLOGFONTA">
      <ptr>
        <struct name="tagLOGFONTA" />
      </ptr>
    </typedef>
    <typedef name="NPLOGFONTA">
      <ptr>
        <struct name="tagLOGFONTA" />
      </ptr>
    </typedef>
    <typedef name="LPLOGFONTA">
      <ptr>
        <struct name="tagLOGFONTA" />
      </ptr>
    </typedef>
    <struct name="tagLOGFONTW">
      <field offset="0" name="lfHeight">
        <type>LONG</type>
      </field>
      <field offset="4" name="lfWidth">
        <type>LONG</type>
      </field>
      <field offset="8" name="lfEscapement">
        <type>LONG</type>
      </field>
      <field offset="12" name="lfOrientation">
        <type>LONG</type>
      </field>
      <field offset="16" name="lfWeight">
        <type>LONG</type>
      </field>
      <field offset="20" name="lfItalic">
        <type>BYTE</type>
      </field>
      <field offset="21" name="lfUnderline">
        <type>BYTE</type>
      </field>
      <field offset="22" name="lfStrikeOut">
        <type>BYTE</type>
      </field>
      <field offset="23" name="lfCharSet">
        <type>BYTE</type>
      </field>
      <field offset="24" name="lfOutPrecision">
        <type>BYTE</type>
      </field>
      <field offset="25" name="lfClipPrecision">
        <type>BYTE</type>
      </field>
      <field offset="26" name="lfQuality">
        <type>BYTE</type>
      </field>
      <field offset="27" name="lfPitchAndFamily">
        <type>BYTE</type>
      </field>
      <field offset="32" name="lfFaceName">
        <arr length="32">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="LOGFONTW">
      <struct name="tagLOGFONTW" />
    </typedef>
    <typedef name="PLOGFONTW">
      <ptr>
        <struct name="tagLOGFONTW" />
      </ptr>
    </typedef>
    <typedef name="NPLOGFONTW">
      <ptr>
        <struct name="tagLOGFONTW" />
      </ptr>
    </typedef>
    <typedef name="LPLOGFONTW">
      <ptr>
        <struct name="tagLOGFONTW" />
      </ptr>
    </typedef>
    <typedef name="LOGFONT">
      <type>LOGFONTA</type>
    </typedef>
    <typedef name="PLOGFONT">
      <type>PLOGFONTA</type>
    </typedef>
    <typedef name="NPLOGFONT">
      <type>NPLOGFONTA</type>
    </typedef>
    <typedef name="LPLOGFONT">
      <type>LPLOGFONTA</type>
    </typedef>
    <struct name="tagENUMLOGFONTA">
      <field offset="0" name="elfLogFont">
        <type>LOGFONTA</type>
      </field>
      <field offset="64" name="elfFullName">
        <arr length="64">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="128" name="elfStyle">
        <arr length="32">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="ENUMLOGFONTA">
      <struct name="tagENUMLOGFONTA" />
    </typedef>
    <typedef name="LPENUMLOGFONTA">
      <ptr>
        <struct name="tagENUMLOGFONTA" />
      </ptr>
    </typedef>
    <struct name="tagENUMLOGFONTW">
      <field offset="0" name="elfLogFont">
        <type>LOGFONTW</type>
      </field>
      <field offset="96" name="elfFullName">
        <arr length="64">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="224" name="elfStyle">
        <arr length="32">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="ENUMLOGFONTW">
      <struct name="tagENUMLOGFONTW" />
    </typedef>
    <typedef name="LPENUMLOGFONTW">
      <ptr>
        <struct name="tagENUMLOGFONTW" />
      </ptr>
    </typedef>
    <typedef name="ENUMLOGFONT">
      <type>ENUMLOGFONTA</type>
    </typedef>
    <typedef name="LPENUMLOGFONT">
      <type>LPENUMLOGFONTA</type>
    </typedef>
    <struct name="tagENUMLOGFONTEXA">
      <field offset="0" name="elfLogFont">
        <type>LOGFONTA</type>
      </field>
      <field offset="64" name="elfFullName">
        <arr length="64">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="128" name="elfStyle">
        <arr length="32">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="160" name="elfScript">
        <arr length="32">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="ENUMLOGFONTEXA">
      <struct name="tagENUMLOGFONTEXA" />
    </typedef>
    <typedef name="LPENUMLOGFONTEXA">
      <ptr>
        <struct name="tagENUMLOGFONTEXA" />
      </ptr>
    </typedef>
    <struct name="tagENUMLOGFONTEXW">
      <field offset="0" name="elfLogFont">
        <type>LOGFONTW</type>
      </field>
      <field offset="96" name="elfFullName">
        <arr length="64">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="224" name="elfStyle">
        <arr length="32">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="288" name="elfScript">
        <arr length="32">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="ENUMLOGFONTEXW">
      <struct name="tagENUMLOGFONTEXW" />
    </typedef>
    <typedef name="LPENUMLOGFONTEXW">
      <ptr>
        <struct name="tagENUMLOGFONTEXW" />
      </ptr>
    </typedef>
    <typedef name="ENUMLOGFONTEX">
      <type>ENUMLOGFONTEXA</type>
    </typedef>
    <typedef name="LPENUMLOGFONTEX">
      <type>LPENUMLOGFONTEXA</type>
    </typedef>
    <struct name="tagPANOSE">
      <field offset="0" name="bFamilyType">
        <type>BYTE</type>
      </field>
      <field offset="1" name="bSerifStyle">
        <type>BYTE</type>
      </field>
      <field offset="2" name="bWeight">
        <type>BYTE</type>
      </field>
      <field offset="3" name="bProportion">
        <type>BYTE</type>
      </field>
      <field offset="4" name="bContrast">
        <type>BYTE</type>
      </field>
      <field offset="5" name="bStrokeVariation">
        <type>BYTE</type>
      </field>
      <field offset="6" name="bArmStyle">
        <type>BYTE</type>
      </field>
      <field offset="7" name="bLetterform">
        <type>BYTE</type>
      </field>
      <field offset="8" name="bMidline">
        <type>BYTE</type>
      </field>
      <field offset="9" name="bXHeight">
        <type>BYTE</type>
      </field>
    </struct>
    <typedef name="PANOSE">
      <struct name="tagPANOSE" />
    </typedef>
    <typedef name="LPPANOSE">
      <ptr>
        <struct name="tagPANOSE" />
      </ptr>
    </typedef>
    <struct name="tagEXTLOGFONTA">
      <field offset="0" name="elfLogFont">
        <type>LOGFONTA</type>
      </field>
      <field offset="64" name="elfFullName">
        <arr length="64">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="128" name="elfStyle">
        <arr length="32">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="160" name="elfVersion">
        <type>DWORD</type>
      </field>
      <field offset="164" name="elfStyleSize">
        <type>DWORD</type>
      </field>
      <field offset="168" name="elfMatch">
        <type>DWORD</type>
      </field>
      <field offset="172" name="elfReserved">
        <type>DWORD</type>
      </field>
      <field offset="176" name="elfVendorId">
        <arr length="4">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="180" name="elfCulture">
        <type>DWORD</type>
      </field>
      <field offset="184" name="elfPanose">
        <type>PANOSE</type>
      </field>
    </struct>
    <typedef name="EXTLOGFONTA">
      <struct name="tagEXTLOGFONTA" />
    </typedef>
    <typedef name="PEXTLOGFONTA">
      <ptr>
        <struct name="tagEXTLOGFONTA" />
      </ptr>
    </typedef>
    <typedef name="NPEXTLOGFONTA">
      <ptr>
        <struct name="tagEXTLOGFONTA" />
      </ptr>
    </typedef>
    <typedef name="LPEXTLOGFONTA">
      <ptr>
        <struct name="tagEXTLOGFONTA" />
      </ptr>
    </typedef>
    <struct name="tagEXTLOGFONTW">
      <field offset="0" name="elfLogFont">
        <type>LOGFONTW</type>
      </field>
      <field offset="96" name="elfFullName">
        <arr length="64">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="224" name="elfStyle">
        <arr length="32">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="288" name="elfVersion">
        <type>DWORD</type>
      </field>
      <field offset="292" name="elfStyleSize">
        <type>DWORD</type>
      </field>
      <field offset="296" name="elfMatch">
        <type>DWORD</type>
      </field>
      <field offset="300" name="elfReserved">
        <type>DWORD</type>
      </field>
      <field offset="304" name="elfVendorId">
        <arr length="4">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="308" name="elfCulture">
        <type>DWORD</type>
      </field>
      <field offset="312" name="elfPanose">
        <type>PANOSE</type>
      </field>
    </struct>
    <typedef name="EXTLOGFONTW">
      <struct name="tagEXTLOGFONTW" />
    </typedef>
    <typedef name="PEXTLOGFONTW">
      <ptr>
        <struct name="tagEXTLOGFONTW" />
      </ptr>
    </typedef>
    <typedef name="NPEXTLOGFONTW">
      <ptr>
        <struct name="tagEXTLOGFONTW" />
      </ptr>
    </typedef>
    <typedef name="LPEXTLOGFONTW">
      <ptr>
        <struct name="tagEXTLOGFONTW" />
      </ptr>
    </typedef>
    <typedef name="EXTLOGFONT">
      <type>EXTLOGFONTA</type>
    </typedef>
    <typedef name="PEXTLOGFONT">
      <type>PEXTLOGFONTA</type>
    </typedef>
    <typedef name="NPEXTLOGFONT">
      <type>NPEXTLOGFONTA</type>
    </typedef>
    <typedef name="LPEXTLOGFONT">
      <type>LPEXTLOGFONTA</type>
    </typedef>
    <struct name="struct_70">
      <field offset="0" name="dmOrientation">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="2" name="dmPaperSize">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="4" name="dmPaperLength">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="6" name="dmPaperWidth">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="8" name="dmScale">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="10" name="dmCopies">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="12" name="dmDefaultSource">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="14" name="dmPrintQuality">
        <prim domain="SignedInt" size="2" />
      </field>
    </struct>
    <struct name="struct_71">
      <field offset="0" name="dmPosition">
        <type>POINTL</type>
      </field>
      <field offset="8" name="dmDisplayOrientation">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dmDisplayFixedOutput">
        <type>DWORD</type>
      </field>
    </struct>
    <struct name="_devicemodeA">
      <field offset="0" name="dmDeviceName">
        <arr length="32">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="32" name="dmSpecVersion">
        <type>WORD</type>
      </field>
      <field offset="34" name="dmDriverVersion">
        <type>WORD</type>
      </field>
      <field offset="36" name="dmSize">
        <type>WORD</type>
      </field>
      <field offset="38" name="dmDriverExtra">
        <type>WORD</type>
      </field>
      <field offset="40" name="dmFields">
        <type>DWORD</type>
      </field>
      <field offset="48">
        <union>
          <alt>
            <struct name="struct_70" />
          </alt>
          <alt>
            <struct name="struct_71" />
          </alt>
        </union>
      </field>
      <field offset="64" name="dmColor">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="66" name="dmDuplex">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="68" name="dmYResolution">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="70" name="dmTTOption">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="72" name="dmCollate">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="80" name="dmFormName">
        <arr length="32">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="112" name="dmLogPixels">
        <type>WORD</type>
      </field>
      <field offset="116" name="dmBitsPerPel">
        <type>DWORD</type>
      </field>
      <field offset="120" name="dmPelsWidth">
        <type>DWORD</type>
      </field>
      <field offset="124" name="dmPelsHeight">
        <type>DWORD</type>
      </field>
      <field offset="128">
        <union>
          <alt name="dmDisplayFlags">
            <type>DWORD</type>
          </alt>
          <alt name="dmNup">
            <type>DWORD</type>
          </alt>
        </union>
      </field>
      <field offset="132" name="dmDisplayFrequency">
        <type>DWORD</type>
      </field>
      <field offset="136" name="dmICMMethod">
        <type>DWORD</type>
      </field>
      <field offset="140" name="dmICMIntent">
        <type>DWORD</type>
      </field>
      <field offset="144" name="dmMediaType">
        <type>DWORD</type>
      </field>
      <field offset="148" name="dmDitherType">
        <type>DWORD</type>
      </field>
      <field offset="152" name="dmReserved1">
        <type>DWORD</type>
      </field>
      <field offset="156" name="dmReserved2">
        <type>DWORD</type>
      </field>
      <field offset="160" name="dmPanningWidth">
        <type>DWORD</type>
      </field>
      <field offset="164" name="dmPanningHeight">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="DEVMODEA">
      <struct name="_devicemodeA" />
    </typedef>
    <typedef name="PDEVMODEA">
      <ptr>
        <struct name="_devicemodeA" />
      </ptr>
    </typedef>
    <typedef name="NPDEVMODEA">
      <ptr>
        <struct name="_devicemodeA" />
      </ptr>
    </typedef>
    <typedef name="LPDEVMODEA">
      <ptr>
        <struct name="_devicemodeA" />
      </ptr>
    </typedef>
    <struct name="struct_72">
      <field offset="0" name="dmOrientation">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="2" name="dmPaperSize">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="4" name="dmPaperLength">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="6" name="dmPaperWidth">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="8" name="dmScale">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="10" name="dmCopies">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="12" name="dmDefaultSource">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="14" name="dmPrintQuality">
        <prim domain="SignedInt" size="2" />
      </field>
    </struct>
    <struct name="struct_73">
      <field offset="0" name="dmPosition">
        <type>POINTL</type>
      </field>
      <field offset="8" name="dmDisplayOrientation">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dmDisplayFixedOutput">
        <type>DWORD</type>
      </field>
    </struct>
    <struct name="_devicemodeW">
      <field offset="0" name="dmDeviceName">
        <arr length="32">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="64" name="dmSpecVersion">
        <type>WORD</type>
      </field>
      <field offset="66" name="dmDriverVersion">
        <type>WORD</type>
      </field>
      <field offset="68" name="dmSize">
        <type>WORD</type>
      </field>
      <field offset="70" name="dmDriverExtra">
        <type>WORD</type>
      </field>
      <field offset="72" name="dmFields">
        <type>DWORD</type>
      </field>
      <field offset="80">
        <union>
          <alt>
            <struct name="struct_72" />
          </alt>
          <alt>
            <struct name="struct_73" />
          </alt>
        </union>
      </field>
      <field offset="96" name="dmColor">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="98" name="dmDuplex">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="100" name="dmYResolution">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="102" name="dmTTOption">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="104" name="dmCollate">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="112" name="dmFormName">
        <arr length="32">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="176" name="dmLogPixels">
        <type>WORD</type>
      </field>
      <field offset="180" name="dmBitsPerPel">
        <type>DWORD</type>
      </field>
      <field offset="184" name="dmPelsWidth">
        <type>DWORD</type>
      </field>
      <field offset="188" name="dmPelsHeight">
        <type>DWORD</type>
      </field>
      <field offset="192">
        <union>
          <alt name="dmDisplayFlags">
            <type>DWORD</type>
          </alt>
          <alt name="dmNup">
            <type>DWORD</type>
          </alt>
        </union>
      </field>
      <field offset="196" name="dmDisplayFrequency">
        <type>DWORD</type>
      </field>
      <field offset="200" name="dmICMMethod">
        <type>DWORD</type>
      </field>
      <field offset="204" name="dmICMIntent">
        <type>DWORD</type>
      </field>
      <field offset="208" name="dmMediaType">
        <type>DWORD</type>
      </field>
      <field offset="212" name="dmDitherType">
        <type>DWORD</type>
      </field>
      <field offset="216" name="dmReserved1">
        <type>DWORD</type>
      </field>
      <field offset="220" name="dmReserved2">
        <type>DWORD</type>
      </field>
      <field offset="224" name="dmPanningWidth">
        <type>DWORD</type>
      </field>
      <field offset="228" name="dmPanningHeight">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="DEVMODEW">
      <struct name="_devicemodeW" />
    </typedef>
    <typedef name="PDEVMODEW">
      <ptr>
        <struct name="_devicemodeW" />
      </ptr>
    </typedef>
    <typedef name="NPDEVMODEW">
      <ptr>
        <struct name="_devicemodeW" />
      </ptr>
    </typedef>
    <typedef name="LPDEVMODEW">
      <ptr>
        <struct name="_devicemodeW" />
      </ptr>
    </typedef>
    <typedef name="DEVMODE">
      <type>DEVMODEA</type>
    </typedef>
    <typedef name="PDEVMODE">
      <type>PDEVMODEA</type>
    </typedef>
    <typedef name="NPDEVMODE">
      <type>NPDEVMODEA</type>
    </typedef>
    <typedef name="LPDEVMODE">
      <type>LPDEVMODEA</type>
    </typedef>
    <struct name="_DISPLAY_DEVICEA">
      <field offset="0" name="cb">
        <type>DWORD</type>
      </field>
      <field offset="8" name="DeviceName">
        <arr length="32">
          <type>CHAR</type>
        </arr>
      </field>
      <field offset="40" name="DeviceString">
        <arr length="128">
          <type>CHAR</type>
        </arr>
      </field>
      <field offset="168" name="StateFlags">
        <type>DWORD</type>
      </field>
      <field offset="176" name="DeviceID">
        <arr length="128">
          <type>CHAR</type>
        </arr>
      </field>
      <field offset="304" name="DeviceKey">
        <arr length="128">
          <type>CHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="DISPLAY_DEVICEA">
      <struct name="_DISPLAY_DEVICEA" />
    </typedef>
    <typedef name="PDISPLAY_DEVICEA">
      <ptr>
        <struct name="_DISPLAY_DEVICEA" />
      </ptr>
    </typedef>
    <typedef name="LPDISPLAY_DEVICEA">
      <ptr>
        <struct name="_DISPLAY_DEVICEA" />
      </ptr>
    </typedef>
    <struct name="_DISPLAY_DEVICEW">
      <field offset="0" name="cb">
        <type>DWORD</type>
      </field>
      <field offset="8" name="DeviceName">
        <arr length="32">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="72" name="DeviceString">
        <arr length="128">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="328" name="StateFlags">
        <type>DWORD</type>
      </field>
      <field offset="336" name="DeviceID">
        <arr length="128">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="592" name="DeviceKey">
        <arr length="128">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="DISPLAY_DEVICEW">
      <struct name="_DISPLAY_DEVICEW" />
    </typedef>
    <typedef name="PDISPLAY_DEVICEW">
      <ptr>
        <struct name="_DISPLAY_DEVICEW" />
      </ptr>
    </typedef>
    <typedef name="LPDISPLAY_DEVICEW">
      <ptr>
        <struct name="_DISPLAY_DEVICEW" />
      </ptr>
    </typedef>
    <typedef name="DISPLAY_DEVICE">
      <type>DISPLAY_DEVICEA</type>
    </typedef>
    <typedef name="PDISPLAY_DEVICE">
      <type>PDISPLAY_DEVICEA</type>
    </typedef>
    <typedef name="LPDISPLAY_DEVICE">
      <type>LPDISPLAY_DEVICEA</type>
    </typedef>
    <struct name="DISPLAYCONFIG_RATIONAL">
      <field offset="0" name="Numerator">
        <type>UINT32</type>
      </field>
      <field offset="4" name="Denominator">
        <type>UINT32</type>
      </field>
    </struct>
    <typedef name="DISPLAYCONFIG_RATIONAL">
      <struct name="DISPLAYCONFIG_RATIONAL" />
    </typedef>
    <enum name="enum_58">
      <member name="DISPLAYCONFIG_OUTPUT_TECHNOLOGY_OTHER" value="-1" />
      <member name="DISPLAYCONFIG_OUTPUT_TECHNOLOGY_HD15" value="0" />
      <member name="DISPLAYCONFIG_OUTPUT_TECHNOLOGY_SVIDEO" value="1" />
      <member name="DISPLAYCONFIG_OUTPUT_TECHNOLOGY_COMPOSITE_VIDEO" value="2" />
      <member name="DISPLAYCONFIG_OUTPUT_TECHNOLOGY_COMPONENT_VIDEO" value="3" />
      <member name="DISPLAYCONFIG_OUTPUT_TECHNOLOGY_DVI" value="4" />
      <member name="DISPLAYCONFIG_OUTPUT_TECHNOLOGY_HDMI" value="5" />
      <member name="DISPLAYCONFIG_OUTPUT_TECHNOLOGY_LVDS" value="6" />
      <member name="DISPLAYCONFIG_OUTPUT_TECHNOLOGY_D_JPN" value="8" />
      <member name="DISPLAYCONFIG_OUTPUT_TECHNOLOGY_SDI" value="9" />
      <member name="DISPLAYCONFIG_OUTPUT_TECHNOLOGY_DISPLAYPORT_EXTERNAL" value="10" />
      <member name="DISPLAYCONFIG_OUTPUT_TECHNOLOGY_DISPLAYPORT_EMBEDDED" value="11" />
      <member name="DISPLAYCONFIG_OUTPUT_TECHNOLOGY_UDI_EXTERNAL" value="12" />
      <member name="DISPLAYCONFIG_OUTPUT_TECHNOLOGY_UDI_EMBEDDED" value="13" />
      <member name="DISPLAYCONFIG_OUTPUT_TECHNOLOGY_SDTVDONGLE" value="14" />
      <member name="DISPLAYCONFIG_OUTPUT_TECHNOLOGY_INTERNAL" value="-2147483648" />
      <member name="DISPLAYCONFIG_OUTPUT_TECHNOLOGY_FORCE_UINT32" value="-1" />
    </enum>
    <typedef name="DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY">
      <enum name="enum_58" />
    </typedef>
    <enum name="enum_59">
      <member name="DISPLAYCONFIG_SCANLINE_ORDERING_UNSPECIFIED" value="0" />
      <member name="DISPLAYCONFIG_SCANLINE_ORDERING_PROGRESSIVE" value="1" />
      <member name="DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED" value="2" />
      <member name="DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED_UPPERFIELDFIRST" value="2" />
      <member name="DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED_LOWERFIELDFIRST" value="3" />
      <member name="DISPLAYCONFIG_SCANLINE_ORDERING_FORCE_UINT32" value="-1" />
    </enum>
    <typedef name="DISPLAYCONFIG_SCANLINE_ORDERING">
      <enum name="enum_59" />
    </typedef>
    <struct name="DISPLAYCONFIG_2DREGION">
      <field offset="0" name="cx">
        <type>UINT32</type>
      </field>
      <field offset="4" name="cy">
        <type>UINT32</type>
      </field>
    </struct>
    <typedef name="DISPLAYCONFIG_2DREGION">
      <struct name="DISPLAYCONFIG_2DREGION" />
    </typedef>
    <struct name="DISPLAYCONFIG_VIDEO_SIGNAL_INFO">
      <field offset="0" name="pixelRate">
        <type>UINT64</type>
      </field>
      <field offset="8" name="hSyncFreq">
        <type>DISPLAYCONFIG_RATIONAL</type>
      </field>
      <field offset="16" name="vSyncFreq">
        <type>DISPLAYCONFIG_RATIONAL</type>
      </field>
      <field offset="24" name="activeSize">
        <type>DISPLAYCONFIG_2DREGION</type>
      </field>
      <field offset="32" name="totalSize">
        <type>DISPLAYCONFIG_2DREGION</type>
      </field>
      <field offset="40" name="videoStandard">
        <type>UINT32</type>
      </field>
      <field offset="44" name="scanLineOrdering">
        <type>DISPLAYCONFIG_SCANLINE_ORDERING</type>
      </field>
    </struct>
    <typedef name="DISPLAYCONFIG_VIDEO_SIGNAL_INFO">
      <struct name="DISPLAYCONFIG_VIDEO_SIGNAL_INFO" />
    </typedef>
    <enum name="enum_60">
      <member name="DISPLAYCONFIG_SCALING_IDENTITY" value="1" />
      <member name="DISPLAYCONFIG_SCALING_CENTERED" value="2" />
      <member name="DISPLAYCONFIG_SCALING_STRETCHED" value="3" />
      <member name="DISPLAYCONFIG_SCALING_ASPECTRATIOCENTEREDMAX" value="4" />
      <member name="DISPLAYCONFIG_SCALING_CUSTOM" value="5" />
      <member name="DISPLAYCONFIG_SCALING_PREFERRED" value="128" />
      <member name="DISPLAYCONFIG_SCALING_FORCE_UINT32" value="-1" />
    </enum>
    <typedef name="DISPLAYCONFIG_SCALING">
      <enum name="enum_60" />
    </typedef>
    <enum name="enum_61">
      <member name="DISPLAYCONFIG_ROTATION_IDENTITY" value="1" />
      <member name="DISPLAYCONFIG_ROTATION_ROTATE90" value="2" />
      <member name="DISPLAYCONFIG_ROTATION_ROTATE180" value="3" />
      <member name="DISPLAYCONFIG_ROTATION_ROTATE270" value="4" />
      <member name="DISPLAYCONFIG_ROTATION_FORCE_UINT32" value="-1" />
    </enum>
    <typedef name="DISPLAYCONFIG_ROTATION">
      <enum name="enum_61" />
    </typedef>
    <enum name="enum_62">
      <member name="DISPLAYCONFIG_MODE_INFO_TYPE_SOURCE" value="1" />
      <member name="DISPLAYCONFIG_MODE_INFO_TYPE_TARGET" value="2" />
      <member name="DISPLAYCONFIG_MODE_INFO_TYPE_FORCE_UINT32" value="-1" />
    </enum>
    <typedef name="DISPLAYCONFIG_MODE_INFO_TYPE">
      <enum name="enum_62" />
    </typedef>
    <enum name="enum_63">
      <member name="DISPLAYCONFIG_PIXELFORMAT_8BPP" value="1" />
      <member name="DISPLAYCONFIG_PIXELFORMAT_16BPP" value="2" />
      <member name="DISPLAYCONFIG_PIXELFORMAT_24BPP" value="3" />
      <member name="DISPLAYCONFIG_PIXELFORMAT_32BPP" value="4" />
      <member name="DISPLAYCONFIG_PIXELFORMAT_NONGDI" value="5" />
      <member name="DISPLAYCONFIG_PIXELFORMAT_FORCE_UINT32" value="-1" />
    </enum>
    <typedef name="DISPLAYCONFIG_PIXELFORMAT">
      <enum name="enum_63" />
    </typedef>
    <struct name="DISPLAYCONFIG_SOURCE_MODE">
      <field offset="0" name="width">
        <type>UINT32</type>
      </field>
      <field offset="4" name="height">
        <type>UINT32</type>
      </field>
      <field offset="8" name="pixelFormat">
        <type>DISPLAYCONFIG_PIXELFORMAT</type>
      </field>
      <field offset="16" name="position">
        <type>POINTL</type>
      </field>
    </struct>
    <typedef name="DISPLAYCONFIG_SOURCE_MODE">
      <struct name="DISPLAYCONFIG_SOURCE_MODE" />
    </typedef>
    <struct name="DISPLAYCONFIG_TARGET_MODE">
      <field offset="0" name="targetVideoSignalInfo">
        <type>DISPLAYCONFIG_VIDEO_SIGNAL_INFO</type>
      </field>
    </struct>
    <typedef name="DISPLAYCONFIG_TARGET_MODE">
      <struct name="DISPLAYCONFIG_TARGET_MODE" />
    </typedef>
    <struct name="DISPLAYCONFIG_MODE_INFO">
      <field offset="0" name="infoType">
        <type>DISPLAYCONFIG_MODE_INFO_TYPE</type>
      </field>
      <field offset="4" name="id">
        <type>UINT32</type>
      </field>
      <field offset="8" name="adapterId">
        <type>LUID</type>
      </field>
      <field offset="16">
        <union>
          <alt name="targetMode">
            <type>DISPLAYCONFIG_TARGET_MODE</type>
          </alt>
          <alt name="sourceMode">
            <type>DISPLAYCONFIG_SOURCE_MODE</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="DISPLAYCONFIG_MODE_INFO">
      <struct name="DISPLAYCONFIG_MODE_INFO" />
    </typedef>
    <struct name="DISPLAYCONFIG_PATH_SOURCE_INFO">
      <field offset="0" name="adapterId">
        <type>LUID</type>
      </field>
      <field offset="8" name="id">
        <type>UINT32</type>
      </field>
      <field offset="12" name="modeInfoIdx">
        <type>UINT32</type>
      </field>
      <field offset="16" name="statusFlags">
        <type>UINT32</type>
      </field>
    </struct>
    <typedef name="DISPLAYCONFIG_PATH_SOURCE_INFO">
      <struct name="DISPLAYCONFIG_PATH_SOURCE_INFO" />
    </typedef>
    <struct name="DISPLAYCONFIG_PATH_TARGET_INFO">
      <field offset="0" name="adapterId">
        <type>LUID</type>
      </field>
      <field offset="8" name="id">
        <type>UINT32</type>
      </field>
      <field offset="12" name="modeInfoIdx">
        <type>UINT32</type>
      </field>
      <field offset="16" name="outputTechnology">
        <type>DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY</type>
      </field>
      <field offset="20" name="rotation">
        <type>DISPLAYCONFIG_ROTATION</type>
      </field>
      <field offset="24" name="scaling">
        <type>DISPLAYCONFIG_SCALING</type>
      </field>
      <field offset="32" name="refreshRate">
        <type>DISPLAYCONFIG_RATIONAL</type>
      </field>
      <field offset="40" name="scanLineOrdering">
        <type>DISPLAYCONFIG_SCANLINE_ORDERING</type>
      </field>
      <field offset="44" name="targetAvailable">
        <type>BOOL</type>
      </field>
      <field offset="48" name="statusFlags">
        <type>UINT32</type>
      </field>
    </struct>
    <typedef name="DISPLAYCONFIG_PATH_TARGET_INFO">
      <struct name="DISPLAYCONFIG_PATH_TARGET_INFO" />
    </typedef>
    <struct name="DISPLAYCONFIG_PATH_INFO">
      <field offset="0" name="sourceInfo">
        <type>DISPLAYCONFIG_PATH_SOURCE_INFO</type>
      </field>
      <field offset="24" name="targetInfo">
        <type>DISPLAYCONFIG_PATH_TARGET_INFO</type>
      </field>
      <field offset="72" name="flags">
        <type>UINT32</type>
      </field>
    </struct>
    <typedef name="DISPLAYCONFIG_PATH_INFO">
      <struct name="DISPLAYCONFIG_PATH_INFO" />
    </typedef>
    <enum name="enum_64">
      <member name="DISPLAYCONFIG_TOPOLOGY_INTERNAL" value="1" />
      <member name="DISPLAYCONFIG_TOPOLOGY_CLONE" value="2" />
      <member name="DISPLAYCONFIG_TOPOLOGY_EXTEND" value="4" />
      <member name="DISPLAYCONFIG_TOPOLOGY_EXTERNAL" value="8" />
      <member name="DISPLAYCONFIG_TOPOLOGY_FORCE_UINT32" value="-1" />
    </enum>
    <typedef name="DISPLAYCONFIG_TOPOLOGY_ID">
      <enum name="enum_64" />
    </typedef>
    <enum name="enum_65">
      <member name="DISPLAYCONFIG_DEVICE_INFO_GET_SOURCE_NAME" value="1" />
      <member name="DISPLAYCONFIG_DEVICE_INFO_GET_TARGET_NAME" value="2" />
      <member name="DISPLAYCONFIG_DEVICE_INFO_GET_TARGET_PREFERRED_MODE" value="3" />
      <member name="DISPLAYCONFIG_DEVICE_INFO_GET_ADAPTER_NAME" value="4" />
      <member name="DISPLAYCONFIG_DEVICE_INFO_SET_TARGET_PERSISTENCE" value="5" />
      <member name="DISPLAYCONFIG_DEVICE_INFO_FORCE_UINT32" value="-1" />
    </enum>
    <typedef name="DISPLAYCONFIG_DEVICE_INFO_TYPE">
      <enum name="enum_65" />
    </typedef>
    <struct name="DISPLAYCONFIG_DEVICE_INFO_HEADER">
      <field offset="0" name="type">
        <type>DISPLAYCONFIG_DEVICE_INFO_TYPE</type>
      </field>
      <field offset="4" name="size">
        <type>UINT32</type>
      </field>
      <field offset="8" name="adapterId">
        <type>LUID</type>
      </field>
      <field offset="16" name="id">
        <type>UINT32</type>
      </field>
    </struct>
    <typedef name="DISPLAYCONFIG_DEVICE_INFO_HEADER">
      <struct name="DISPLAYCONFIG_DEVICE_INFO_HEADER" />
    </typedef>
    <struct name="DISPLAYCONFIG_SOURCE_DEVICE_NAME">
      <field offset="0" name="header">
        <type>DISPLAYCONFIG_DEVICE_INFO_HEADER</type>
      </field>
      <field offset="24" name="viewGdiDeviceName">
        <arr length="32">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="DISPLAYCONFIG_SOURCE_DEVICE_NAME">
      <struct name="DISPLAYCONFIG_SOURCE_DEVICE_NAME" />
    </typedef>
    <struct name="struct_74">
      <field offset="0" name="friendlyNameFromEdid">
        <type>UINT32</type>
      </field>
      <field offset="4" name="friendlyNameForced">
        <type>UINT32</type>
      </field>
      <field offset="8" name="edidIdsValid">
        <type>UINT32</type>
      </field>
      <field offset="12" name="reserved">
        <type>UINT32</type>
      </field>
    </struct>
    <struct name="DISPLAYCONFIG_TARGET_DEVICE_NAME_FLAGS">
      <field offset="0">
        <union>
          <alt>
            <struct name="struct_74" />
          </alt>
          <alt name="value">
            <type>UINT32</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="DISPLAYCONFIG_TARGET_DEVICE_NAME_FLAGS">
      <struct name="DISPLAYCONFIG_TARGET_DEVICE_NAME_FLAGS" />
    </typedef>
    <struct name="DISPLAYCONFIG_TARGET_DEVICE_NAME">
      <field offset="0" name="header">
        <type>DISPLAYCONFIG_DEVICE_INFO_HEADER</type>
      </field>
      <field offset="24" name="flags">
        <type>DISPLAYCONFIG_TARGET_DEVICE_NAME_FLAGS</type>
      </field>
      <field offset="40" name="outputTechnology">
        <type>DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY</type>
      </field>
      <field offset="44" name="edidManufactureId">
        <type>UINT16</type>
      </field>
      <field offset="46" name="edidProductCodeId">
        <type>UINT16</type>
      </field>
      <field offset="48" name="connectorInstance">
        <type>UINT32</type>
      </field>
      <field offset="56" name="monitorFriendlyDeviceName">
        <arr length="64">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="184" name="monitorDevicePath">
        <arr length="128">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="DISPLAYCONFIG_TARGET_DEVICE_NAME">
      <struct name="DISPLAYCONFIG_TARGET_DEVICE_NAME" />
    </typedef>
    <struct name="DISPLAYCONFIG_TARGET_PREFERRED_MODE">
      <field offset="0" name="header">
        <type>DISPLAYCONFIG_DEVICE_INFO_HEADER</type>
      </field>
      <field offset="20" name="width">
        <type>UINT32</type>
      </field>
      <field offset="24" name="height">
        <type>UINT32</type>
      </field>
      <field offset="32" name="targetMode">
        <type>DISPLAYCONFIG_TARGET_MODE</type>
      </field>
    </struct>
    <typedef name="DISPLAYCONFIG_TARGET_PREFERRED_MODE">
      <struct name="DISPLAYCONFIG_TARGET_PREFERRED_MODE" />
    </typedef>
    <struct name="DISPLAYCONFIG_ADAPTER_NAME">
      <field offset="0" name="header">
        <type>DISPLAYCONFIG_DEVICE_INFO_HEADER</type>
      </field>
      <field offset="24" name="adapterDevicePath">
        <arr length="128">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="DISPLAYCONFIG_ADAPTER_NAME">
      <struct name="DISPLAYCONFIG_ADAPTER_NAME" />
    </typedef>
    <struct name="struct_75">
      <field offset="0" name="bootPersistenceOn">
        <type>UINT32</type>
      </field>
      <field offset="4" name="reserved">
        <type>UINT32</type>
      </field>
    </struct>
    <struct name="DISPLAYCONFIG_SET_TARGET_PERSISTENCE">
      <field offset="0" name="header">
        <type>DISPLAYCONFIG_DEVICE_INFO_HEADER</type>
      </field>
      <field offset="24">
        <union>
          <alt>
            <struct name="struct_75" />
          </alt>
          <alt name="value">
            <type>UINT32</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="DISPLAYCONFIG_SET_TARGET_PERSISTENCE">
      <struct name="DISPLAYCONFIG_SET_TARGET_PERSISTENCE" />
    </typedef>
    <struct name="_RGNDATAHEADER">
      <field offset="0" name="dwSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="iType">
        <type>DWORD</type>
      </field>
      <field offset="8" name="nCount">
        <type>DWORD</type>
      </field>
      <field offset="12" name="nRgnSize">
        <type>DWORD</type>
      </field>
      <field offset="16" name="rcBound">
        <type>RECT</type>
      </field>
    </struct>
    <typedef name="RGNDATAHEADER">
      <struct name="_RGNDATAHEADER" />
    </typedef>
    <typedef name="PRGNDATAHEADER">
      <ptr>
        <struct name="_RGNDATAHEADER" />
      </ptr>
    </typedef>
    <struct name="_RGNDATA">
      <field offset="0" name="rdh">
        <type>RGNDATAHEADER</type>
      </field>
      <field offset="32" name="Buffer">
        <arr length="1">
          <prim domain="Character" size="1" />
        </arr>
      </field>
    </struct>
    <typedef name="RGNDATA">
      <struct name="_RGNDATA" />
    </typedef>
    <typedef name="PRGNDATA">
      <ptr>
        <struct name="_RGNDATA" />
      </ptr>
    </typedef>
    <typedef name="NPRGNDATA">
      <ptr>
        <struct name="_RGNDATA" />
      </ptr>
    </typedef>
    <typedef name="LPRGNDATA">
      <ptr>
        <struct name="_RGNDATA" />
      </ptr>
    </typedef>
    <struct name="_ABC">
      <field offset="0" name="abcA">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="4" name="abcB">
        <type>UINT</type>
      </field>
      <field offset="8" name="abcC">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="ABC">
      <struct name="_ABC" />
    </typedef>
    <typedef name="PABC">
      <ptr>
        <struct name="_ABC" />
      </ptr>
    </typedef>
    <typedef name="NPABC">
      <ptr>
        <struct name="_ABC" />
      </ptr>
    </typedef>
    <typedef name="LPABC">
      <ptr>
        <struct name="_ABC" />
      </ptr>
    </typedef>
    <struct name="_ABCFLOAT">
      <field offset="0" name="abcfA">
        <type>FLOAT</type>
      </field>
      <field offset="4" name="abcfB">
        <type>FLOAT</type>
      </field>
      <field offset="8" name="abcfC">
        <type>FLOAT</type>
      </field>
    </struct>
    <typedef name="ABCFLOAT">
      <struct name="_ABCFLOAT" />
    </typedef>
    <typedef name="PABCFLOAT">
      <ptr>
        <struct name="_ABCFLOAT" />
      </ptr>
    </typedef>
    <typedef name="NPABCFLOAT">
      <ptr>
        <struct name="_ABCFLOAT" />
      </ptr>
    </typedef>
    <typedef name="LPABCFLOAT">
      <ptr>
        <struct name="_ABCFLOAT" />
      </ptr>
    </typedef>
    <struct name="_OUTLINETEXTMETRICA">
      <field offset="0" name="otmSize">
        <type>UINT</type>
      </field>
      <field offset="8" name="otmTextMetrics">
        <type>TEXTMETRICA</type>
      </field>
      <field offset="61" name="otmFiller">
        <type>BYTE</type>
      </field>
      <field offset="64" name="otmPanoseNumber">
        <type>PANOSE</type>
      </field>
      <field offset="76" name="otmfsSelection">
        <type>UINT</type>
      </field>
      <field offset="80" name="otmfsType">
        <type>UINT</type>
      </field>
      <field offset="84" name="otmsCharSlopeRise">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="88" name="otmsCharSlopeRun">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="92" name="otmItalicAngle">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="96" name="otmEMSquare">
        <type>UINT</type>
      </field>
      <field offset="100" name="otmAscent">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="104" name="otmDescent">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="108" name="otmLineGap">
        <type>UINT</type>
      </field>
      <field offset="112" name="otmsCapEmHeight">
        <type>UINT</type>
      </field>
      <field offset="116" name="otmsXHeight">
        <type>UINT</type>
      </field>
      <field offset="120" name="otmrcFontBox">
        <type>RECT</type>
      </field>
      <field offset="136" name="otmMacAscent">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="140" name="otmMacDescent">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="144" name="otmMacLineGap">
        <type>UINT</type>
      </field>
      <field offset="148" name="otmusMinimumPPEM">
        <type>UINT</type>
      </field>
      <field offset="152" name="otmptSubscriptSize">
        <type>POINT</type>
      </field>
      <field offset="160" name="otmptSubscriptOffset">
        <type>POINT</type>
      </field>
      <field offset="168" name="otmptSuperscriptSize">
        <type>POINT</type>
      </field>
      <field offset="176" name="otmptSuperscriptOffset">
        <type>POINT</type>
      </field>
      <field offset="184" name="otmsStrikeoutSize">
        <type>UINT</type>
      </field>
      <field offset="188" name="otmsStrikeoutPosition">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="192" name="otmsUnderscoreSize">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="196" name="otmsUnderscorePosition">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="200" name="otmpFamilyName">
        <type>PSTR</type>
      </field>
      <field offset="204" name="otmpFaceName">
        <type>PSTR</type>
      </field>
      <field offset="208" name="otmpStyleName">
        <type>PSTR</type>
      </field>
      <field offset="212" name="otmpFullName">
        <type>PSTR</type>
      </field>
    </struct>
    <typedef name="OUTLINETEXTMETRICA">
      <struct name="_OUTLINETEXTMETRICA" />
    </typedef>
    <typedef name="POUTLINETEXTMETRICA">
      <ptr>
        <struct name="_OUTLINETEXTMETRICA" />
      </ptr>
    </typedef>
    <typedef name="NPOUTLINETEXTMETRICA">
      <ptr>
        <struct name="_OUTLINETEXTMETRICA" />
      </ptr>
    </typedef>
    <typedef name="LPOUTLINETEXTMETRICA">
      <ptr>
        <struct name="_OUTLINETEXTMETRICA" />
      </ptr>
    </typedef>
    <struct name="_OUTLINETEXTMETRICW">
      <field offset="0" name="otmSize">
        <type>UINT</type>
      </field>
      <field offset="8" name="otmTextMetrics">
        <type>TEXTMETRICW</type>
      </field>
      <field offset="65" name="otmFiller">
        <type>BYTE</type>
      </field>
      <field offset="72" name="otmPanoseNumber">
        <type>PANOSE</type>
      </field>
      <field offset="84" name="otmfsSelection">
        <type>UINT</type>
      </field>
      <field offset="88" name="otmfsType">
        <type>UINT</type>
      </field>
      <field offset="92" name="otmsCharSlopeRise">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="96" name="otmsCharSlopeRun">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="100" name="otmItalicAngle">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="104" name="otmEMSquare">
        <type>UINT</type>
      </field>
      <field offset="108" name="otmAscent">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="112" name="otmDescent">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="116" name="otmLineGap">
        <type>UINT</type>
      </field>
      <field offset="120" name="otmsCapEmHeight">
        <type>UINT</type>
      </field>
      <field offset="124" name="otmsXHeight">
        <type>UINT</type>
      </field>
      <field offset="128" name="otmrcFontBox">
        <type>RECT</type>
      </field>
      <field offset="144" name="otmMacAscent">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="148" name="otmMacDescent">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="152" name="otmMacLineGap">
        <type>UINT</type>
      </field>
      <field offset="156" name="otmusMinimumPPEM">
        <type>UINT</type>
      </field>
      <field offset="160" name="otmptSubscriptSize">
        <type>POINT</type>
      </field>
      <field offset="168" name="otmptSubscriptOffset">
        <type>POINT</type>
      </field>
      <field offset="176" name="otmptSuperscriptSize">
        <type>POINT</type>
      </field>
      <field offset="184" name="otmptSuperscriptOffset">
        <type>POINT</type>
      </field>
      <field offset="192" name="otmsStrikeoutSize">
        <type>UINT</type>
      </field>
      <field offset="196" name="otmsStrikeoutPosition">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="200" name="otmsUnderscoreSize">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="204" name="otmsUnderscorePosition">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="208" name="otmpFamilyName">
        <type>PSTR</type>
      </field>
      <field offset="212" name="otmpFaceName">
        <type>PSTR</type>
      </field>
      <field offset="216" name="otmpStyleName">
        <type>PSTR</type>
      </field>
      <field offset="220" name="otmpFullName">
        <type>PSTR</type>
      </field>
    </struct>
    <typedef name="OUTLINETEXTMETRICW">
      <struct name="_OUTLINETEXTMETRICW" />
    </typedef>
    <typedef name="POUTLINETEXTMETRICW">
      <ptr>
        <struct name="_OUTLINETEXTMETRICW" />
      </ptr>
    </typedef>
    <typedef name="NPOUTLINETEXTMETRICW">
      <ptr>
        <struct name="_OUTLINETEXTMETRICW" />
      </ptr>
    </typedef>
    <typedef name="LPOUTLINETEXTMETRICW">
      <ptr>
        <struct name="_OUTLINETEXTMETRICW" />
      </ptr>
    </typedef>
    <typedef name="OUTLINETEXTMETRIC">
      <type>OUTLINETEXTMETRICA</type>
    </typedef>
    <typedef name="POUTLINETEXTMETRIC">
      <type>POUTLINETEXTMETRICA</type>
    </typedef>
    <typedef name="NPOUTLINETEXTMETRIC">
      <type>NPOUTLINETEXTMETRICA</type>
    </typedef>
    <typedef name="LPOUTLINETEXTMETRIC">
      <type>LPOUTLINETEXTMETRICA</type>
    </typedef>
    <struct name="tagPOLYTEXTA">
      <field offset="0" name="x">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="4" name="y">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="n">
        <type>UINT</type>
      </field>
      <field offset="12" name="lpstr">
        <type>LPCSTR</type>
      </field>
      <field offset="16" name="uiFlags">
        <type>UINT</type>
      </field>
      <field offset="24" name="rcl">
        <type>RECT</type>
      </field>
      <field offset="40" name="pdx">
        <ptr>
          <prim domain="SignedInt" size="4" />
        </ptr>
      </field>
    </struct>
    <typedef name="POLYTEXTA">
      <struct name="tagPOLYTEXTA" />
    </typedef>
    <typedef name="PPOLYTEXTA">
      <ptr>
        <struct name="tagPOLYTEXTA" />
      </ptr>
    </typedef>
    <typedef name="NPPOLYTEXTA">
      <ptr>
        <struct name="tagPOLYTEXTA" />
      </ptr>
    </typedef>
    <typedef name="LPPOLYTEXTA">
      <ptr>
        <struct name="tagPOLYTEXTA" />
      </ptr>
    </typedef>
    <struct name="tagPOLYTEXTW">
      <field offset="0" name="x">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="4" name="y">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="n">
        <type>UINT</type>
      </field>
      <field offset="12" name="lpstr">
        <type>LPCWSTR</type>
      </field>
      <field offset="16" name="uiFlags">
        <type>UINT</type>
      </field>
      <field offset="24" name="rcl">
        <type>RECT</type>
      </field>
      <field offset="40" name="pdx">
        <ptr>
          <prim domain="SignedInt" size="4" />
        </ptr>
      </field>
    </struct>
    <typedef name="POLYTEXTW">
      <struct name="tagPOLYTEXTW" />
    </typedef>
    <typedef name="PPOLYTEXTW">
      <ptr>
        <struct name="tagPOLYTEXTW" />
      </ptr>
    </typedef>
    <typedef name="NPPOLYTEXTW">
      <ptr>
        <struct name="tagPOLYTEXTW" />
      </ptr>
    </typedef>
    <typedef name="LPPOLYTEXTW">
      <ptr>
        <struct name="tagPOLYTEXTW" />
      </ptr>
    </typedef>
    <typedef name="POLYTEXT">
      <type>POLYTEXTA</type>
    </typedef>
    <typedef name="PPOLYTEXT">
      <type>PPOLYTEXTA</type>
    </typedef>
    <typedef name="NPPOLYTEXT">
      <type>NPPOLYTEXTA</type>
    </typedef>
    <typedef name="LPPOLYTEXT">
      <type>LPPOLYTEXTA</type>
    </typedef>
    <struct name="_FIXED">
      <field offset="0" name="fract">
        <type>WORD</type>
      </field>
      <field offset="2" name="value">
        <prim domain="SignedInt" size="2" />
      </field>
    </struct>
    <typedef name="FIXED">
      <struct name="_FIXED" />
    </typedef>
    <struct name="_MAT2">
      <field offset="0" name="eM11">
        <type>FIXED</type>
      </field>
      <field offset="4" name="eM12">
        <type>FIXED</type>
      </field>
      <field offset="8" name="eM21">
        <type>FIXED</type>
      </field>
      <field offset="12" name="eM22">
        <type>FIXED</type>
      </field>
    </struct>
    <typedef name="MAT2">
      <struct name="_MAT2" />
    </typedef>
    <typedef name="LPMAT2">
      <ptr>
        <struct name="_MAT2" />
      </ptr>
    </typedef>
    <struct name="_GLYPHMETRICS">
      <field offset="0" name="gmBlackBoxX">
        <type>UINT</type>
      </field>
      <field offset="4" name="gmBlackBoxY">
        <type>UINT</type>
      </field>
      <field offset="8" name="gmptGlyphOrigin">
        <type>POINT</type>
      </field>
      <field offset="16" name="gmCellIncX">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="18" name="gmCellIncY">
        <prim domain="SignedInt" size="2" />
      </field>
    </struct>
    <typedef name="GLYPHMETRICS">
      <struct name="_GLYPHMETRICS" />
    </typedef>
    <typedef name="LPGLYPHMETRICS">
      <ptr>
        <struct name="_GLYPHMETRICS" />
      </ptr>
    </typedef>
    <struct name="tagPOINTFX">
      <field offset="0" name="x">
        <type>FIXED</type>
      </field>
      <field offset="4" name="y">
        <type>FIXED</type>
      </field>
    </struct>
    <typedef name="POINTFX">
      <struct name="tagPOINTFX" />
    </typedef>
    <typedef name="LPPOINTFX">
      <ptr>
        <struct name="tagPOINTFX" />
      </ptr>
    </typedef>
    <struct name="tagTTPOLYCURVE">
      <field offset="0" name="wType">
        <type>WORD</type>
      </field>
      <field offset="2" name="cpfx">
        <type>WORD</type>
      </field>
      <field offset="8" name="apfx">
        <arr length="1">
          <type>POINTFX</type>
        </arr>
      </field>
    </struct>
    <typedef name="TTPOLYCURVE">
      <struct name="tagTTPOLYCURVE" />
    </typedef>
    <typedef name="LPTTPOLYCURVE">
      <ptr>
        <struct name="tagTTPOLYCURVE" />
      </ptr>
    </typedef>
    <struct name="tagTTPOLYGONHEADER">
      <field offset="0" name="cb">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwType">
        <type>DWORD</type>
      </field>
      <field offset="8" name="pfxStart">
        <type>POINTFX</type>
      </field>
    </struct>
    <typedef name="TTPOLYGONHEADER">
      <struct name="tagTTPOLYGONHEADER" />
    </typedef>
    <typedef name="LPTTPOLYGONHEADER">
      <ptr>
        <struct name="tagTTPOLYGONHEADER" />
      </ptr>
    </typedef>
    <struct name="tagGCP_RESULTSA">
      <field offset="0" name="lStructSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="lpOutString">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="lpOrder">
        <ptr>
          <type>UINT</type>
        </ptr>
      </field>
      <field offset="12" name="lpDx">
        <ptr>
          <prim domain="SignedInt" size="4" />
        </ptr>
      </field>
      <field offset="16" name="lpCaretPos">
        <ptr>
          <prim domain="SignedInt" size="4" />
        </ptr>
      </field>
      <field offset="20" name="lpClass">
        <type>LPSTR</type>
      </field>
      <field offset="24" name="lpGlyphs">
        <type>LPWSTR</type>
      </field>
      <field offset="28" name="nGlyphs">
        <type>UINT</type>
      </field>
      <field offset="32" name="nMaxFit">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="GCP_RESULTSA">
      <struct name="tagGCP_RESULTSA" />
    </typedef>
    <typedef name="LPGCP_RESULTSA">
      <ptr>
        <struct name="tagGCP_RESULTSA" />
      </ptr>
    </typedef>
    <struct name="tagGCP_RESULTSW">
      <field offset="0" name="lStructSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="lpOutString">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="lpOrder">
        <ptr>
          <type>UINT</type>
        </ptr>
      </field>
      <field offset="12" name="lpDx">
        <ptr>
          <prim domain="SignedInt" size="4" />
        </ptr>
      </field>
      <field offset="16" name="lpCaretPos">
        <ptr>
          <prim domain="SignedInt" size="4" />
        </ptr>
      </field>
      <field offset="20" name="lpClass">
        <type>LPSTR</type>
      </field>
      <field offset="24" name="lpGlyphs">
        <type>LPWSTR</type>
      </field>
      <field offset="28" name="nGlyphs">
        <type>UINT</type>
      </field>
      <field offset="32" name="nMaxFit">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="GCP_RESULTSW">
      <struct name="tagGCP_RESULTSW" />
    </typedef>
    <typedef name="LPGCP_RESULTSW">
      <ptr>
        <struct name="tagGCP_RESULTSW" />
      </ptr>
    </typedef>
    <typedef name="GCP_RESULTS">
      <type>GCP_RESULTSA</type>
    </typedef>
    <typedef name="LPGCP_RESULTS">
      <type>LPGCP_RESULTSA</type>
    </typedef>
    <struct name="_RASTERIZER_STATUS">
      <field offset="0" name="nSize">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="2" name="wFlags">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="4" name="nLanguageID">
        <prim domain="SignedInt" size="2" />
      </field>
    </struct>
    <typedef name="RASTERIZER_STATUS">
      <struct name="_RASTERIZER_STATUS" />
    </typedef>
    <typedef name="LPRASTERIZER_STATUS">
      <ptr>
        <struct name="_RASTERIZER_STATUS" />
      </ptr>
    </typedef>
    <struct name="tagPIXELFORMATDESCRIPTOR">
      <field offset="0" name="nSize">
        <type>WORD</type>
      </field>
      <field offset="2" name="nVersion">
        <type>WORD</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="iPixelType">
        <type>BYTE</type>
      </field>
      <field offset="9" name="cColorBits">
        <type>BYTE</type>
      </field>
      <field offset="10" name="cRedBits">
        <type>BYTE</type>
      </field>
      <field offset="11" name="cRedShift">
        <type>BYTE</type>
      </field>
      <field offset="12" name="cGreenBits">
        <type>BYTE</type>
      </field>
      <field offset="13" name="cGreenShift">
        <type>BYTE</type>
      </field>
      <field offset="14" name="cBlueBits">
        <type>BYTE</type>
      </field>
      <field offset="15" name="cBlueShift">
        <type>BYTE</type>
      </field>
      <field offset="16" name="cAlphaBits">
        <type>BYTE</type>
      </field>
      <field offset="17" name="cAlphaShift">
        <type>BYTE</type>
      </field>
      <field offset="18" name="cAccumBits">
        <type>BYTE</type>
      </field>
      <field offset="19" name="cAccumRedBits">
        <type>BYTE</type>
      </field>
      <field offset="20" name="cAccumGreenBits">
        <type>BYTE</type>
      </field>
      <field offset="21" name="cAccumBlueBits">
        <type>BYTE</type>
      </field>
      <field offset="22" name="cAccumAlphaBits">
        <type>BYTE</type>
      </field>
      <field offset="23" name="cDepthBits">
        <type>BYTE</type>
      </field>
      <field offset="24" name="cStencilBits">
        <type>BYTE</type>
      </field>
      <field offset="25" name="cAuxBuffers">
        <type>BYTE</type>
      </field>
      <field offset="26" name="iLayerType">
        <type>BYTE</type>
      </field>
      <field offset="27" name="bReserved">
        <type>BYTE</type>
      </field>
      <field offset="28" name="dwLayerMask">
        <type>DWORD</type>
      </field>
      <field offset="32" name="dwVisibleMask">
        <type>DWORD</type>
      </field>
      <field offset="36" name="dwDamageMask">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PIXELFORMATDESCRIPTOR">
      <struct name="tagPIXELFORMATDESCRIPTOR" />
    </typedef>
    <typedef name="PPIXELFORMATDESCRIPTOR">
      <ptr>
        <struct name="tagPIXELFORMATDESCRIPTOR" />
      </ptr>
    </typedef>
    <typedef name="LPPIXELFORMATDESCRIPTOR">
      <ptr>
        <struct name="tagPIXELFORMATDESCRIPTOR" />
      </ptr>
    </typedef>
    <typedef name="OLDFONTENUMPROCA">
      <ptr>
        <fn>
          <return>
            <prim domain="SignedInt" size="4" />
            <reg>eax</reg>
          </return>
          <arg>
            <ptr>
              <type>LOGFONTA</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg>
            <ptr>
              <type>TEXTMETRICA</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg>
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="OLDFONTENUMPROCW">
      <ptr>
        <fn>
          <return>
            <prim domain="SignedInt" size="4" />
            <reg>eax</reg>
          </return>
          <arg>
            <ptr>
              <type>LOGFONTW</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg>
            <ptr>
              <type>TEXTMETRICW</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg>
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="FONTENUMPROCA">
      <type>OLDFONTENUMPROCA</type>
    </typedef>
    <typedef name="FONTENUMPROCW">
      <type>OLDFONTENUMPROCW</type>
    </typedef>
    <typedef name="FONTENUMPROC">
      <type>FONTENUMPROCA</type>
    </typedef>
    <typedef name="GOBJENUMPROC">
      <ptr>
        <fn>
          <return>
            <prim domain="SignedInt" size="4" />
            <reg>eax</reg>
          </return>
          <arg>
            <type>LPVOID</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="LINEDDAPROC">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg>
            <prim domain="SignedInt" size="4" />
            <stack size="4" />
          </arg>
          <arg>
            <prim domain="SignedInt" size="4" />
            <stack size="4" />
          </arg>
          <arg>
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="LPFNDEVMODE">
      <ptr>
        <fn>
          <return>
            <type>UINT</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>HWND</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>HMODULE</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPDEVMODE</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPSTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPSTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPDEVMODE</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPSTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>UINT</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="LPFNDEVCAPS">
      <ptr>
        <fn>
          <return>
            <type>DWORD</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>LPSTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPSTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>UINT</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPSTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPDEVMODE</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="tagWCRANGE">
      <field offset="0" name="wcLow">
        <type>WCHAR</type>
      </field>
      <field offset="2" name="cGlyphs">
        <type>USHORT</type>
      </field>
    </struct>
    <typedef name="WCRANGE">
      <struct name="tagWCRANGE" />
    </typedef>
    <typedef name="PWCRANGE">
      <ptr>
        <struct name="tagWCRANGE" />
      </ptr>
    </typedef>
    <typedef name="LPWCRANGE">
      <ptr>
        <struct name="tagWCRANGE" />
      </ptr>
    </typedef>
    <struct name="tagGLYPHSET">
      <field offset="0" name="cbThis">
        <type>DWORD</type>
      </field>
      <field offset="4" name="flAccel">
        <type>DWORD</type>
      </field>
      <field offset="8" name="cGlyphsSupported">
        <type>DWORD</type>
      </field>
      <field offset="12" name="cRanges">
        <type>DWORD</type>
      </field>
      <field offset="16" name="ranges">
        <arr length="1">
          <type>WCRANGE</type>
        </arr>
      </field>
    </struct>
    <typedef name="GLYPHSET">
      <struct name="tagGLYPHSET" />
    </typedef>
    <typedef name="PGLYPHSET">
      <ptr>
        <struct name="tagGLYPHSET" />
      </ptr>
    </typedef>
    <typedef name="LPGLYPHSET">
      <ptr>
        <struct name="tagGLYPHSET" />
      </ptr>
    </typedef>
    <struct name="tagDESIGNVECTOR">
      <field offset="0" name="dvReserved">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dvNumAxes">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dvValues">
        <arr length="16">
          <type>LONG</type>
        </arr>
      </field>
    </struct>
    <typedef name="DESIGNVECTOR">
      <struct name="tagDESIGNVECTOR" />
    </typedef>
    <typedef name="PDESIGNVECTOR">
      <ptr>
        <struct name="tagDESIGNVECTOR" />
      </ptr>
    </typedef>
    <typedef name="LPDESIGNVECTOR">
      <ptr>
        <struct name="tagDESIGNVECTOR" />
      </ptr>
    </typedef>
    <struct name="tagAXISINFOA">
      <field offset="0" name="axMinValue">
        <type>LONG</type>
      </field>
      <field offset="4" name="axMaxValue">
        <type>LONG</type>
      </field>
      <field offset="8" name="axAxisName">
        <arr length="16">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="AXISINFOA">
      <struct name="tagAXISINFOA" />
    </typedef>
    <typedef name="PAXISINFOA">
      <ptr>
        <struct name="tagAXISINFOA" />
      </ptr>
    </typedef>
    <typedef name="LPAXISINFOA">
      <ptr>
        <struct name="tagAXISINFOA" />
      </ptr>
    </typedef>
    <struct name="tagAXISINFOW">
      <field offset="0" name="axMinValue">
        <type>LONG</type>
      </field>
      <field offset="4" name="axMaxValue">
        <type>LONG</type>
      </field>
      <field offset="8" name="axAxisName">
        <arr length="16">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="AXISINFOW">
      <struct name="tagAXISINFOW" />
    </typedef>
    <typedef name="PAXISINFOW">
      <ptr>
        <struct name="tagAXISINFOW" />
      </ptr>
    </typedef>
    <typedef name="LPAXISINFOW">
      <ptr>
        <struct name="tagAXISINFOW" />
      </ptr>
    </typedef>
    <typedef name="AXISINFO">
      <type>AXISINFOA</type>
    </typedef>
    <typedef name="PAXISINFO">
      <type>PAXISINFOA</type>
    </typedef>
    <typedef name="LPAXISINFO">
      <type>LPAXISINFOA</type>
    </typedef>
    <struct name="tagAXESLISTA">
      <field offset="0" name="axlReserved">
        <type>DWORD</type>
      </field>
      <field offset="4" name="axlNumAxes">
        <type>DWORD</type>
      </field>
      <field offset="8" name="axlAxisInfo">
        <arr length="16">
          <type>AXISINFOA</type>
        </arr>
      </field>
    </struct>
    <typedef name="AXESLISTA">
      <struct name="tagAXESLISTA" />
    </typedef>
    <typedef name="PAXESLISTA">
      <ptr>
        <struct name="tagAXESLISTA" />
      </ptr>
    </typedef>
    <typedef name="LPAXESLISTA">
      <ptr>
        <struct name="tagAXESLISTA" />
      </ptr>
    </typedef>
    <struct name="tagAXESLISTW">
      <field offset="0" name="axlReserved">
        <type>DWORD</type>
      </field>
      <field offset="4" name="axlNumAxes">
        <type>DWORD</type>
      </field>
      <field offset="8" name="axlAxisInfo">
        <arr length="16">
          <type>AXISINFOW</type>
        </arr>
      </field>
    </struct>
    <typedef name="AXESLISTW">
      <struct name="tagAXESLISTW" />
    </typedef>
    <typedef name="PAXESLISTW">
      <ptr>
        <struct name="tagAXESLISTW" />
      </ptr>
    </typedef>
    <typedef name="LPAXESLISTW">
      <ptr>
        <struct name="tagAXESLISTW" />
      </ptr>
    </typedef>
    <typedef name="AXESLIST">
      <type>AXESLISTA</type>
    </typedef>
    <typedef name="PAXESLIST">
      <type>PAXESLISTA</type>
    </typedef>
    <typedef name="LPAXESLIST">
      <type>LPAXESLISTA</type>
    </typedef>
    <struct name="tagENUMLOGFONTEXDVA">
      <field offset="0" name="elfEnumLogfontEx">
        <type>ENUMLOGFONTEXA</type>
      </field>
      <field offset="192" name="elfDesignVector">
        <type>DESIGNVECTOR</type>
      </field>
    </struct>
    <typedef name="ENUMLOGFONTEXDVA">
      <struct name="tagENUMLOGFONTEXDVA" />
    </typedef>
    <typedef name="PENUMLOGFONTEXDVA">
      <ptr>
        <struct name="tagENUMLOGFONTEXDVA" />
      </ptr>
    </typedef>
    <typedef name="LPENUMLOGFONTEXDVA">
      <ptr>
        <struct name="tagENUMLOGFONTEXDVA" />
      </ptr>
    </typedef>
    <struct name="tagENUMLOGFONTEXDVW">
      <field offset="0" name="elfEnumLogfontEx">
        <type>ENUMLOGFONTEXW</type>
      </field>
      <field offset="352" name="elfDesignVector">
        <type>DESIGNVECTOR</type>
      </field>
    </struct>
    <typedef name="ENUMLOGFONTEXDVW">
      <struct name="tagENUMLOGFONTEXDVW" />
    </typedef>
    <typedef name="PENUMLOGFONTEXDVW">
      <ptr>
        <struct name="tagENUMLOGFONTEXDVW" />
      </ptr>
    </typedef>
    <typedef name="LPENUMLOGFONTEXDVW">
      <ptr>
        <struct name="tagENUMLOGFONTEXDVW" />
      </ptr>
    </typedef>
    <typedef name="ENUMLOGFONTEXDV">
      <type>ENUMLOGFONTEXDVA</type>
    </typedef>
    <typedef name="PENUMLOGFONTEXDV">
      <type>PENUMLOGFONTEXDVA</type>
    </typedef>
    <typedef name="LPENUMLOGFONTEXDV">
      <type>LPENUMLOGFONTEXDVA</type>
    </typedef>
    <struct name="tagENUMTEXTMETRICA">
      <field offset="0" name="etmNewTextMetricEx">
        <type>NEWTEXTMETRICEXA</type>
      </field>
      <field offset="96" name="etmAxesList">
        <type>AXESLISTA</type>
      </field>
    </struct>
    <typedef name="ENUMTEXTMETRICA">
      <struct name="tagENUMTEXTMETRICA" />
    </typedef>
    <typedef name="PENUMTEXTMETRICA">
      <ptr>
        <struct name="tagENUMTEXTMETRICA" />
      </ptr>
    </typedef>
    <typedef name="LPENUMTEXTMETRICA">
      <ptr>
        <struct name="tagENUMTEXTMETRICA" />
      </ptr>
    </typedef>
    <struct name="tagENUMTEXTMETRICW">
      <field offset="0" name="etmNewTextMetricEx">
        <type>NEWTEXTMETRICEXW</type>
      </field>
      <field offset="104" name="etmAxesList">
        <type>AXESLISTW</type>
      </field>
    </struct>
    <typedef name="ENUMTEXTMETRICW">
      <struct name="tagENUMTEXTMETRICW" />
    </typedef>
    <typedef name="PENUMTEXTMETRICW">
      <ptr>
        <struct name="tagENUMTEXTMETRICW" />
      </ptr>
    </typedef>
    <typedef name="LPENUMTEXTMETRICW">
      <ptr>
        <struct name="tagENUMTEXTMETRICW" />
      </ptr>
    </typedef>
    <typedef name="ENUMTEXTMETRIC">
      <type>ENUMTEXTMETRICA</type>
    </typedef>
    <typedef name="PENUMTEXTMETRIC">
      <type>PENUMTEXTMETRICA</type>
    </typedef>
    <typedef name="LPENUMTEXTMETRIC">
      <type>LPENUMTEXTMETRICA</type>
    </typedef>
    <typedef name="COLOR16">
      <type>USHORT</type>
    </typedef>
    <struct name="_TRIVERTEX">
      <field offset="0" name="x">
        <type>LONG</type>
      </field>
      <field offset="4" name="y">
        <type>LONG</type>
      </field>
      <field offset="8" name="Red">
        <type>COLOR16</type>
      </field>
      <field offset="10" name="Green">
        <type>COLOR16</type>
      </field>
      <field offset="12" name="Blue">
        <type>COLOR16</type>
      </field>
      <field offset="14" name="Alpha">
        <type>COLOR16</type>
      </field>
    </struct>
    <typedef name="TRIVERTEX">
      <struct name="_TRIVERTEX" />
    </typedef>
    <typedef name="PTRIVERTEX">
      <ptr>
        <struct name="_TRIVERTEX" />
      </ptr>
    </typedef>
    <typedef name="LPTRIVERTEX">
      <ptr>
        <struct name="_TRIVERTEX" />
      </ptr>
    </typedef>
    <struct name="_GRADIENT_TRIANGLE">
      <field offset="0" name="Vertex1">
        <type>ULONG</type>
      </field>
      <field offset="4" name="Vertex2">
        <type>ULONG</type>
      </field>
      <field offset="8" name="Vertex3">
        <type>ULONG</type>
      </field>
    </struct>
    <typedef name="GRADIENT_TRIANGLE">
      <struct name="_GRADIENT_TRIANGLE" />
    </typedef>
    <typedef name="PGRADIENT_TRIANGLE">
      <ptr>
        <struct name="_GRADIENT_TRIANGLE" />
      </ptr>
    </typedef>
    <typedef name="LPGRADIENT_TRIANGLE">
      <ptr>
        <struct name="_GRADIENT_TRIANGLE" />
      </ptr>
    </typedef>
    <struct name="_GRADIENT_RECT">
      <field offset="0" name="UpperLeft">
        <type>ULONG</type>
      </field>
      <field offset="4" name="LowerRight">
        <type>ULONG</type>
      </field>
    </struct>
    <typedef name="GRADIENT_RECT">
      <struct name="_GRADIENT_RECT" />
    </typedef>
    <typedef name="PGRADIENT_RECT">
      <ptr>
        <struct name="_GRADIENT_RECT" />
      </ptr>
    </typedef>
    <typedef name="LPGRADIENT_RECT">
      <ptr>
        <struct name="_GRADIENT_RECT" />
      </ptr>
    </typedef>
    <struct name="_BLENDFUNCTION">
      <field offset="0" name="BlendOp">
        <type>BYTE</type>
      </field>
      <field offset="1" name="BlendFlags">
        <type>BYTE</type>
      </field>
      <field offset="2" name="SourceConstantAlpha">
        <type>BYTE</type>
      </field>
      <field offset="3" name="AlphaFormat">
        <type>BYTE</type>
      </field>
    </struct>
    <typedef name="BLENDFUNCTION">
      <struct name="_BLENDFUNCTION" />
    </typedef>
    <typedef name="PBLENDFUNCTION">
      <ptr>
        <struct name="_BLENDFUNCTION" />
      </ptr>
    </typedef>
    <typedef name="MFENUMPROC">
      <ptr>
        <fn>
          <return>
            <prim domain="SignedInt" size="4" />
            <reg>eax</reg>
          </return>
          <arg name="hdc">
            <type>HDC</type>
            <stack size="4" />
          </arg>
          <arg name="lpht">
            <ptr>
              <type>HANDLETABLE</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="lpMR">
            <ptr>
              <type>METARECORD</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="nObj">
            <prim domain="SignedInt" size="4" />
            <stack size="4" />
          </arg>
          <arg name="param">
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="ENHMFENUMPROC">
      <ptr>
        <fn>
          <return>
            <prim domain="SignedInt" size="4" />
            <reg>eax</reg>
          </return>
          <arg name="hdc">
            <type>HDC</type>
            <stack size="4" />
          </arg>
          <arg name="lpht">
            <ptr>
              <type>HANDLETABLE</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="lpmr">
            <ptr>
              <type>ENHMETARECORD</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="nHandles">
            <prim domain="SignedInt" size="4" />
            <stack size="4" />
          </arg>
          <arg name="data">
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="tagDIBSECTION">
      <field offset="0" name="dsBm">
        <type>BITMAP</type>
      </field>
      <field offset="24" name="dsBmih">
        <type>BITMAPINFOHEADER</type>
      </field>
      <field offset="64" name="dsBitfields">
        <arr length="3">
          <type>DWORD</type>
        </arr>
      </field>
      <field offset="76" name="dshSection">
        <type>HANDLE</type>
      </field>
      <field offset="80" name="dsOffset">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="DIBSECTION">
      <struct name="tagDIBSECTION" />
    </typedef>
    <typedef name="LPDIBSECTION">
      <ptr>
        <struct name="tagDIBSECTION" />
      </ptr>
    </typedef>
    <typedef name="PDIBSECTION">
      <ptr>
        <struct name="tagDIBSECTION" />
      </ptr>
    </typedef>
    <struct name="tagCOLORADJUSTMENT">
      <field offset="0" name="caSize">
        <type>WORD</type>
      </field>
      <field offset="2" name="caFlags">
        <type>WORD</type>
      </field>
      <field offset="4" name="caIlluminantIndex">
        <type>WORD</type>
      </field>
      <field offset="6" name="caRedGamma">
        <type>WORD</type>
      </field>
      <field offset="8" name="caGreenGamma">
        <type>WORD</type>
      </field>
      <field offset="10" name="caBlueGamma">
        <type>WORD</type>
      </field>
      <field offset="12" name="caReferenceBlack">
        <type>WORD</type>
      </field>
      <field offset="14" name="caReferenceWhite">
        <type>WORD</type>
      </field>
      <field offset="16" name="caContrast">
        <type>SHORT</type>
      </field>
      <field offset="18" name="caBrightness">
        <type>SHORT</type>
      </field>
      <field offset="20" name="caColorfulness">
        <type>SHORT</type>
      </field>
      <field offset="22" name="caRedGreenTint">
        <type>SHORT</type>
      </field>
    </struct>
    <typedef name="COLORADJUSTMENT">
      <struct name="tagCOLORADJUSTMENT" />
    </typedef>
    <typedef name="PCOLORADJUSTMENT">
      <ptr>
        <struct name="tagCOLORADJUSTMENT" />
      </ptr>
    </typedef>
    <typedef name="LPCOLORADJUSTMENT">
      <ptr>
        <struct name="tagCOLORADJUSTMENT" />
      </ptr>
    </typedef>
    <typedef name="ABORTPROC">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>HDC</type>
            <stack size="4" />
          </arg>
          <arg>
            <prim domain="SignedInt" size="4" />
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="_DOCINFOA">
      <field offset="0" name="cbSize">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="4" name="lpszDocName">
        <type>LPCSTR</type>
      </field>
      <field offset="8" name="lpszOutput">
        <type>LPCSTR</type>
      </field>
      <field offset="12" name="lpszDatatype">
        <type>LPCSTR</type>
      </field>
      <field offset="16" name="fwType">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="DOCINFOA">
      <struct name="_DOCINFOA" />
    </typedef>
    <typedef name="LPDOCINFOA">
      <ptr>
        <struct name="_DOCINFOA" />
      </ptr>
    </typedef>
    <struct name="_DOCINFOW">
      <field offset="0" name="cbSize">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="4" name="lpszDocName">
        <type>LPCWSTR</type>
      </field>
      <field offset="8" name="lpszOutput">
        <type>LPCWSTR</type>
      </field>
      <field offset="12" name="lpszDatatype">
        <type>LPCWSTR</type>
      </field>
      <field offset="16" name="fwType">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="DOCINFOW">
      <struct name="_DOCINFOW" />
    </typedef>
    <typedef name="LPDOCINFOW">
      <ptr>
        <struct name="_DOCINFOW" />
      </ptr>
    </typedef>
    <typedef name="DOCINFO">
      <type>DOCINFOA</type>
    </typedef>
    <typedef name="LPDOCINFO">
      <type>LPDOCINFOA</type>
    </typedef>
    <struct name="tagKERNINGPAIR">
      <field offset="0" name="wFirst">
        <type>WORD</type>
      </field>
      <field offset="2" name="wSecond">
        <type>WORD</type>
      </field>
      <field offset="4" name="iKernAmount">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="KERNINGPAIR">
      <struct name="tagKERNINGPAIR" />
    </typedef>
    <typedef name="LPKERNINGPAIR">
      <ptr>
        <struct name="tagKERNINGPAIR" />
      </ptr>
    </typedef>
    <typedef name="ICMENUMPROCA">
      <ptr>
        <fn>
          <return>
            <prim domain="SignedInt" size="4" />
            <reg>eax</reg>
          </return>
          <arg>
            <type>LPSTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="ICMENUMPROCW">
      <ptr>
        <fn>
          <return>
            <prim domain="SignedInt" size="4" />
            <reg>eax</reg>
          </return>
          <arg>
            <type>LPWSTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="tagEMR">
      <field offset="0" name="iType">
        <type>DWORD</type>
      </field>
      <field offset="4" name="nSize">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="EMR">
      <struct name="tagEMR" />
    </typedef>
    <typedef name="PEMR">
      <ptr>
        <struct name="tagEMR" />
      </ptr>
    </typedef>
    <struct name="tagEMRTEXT">
      <field offset="0" name="ptlReference">
        <type>POINTL</type>
      </field>
      <field offset="8" name="nChars">
        <type>DWORD</type>
      </field>
      <field offset="12" name="offString">
        <type>DWORD</type>
      </field>
      <field offset="16" name="fOptions">
        <type>DWORD</type>
      </field>
      <field offset="24" name="rcl">
        <type>RECTL</type>
      </field>
      <field offset="40" name="offDx">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="EMRTEXT">
      <struct name="tagEMRTEXT" />
    </typedef>
    <typedef name="PEMRTEXT">
      <ptr>
        <struct name="tagEMRTEXT" />
      </ptr>
    </typedef>
    <struct name="tagABORTPATH">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
    </struct>
    <typedef name="EMRABORTPATH">
      <struct name="tagABORTPATH" />
    </typedef>
    <typedef name="PEMRABORTPATH">
      <ptr>
        <struct name="tagABORTPATH" />
      </ptr>
    </typedef>
    <typedef name="EMRBEGINPATH">
      <struct name="tagABORTPATH" />
    </typedef>
    <typedef name="PEMRBEGINPATH">
      <ptr>
        <struct name="tagABORTPATH" />
      </ptr>
    </typedef>
    <typedef name="EMRENDPATH">
      <struct name="tagABORTPATH" />
    </typedef>
    <typedef name="PEMRENDPATH">
      <ptr>
        <struct name="tagABORTPATH" />
      </ptr>
    </typedef>
    <typedef name="EMRCLOSEFIGURE">
      <struct name="tagABORTPATH" />
    </typedef>
    <typedef name="PEMRCLOSEFIGURE">
      <ptr>
        <struct name="tagABORTPATH" />
      </ptr>
    </typedef>
    <typedef name="EMRFLATTENPATH">
      <struct name="tagABORTPATH" />
    </typedef>
    <typedef name="PEMRFLATTENPATH">
      <ptr>
        <struct name="tagABORTPATH" />
      </ptr>
    </typedef>
    <typedef name="EMRWIDENPATH">
      <struct name="tagABORTPATH" />
    </typedef>
    <typedef name="PEMRWIDENPATH">
      <ptr>
        <struct name="tagABORTPATH" />
      </ptr>
    </typedef>
    <typedef name="EMRSETMETARGN">
      <struct name="tagABORTPATH" />
    </typedef>
    <typedef name="PEMRSETMETARGN">
      <ptr>
        <struct name="tagABORTPATH" />
      </ptr>
    </typedef>
    <typedef name="EMRSAVEDC">
      <struct name="tagABORTPATH" />
    </typedef>
    <typedef name="PEMRSAVEDC">
      <ptr>
        <struct name="tagABORTPATH" />
      </ptr>
    </typedef>
    <typedef name="EMRREALIZEPALETTE">
      <struct name="tagABORTPATH" />
    </typedef>
    <typedef name="PEMRREALIZEPALETTE">
      <ptr>
        <struct name="tagABORTPATH" />
      </ptr>
    </typedef>
    <struct name="tagEMRSELECTCLIPPATH">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="iMode">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="EMRSELECTCLIPPATH">
      <struct name="tagEMRSELECTCLIPPATH" />
    </typedef>
    <typedef name="PEMRSELECTCLIPPATH">
      <ptr>
        <struct name="tagEMRSELECTCLIPPATH" />
      </ptr>
    </typedef>
    <typedef name="EMRSETBKMODE">
      <struct name="tagEMRSELECTCLIPPATH" />
    </typedef>
    <typedef name="PEMRSETBKMODE">
      <ptr>
        <struct name="tagEMRSELECTCLIPPATH" />
      </ptr>
    </typedef>
    <typedef name="EMRSETMAPMODE">
      <struct name="tagEMRSELECTCLIPPATH" />
    </typedef>
    <typedef name="PEMRSETMAPMODE">
      <ptr>
        <struct name="tagEMRSELECTCLIPPATH" />
      </ptr>
    </typedef>
    <typedef name="EMRSETLAYOUT">
      <struct name="tagEMRSELECTCLIPPATH" />
    </typedef>
    <typedef name="PEMRSETLAYOUT">
      <ptr>
        <struct name="tagEMRSELECTCLIPPATH" />
      </ptr>
    </typedef>
    <typedef name="EMRSETPOLYFILLMODE">
      <struct name="tagEMRSELECTCLIPPATH" />
    </typedef>
    <typedef name="PEMRSETPOLYFILLMODE">
      <ptr>
        <struct name="tagEMRSELECTCLIPPATH" />
      </ptr>
    </typedef>
    <typedef name="EMRSETROP2">
      <struct name="tagEMRSELECTCLIPPATH" />
    </typedef>
    <typedef name="PEMRSETROP2">
      <ptr>
        <struct name="tagEMRSELECTCLIPPATH" />
      </ptr>
    </typedef>
    <typedef name="EMRSETSTRETCHBLTMODE">
      <struct name="tagEMRSELECTCLIPPATH" />
    </typedef>
    <typedef name="PEMRSETSTRETCHBLTMODE">
      <ptr>
        <struct name="tagEMRSELECTCLIPPATH" />
      </ptr>
    </typedef>
    <typedef name="EMRSETICMMODE">
      <struct name="tagEMRSELECTCLIPPATH" />
    </typedef>
    <typedef name="PEMRSETICMMODE">
      <ptr>
        <struct name="tagEMRSELECTCLIPPATH" />
      </ptr>
    </typedef>
    <typedef name="EMRSETTEXTALIGN">
      <struct name="tagEMRSELECTCLIPPATH" />
    </typedef>
    <typedef name="PEMRSETTEXTALIGN">
      <ptr>
        <struct name="tagEMRSELECTCLIPPATH" />
      </ptr>
    </typedef>
    <struct name="tagEMRSETMITERLIMIT">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="eMiterLimit">
        <type>FLOAT</type>
      </field>
    </struct>
    <typedef name="EMRSETMITERLIMIT">
      <struct name="tagEMRSETMITERLIMIT" />
    </typedef>
    <typedef name="PEMRSETMITERLIMIT">
      <ptr>
        <struct name="tagEMRSETMITERLIMIT" />
      </ptr>
    </typedef>
    <struct name="tagEMRRESTOREDC">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="iRelative">
        <type>LONG</type>
      </field>
    </struct>
    <typedef name="EMRRESTOREDC">
      <struct name="tagEMRRESTOREDC" />
    </typedef>
    <typedef name="PEMRRESTOREDC">
      <ptr>
        <struct name="tagEMRRESTOREDC" />
      </ptr>
    </typedef>
    <struct name="tagEMRSETARCDIRECTION">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="iArcDirection">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="EMRSETARCDIRECTION">
      <struct name="tagEMRSETARCDIRECTION" />
    </typedef>
    <typedef name="PEMRSETARCDIRECTION">
      <ptr>
        <struct name="tagEMRSETARCDIRECTION" />
      </ptr>
    </typedef>
    <struct name="tagEMRSETMAPPERFLAGS">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="dwFlags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="EMRSETMAPPERFLAGS">
      <struct name="tagEMRSETMAPPERFLAGS" />
    </typedef>
    <typedef name="PEMRSETMAPPERFLAGS">
      <ptr>
        <struct name="tagEMRSETMAPPERFLAGS" />
      </ptr>
    </typedef>
    <struct name="tagEMRSETTEXTCOLOR">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="crColor">
        <type>COLORREF</type>
      </field>
    </struct>
    <typedef name="EMRSETBKCOLOR">
      <struct name="tagEMRSETTEXTCOLOR" />
    </typedef>
    <typedef name="PEMRSETBKCOLOR">
      <ptr>
        <struct name="tagEMRSETTEXTCOLOR" />
      </ptr>
    </typedef>
    <typedef name="EMRSETTEXTCOLOR">
      <struct name="tagEMRSETTEXTCOLOR" />
    </typedef>
    <typedef name="PEMRSETTEXTCOLOR">
      <ptr>
        <struct name="tagEMRSETTEXTCOLOR" />
      </ptr>
    </typedef>
    <struct name="tagEMRSELECTOBJECT">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="ihObject">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="EMRSELECTOBJECT">
      <struct name="tagEMRSELECTOBJECT" />
    </typedef>
    <typedef name="PEMRSELECTOBJECT">
      <ptr>
        <struct name="tagEMRSELECTOBJECT" />
      </ptr>
    </typedef>
    <typedef name="EMRDELETEOBJECT">
      <struct name="tagEMRSELECTOBJECT" />
    </typedef>
    <typedef name="PEMRDELETEOBJECT">
      <ptr>
        <struct name="tagEMRSELECTOBJECT" />
      </ptr>
    </typedef>
    <struct name="tagEMRSELECTPALETTE">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="ihPal">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="EMRSELECTPALETTE">
      <struct name="tagEMRSELECTPALETTE" />
    </typedef>
    <typedef name="PEMRSELECTPALETTE">
      <ptr>
        <struct name="tagEMRSELECTPALETTE" />
      </ptr>
    </typedef>
    <struct name="tagEMRRESIZEPALETTE">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="ihPal">
        <type>DWORD</type>
      </field>
      <field offset="12" name="cEntries">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="EMRRESIZEPALETTE">
      <struct name="tagEMRRESIZEPALETTE" />
    </typedef>
    <typedef name="PEMRRESIZEPALETTE">
      <ptr>
        <struct name="tagEMRRESIZEPALETTE" />
      </ptr>
    </typedef>
    <struct name="tagEMRSETPALETTEENTRIES">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="ihPal">
        <type>DWORD</type>
      </field>
      <field offset="12" name="iStart">
        <type>DWORD</type>
      </field>
      <field offset="16" name="cEntries">
        <type>DWORD</type>
      </field>
      <field offset="20" name="aPalEntries">
        <arr length="1">
          <type>PALETTEENTRY</type>
        </arr>
      </field>
    </struct>
    <typedef name="EMRSETPALETTEENTRIES">
      <struct name="tagEMRSETPALETTEENTRIES" />
    </typedef>
    <typedef name="PEMRSETPALETTEENTRIES">
      <ptr>
        <struct name="tagEMRSETPALETTEENTRIES" />
      </ptr>
    </typedef>
    <struct name="tagEMRSETCOLORADJUSTMENT">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="ColorAdjustment">
        <type>COLORADJUSTMENT</type>
      </field>
    </struct>
    <typedef name="EMRSETCOLORADJUSTMENT">
      <struct name="tagEMRSETCOLORADJUSTMENT" />
    </typedef>
    <typedef name="PEMRSETCOLORADJUSTMENT">
      <ptr>
        <struct name="tagEMRSETCOLORADJUSTMENT" />
      </ptr>
    </typedef>
    <struct name="tagEMRGDICOMMENT">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="cbData">
        <type>DWORD</type>
      </field>
      <field offset="12" name="Data">
        <arr length="1">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="EMRGDICOMMENT">
      <struct name="tagEMRGDICOMMENT" />
    </typedef>
    <typedef name="PEMRGDICOMMENT">
      <ptr>
        <struct name="tagEMRGDICOMMENT" />
      </ptr>
    </typedef>
    <struct name="tagEMREOF">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="nPalEntries">
        <type>DWORD</type>
      </field>
      <field offset="12" name="offPalEntries">
        <type>DWORD</type>
      </field>
      <field offset="16" name="nSizeLast">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="EMREOF">
      <struct name="tagEMREOF" />
    </typedef>
    <typedef name="PEMREOF">
      <ptr>
        <struct name="tagEMREOF" />
      </ptr>
    </typedef>
    <struct name="tagEMRLINETO">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="ptl">
        <type>POINTL</type>
      </field>
    </struct>
    <typedef name="EMRLINETO">
      <struct name="tagEMRLINETO" />
    </typedef>
    <typedef name="PEMRLINETO">
      <ptr>
        <struct name="tagEMRLINETO" />
      </ptr>
    </typedef>
    <typedef name="EMRMOVETOEX">
      <struct name="tagEMRLINETO" />
    </typedef>
    <typedef name="PEMRMOVETOEX">
      <ptr>
        <struct name="tagEMRLINETO" />
      </ptr>
    </typedef>
    <struct name="tagEMROFFSETCLIPRGN">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="ptlOffset">
        <type>POINTL</type>
      </field>
    </struct>
    <typedef name="EMROFFSETCLIPRGN">
      <struct name="tagEMROFFSETCLIPRGN" />
    </typedef>
    <typedef name="PEMROFFSETCLIPRGN">
      <ptr>
        <struct name="tagEMROFFSETCLIPRGN" />
      </ptr>
    </typedef>
    <struct name="tagEMRFILLPATH">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="rclBounds">
        <type>RECTL</type>
      </field>
    </struct>
    <typedef name="EMRFILLPATH">
      <struct name="tagEMRFILLPATH" />
    </typedef>
    <typedef name="PEMRFILLPATH">
      <ptr>
        <struct name="tagEMRFILLPATH" />
      </ptr>
    </typedef>
    <typedef name="EMRSTROKEANDFILLPATH">
      <struct name="tagEMRFILLPATH" />
    </typedef>
    <typedef name="PEMRSTROKEANDFILLPATH">
      <ptr>
        <struct name="tagEMRFILLPATH" />
      </ptr>
    </typedef>
    <typedef name="EMRSTROKEPATH">
      <struct name="tagEMRFILLPATH" />
    </typedef>
    <typedef name="PEMRSTROKEPATH">
      <ptr>
        <struct name="tagEMRFILLPATH" />
      </ptr>
    </typedef>
    <struct name="tagEMREXCLUDECLIPRECT">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="rclClip">
        <type>RECTL</type>
      </field>
    </struct>
    <typedef name="EMREXCLUDECLIPRECT">
      <struct name="tagEMREXCLUDECLIPRECT" />
    </typedef>
    <typedef name="PEMREXCLUDECLIPRECT">
      <ptr>
        <struct name="tagEMREXCLUDECLIPRECT" />
      </ptr>
    </typedef>
    <typedef name="EMRINTERSECTCLIPRECT">
      <struct name="tagEMREXCLUDECLIPRECT" />
    </typedef>
    <typedef name="PEMRINTERSECTCLIPRECT">
      <ptr>
        <struct name="tagEMREXCLUDECLIPRECT" />
      </ptr>
    </typedef>
    <struct name="tagEMRSETVIEWPORTORGEX">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="ptlOrigin">
        <type>POINTL</type>
      </field>
    </struct>
    <typedef name="EMRSETVIEWPORTORGEX">
      <struct name="tagEMRSETVIEWPORTORGEX" />
    </typedef>
    <typedef name="PEMRSETVIEWPORTORGEX">
      <ptr>
        <struct name="tagEMRSETVIEWPORTORGEX" />
      </ptr>
    </typedef>
    <typedef name="EMRSETWINDOWORGEX">
      <struct name="tagEMRSETVIEWPORTORGEX" />
    </typedef>
    <typedef name="PEMRSETWINDOWORGEX">
      <ptr>
        <struct name="tagEMRSETVIEWPORTORGEX" />
      </ptr>
    </typedef>
    <typedef name="EMRSETBRUSHORGEX">
      <struct name="tagEMRSETVIEWPORTORGEX" />
    </typedef>
    <typedef name="PEMRSETBRUSHORGEX">
      <ptr>
        <struct name="tagEMRSETVIEWPORTORGEX" />
      </ptr>
    </typedef>
    <struct name="tagEMRSETVIEWPORTEXTEX">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="szlExtent">
        <type>SIZEL</type>
      </field>
    </struct>
    <typedef name="EMRSETVIEWPORTEXTEX">
      <struct name="tagEMRSETVIEWPORTEXTEX" />
    </typedef>
    <typedef name="PEMRSETVIEWPORTEXTEX">
      <ptr>
        <struct name="tagEMRSETVIEWPORTEXTEX" />
      </ptr>
    </typedef>
    <typedef name="EMRSETWINDOWEXTEX">
      <struct name="tagEMRSETVIEWPORTEXTEX" />
    </typedef>
    <typedef name="PEMRSETWINDOWEXTEX">
      <ptr>
        <struct name="tagEMRSETVIEWPORTEXTEX" />
      </ptr>
    </typedef>
    <struct name="tagEMRSCALEVIEWPORTEXTEX">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="xNum">
        <type>LONG</type>
      </field>
      <field offset="12" name="xDenom">
        <type>LONG</type>
      </field>
      <field offset="16" name="yNum">
        <type>LONG</type>
      </field>
      <field offset="20" name="yDenom">
        <type>LONG</type>
      </field>
    </struct>
    <typedef name="EMRSCALEVIEWPORTEXTEX">
      <struct name="tagEMRSCALEVIEWPORTEXTEX" />
    </typedef>
    <typedef name="PEMRSCALEVIEWPORTEXTEX">
      <ptr>
        <struct name="tagEMRSCALEVIEWPORTEXTEX" />
      </ptr>
    </typedef>
    <typedef name="EMRSCALEWINDOWEXTEX">
      <struct name="tagEMRSCALEVIEWPORTEXTEX" />
    </typedef>
    <typedef name="PEMRSCALEWINDOWEXTEX">
      <ptr>
        <struct name="tagEMRSCALEVIEWPORTEXTEX" />
      </ptr>
    </typedef>
    <struct name="tagEMRSETWORLDTRANSFORM">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="xform">
        <type>XFORM</type>
      </field>
    </struct>
    <typedef name="EMRSETWORLDTRANSFORM">
      <struct name="tagEMRSETWORLDTRANSFORM" />
    </typedef>
    <typedef name="PEMRSETWORLDTRANSFORM">
      <ptr>
        <struct name="tagEMRSETWORLDTRANSFORM" />
      </ptr>
    </typedef>
    <struct name="tagEMRMODIFYWORLDTRANSFORM">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="xform">
        <type>XFORM</type>
      </field>
      <field offset="32" name="iMode">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="EMRMODIFYWORLDTRANSFORM">
      <struct name="tagEMRMODIFYWORLDTRANSFORM" />
    </typedef>
    <typedef name="PEMRMODIFYWORLDTRANSFORM">
      <ptr>
        <struct name="tagEMRMODIFYWORLDTRANSFORM" />
      </ptr>
    </typedef>
    <struct name="tagEMRSETPIXELV">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="ptlPixel">
        <type>POINTL</type>
      </field>
      <field offset="16" name="crColor">
        <type>COLORREF</type>
      </field>
    </struct>
    <typedef name="EMRSETPIXELV">
      <struct name="tagEMRSETPIXELV" />
    </typedef>
    <typedef name="PEMRSETPIXELV">
      <ptr>
        <struct name="tagEMRSETPIXELV" />
      </ptr>
    </typedef>
    <struct name="tagEMREXTFLOODFILL">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="ptlStart">
        <type>POINTL</type>
      </field>
      <field offset="16" name="crColor">
        <type>COLORREF</type>
      </field>
      <field offset="20" name="iMode">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="EMREXTFLOODFILL">
      <struct name="tagEMREXTFLOODFILL" />
    </typedef>
    <typedef name="PEMREXTFLOODFILL">
      <ptr>
        <struct name="tagEMREXTFLOODFILL" />
      </ptr>
    </typedef>
    <struct name="tagEMRELLIPSE">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="rclBox">
        <type>RECTL</type>
      </field>
    </struct>
    <typedef name="EMRELLIPSE">
      <struct name="tagEMRELLIPSE" />
    </typedef>
    <typedef name="PEMRELLIPSE">
      <ptr>
        <struct name="tagEMRELLIPSE" />
      </ptr>
    </typedef>
    <typedef name="EMRRECTANGLE">
      <struct name="tagEMRELLIPSE" />
    </typedef>
    <typedef name="PEMRRECTANGLE">
      <ptr>
        <struct name="tagEMRELLIPSE" />
      </ptr>
    </typedef>
    <struct name="tagEMRROUNDRECT">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="rclBox">
        <type>RECTL</type>
      </field>
      <field offset="24" name="szlCorner">
        <type>SIZEL</type>
      </field>
    </struct>
    <typedef name="EMRROUNDRECT">
      <struct name="tagEMRROUNDRECT" />
    </typedef>
    <typedef name="PEMRROUNDRECT">
      <ptr>
        <struct name="tagEMRROUNDRECT" />
      </ptr>
    </typedef>
    <struct name="tagEMRARC">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="rclBox">
        <type>RECTL</type>
      </field>
      <field offset="24" name="ptlStart">
        <type>POINTL</type>
      </field>
      <field offset="32" name="ptlEnd">
        <type>POINTL</type>
      </field>
    </struct>
    <typedef name="EMRARC">
      <struct name="tagEMRARC" />
    </typedef>
    <typedef name="PEMRARC">
      <ptr>
        <struct name="tagEMRARC" />
      </ptr>
    </typedef>
    <typedef name="EMRARCTO">
      <struct name="tagEMRARC" />
    </typedef>
    <typedef name="PEMRARCTO">
      <ptr>
        <struct name="tagEMRARC" />
      </ptr>
    </typedef>
    <typedef name="EMRCHORD">
      <struct name="tagEMRARC" />
    </typedef>
    <typedef name="PEMRCHORD">
      <ptr>
        <struct name="tagEMRARC" />
      </ptr>
    </typedef>
    <typedef name="EMRPIE">
      <struct name="tagEMRARC" />
    </typedef>
    <typedef name="PEMRPIE">
      <ptr>
        <struct name="tagEMRARC" />
      </ptr>
    </typedef>
    <struct name="tagEMRANGLEARC">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="ptlCenter">
        <type>POINTL</type>
      </field>
      <field offset="16" name="nRadius">
        <type>DWORD</type>
      </field>
      <field offset="20" name="eStartAngle">
        <type>FLOAT</type>
      </field>
      <field offset="24" name="eSweepAngle">
        <type>FLOAT</type>
      </field>
    </struct>
    <typedef name="EMRANGLEARC">
      <struct name="tagEMRANGLEARC" />
    </typedef>
    <typedef name="PEMRANGLEARC">
      <ptr>
        <struct name="tagEMRANGLEARC" />
      </ptr>
    </typedef>
    <struct name="tagEMRPOLYLINE">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="rclBounds">
        <type>RECTL</type>
      </field>
      <field offset="24" name="cptl">
        <type>DWORD</type>
      </field>
      <field offset="32" name="aptl">
        <arr length="1">
          <type>POINTL</type>
        </arr>
      </field>
    </struct>
    <typedef name="EMRPOLYLINE">
      <struct name="tagEMRPOLYLINE" />
    </typedef>
    <typedef name="PEMRPOLYLINE">
      <ptr>
        <struct name="tagEMRPOLYLINE" />
      </ptr>
    </typedef>
    <typedef name="EMRPOLYBEZIER">
      <struct name="tagEMRPOLYLINE" />
    </typedef>
    <typedef name="PEMRPOLYBEZIER">
      <ptr>
        <struct name="tagEMRPOLYLINE" />
      </ptr>
    </typedef>
    <typedef name="EMRPOLYGON">
      <struct name="tagEMRPOLYLINE" />
    </typedef>
    <typedef name="PEMRPOLYGON">
      <ptr>
        <struct name="tagEMRPOLYLINE" />
      </ptr>
    </typedef>
    <typedef name="EMRPOLYBEZIERTO">
      <struct name="tagEMRPOLYLINE" />
    </typedef>
    <typedef name="PEMRPOLYBEZIERTO">
      <ptr>
        <struct name="tagEMRPOLYLINE" />
      </ptr>
    </typedef>
    <typedef name="EMRPOLYLINETO">
      <struct name="tagEMRPOLYLINE" />
    </typedef>
    <typedef name="PEMRPOLYLINETO">
      <ptr>
        <struct name="tagEMRPOLYLINE" />
      </ptr>
    </typedef>
    <struct name="tagEMRPOLYLINE16">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="rclBounds">
        <type>RECTL</type>
      </field>
      <field offset="24" name="cpts">
        <type>DWORD</type>
      </field>
      <field offset="28" name="apts">
        <arr length="1">
          <type>POINTS</type>
        </arr>
      </field>
    </struct>
    <typedef name="EMRPOLYLINE16">
      <struct name="tagEMRPOLYLINE16" />
    </typedef>
    <typedef name="PEMRPOLYLINE16">
      <ptr>
        <struct name="tagEMRPOLYLINE16" />
      </ptr>
    </typedef>
    <typedef name="EMRPOLYBEZIER16">
      <struct name="tagEMRPOLYLINE16" />
    </typedef>
    <typedef name="PEMRPOLYBEZIER16">
      <ptr>
        <struct name="tagEMRPOLYLINE16" />
      </ptr>
    </typedef>
    <typedef name="EMRPOLYGON16">
      <struct name="tagEMRPOLYLINE16" />
    </typedef>
    <typedef name="PEMRPOLYGON16">
      <ptr>
        <struct name="tagEMRPOLYLINE16" />
      </ptr>
    </typedef>
    <typedef name="EMRPOLYBEZIERTO16">
      <struct name="tagEMRPOLYLINE16" />
    </typedef>
    <typedef name="PEMRPOLYBEZIERTO16">
      <ptr>
        <struct name="tagEMRPOLYLINE16" />
      </ptr>
    </typedef>
    <typedef name="EMRPOLYLINETO16">
      <struct name="tagEMRPOLYLINE16" />
    </typedef>
    <typedef name="PEMRPOLYLINETO16">
      <ptr>
        <struct name="tagEMRPOLYLINE16" />
      </ptr>
    </typedef>
    <struct name="tagEMRPOLYDRAW">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="rclBounds">
        <type>RECTL</type>
      </field>
      <field offset="24" name="cptl">
        <type>DWORD</type>
      </field>
      <field offset="32" name="aptl">
        <arr length="1">
          <type>POINTL</type>
        </arr>
      </field>
      <field offset="40" name="abTypes">
        <arr length="1">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="EMRPOLYDRAW">
      <struct name="tagEMRPOLYDRAW" />
    </typedef>
    <typedef name="PEMRPOLYDRAW">
      <ptr>
        <struct name="tagEMRPOLYDRAW" />
      </ptr>
    </typedef>
    <struct name="tagEMRPOLYDRAW16">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="rclBounds">
        <type>RECTL</type>
      </field>
      <field offset="24" name="cpts">
        <type>DWORD</type>
      </field>
      <field offset="28" name="apts">
        <arr length="1">
          <type>POINTS</type>
        </arr>
      </field>
      <field offset="32" name="abTypes">
        <arr length="1">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="EMRPOLYDRAW16">
      <struct name="tagEMRPOLYDRAW16" />
    </typedef>
    <typedef name="PEMRPOLYDRAW16">
      <ptr>
        <struct name="tagEMRPOLYDRAW16" />
      </ptr>
    </typedef>
    <struct name="tagEMRPOLYPOLYLINE">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="rclBounds">
        <type>RECTL</type>
      </field>
      <field offset="24" name="nPolys">
        <type>DWORD</type>
      </field>
      <field offset="28" name="cptl">
        <type>DWORD</type>
      </field>
      <field offset="32" name="aPolyCounts">
        <arr length="1">
          <type>DWORD</type>
        </arr>
      </field>
      <field offset="40" name="aptl">
        <arr length="1">
          <type>POINTL</type>
        </arr>
      </field>
    </struct>
    <typedef name="EMRPOLYPOLYLINE">
      <struct name="tagEMRPOLYPOLYLINE" />
    </typedef>
    <typedef name="PEMRPOLYPOLYLINE">
      <ptr>
        <struct name="tagEMRPOLYPOLYLINE" />
      </ptr>
    </typedef>
    <typedef name="EMRPOLYPOLYGON">
      <struct name="tagEMRPOLYPOLYLINE" />
    </typedef>
    <typedef name="PEMRPOLYPOLYGON">
      <ptr>
        <struct name="tagEMRPOLYPOLYLINE" />
      </ptr>
    </typedef>
    <struct name="tagEMRPOLYPOLYLINE16">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="rclBounds">
        <type>RECTL</type>
      </field>
      <field offset="24" name="nPolys">
        <type>DWORD</type>
      </field>
      <field offset="28" name="cpts">
        <type>DWORD</type>
      </field>
      <field offset="32" name="aPolyCounts">
        <arr length="1">
          <type>DWORD</type>
        </arr>
      </field>
      <field offset="36" name="apts">
        <arr length="1">
          <type>POINTS</type>
        </arr>
      </field>
    </struct>
    <typedef name="EMRPOLYPOLYLINE16">
      <struct name="tagEMRPOLYPOLYLINE16" />
    </typedef>
    <typedef name="PEMRPOLYPOLYLINE16">
      <ptr>
        <struct name="tagEMRPOLYPOLYLINE16" />
      </ptr>
    </typedef>
    <typedef name="EMRPOLYPOLYGON16">
      <struct name="tagEMRPOLYPOLYLINE16" />
    </typedef>
    <typedef name="PEMRPOLYPOLYGON16">
      <ptr>
        <struct name="tagEMRPOLYPOLYLINE16" />
      </ptr>
    </typedef>
    <struct name="tagEMRINVERTRGN">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="rclBounds">
        <type>RECTL</type>
      </field>
      <field offset="24" name="cbRgnData">
        <type>DWORD</type>
      </field>
      <field offset="28" name="RgnData">
        <arr length="1">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="EMRINVERTRGN">
      <struct name="tagEMRINVERTRGN" />
    </typedef>
    <typedef name="PEMRINVERTRGN">
      <ptr>
        <struct name="tagEMRINVERTRGN" />
      </ptr>
    </typedef>
    <typedef name="EMRPAINTRGN">
      <struct name="tagEMRINVERTRGN" />
    </typedef>
    <typedef name="PEMRPAINTRGN">
      <ptr>
        <struct name="tagEMRINVERTRGN" />
      </ptr>
    </typedef>
    <struct name="tagEMRFILLRGN">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="rclBounds">
        <type>RECTL</type>
      </field>
      <field offset="24" name="cbRgnData">
        <type>DWORD</type>
      </field>
      <field offset="28" name="ihBrush">
        <type>DWORD</type>
      </field>
      <field offset="32" name="RgnData">
        <arr length="1">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="EMRFILLRGN">
      <struct name="tagEMRFILLRGN" />
    </typedef>
    <typedef name="PEMRFILLRGN">
      <ptr>
        <struct name="tagEMRFILLRGN" />
      </ptr>
    </typedef>
    <struct name="tagEMRFRAMERGN">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="rclBounds">
        <type>RECTL</type>
      </field>
      <field offset="24" name="cbRgnData">
        <type>DWORD</type>
      </field>
      <field offset="28" name="ihBrush">
        <type>DWORD</type>
      </field>
      <field offset="32" name="szlStroke">
        <type>SIZEL</type>
      </field>
      <field offset="40" name="RgnData">
        <arr length="1">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="EMRFRAMERGN">
      <struct name="tagEMRFRAMERGN" />
    </typedef>
    <typedef name="PEMRFRAMERGN">
      <ptr>
        <struct name="tagEMRFRAMERGN" />
      </ptr>
    </typedef>
    <struct name="tagEMREXTSELECTCLIPRGN">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="cbRgnData">
        <type>DWORD</type>
      </field>
      <field offset="12" name="iMode">
        <type>DWORD</type>
      </field>
      <field offset="16" name="RgnData">
        <arr length="1">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="EMREXTSELECTCLIPRGN">
      <struct name="tagEMREXTSELECTCLIPRGN" />
    </typedef>
    <typedef name="PEMREXTSELECTCLIPRGN">
      <ptr>
        <struct name="tagEMREXTSELECTCLIPRGN" />
      </ptr>
    </typedef>
    <struct name="tagEMREXTTEXTOUTA">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="rclBounds">
        <type>RECTL</type>
      </field>
      <field offset="24" name="iGraphicsMode">
        <type>DWORD</type>
      </field>
      <field offset="28" name="exScale">
        <type>FLOAT</type>
      </field>
      <field offset="32" name="eyScale">
        <type>FLOAT</type>
      </field>
      <field offset="40" name="emrtext">
        <type>EMRTEXT</type>
      </field>
    </struct>
    <typedef name="EMREXTTEXTOUTA">
      <struct name="tagEMREXTTEXTOUTA" />
    </typedef>
    <typedef name="PEMREXTTEXTOUTA">
      <ptr>
        <struct name="tagEMREXTTEXTOUTA" />
      </ptr>
    </typedef>
    <typedef name="EMREXTTEXTOUTW">
      <struct name="tagEMREXTTEXTOUTA" />
    </typedef>
    <typedef name="PEMREXTTEXTOUTW">
      <ptr>
        <struct name="tagEMREXTTEXTOUTA" />
      </ptr>
    </typedef>
    <struct name="tagEMRPOLYTEXTOUTA">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="rclBounds">
        <type>RECTL</type>
      </field>
      <field offset="24" name="iGraphicsMode">
        <type>DWORD</type>
      </field>
      <field offset="28" name="exScale">
        <type>FLOAT</type>
      </field>
      <field offset="32" name="eyScale">
        <type>FLOAT</type>
      </field>
      <field offset="36" name="cStrings">
        <type>LONG</type>
      </field>
      <field offset="40" name="aemrtext">
        <arr length="1">
          <type>EMRTEXT</type>
        </arr>
      </field>
    </struct>
    <typedef name="EMRPOLYTEXTOUTA">
      <struct name="tagEMRPOLYTEXTOUTA" />
    </typedef>
    <typedef name="PEMRPOLYTEXTOUTA">
      <ptr>
        <struct name="tagEMRPOLYTEXTOUTA" />
      </ptr>
    </typedef>
    <typedef name="EMRPOLYTEXTOUTW">
      <struct name="tagEMRPOLYTEXTOUTA" />
    </typedef>
    <typedef name="PEMRPOLYTEXTOUTW">
      <ptr>
        <struct name="tagEMRPOLYTEXTOUTA" />
      </ptr>
    </typedef>
    <struct name="tagEMRBITBLT">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="rclBounds">
        <type>RECTL</type>
      </field>
      <field offset="24" name="xDest">
        <type>LONG</type>
      </field>
      <field offset="28" name="yDest">
        <type>LONG</type>
      </field>
      <field offset="32" name="cxDest">
        <type>LONG</type>
      </field>
      <field offset="36" name="cyDest">
        <type>LONG</type>
      </field>
      <field offset="40" name="dwRop">
        <type>DWORD</type>
      </field>
      <field offset="44" name="xSrc">
        <type>LONG</type>
      </field>
      <field offset="48" name="ySrc">
        <type>LONG</type>
      </field>
      <field offset="56" name="xformSrc">
        <type>XFORM</type>
      </field>
      <field offset="80" name="crBkColorSrc">
        <type>COLORREF</type>
      </field>
      <field offset="84" name="iUsageSrc">
        <type>DWORD</type>
      </field>
      <field offset="88" name="offBmiSrc">
        <type>DWORD</type>
      </field>
      <field offset="92" name="cbBmiSrc">
        <type>DWORD</type>
      </field>
      <field offset="96" name="offBitsSrc">
        <type>DWORD</type>
      </field>
      <field offset="100" name="cbBitsSrc">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="EMRBITBLT">
      <struct name="tagEMRBITBLT" />
    </typedef>
    <typedef name="PEMRBITBLT">
      <ptr>
        <struct name="tagEMRBITBLT" />
      </ptr>
    </typedef>
    <struct name="tagEMRSTRETCHBLT">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="rclBounds">
        <type>RECTL</type>
      </field>
      <field offset="24" name="xDest">
        <type>LONG</type>
      </field>
      <field offset="28" name="yDest">
        <type>LONG</type>
      </field>
      <field offset="32" name="cxDest">
        <type>LONG</type>
      </field>
      <field offset="36" name="cyDest">
        <type>LONG</type>
      </field>
      <field offset="40" name="dwRop">
        <type>DWORD</type>
      </field>
      <field offset="44" name="xSrc">
        <type>LONG</type>
      </field>
      <field offset="48" name="ySrc">
        <type>LONG</type>
      </field>
      <field offset="56" name="xformSrc">
        <type>XFORM</type>
      </field>
      <field offset="80" name="crBkColorSrc">
        <type>COLORREF</type>
      </field>
      <field offset="84" name="iUsageSrc">
        <type>DWORD</type>
      </field>
      <field offset="88" name="offBmiSrc">
        <type>DWORD</type>
      </field>
      <field offset="92" name="cbBmiSrc">
        <type>DWORD</type>
      </field>
      <field offset="96" name="offBitsSrc">
        <type>DWORD</type>
      </field>
      <field offset="100" name="cbBitsSrc">
        <type>DWORD</type>
      </field>
      <field offset="104" name="cxSrc">
        <type>LONG</type>
      </field>
      <field offset="108" name="cySrc">
        <type>LONG</type>
      </field>
    </struct>
    <typedef name="EMRSTRETCHBLT">
      <struct name="tagEMRSTRETCHBLT" />
    </typedef>
    <typedef name="PEMRSTRETCHBLT">
      <ptr>
        <struct name="tagEMRSTRETCHBLT" />
      </ptr>
    </typedef>
    <struct name="tagEMRMASKBLT">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="rclBounds">
        <type>RECTL</type>
      </field>
      <field offset="24" name="xDest">
        <type>LONG</type>
      </field>
      <field offset="28" name="yDest">
        <type>LONG</type>
      </field>
      <field offset="32" name="cxDest">
        <type>LONG</type>
      </field>
      <field offset="36" name="cyDest">
        <type>LONG</type>
      </field>
      <field offset="40" name="dwRop">
        <type>DWORD</type>
      </field>
      <field offset="44" name="xSrc">
        <type>LONG</type>
      </field>
      <field offset="48" name="ySrc">
        <type>LONG</type>
      </field>
      <field offset="56" name="xformSrc">
        <type>XFORM</type>
      </field>
      <field offset="80" name="crBkColorSrc">
        <type>COLORREF</type>
      </field>
      <field offset="84" name="iUsageSrc">
        <type>DWORD</type>
      </field>
      <field offset="88" name="offBmiSrc">
        <type>DWORD</type>
      </field>
      <field offset="92" name="cbBmiSrc">
        <type>DWORD</type>
      </field>
      <field offset="96" name="offBitsSrc">
        <type>DWORD</type>
      </field>
      <field offset="100" name="cbBitsSrc">
        <type>DWORD</type>
      </field>
      <field offset="104" name="xMask">
        <type>LONG</type>
      </field>
      <field offset="108" name="yMask">
        <type>LONG</type>
      </field>
      <field offset="112" name="iUsageMask">
        <type>DWORD</type>
      </field>
      <field offset="116" name="offBmiMask">
        <type>DWORD</type>
      </field>
      <field offset="120" name="cbBmiMask">
        <type>DWORD</type>
      </field>
      <field offset="124" name="offBitsMask">
        <type>DWORD</type>
      </field>
      <field offset="128" name="cbBitsMask">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="EMRMASKBLT">
      <struct name="tagEMRMASKBLT" />
    </typedef>
    <typedef name="PEMRMASKBLT">
      <ptr>
        <struct name="tagEMRMASKBLT" />
      </ptr>
    </typedef>
    <struct name="tagEMRPLGBLT">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="rclBounds">
        <type>RECTL</type>
      </field>
      <field offset="24" name="aptlDest">
        <arr length="3">
          <type>POINTL</type>
        </arr>
      </field>
      <field offset="48" name="xSrc">
        <type>LONG</type>
      </field>
      <field offset="52" name="ySrc">
        <type>LONG</type>
      </field>
      <field offset="56" name="cxSrc">
        <type>LONG</type>
      </field>
      <field offset="60" name="cySrc">
        <type>LONG</type>
      </field>
      <field offset="64" name="xformSrc">
        <type>XFORM</type>
      </field>
      <field offset="88" name="crBkColorSrc">
        <type>COLORREF</type>
      </field>
      <field offset="92" name="iUsageSrc">
        <type>DWORD</type>
      </field>
      <field offset="96" name="offBmiSrc">
        <type>DWORD</type>
      </field>
      <field offset="100" name="cbBmiSrc">
        <type>DWORD</type>
      </field>
      <field offset="104" name="offBitsSrc">
        <type>DWORD</type>
      </field>
      <field offset="108" name="cbBitsSrc">
        <type>DWORD</type>
      </field>
      <field offset="112" name="xMask">
        <type>LONG</type>
      </field>
      <field offset="116" name="yMask">
        <type>LONG</type>
      </field>
      <field offset="120" name="iUsageMask">
        <type>DWORD</type>
      </field>
      <field offset="124" name="offBmiMask">
        <type>DWORD</type>
      </field>
      <field offset="128" name="cbBmiMask">
        <type>DWORD</type>
      </field>
      <field offset="132" name="offBitsMask">
        <type>DWORD</type>
      </field>
      <field offset="136" name="cbBitsMask">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="EMRPLGBLT">
      <struct name="tagEMRPLGBLT" />
    </typedef>
    <typedef name="PEMRPLGBLT">
      <ptr>
        <struct name="tagEMRPLGBLT" />
      </ptr>
    </typedef>
    <struct name="tagEMRSETDIBITSTODEVICE">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="rclBounds">
        <type>RECTL</type>
      </field>
      <field offset="24" name="xDest">
        <type>LONG</type>
      </field>
      <field offset="28" name="yDest">
        <type>LONG</type>
      </field>
      <field offset="32" name="xSrc">
        <type>LONG</type>
      </field>
      <field offset="36" name="ySrc">
        <type>LONG</type>
      </field>
      <field offset="40" name="cxSrc">
        <type>LONG</type>
      </field>
      <field offset="44" name="cySrc">
        <type>LONG</type>
      </field>
      <field offset="48" name="offBmiSrc">
        <type>DWORD</type>
      </field>
      <field offset="52" name="cbBmiSrc">
        <type>DWORD</type>
      </field>
      <field offset="56" name="offBitsSrc">
        <type>DWORD</type>
      </field>
      <field offset="60" name="cbBitsSrc">
        <type>DWORD</type>
      </field>
      <field offset="64" name="iUsageSrc">
        <type>DWORD</type>
      </field>
      <field offset="68" name="iStartScan">
        <type>DWORD</type>
      </field>
      <field offset="72" name="cScans">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="EMRSETDIBITSTODEVICE">
      <struct name="tagEMRSETDIBITSTODEVICE" />
    </typedef>
    <typedef name="PEMRSETDIBITSTODEVICE">
      <ptr>
        <struct name="tagEMRSETDIBITSTODEVICE" />
      </ptr>
    </typedef>
    <struct name="tagEMRSTRETCHDIBITS">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="rclBounds">
        <type>RECTL</type>
      </field>
      <field offset="24" name="xDest">
        <type>LONG</type>
      </field>
      <field offset="28" name="yDest">
        <type>LONG</type>
      </field>
      <field offset="32" name="xSrc">
        <type>LONG</type>
      </field>
      <field offset="36" name="ySrc">
        <type>LONG</type>
      </field>
      <field offset="40" name="cxSrc">
        <type>LONG</type>
      </field>
      <field offset="44" name="cySrc">
        <type>LONG</type>
      </field>
      <field offset="48" name="offBmiSrc">
        <type>DWORD</type>
      </field>
      <field offset="52" name="cbBmiSrc">
        <type>DWORD</type>
      </field>
      <field offset="56" name="offBitsSrc">
        <type>DWORD</type>
      </field>
      <field offset="60" name="cbBitsSrc">
        <type>DWORD</type>
      </field>
      <field offset="64" name="iUsageSrc">
        <type>DWORD</type>
      </field>
      <field offset="68" name="dwRop">
        <type>DWORD</type>
      </field>
      <field offset="72" name="cxDest">
        <type>LONG</type>
      </field>
      <field offset="76" name="cyDest">
        <type>LONG</type>
      </field>
    </struct>
    <typedef name="EMRSTRETCHDIBITS">
      <struct name="tagEMRSTRETCHDIBITS" />
    </typedef>
    <typedef name="PEMRSTRETCHDIBITS">
      <ptr>
        <struct name="tagEMRSTRETCHDIBITS" />
      </ptr>
    </typedef>
    <struct name="tagEMREXTCREATEFONTINDIRECTW">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="ihFont">
        <type>DWORD</type>
      </field>
      <field offset="16" name="elfw">
        <type>EXTLOGFONTW</type>
      </field>
    </struct>
    <typedef name="EMREXTCREATEFONTINDIRECTW">
      <struct name="tagEMREXTCREATEFONTINDIRECTW" />
    </typedef>
    <typedef name="PEMREXTCREATEFONTINDIRECTW">
      <ptr>
        <struct name="tagEMREXTCREATEFONTINDIRECTW" />
      </ptr>
    </typedef>
    <struct name="tagEMRCREATEPALETTE">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="ihPal">
        <type>DWORD</type>
      </field>
      <field offset="16" name="lgpl">
        <type>LOGPALETTE</type>
      </field>
    </struct>
    <typedef name="EMRCREATEPALETTE">
      <struct name="tagEMRCREATEPALETTE" />
    </typedef>
    <typedef name="PEMRCREATEPALETTE">
      <ptr>
        <struct name="tagEMRCREATEPALETTE" />
      </ptr>
    </typedef>
    <struct name="tagEMRCREATEPEN">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="ihPen">
        <type>DWORD</type>
      </field>
      <field offset="16" name="lopn">
        <type>LOGPEN</type>
      </field>
    </struct>
    <typedef name="EMRCREATEPEN">
      <struct name="tagEMRCREATEPEN" />
    </typedef>
    <typedef name="PEMRCREATEPEN">
      <ptr>
        <struct name="tagEMRCREATEPEN" />
      </ptr>
    </typedef>
    <struct name="tagEMREXTCREATEPEN">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="ihPen">
        <type>DWORD</type>
      </field>
      <field offset="12" name="offBmi">
        <type>DWORD</type>
      </field>
      <field offset="16" name="cbBmi">
        <type>DWORD</type>
      </field>
      <field offset="20" name="offBits">
        <type>DWORD</type>
      </field>
      <field offset="24" name="cbBits">
        <type>DWORD</type>
      </field>
      <field offset="32" name="elp">
        <type>EXTLOGPEN32</type>
      </field>
    </struct>
    <typedef name="EMREXTCREATEPEN">
      <struct name="tagEMREXTCREATEPEN" />
    </typedef>
    <typedef name="PEMREXTCREATEPEN">
      <ptr>
        <struct name="tagEMREXTCREATEPEN" />
      </ptr>
    </typedef>
    <struct name="tagEMRCREATEBRUSHINDIRECT">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="ihBrush">
        <type>DWORD</type>
      </field>
      <field offset="16" name="lb">
        <type>LOGBRUSH32</type>
      </field>
    </struct>
    <typedef name="EMRCREATEBRUSHINDIRECT">
      <struct name="tagEMRCREATEBRUSHINDIRECT" />
    </typedef>
    <typedef name="PEMRCREATEBRUSHINDIRECT">
      <ptr>
        <struct name="tagEMRCREATEBRUSHINDIRECT" />
      </ptr>
    </typedef>
    <struct name="tagEMRCREATEMONOBRUSH">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="ihBrush">
        <type>DWORD</type>
      </field>
      <field offset="12" name="iUsage">
        <type>DWORD</type>
      </field>
      <field offset="16" name="offBmi">
        <type>DWORD</type>
      </field>
      <field offset="20" name="cbBmi">
        <type>DWORD</type>
      </field>
      <field offset="24" name="offBits">
        <type>DWORD</type>
      </field>
      <field offset="28" name="cbBits">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="EMRCREATEMONOBRUSH">
      <struct name="tagEMRCREATEMONOBRUSH" />
    </typedef>
    <typedef name="PEMRCREATEMONOBRUSH">
      <ptr>
        <struct name="tagEMRCREATEMONOBRUSH" />
      </ptr>
    </typedef>
    <struct name="tagEMRCREATEDIBPATTERNBRUSHPT">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="ihBrush">
        <type>DWORD</type>
      </field>
      <field offset="12" name="iUsage">
        <type>DWORD</type>
      </field>
      <field offset="16" name="offBmi">
        <type>DWORD</type>
      </field>
      <field offset="20" name="cbBmi">
        <type>DWORD</type>
      </field>
      <field offset="24" name="offBits">
        <type>DWORD</type>
      </field>
      <field offset="28" name="cbBits">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="EMRCREATEDIBPATTERNBRUSHPT">
      <struct name="tagEMRCREATEDIBPATTERNBRUSHPT" />
    </typedef>
    <typedef name="PEMRCREATEDIBPATTERNBRUSHPT">
      <ptr>
        <struct name="tagEMRCREATEDIBPATTERNBRUSHPT" />
      </ptr>
    </typedef>
    <struct name="tagEMRFORMAT">
      <field offset="0" name="dSignature">
        <type>DWORD</type>
      </field>
      <field offset="4" name="nVersion">
        <type>DWORD</type>
      </field>
      <field offset="8" name="cbData">
        <type>DWORD</type>
      </field>
      <field offset="12" name="offData">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="EMRFORMAT">
      <struct name="tagEMRFORMAT" />
    </typedef>
    <typedef name="PEMRFORMAT">
      <ptr>
        <struct name="tagEMRFORMAT" />
      </ptr>
    </typedef>
    <struct name="tagEMRGLSRECORD">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="cbData">
        <type>DWORD</type>
      </field>
      <field offset="12" name="Data">
        <arr length="1">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="EMRGLSRECORD">
      <struct name="tagEMRGLSRECORD" />
    </typedef>
    <typedef name="PEMRGLSRECORD">
      <ptr>
        <struct name="tagEMRGLSRECORD" />
      </ptr>
    </typedef>
    <struct name="tagEMRGLSBOUNDEDRECORD">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="rclBounds">
        <type>RECTL</type>
      </field>
      <field offset="24" name="cbData">
        <type>DWORD</type>
      </field>
      <field offset="28" name="Data">
        <arr length="1">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="EMRGLSBOUNDEDRECORD">
      <struct name="tagEMRGLSBOUNDEDRECORD" />
    </typedef>
    <typedef name="PEMRGLSBOUNDEDRECORD">
      <ptr>
        <struct name="tagEMRGLSBOUNDEDRECORD" />
      </ptr>
    </typedef>
    <struct name="tagEMRPIXELFORMAT">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="pfd">
        <type>PIXELFORMATDESCRIPTOR</type>
      </field>
    </struct>
    <typedef name="EMRPIXELFORMAT">
      <struct name="tagEMRPIXELFORMAT" />
    </typedef>
    <typedef name="PEMRPIXELFORMAT">
      <ptr>
        <struct name="tagEMRPIXELFORMAT" />
      </ptr>
    </typedef>
    <struct name="tagEMRCREATECOLORSPACE">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="ihCS">
        <type>DWORD</type>
      </field>
      <field offset="16" name="lcs">
        <type>LOGCOLORSPACEA</type>
      </field>
    </struct>
    <typedef name="EMRCREATECOLORSPACE">
      <struct name="tagEMRCREATECOLORSPACE" />
    </typedef>
    <typedef name="PEMRCREATECOLORSPACE">
      <ptr>
        <struct name="tagEMRCREATECOLORSPACE" />
      </ptr>
    </typedef>
    <struct name="tagEMRSETCOLORSPACE">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="ihCS">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="EMRSETCOLORSPACE">
      <struct name="tagEMRSETCOLORSPACE" />
    </typedef>
    <typedef name="PEMRSETCOLORSPACE">
      <ptr>
        <struct name="tagEMRSETCOLORSPACE" />
      </ptr>
    </typedef>
    <typedef name="EMRSELECTCOLORSPACE">
      <struct name="tagEMRSETCOLORSPACE" />
    </typedef>
    <typedef name="PEMRSELECTCOLORSPACE">
      <ptr>
        <struct name="tagEMRSETCOLORSPACE" />
      </ptr>
    </typedef>
    <typedef name="EMRDELETECOLORSPACE">
      <struct name="tagEMRSETCOLORSPACE" />
    </typedef>
    <typedef name="PEMRDELETECOLORSPACE">
      <ptr>
        <struct name="tagEMRSETCOLORSPACE" />
      </ptr>
    </typedef>
    <struct name="tagEMREXTESCAPE">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="iEscape">
        <type>INT</type>
      </field>
      <field offset="12" name="cbEscData">
        <type>INT</type>
      </field>
      <field offset="16" name="EscData">
        <arr length="1">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="EMREXTESCAPE">
      <struct name="tagEMREXTESCAPE" />
    </typedef>
    <typedef name="PEMREXTESCAPE">
      <ptr>
        <struct name="tagEMREXTESCAPE" />
      </ptr>
    </typedef>
    <typedef name="EMRDRAWESCAPE">
      <struct name="tagEMREXTESCAPE" />
    </typedef>
    <typedef name="PEMRDRAWESCAPE">
      <ptr>
        <struct name="tagEMREXTESCAPE" />
      </ptr>
    </typedef>
    <struct name="tagEMRNAMEDESCAPE">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="iEscape">
        <type>INT</type>
      </field>
      <field offset="12" name="cbDriver">
        <type>INT</type>
      </field>
      <field offset="16" name="cbEscData">
        <type>INT</type>
      </field>
      <field offset="20" name="EscData">
        <arr length="1">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="EMRNAMEDESCAPE">
      <struct name="tagEMRNAMEDESCAPE" />
    </typedef>
    <typedef name="PEMRNAMEDESCAPE">
      <ptr>
        <struct name="tagEMRNAMEDESCAPE" />
      </ptr>
    </typedef>
    <struct name="tagEMRSETICMPROFILE">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="12" name="cbName">
        <type>DWORD</type>
      </field>
      <field offset="16" name="cbData">
        <type>DWORD</type>
      </field>
      <field offset="20" name="Data">
        <arr length="1">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="EMRSETICMPROFILE">
      <struct name="tagEMRSETICMPROFILE" />
    </typedef>
    <typedef name="PEMRSETICMPROFILE">
      <ptr>
        <struct name="tagEMRSETICMPROFILE" />
      </ptr>
    </typedef>
    <typedef name="EMRSETICMPROFILEA">
      <struct name="tagEMRSETICMPROFILE" />
    </typedef>
    <typedef name="PEMRSETICMPROFILEA">
      <ptr>
        <struct name="tagEMRSETICMPROFILE" />
      </ptr>
    </typedef>
    <typedef name="EMRSETICMPROFILEW">
      <struct name="tagEMRSETICMPROFILE" />
    </typedef>
    <typedef name="PEMRSETICMPROFILEW">
      <ptr>
        <struct name="tagEMRSETICMPROFILE" />
      </ptr>
    </typedef>
    <struct name="tagEMRCREATECOLORSPACEW">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="ihCS">
        <type>DWORD</type>
      </field>
      <field offset="16" name="lcs">
        <type>LOGCOLORSPACEW</type>
      </field>
      <field offset="604" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="608" name="cbData">
        <type>DWORD</type>
      </field>
      <field offset="612" name="Data">
        <arr length="1">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="EMRCREATECOLORSPACEW">
      <struct name="tagEMRCREATECOLORSPACEW" />
    </typedef>
    <typedef name="PEMRCREATECOLORSPACEW">
      <ptr>
        <struct name="tagEMRCREATECOLORSPACEW" />
      </ptr>
    </typedef>
    <struct name="tagCOLORMATCHTOTARGET">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="dwAction">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="16" name="cbName">
        <type>DWORD</type>
      </field>
      <field offset="20" name="cbData">
        <type>DWORD</type>
      </field>
      <field offset="24" name="Data">
        <arr length="1">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="EMRCOLORMATCHTOTARGET">
      <struct name="tagCOLORMATCHTOTARGET" />
    </typedef>
    <typedef name="PEMRCOLORMATCHTOTARGET">
      <ptr>
        <struct name="tagCOLORMATCHTOTARGET" />
      </ptr>
    </typedef>
    <struct name="tagCOLORCORRECTPALETTE">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="ihPalette">
        <type>DWORD</type>
      </field>
      <field offset="12" name="nFirstEntry">
        <type>DWORD</type>
      </field>
      <field offset="16" name="nPalEntries">
        <type>DWORD</type>
      </field>
      <field offset="20" name="nReserved">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="EMRCOLORCORRECTPALETTE">
      <struct name="tagCOLORCORRECTPALETTE" />
    </typedef>
    <typedef name="PEMRCOLORCORRECTPALETTE">
      <ptr>
        <struct name="tagCOLORCORRECTPALETTE" />
      </ptr>
    </typedef>
    <struct name="tagEMRALPHABLEND">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="rclBounds">
        <type>RECTL</type>
      </field>
      <field offset="24" name="xDest">
        <type>LONG</type>
      </field>
      <field offset="28" name="yDest">
        <type>LONG</type>
      </field>
      <field offset="32" name="cxDest">
        <type>LONG</type>
      </field>
      <field offset="36" name="cyDest">
        <type>LONG</type>
      </field>
      <field offset="40" name="dwRop">
        <type>DWORD</type>
      </field>
      <field offset="44" name="xSrc">
        <type>LONG</type>
      </field>
      <field offset="48" name="ySrc">
        <type>LONG</type>
      </field>
      <field offset="56" name="xformSrc">
        <type>XFORM</type>
      </field>
      <field offset="80" name="crBkColorSrc">
        <type>COLORREF</type>
      </field>
      <field offset="84" name="iUsageSrc">
        <type>DWORD</type>
      </field>
      <field offset="88" name="offBmiSrc">
        <type>DWORD</type>
      </field>
      <field offset="92" name="cbBmiSrc">
        <type>DWORD</type>
      </field>
      <field offset="96" name="offBitsSrc">
        <type>DWORD</type>
      </field>
      <field offset="100" name="cbBitsSrc">
        <type>DWORD</type>
      </field>
      <field offset="104" name="cxSrc">
        <type>LONG</type>
      </field>
      <field offset="108" name="cySrc">
        <type>LONG</type>
      </field>
    </struct>
    <typedef name="EMRALPHABLEND">
      <struct name="tagEMRALPHABLEND" />
    </typedef>
    <typedef name="PEMRALPHABLEND">
      <ptr>
        <struct name="tagEMRALPHABLEND" />
      </ptr>
    </typedef>
    <struct name="tagEMRGRADIENTFILL">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="rclBounds">
        <type>RECTL</type>
      </field>
      <field offset="24" name="nVer">
        <type>DWORD</type>
      </field>
      <field offset="28" name="nTri">
        <type>DWORD</type>
      </field>
      <field offset="32" name="ulMode">
        <type>ULONG</type>
      </field>
      <field offset="40" name="Ver">
        <arr length="1">
          <type>TRIVERTEX</type>
        </arr>
      </field>
    </struct>
    <typedef name="EMRGRADIENTFILL">
      <struct name="tagEMRGRADIENTFILL" />
    </typedef>
    <typedef name="PEMRGRADIENTFILL">
      <ptr>
        <struct name="tagEMRGRADIENTFILL" />
      </ptr>
    </typedef>
    <struct name="tagEMRTRANSPARENTBLT">
      <field offset="0" name="emr">
        <type>EMR</type>
      </field>
      <field offset="8" name="rclBounds">
        <type>RECTL</type>
      </field>
      <field offset="24" name="xDest">
        <type>LONG</type>
      </field>
      <field offset="28" name="yDest">
        <type>LONG</type>
      </field>
      <field offset="32" name="cxDest">
        <type>LONG</type>
      </field>
      <field offset="36" name="cyDest">
        <type>LONG</type>
      </field>
      <field offset="40" name="dwRop">
        <type>DWORD</type>
      </field>
      <field offset="44" name="xSrc">
        <type>LONG</type>
      </field>
      <field offset="48" name="ySrc">
        <type>LONG</type>
      </field>
      <field offset="56" name="xformSrc">
        <type>XFORM</type>
      </field>
      <field offset="80" name="crBkColorSrc">
        <type>COLORREF</type>
      </field>
      <field offset="84" name="iUsageSrc">
        <type>DWORD</type>
      </field>
      <field offset="88" name="offBmiSrc">
        <type>DWORD</type>
      </field>
      <field offset="92" name="cbBmiSrc">
        <type>DWORD</type>
      </field>
      <field offset="96" name="offBitsSrc">
        <type>DWORD</type>
      </field>
      <field offset="100" name="cbBitsSrc">
        <type>DWORD</type>
      </field>
      <field offset="104" name="cxSrc">
        <type>LONG</type>
      </field>
      <field offset="108" name="cySrc">
        <type>LONG</type>
      </field>
    </struct>
    <typedef name="EMRTRANSPARENTBLT">
      <struct name="tagEMRTRANSPARENTBLT" />
    </typedef>
    <typedef name="PEMRTRANSPARENTBLT">
      <ptr>
        <struct name="tagEMRTRANSPARENTBLT" />
      </ptr>
    </typedef>
    <struct name="_POINTFLOAT">
      <field offset="0" name="x">
        <type>FLOAT</type>
      </field>
      <field offset="4" name="y">
        <type>FLOAT</type>
      </field>
    </struct>
    <typedef name="POINTFLOAT">
      <struct name="_POINTFLOAT" />
    </typedef>
    <typedef name="PPOINTFLOAT">
      <ptr>
        <struct name="_POINTFLOAT" />
      </ptr>
    </typedef>
    <struct name="_GLYPHMETRICSFLOAT">
      <field offset="0" name="gmfBlackBoxX">
        <type>FLOAT</type>
      </field>
      <field offset="4" name="gmfBlackBoxY">
        <type>FLOAT</type>
      </field>
      <field offset="8" name="gmfptGlyphOrigin">
        <type>POINTFLOAT</type>
      </field>
      <field offset="16" name="gmfCellIncX">
        <type>FLOAT</type>
      </field>
      <field offset="20" name="gmfCellIncY">
        <type>FLOAT</type>
      </field>
    </struct>
    <typedef name="GLYPHMETRICSFLOAT">
      <struct name="_GLYPHMETRICSFLOAT" />
    </typedef>
    <typedef name="PGLYPHMETRICSFLOAT">
      <ptr>
        <struct name="_GLYPHMETRICSFLOAT" />
      </ptr>
    </typedef>
    <typedef name="LPGLYPHMETRICSFLOAT">
      <ptr>
        <struct name="_GLYPHMETRICSFLOAT" />
      </ptr>
    </typedef>
    <struct name="tagLAYERPLANEDESCRIPTOR">
      <field offset="0" name="nSize">
        <type>WORD</type>
      </field>
      <field offset="2" name="nVersion">
        <type>WORD</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="iPixelType">
        <type>BYTE</type>
      </field>
      <field offset="9" name="cColorBits">
        <type>BYTE</type>
      </field>
      <field offset="10" name="cRedBits">
        <type>BYTE</type>
      </field>
      <field offset="11" name="cRedShift">
        <type>BYTE</type>
      </field>
      <field offset="12" name="cGreenBits">
        <type>BYTE</type>
      </field>
      <field offset="13" name="cGreenShift">
        <type>BYTE</type>
      </field>
      <field offset="14" name="cBlueBits">
        <type>BYTE</type>
      </field>
      <field offset="15" name="cBlueShift">
        <type>BYTE</type>
      </field>
      <field offset="16" name="cAlphaBits">
        <type>BYTE</type>
      </field>
      <field offset="17" name="cAlphaShift">
        <type>BYTE</type>
      </field>
      <field offset="18" name="cAccumBits">
        <type>BYTE</type>
      </field>
      <field offset="19" name="cAccumRedBits">
        <type>BYTE</type>
      </field>
      <field offset="20" name="cAccumGreenBits">
        <type>BYTE</type>
      </field>
      <field offset="21" name="cAccumBlueBits">
        <type>BYTE</type>
      </field>
      <field offset="22" name="cAccumAlphaBits">
        <type>BYTE</type>
      </field>
      <field offset="23" name="cDepthBits">
        <type>BYTE</type>
      </field>
      <field offset="24" name="cStencilBits">
        <type>BYTE</type>
      </field>
      <field offset="25" name="cAuxBuffers">
        <type>BYTE</type>
      </field>
      <field offset="26" name="iLayerPlane">
        <type>BYTE</type>
      </field>
      <field offset="27" name="bReserved">
        <type>BYTE</type>
      </field>
      <field offset="28" name="crTransparent">
        <type>COLORREF</type>
      </field>
    </struct>
    <typedef name="LAYERPLANEDESCRIPTOR">
      <struct name="tagLAYERPLANEDESCRIPTOR" />
    </typedef>
    <typedef name="PLAYERPLANEDESCRIPTOR">
      <ptr>
        <struct name="tagLAYERPLANEDESCRIPTOR" />
      </ptr>
    </typedef>
    <typedef name="LPLAYERPLANEDESCRIPTOR">
      <ptr>
        <struct name="tagLAYERPLANEDESCRIPTOR" />
      </ptr>
    </typedef>
    <struct name="_WGLSWAP">
      <field offset="0" name="hdc">
        <type>HDC</type>
      </field>
      <field offset="4" name="uiFlags">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="WGLSWAP">
      <struct name="_WGLSWAP" />
    </typedef>
    <typedef name="PWGLSWAP">
      <ptr>
        <struct name="_WGLSWAP" />
      </ptr>
    </typedef>
    <typedef name="LPWGLSWAP">
      <ptr>
        <struct name="_WGLSWAP" />
      </ptr>
    </typedef>
    <typedef name="HDWP">
      <type>HANDLE</type>
    </typedef>
    <typedef name="MENUTEMPLATEA">
      <void />
    </typedef>
    <typedef name="MENUTEMPLATEW">
      <void />
    </typedef>
    <typedef name="MENUTEMPLATE">
      <type>MENUTEMPLATEA</type>
    </typedef>
    <typedef name="LPMENUTEMPLATEA">
      <type>PVOID</type>
    </typedef>
    <typedef name="LPMENUTEMPLATEW">
      <type>PVOID</type>
    </typedef>
    <typedef name="LPMENUTEMPLATE">
      <type>LPMENUTEMPLATEA</type>
    </typedef>
    <typedef name="WNDPROC">
      <ptr>
        <fn>
          <return>
            <type>LRESULT</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>HWND</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>UINT</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>WPARAM</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="DLGPROC">
      <ptr>
        <fn>
          <return>
            <type>INT_PTR</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>HWND</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>UINT</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>WPARAM</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="TIMERPROC">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg>
            <type>HWND</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>UINT</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>UINT_PTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>DWORD</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="GRAYSTRINGPROC">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>HDC</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
          <arg>
            <prim domain="SignedInt" size="4" />
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="WNDENUMPROC">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>HWND</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="HOOKPROC">
      <ptr>
        <fn>
          <return>
            <type>LRESULT</type>
            <reg>eax</reg>
          </return>
          <arg name="code">
            <prim domain="SignedInt" size="4" />
            <stack size="4" />
          </arg>
          <arg name="wParam">
            <type>WPARAM</type>
            <stack size="4" />
          </arg>
          <arg name="lParam">
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="SENDASYNCPROC">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg>
            <type>HWND</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>UINT</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>ULONG_PTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LRESULT</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PROPENUMPROCA">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>HWND</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPCSTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>HANDLE</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PROPENUMPROCW">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>HWND</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPCWSTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>HANDLE</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PROPENUMPROCEXA">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>HWND</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPSTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>HANDLE</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>ULONG_PTR</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PROPENUMPROCEXW">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>HWND</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPWSTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>HANDLE</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>ULONG_PTR</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="EDITWORDBREAKPROCA">
      <ptr>
        <fn>
          <return>
            <prim domain="SignedInt" size="4" />
            <reg>eax</reg>
          </return>
          <arg name="lpch">
            <type>LPSTR</type>
            <stack size="4" />
          </arg>
          <arg name="ichCurrent">
            <prim domain="SignedInt" size="4" />
            <stack size="4" />
          </arg>
          <arg name="cch">
            <prim domain="SignedInt" size="4" />
            <stack size="4" />
          </arg>
          <arg name="code">
            <prim domain="SignedInt" size="4" />
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="EDITWORDBREAKPROCW">
      <ptr>
        <fn>
          <return>
            <prim domain="SignedInt" size="4" />
            <reg>eax</reg>
          </return>
          <arg name="lpch">
            <type>LPWSTR</type>
            <stack size="4" />
          </arg>
          <arg name="ichCurrent">
            <prim domain="SignedInt" size="4" />
            <stack size="4" />
          </arg>
          <arg name="cch">
            <prim domain="SignedInt" size="4" />
            <stack size="4" />
          </arg>
          <arg name="code">
            <prim domain="SignedInt" size="4" />
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="DRAWSTATEPROC">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="hdc">
            <type>HDC</type>
            <stack size="4" />
          </arg>
          <arg name="lData">
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
          <arg name="wData">
            <type>WPARAM</type>
            <stack size="4" />
          </arg>
          <arg name="cx">
            <prim domain="SignedInt" size="4" />
            <stack size="4" />
          </arg>
          <arg name="cy">
            <prim domain="SignedInt" size="4" />
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PROPENUMPROC">
      <type>PROPENUMPROCA</type>
    </typedef>
    <typedef name="PROPENUMPROCEX">
      <type>PROPENUMPROCEXA</type>
    </typedef>
    <typedef name="EDITWORDBREAKPROC">
      <type>EDITWORDBREAKPROCA</type>
    </typedef>
    <typedef name="NAMEENUMPROCA">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>LPSTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="NAMEENUMPROCW">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>LPWSTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="WINSTAENUMPROCA">
      <type>NAMEENUMPROCA</type>
    </typedef>
    <typedef name="DESKTOPENUMPROCA">
      <type>NAMEENUMPROCA</type>
    </typedef>
    <typedef name="WINSTAENUMPROCW">
      <type>NAMEENUMPROCW</type>
    </typedef>
    <typedef name="DESKTOPENUMPROCW">
      <type>NAMEENUMPROCW</type>
    </typedef>
    <typedef name="WINSTAENUMPROC">
      <type>WINSTAENUMPROCA</type>
    </typedef>
    <typedef name="DESKTOPENUMPROC">
      <type>DESKTOPENUMPROCA</type>
    </typedef>
    <struct name="tagCBT_CREATEWNDA">
      <field offset="0" name="lpcs">
        <ptr>
          <struct name="tagCREATESTRUCTA" />
        </ptr>
      </field>
      <field offset="4" name="hwndInsertAfter">
        <type>HWND</type>
      </field>
    </struct>
    <typedef name="CBT_CREATEWNDA">
      <struct name="tagCBT_CREATEWNDA" />
    </typedef>
    <typedef name="LPCBT_CREATEWNDA">
      <ptr>
        <struct name="tagCBT_CREATEWNDA" />
      </ptr>
    </typedef>
    <struct name="tagCBT_CREATEWNDW">
      <field offset="0" name="lpcs">
        <ptr>
          <struct name="tagCREATESTRUCTW" />
        </ptr>
      </field>
      <field offset="4" name="hwndInsertAfter">
        <type>HWND</type>
      </field>
    </struct>
    <typedef name="CBT_CREATEWNDW">
      <struct name="tagCBT_CREATEWNDW" />
    </typedef>
    <typedef name="LPCBT_CREATEWNDW">
      <ptr>
        <struct name="tagCBT_CREATEWNDW" />
      </ptr>
    </typedef>
    <typedef name="CBT_CREATEWND">
      <type>CBT_CREATEWNDA</type>
    </typedef>
    <typedef name="LPCBT_CREATEWND">
      <type>LPCBT_CREATEWNDA</type>
    </typedef>
    <struct name="tagCBTACTIVATESTRUCT">
      <field offset="0" name="fMouse">
        <type>BOOL</type>
      </field>
      <field offset="4" name="hWndActive">
        <type>HWND</type>
      </field>
    </struct>
    <typedef name="CBTACTIVATESTRUCT">
      <struct name="tagCBTACTIVATESTRUCT" />
    </typedef>
    <typedef name="LPCBTACTIVATESTRUCT">
      <ptr>
        <struct name="tagCBTACTIVATESTRUCT" />
      </ptr>
    </typedef>
    <struct name="tagWTSSESSION_NOTIFICATION">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwSessionId">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="WTSSESSION_NOTIFICATION">
      <struct name="tagWTSSESSION_NOTIFICATION" />
    </typedef>
    <typedef name="PWTSSESSION_NOTIFICATION">
      <ptr>
        <struct name="tagWTSSESSION_NOTIFICATION" />
      </ptr>
    </typedef>
    <struct name="struct_76">
      <field offset="0" name="hwnd">
        <type>HWND</type>
      </field>
      <field offset="8" name="rc">
        <type>RECT</type>
      </field>
    </struct>
    <typedef name="SHELLHOOKINFO">
      <struct name="struct_76" />
    </typedef>
    <typedef name="LPSHELLHOOKINFO">
      <ptr>
        <struct name="struct_76" />
      </ptr>
    </typedef>
    <struct name="tagEVENTMSG">
      <field offset="0" name="message">
        <type>UINT</type>
      </field>
      <field offset="4" name="paramL">
        <type>UINT</type>
      </field>
      <field offset="8" name="paramH">
        <type>UINT</type>
      </field>
      <field offset="12" name="time">
        <type>DWORD</type>
      </field>
      <field offset="16" name="hwnd">
        <type>HWND</type>
      </field>
    </struct>
    <typedef name="EVENTMSG">
      <struct name="tagEVENTMSG" />
    </typedef>
    <typedef name="PEVENTMSGMSG">
      <ptr>
        <struct name="tagEVENTMSG" />
      </ptr>
    </typedef>
    <typedef name="NPEVENTMSGMSG">
      <ptr>
        <struct name="tagEVENTMSG" />
      </ptr>
    </typedef>
    <typedef name="LPEVENTMSGMSG">
      <ptr>
        <struct name="tagEVENTMSG" />
      </ptr>
    </typedef>
    <typedef name="PEVENTMSG">
      <ptr>
        <struct name="tagEVENTMSG" />
      </ptr>
    </typedef>
    <typedef name="NPEVENTMSG">
      <ptr>
        <struct name="tagEVENTMSG" />
      </ptr>
    </typedef>
    <typedef name="LPEVENTMSG">
      <ptr>
        <struct name="tagEVENTMSG" />
      </ptr>
    </typedef>
    <struct name="tagCWPSTRUCT">
      <field offset="0" name="lParam">
        <type>LPARAM</type>
      </field>
      <field offset="4" name="wParam">
        <type>WPARAM</type>
      </field>
      <field offset="8" name="message">
        <type>UINT</type>
      </field>
      <field offset="12" name="hwnd">
        <type>HWND</type>
      </field>
    </struct>
    <typedef name="CWPSTRUCT">
      <struct name="tagCWPSTRUCT" />
    </typedef>
    <typedef name="PCWPSTRUCT">
      <ptr>
        <struct name="tagCWPSTRUCT" />
      </ptr>
    </typedef>
    <typedef name="NPCWPSTRUCT">
      <ptr>
        <struct name="tagCWPSTRUCT" />
      </ptr>
    </typedef>
    <typedef name="LPCWPSTRUCT">
      <ptr>
        <struct name="tagCWPSTRUCT" />
      </ptr>
    </typedef>
    <struct name="tagCWPRETSTRUCT">
      <field offset="0" name="lResult">
        <type>LRESULT</type>
      </field>
      <field offset="4" name="lParam">
        <type>LPARAM</type>
      </field>
      <field offset="8" name="wParam">
        <type>WPARAM</type>
      </field>
      <field offset="12" name="message">
        <type>UINT</type>
      </field>
      <field offset="16" name="hwnd">
        <type>HWND</type>
      </field>
    </struct>
    <typedef name="CWPRETSTRUCT">
      <struct name="tagCWPRETSTRUCT" />
    </typedef>
    <typedef name="PCWPRETSTRUCT">
      <ptr>
        <struct name="tagCWPRETSTRUCT" />
      </ptr>
    </typedef>
    <typedef name="NPCWPRETSTRUCT">
      <ptr>
        <struct name="tagCWPRETSTRUCT" />
      </ptr>
    </typedef>
    <typedef name="LPCWPRETSTRUCT">
      <ptr>
        <struct name="tagCWPRETSTRUCT" />
      </ptr>
    </typedef>
    <struct name="tagKBDLLHOOKSTRUCT">
      <field offset="0" name="vkCode">
        <type>DWORD</type>
      </field>
      <field offset="4" name="scanCode">
        <type>DWORD</type>
      </field>
      <field offset="8" name="flags">
        <type>DWORD</type>
      </field>
      <field offset="12" name="time">
        <type>DWORD</type>
      </field>
      <field offset="16" name="dwExtraInfo">
        <type>ULONG_PTR</type>
      </field>
    </struct>
    <typedef name="KBDLLHOOKSTRUCT">
      <struct name="tagKBDLLHOOKSTRUCT" />
    </typedef>
    <typedef name="LPKBDLLHOOKSTRUCT">
      <ptr>
        <struct name="tagKBDLLHOOKSTRUCT" />
      </ptr>
    </typedef>
    <typedef name="PKBDLLHOOKSTRUCT">
      <ptr>
        <struct name="tagKBDLLHOOKSTRUCT" />
      </ptr>
    </typedef>
    <struct name="tagMSLLHOOKSTRUCT">
      <field offset="0" name="pt">
        <type>POINT</type>
      </field>
      <field offset="8" name="mouseData">
        <type>DWORD</type>
      </field>
      <field offset="12" name="flags">
        <type>DWORD</type>
      </field>
      <field offset="16" name="time">
        <type>DWORD</type>
      </field>
      <field offset="20" name="dwExtraInfo">
        <type>ULONG_PTR</type>
      </field>
    </struct>
    <typedef name="MSLLHOOKSTRUCT">
      <struct name="tagMSLLHOOKSTRUCT" />
    </typedef>
    <typedef name="LPMSLLHOOKSTRUCT">
      <ptr>
        <struct name="tagMSLLHOOKSTRUCT" />
      </ptr>
    </typedef>
    <typedef name="PMSLLHOOKSTRUCT">
      <ptr>
        <struct name="tagMSLLHOOKSTRUCT" />
      </ptr>
    </typedef>
    <struct name="tagDEBUGHOOKINFO">
      <field offset="0" name="idThread">
        <type>DWORD</type>
      </field>
      <field offset="4" name="idThreadInstaller">
        <type>DWORD</type>
      </field>
      <field offset="8" name="lParam">
        <type>LPARAM</type>
      </field>
      <field offset="12" name="wParam">
        <type>WPARAM</type>
      </field>
      <field offset="16" name="code">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="DEBUGHOOKINFO">
      <struct name="tagDEBUGHOOKINFO" />
    </typedef>
    <typedef name="PDEBUGHOOKINFO">
      <ptr>
        <struct name="tagDEBUGHOOKINFO" />
      </ptr>
    </typedef>
    <typedef name="NPDEBUGHOOKINFO">
      <ptr>
        <struct name="tagDEBUGHOOKINFO" />
      </ptr>
    </typedef>
    <typedef name="LPDEBUGHOOKINFO">
      <ptr>
        <struct name="tagDEBUGHOOKINFO" />
      </ptr>
    </typedef>
    <struct name="tagMOUSEHOOKSTRUCT">
      <field offset="0" name="pt">
        <type>POINT</type>
      </field>
      <field offset="8" name="hwnd">
        <type>HWND</type>
      </field>
      <field offset="12" name="wHitTestCode">
        <type>UINT</type>
      </field>
      <field offset="16" name="dwExtraInfo">
        <type>ULONG_PTR</type>
      </field>
    </struct>
    <typedef name="MOUSEHOOKSTRUCT">
      <struct name="tagMOUSEHOOKSTRUCT" />
    </typedef>
    <typedef name="LPMOUSEHOOKSTRUCT">
      <ptr>
        <struct name="tagMOUSEHOOKSTRUCT" />
      </ptr>
    </typedef>
    <typedef name="PMOUSEHOOKSTRUCT">
      <ptr>
        <struct name="tagMOUSEHOOKSTRUCT" />
      </ptr>
    </typedef>
    <struct name="tagMOUSEHOOKSTRUCTEX">
      <field offset="0">
        <type>MOUSEHOOKSTRUCT</type>
      </field>
      <field offset="20" name="mouseData">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="MOUSEHOOKSTRUCTEX">
      <struct name="tagMOUSEHOOKSTRUCTEX" />
    </typedef>
    <typedef name="LPMOUSEHOOKSTRUCTEX">
      <ptr>
        <struct name="tagMOUSEHOOKSTRUCTEX" />
      </ptr>
    </typedef>
    <typedef name="PMOUSEHOOKSTRUCTEX">
      <ptr>
        <struct name="tagMOUSEHOOKSTRUCTEX" />
      </ptr>
    </typedef>
    <struct name="tagHARDWAREHOOKSTRUCT">
      <field offset="0" name="hwnd">
        <type>HWND</type>
      </field>
      <field offset="4" name="message">
        <type>UINT</type>
      </field>
      <field offset="8" name="wParam">
        <type>WPARAM</type>
      </field>
      <field offset="12" name="lParam">
        <type>LPARAM</type>
      </field>
    </struct>
    <typedef name="HARDWAREHOOKSTRUCT">
      <struct name="tagHARDWAREHOOKSTRUCT" />
    </typedef>
    <typedef name="LPHARDWAREHOOKSTRUCT">
      <ptr>
        <struct name="tagHARDWAREHOOKSTRUCT" />
      </ptr>
    </typedef>
    <typedef name="PHARDWAREHOOKSTRUCT">
      <ptr>
        <struct name="tagHARDWAREHOOKSTRUCT" />
      </ptr>
    </typedef>
    <struct name="tagMOUSEMOVEPOINT">
      <field offset="0" name="x">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="4" name="y">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="time">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwExtraInfo">
        <type>ULONG_PTR</type>
      </field>
    </struct>
    <typedef name="MOUSEMOVEPOINT">
      <struct name="tagMOUSEMOVEPOINT" />
    </typedef>
    <typedef name="PMOUSEMOVEPOINT">
      <ptr>
        <struct name="tagMOUSEMOVEPOINT" />
      </ptr>
    </typedef>
    <typedef name="LPMOUSEMOVEPOINT">
      <ptr>
        <struct name="tagMOUSEMOVEPOINT" />
      </ptr>
    </typedef>
    <struct name="tagUSEROBJECTFLAGS">
      <field offset="0" name="fInherit">
        <type>BOOL</type>
      </field>
      <field offset="4" name="fReserved">
        <type>BOOL</type>
      </field>
      <field offset="8" name="dwFlags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="USEROBJECTFLAGS">
      <struct name="tagUSEROBJECTFLAGS" />
    </typedef>
    <typedef name="PUSEROBJECTFLAGS">
      <ptr>
        <struct name="tagUSEROBJECTFLAGS" />
      </ptr>
    </typedef>
    <struct name="tagWNDCLASSEXA">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="style">
        <type>UINT</type>
      </field>
      <field offset="8" name="lpfnWndProc">
        <type>WNDPROC</type>
      </field>
      <field offset="12" name="cbClsExtra">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="cbWndExtra">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="hInstance">
        <type>HINSTANCE</type>
      </field>
      <field offset="24" name="hIcon">
        <type>HICON</type>
      </field>
      <field offset="28" name="hCursor">
        <type>HCURSOR</type>
      </field>
      <field offset="32" name="hbrBackground">
        <type>HBRUSH</type>
      </field>
      <field offset="36" name="lpszMenuName">
        <type>LPCSTR</type>
      </field>
      <field offset="40" name="lpszClassName">
        <type>LPCSTR</type>
      </field>
      <field offset="44" name="hIconSm">
        <type>HICON</type>
      </field>
    </struct>
    <typedef name="WNDCLASSEXA">
      <struct name="tagWNDCLASSEXA" />
    </typedef>
    <typedef name="PWNDCLASSEXA">
      <ptr>
        <struct name="tagWNDCLASSEXA" />
      </ptr>
    </typedef>
    <typedef name="NPWNDCLASSEXA">
      <ptr>
        <struct name="tagWNDCLASSEXA" />
      </ptr>
    </typedef>
    <typedef name="LPWNDCLASSEXA">
      <ptr>
        <struct name="tagWNDCLASSEXA" />
      </ptr>
    </typedef>
    <struct name="tagWNDCLASSEXW">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="style">
        <type>UINT</type>
      </field>
      <field offset="8" name="lpfnWndProc">
        <type>WNDPROC</type>
      </field>
      <field offset="12" name="cbClsExtra">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="cbWndExtra">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="hInstance">
        <type>HINSTANCE</type>
      </field>
      <field offset="24" name="hIcon">
        <type>HICON</type>
      </field>
      <field offset="28" name="hCursor">
        <type>HCURSOR</type>
      </field>
      <field offset="32" name="hbrBackground">
        <type>HBRUSH</type>
      </field>
      <field offset="36" name="lpszMenuName">
        <type>LPCWSTR</type>
      </field>
      <field offset="40" name="lpszClassName">
        <type>LPCWSTR</type>
      </field>
      <field offset="44" name="hIconSm">
        <type>HICON</type>
      </field>
    </struct>
    <typedef name="WNDCLASSEXW">
      <struct name="tagWNDCLASSEXW" />
    </typedef>
    <typedef name="PWNDCLASSEXW">
      <ptr>
        <struct name="tagWNDCLASSEXW" />
      </ptr>
    </typedef>
    <typedef name="NPWNDCLASSEXW">
      <ptr>
        <struct name="tagWNDCLASSEXW" />
      </ptr>
    </typedef>
    <typedef name="LPWNDCLASSEXW">
      <ptr>
        <struct name="tagWNDCLASSEXW" />
      </ptr>
    </typedef>
    <typedef name="WNDCLASSEX">
      <type>WNDCLASSEXA</type>
    </typedef>
    <typedef name="PWNDCLASSEX">
      <type>PWNDCLASSEXA</type>
    </typedef>
    <typedef name="NPWNDCLASSEX">
      <type>NPWNDCLASSEXA</type>
    </typedef>
    <typedef name="LPWNDCLASSEX">
      <type>LPWNDCLASSEXA</type>
    </typedef>
    <struct name="tagWNDCLASSA">
      <field offset="0" name="style">
        <type>UINT</type>
      </field>
      <field offset="4" name="lpfnWndProc">
        <type>WNDPROC</type>
      </field>
      <field offset="8" name="cbClsExtra">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="12" name="cbWndExtra">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="hInstance">
        <type>HINSTANCE</type>
      </field>
      <field offset="20" name="hIcon">
        <type>HICON</type>
      </field>
      <field offset="24" name="hCursor">
        <type>HCURSOR</type>
      </field>
      <field offset="28" name="hbrBackground">
        <type>HBRUSH</type>
      </field>
      <field offset="32" name="lpszMenuName">
        <type>LPCSTR</type>
      </field>
      <field offset="36" name="lpszClassName">
        <type>LPCSTR</type>
      </field>
    </struct>
    <typedef name="WNDCLASSA">
      <struct name="tagWNDCLASSA" />
    </typedef>
    <typedef name="PWNDCLASSA">
      <ptr>
        <struct name="tagWNDCLASSA" />
      </ptr>
    </typedef>
    <typedef name="NPWNDCLASSA">
      <ptr>
        <struct name="tagWNDCLASSA" />
      </ptr>
    </typedef>
    <typedef name="LPWNDCLASSA">
      <ptr>
        <struct name="tagWNDCLASSA" />
      </ptr>
    </typedef>
    <struct name="tagWNDCLASSW">
      <field offset="0" name="style">
        <type>UINT</type>
      </field>
      <field offset="4" name="lpfnWndProc">
        <type>WNDPROC</type>
      </field>
      <field offset="8" name="cbClsExtra">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="12" name="cbWndExtra">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="hInstance">
        <type>HINSTANCE</type>
      </field>
      <field offset="20" name="hIcon">
        <type>HICON</type>
      </field>
      <field offset="24" name="hCursor">
        <type>HCURSOR</type>
      </field>
      <field offset="28" name="hbrBackground">
        <type>HBRUSH</type>
      </field>
      <field offset="32" name="lpszMenuName">
        <type>LPCWSTR</type>
      </field>
      <field offset="36" name="lpszClassName">
        <type>LPCWSTR</type>
      </field>
    </struct>
    <typedef name="WNDCLASSW">
      <struct name="tagWNDCLASSW" />
    </typedef>
    <typedef name="PWNDCLASSW">
      <ptr>
        <struct name="tagWNDCLASSW" />
      </ptr>
    </typedef>
    <typedef name="NPWNDCLASSW">
      <ptr>
        <struct name="tagWNDCLASSW" />
      </ptr>
    </typedef>
    <typedef name="LPWNDCLASSW">
      <ptr>
        <struct name="tagWNDCLASSW" />
      </ptr>
    </typedef>
    <typedef name="WNDCLASS">
      <type>WNDCLASSA</type>
    </typedef>
    <typedef name="PWNDCLASS">
      <type>PWNDCLASSA</type>
    </typedef>
    <typedef name="NPWNDCLASS">
      <type>NPWNDCLASSA</type>
    </typedef>
    <typedef name="LPWNDCLASS">
      <type>LPWNDCLASSA</type>
    </typedef>
    <struct name="tagMSG">
      <field offset="0" name="hwnd">
        <type>HWND</type>
      </field>
      <field offset="4" name="message">
        <type>UINT</type>
      </field>
      <field offset="8" name="wParam">
        <type>WPARAM</type>
      </field>
      <field offset="12" name="lParam">
        <type>LPARAM</type>
      </field>
      <field offset="16" name="time">
        <type>DWORD</type>
      </field>
      <field offset="24" name="pt">
        <type>POINT</type>
      </field>
    </struct>
    <typedef name="MSG">
      <struct name="tagMSG" />
    </typedef>
    <typedef name="PMSG">
      <ptr>
        <struct name="tagMSG" />
      </ptr>
    </typedef>
    <typedef name="NPMSG">
      <ptr>
        <struct name="tagMSG" />
      </ptr>
    </typedef>
    <typedef name="LPMSG">
      <ptr>
        <struct name="tagMSG" />
      </ptr>
    </typedef>
    <struct name="tagMINMAXINFO">
      <field offset="0" name="ptReserved">
        <type>POINT</type>
      </field>
      <field offset="8" name="ptMaxSize">
        <type>POINT</type>
      </field>
      <field offset="16" name="ptMaxPosition">
        <type>POINT</type>
      </field>
      <field offset="24" name="ptMinTrackSize">
        <type>POINT</type>
      </field>
      <field offset="32" name="ptMaxTrackSize">
        <type>POINT</type>
      </field>
    </struct>
    <typedef name="MINMAXINFO">
      <struct name="tagMINMAXINFO" />
    </typedef>
    <typedef name="PMINMAXINFO">
      <ptr>
        <struct name="tagMINMAXINFO" />
      </ptr>
    </typedef>
    <typedef name="LPMINMAXINFO">
      <ptr>
        <struct name="tagMINMAXINFO" />
      </ptr>
    </typedef>
    <struct name="tagCOPYDATASTRUCT">
      <field offset="0" name="dwData">
        <type>ULONG_PTR</type>
      </field>
      <field offset="4" name="cbData">
        <type>DWORD</type>
      </field>
      <field offset="8" name="lpData">
        <type>PVOID</type>
      </field>
    </struct>
    <typedef name="COPYDATASTRUCT">
      <struct name="tagCOPYDATASTRUCT" />
    </typedef>
    <typedef name="PCOPYDATASTRUCT">
      <ptr>
        <struct name="tagCOPYDATASTRUCT" />
      </ptr>
    </typedef>
    <struct name="tagMDINEXTMENU">
      <field offset="0" name="hmenuIn">
        <type>HMENU</type>
      </field>
      <field offset="4" name="hmenuNext">
        <type>HMENU</type>
      </field>
      <field offset="8" name="hwndNext">
        <type>HWND</type>
      </field>
    </struct>
    <typedef name="MDINEXTMENU">
      <struct name="tagMDINEXTMENU" />
    </typedef>
    <typedef name="PMDINEXTMENU">
      <ptr>
        <struct name="tagMDINEXTMENU" />
      </ptr>
    </typedef>
    <typedef name="LPMDINEXTMENU">
      <ptr>
        <struct name="tagMDINEXTMENU" />
      </ptr>
    </typedef>
    <struct name="struct_77">
      <field offset="0" name="PowerSetting">
        <type>GUID</type>
      </field>
      <field offset="16" name="DataLength">
        <type>DWORD</type>
      </field>
      <field offset="20" name="Data">
        <arr length="1">
          <type>UCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="POWERBROADCAST_SETTING">
      <struct name="struct_77" />
    </typedef>
    <typedef name="PPOWERBROADCAST_SETTING">
      <ptr>
        <struct name="struct_77" />
      </ptr>
    </typedef>
    <struct name="tagWINDOWPOS">
      <field offset="0" name="hwnd">
        <type>HWND</type>
      </field>
      <field offset="4" name="hwndInsertAfter">
        <type>HWND</type>
      </field>
      <field offset="8" name="x">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="12" name="y">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="cx">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="cy">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="24" name="flags">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="WINDOWPOS">
      <struct name="tagWINDOWPOS" />
    </typedef>
    <typedef name="LPWINDOWPOS">
      <ptr>
        <struct name="tagWINDOWPOS" />
      </ptr>
    </typedef>
    <typedef name="PWINDOWPOS">
      <ptr>
        <struct name="tagWINDOWPOS" />
      </ptr>
    </typedef>
    <struct name="tagNCCALCSIZE_PARAMS">
      <field offset="0" name="rgrc">
        <arr length="3">
          <type>RECT</type>
        </arr>
      </field>
      <field offset="48" name="lppos">
        <type>PWINDOWPOS</type>
      </field>
    </struct>
    <typedef name="NCCALCSIZE_PARAMS">
      <struct name="tagNCCALCSIZE_PARAMS" />
    </typedef>
    <typedef name="LPNCCALCSIZE_PARAMS">
      <ptr>
        <struct name="tagNCCALCSIZE_PARAMS" />
      </ptr>
    </typedef>
    <struct name="tagTRACKMOUSEEVENT">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="hwndTrack">
        <type>HWND</type>
      </field>
      <field offset="12" name="dwHoverTime">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="TRACKMOUSEEVENT">
      <struct name="tagTRACKMOUSEEVENT" />
    </typedef>
    <typedef name="LPTRACKMOUSEEVENT">
      <ptr>
        <struct name="tagTRACKMOUSEEVENT" />
      </ptr>
    </typedef>
    <struct name="tagACCEL">
      <field offset="0" name="fVirt">
        <type>BYTE</type>
      </field>
      <field offset="2" name="key">
        <type>WORD</type>
      </field>
      <field offset="4" name="cmd">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="ACCEL">
      <struct name="tagACCEL" />
    </typedef>
    <typedef name="LPACCEL">
      <ptr>
        <struct name="tagACCEL" />
      </ptr>
    </typedef>
    <struct name="tagPAINTSTRUCT">
      <field offset="0" name="hdc">
        <type>HDC</type>
      </field>
      <field offset="4" name="fErase">
        <type>BOOL</type>
      </field>
      <field offset="8" name="rcPaint">
        <type>RECT</type>
      </field>
      <field offset="24" name="fRestore">
        <type>BOOL</type>
      </field>
      <field offset="28" name="fIncUpdate">
        <type>BOOL</type>
      </field>
      <field offset="32" name="rgbReserved">
        <arr length="32">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="PAINTSTRUCT">
      <struct name="tagPAINTSTRUCT" />
    </typedef>
    <typedef name="PPAINTSTRUCT">
      <ptr>
        <struct name="tagPAINTSTRUCT" />
      </ptr>
    </typedef>
    <typedef name="NPPAINTSTRUCT">
      <ptr>
        <struct name="tagPAINTSTRUCT" />
      </ptr>
    </typedef>
    <typedef name="LPPAINTSTRUCT">
      <ptr>
        <struct name="tagPAINTSTRUCT" />
      </ptr>
    </typedef>
    <struct name="tagCREATESTRUCTA">
      <field offset="0" name="lpCreateParams">
        <type>LPVOID</type>
      </field>
      <field offset="4" name="hInstance">
        <type>HINSTANCE</type>
      </field>
      <field offset="8" name="hMenu">
        <type>HMENU</type>
      </field>
      <field offset="12" name="hwndParent">
        <type>HWND</type>
      </field>
      <field offset="16" name="cy">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="cx">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="24" name="y">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="28" name="x">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="32" name="style">
        <type>LONG</type>
      </field>
      <field offset="36" name="lpszName">
        <type>LPCSTR</type>
      </field>
      <field offset="40" name="lpszClass">
        <type>LPCSTR</type>
      </field>
      <field offset="44" name="dwExStyle">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CREATESTRUCTA">
      <struct name="tagCREATESTRUCTA" />
    </typedef>
    <typedef name="LPCREATESTRUCTA">
      <ptr>
        <struct name="tagCREATESTRUCTA" />
      </ptr>
    </typedef>
    <struct name="tagCREATESTRUCTW">
      <field offset="0" name="lpCreateParams">
        <type>LPVOID</type>
      </field>
      <field offset="4" name="hInstance">
        <type>HINSTANCE</type>
      </field>
      <field offset="8" name="hMenu">
        <type>HMENU</type>
      </field>
      <field offset="12" name="hwndParent">
        <type>HWND</type>
      </field>
      <field offset="16" name="cy">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="cx">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="24" name="y">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="28" name="x">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="32" name="style">
        <type>LONG</type>
      </field>
      <field offset="36" name="lpszName">
        <type>LPCWSTR</type>
      </field>
      <field offset="40" name="lpszClass">
        <type>LPCWSTR</type>
      </field>
      <field offset="44" name="dwExStyle">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CREATESTRUCTW">
      <struct name="tagCREATESTRUCTW" />
    </typedef>
    <typedef name="LPCREATESTRUCTW">
      <ptr>
        <struct name="tagCREATESTRUCTW" />
      </ptr>
    </typedef>
    <typedef name="CREATESTRUCT">
      <type>CREATESTRUCTA</type>
    </typedef>
    <typedef name="LPCREATESTRUCT">
      <type>LPCREATESTRUCTA</type>
    </typedef>
    <struct name="tagWINDOWPLACEMENT">
      <field offset="0" name="length">
        <type>UINT</type>
      </field>
      <field offset="4" name="flags">
        <type>UINT</type>
      </field>
      <field offset="8" name="showCmd">
        <type>UINT</type>
      </field>
      <field offset="16" name="ptMinPosition">
        <type>POINT</type>
      </field>
      <field offset="24" name="ptMaxPosition">
        <type>POINT</type>
      </field>
      <field offset="32" name="rcNormalPosition">
        <type>RECT</type>
      </field>
    </struct>
    <typedef name="WINDOWPLACEMENT">
      <struct name="tagWINDOWPLACEMENT" />
    </typedef>
    <typedef name="PWINDOWPLACEMENT">
      <ptr>
        <type>WINDOWPLACEMENT</type>
      </ptr>
    </typedef>
    <typedef name="LPWINDOWPLACEMENT">
      <ptr>
        <type>WINDOWPLACEMENT</type>
      </ptr>
    </typedef>
    <struct name="tagNMHDR">
      <field offset="0" name="hwndFrom">
        <type>HWND</type>
      </field>
      <field offset="4" name="idFrom">
        <type>UINT_PTR</type>
      </field>
      <field offset="8" name="code">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="NMHDR">
      <struct name="tagNMHDR" />
    </typedef>
    <typedef name="LPNMHDR">
      <ptr>
        <type>NMHDR</type>
      </ptr>
    </typedef>
    <struct name="tagSTYLESTRUCT">
      <field offset="0" name="styleOld">
        <type>DWORD</type>
      </field>
      <field offset="4" name="styleNew">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="STYLESTRUCT">
      <struct name="tagSTYLESTRUCT" />
    </typedef>
    <typedef name="LPSTYLESTRUCT">
      <ptr>
        <struct name="tagSTYLESTRUCT" />
      </ptr>
    </typedef>
    <struct name="tagMEASUREITEMSTRUCT">
      <field offset="0" name="CtlType">
        <type>UINT</type>
      </field>
      <field offset="4" name="CtlID">
        <type>UINT</type>
      </field>
      <field offset="8" name="itemID">
        <type>UINT</type>
      </field>
      <field offset="12" name="itemWidth">
        <type>UINT</type>
      </field>
      <field offset="16" name="itemHeight">
        <type>UINT</type>
      </field>
      <field offset="20" name="itemData">
        <type>ULONG_PTR</type>
      </field>
    </struct>
    <typedef name="MEASUREITEMSTRUCT">
      <struct name="tagMEASUREITEMSTRUCT" />
    </typedef>
    <typedef name="PMEASUREITEMSTRUCT">
      <ptr>
        <struct name="tagMEASUREITEMSTRUCT" />
      </ptr>
    </typedef>
    <typedef name="LPMEASUREITEMSTRUCT">
      <ptr>
        <struct name="tagMEASUREITEMSTRUCT" />
      </ptr>
    </typedef>
    <struct name="tagDRAWITEMSTRUCT">
      <field offset="0" name="CtlType">
        <type>UINT</type>
      </field>
      <field offset="4" name="CtlID">
        <type>UINT</type>
      </field>
      <field offset="8" name="itemID">
        <type>UINT</type>
      </field>
      <field offset="12" name="itemAction">
        <type>UINT</type>
      </field>
      <field offset="16" name="itemState">
        <type>UINT</type>
      </field>
      <field offset="20" name="hwndItem">
        <type>HWND</type>
      </field>
      <field offset="24" name="hDC">
        <type>HDC</type>
      </field>
      <field offset="32" name="rcItem">
        <type>RECT</type>
      </field>
      <field offset="48" name="itemData">
        <type>ULONG_PTR</type>
      </field>
    </struct>
    <typedef name="DRAWITEMSTRUCT">
      <struct name="tagDRAWITEMSTRUCT" />
    </typedef>
    <typedef name="PDRAWITEMSTRUCT">
      <ptr>
        <struct name="tagDRAWITEMSTRUCT" />
      </ptr>
    </typedef>
    <typedef name="LPDRAWITEMSTRUCT">
      <ptr>
        <struct name="tagDRAWITEMSTRUCT" />
      </ptr>
    </typedef>
    <struct name="tagDELETEITEMSTRUCT">
      <field offset="0" name="CtlType">
        <type>UINT</type>
      </field>
      <field offset="4" name="CtlID">
        <type>UINT</type>
      </field>
      <field offset="8" name="itemID">
        <type>UINT</type>
      </field>
      <field offset="12" name="hwndItem">
        <type>HWND</type>
      </field>
      <field offset="16" name="itemData">
        <type>ULONG_PTR</type>
      </field>
    </struct>
    <typedef name="DELETEITEMSTRUCT">
      <struct name="tagDELETEITEMSTRUCT" />
    </typedef>
    <typedef name="PDELETEITEMSTRUCT">
      <ptr>
        <struct name="tagDELETEITEMSTRUCT" />
      </ptr>
    </typedef>
    <typedef name="LPDELETEITEMSTRUCT">
      <ptr>
        <struct name="tagDELETEITEMSTRUCT" />
      </ptr>
    </typedef>
    <struct name="tagCOMPAREITEMSTRUCT">
      <field offset="0" name="CtlType">
        <type>UINT</type>
      </field>
      <field offset="4" name="CtlID">
        <type>UINT</type>
      </field>
      <field offset="8" name="hwndItem">
        <type>HWND</type>
      </field>
      <field offset="12" name="itemID1">
        <type>UINT</type>
      </field>
      <field offset="16" name="itemData1">
        <type>ULONG_PTR</type>
      </field>
      <field offset="20" name="itemID2">
        <type>UINT</type>
      </field>
      <field offset="24" name="itemData2">
        <type>ULONG_PTR</type>
      </field>
      <field offset="28" name="dwLocaleId">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="COMPAREITEMSTRUCT">
      <struct name="tagCOMPAREITEMSTRUCT" />
    </typedef>
    <typedef name="PCOMPAREITEMSTRUCT">
      <ptr>
        <struct name="tagCOMPAREITEMSTRUCT" />
      </ptr>
    </typedef>
    <typedef name="LPCOMPAREITEMSTRUCT">
      <ptr>
        <struct name="tagCOMPAREITEMSTRUCT" />
      </ptr>
    </typedef>
    <struct name="struct_78">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="hdesk">
        <type>HDESK</type>
      </field>
      <field offset="8" name="hwnd">
        <type>HWND</type>
      </field>
      <field offset="16" name="luid">
        <type>LUID</type>
      </field>
    </struct>
    <typedef name="BSMINFO">
      <struct name="struct_78" />
    </typedef>
    <typedef name="PBSMINFO">
      <ptr>
        <struct name="struct_78" />
      </ptr>
    </typedef>
    <typedef name="HDEVNOTIFY">
      <type>PVOID</type>
    </typedef>
    <typedef name="PHDEVNOTIFY">
      <ptr>
        <type>HDEVNOTIFY</type>
      </ptr>
    </typedef>
    <typedef name="HPOWERNOTIFY">
      <type>PVOID</type>
    </typedef>
    <typedef name="PHPOWERNOTIFY">
      <ptr>
        <type>HPOWERNOTIFY</type>
      </ptr>
    </typedef>
    <typedef name="PREGISTERCLASSNAMEW">
      <ptr>
        <fn>
          <return>
            <type>BOOLEAN</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>LPCWSTR</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="tagUPDATELAYEREDWINDOWINFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="hdcDst">
        <type>HDC</type>
      </field>
      <field offset="8" name="pptDst">
        <ptr>
          <type>POINT</type>
        </ptr>
      </field>
      <field offset="12" name="psize">
        <ptr>
          <type>SIZE</type>
        </ptr>
      </field>
      <field offset="16" name="hdcSrc">
        <type>HDC</type>
      </field>
      <field offset="20" name="pptSrc">
        <ptr>
          <type>POINT</type>
        </ptr>
      </field>
      <field offset="24" name="crKey">
        <type>COLORREF</type>
      </field>
      <field offset="28" name="pblend">
        <ptr>
          <type>BLENDFUNCTION</type>
        </ptr>
      </field>
      <field offset="32" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="36" name="prcDirty">
        <ptr>
          <type>RECT</type>
        </ptr>
      </field>
    </struct>
    <typedef name="UPDATELAYEREDWINDOWINFO">
      <struct name="tagUPDATELAYEREDWINDOWINFO" />
    </typedef>
    <typedef name="PUPDATELAYEREDWINDOWINFO">
      <ptr>
        <struct name="tagUPDATELAYEREDWINDOWINFO" />
      </ptr>
    </typedef>
    <struct name="struct_79">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="hwnd">
        <type>HWND</type>
      </field>
      <field offset="8" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="12" name="uCount">
        <type>UINT</type>
      </field>
      <field offset="16" name="dwTimeout">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="FLASHWINFO">
      <struct name="struct_79" />
    </typedef>
    <typedef name="PFLASHWINFO">
      <ptr>
        <struct name="struct_79" />
      </ptr>
    </typedef>
    <struct name="struct_80">
      <field offset="0" name="style">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwExtendedStyle">
        <type>DWORD</type>
      </field>
      <field offset="8" name="cdit">
        <type>WORD</type>
      </field>
      <field offset="10" name="x">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="12" name="y">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="14" name="cx">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="16" name="cy">
        <prim domain="SignedInt" size="2" />
      </field>
    </struct>
    <typedef name="DLGTEMPLATE">
      <struct name="struct_80" />
    </typedef>
    <typedef name="LPDLGTEMPLATEA">
      <ptr>
        <type>DLGTEMPLATE</type>
      </ptr>
    </typedef>
    <typedef name="LPDLGTEMPLATEW">
      <ptr>
        <type>DLGTEMPLATE</type>
      </ptr>
    </typedef>
    <typedef name="LPDLGTEMPLATE">
      <type>LPDLGTEMPLATEA</type>
    </typedef>
    <typedef name="LPCDLGTEMPLATEA">
      <ptr>
        <type>DLGTEMPLATE</type>
      </ptr>
    </typedef>
    <typedef name="LPCDLGTEMPLATEW">
      <ptr>
        <type>DLGTEMPLATE</type>
      </ptr>
    </typedef>
    <typedef name="LPCDLGTEMPLATE">
      <type>LPCDLGTEMPLATEA</type>
    </typedef>
    <struct name="struct_81">
      <field offset="0" name="style">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwExtendedStyle">
        <type>DWORD</type>
      </field>
      <field offset="8" name="x">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="10" name="y">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="12" name="cx">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="14" name="cy">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="16" name="id">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="DLGITEMTEMPLATE">
      <struct name="struct_81" />
    </typedef>
    <typedef name="PDLGITEMTEMPLATEA">
      <ptr>
        <type>DLGITEMTEMPLATE</type>
      </ptr>
    </typedef>
    <typedef name="PDLGITEMTEMPLATEW">
      <ptr>
        <type>DLGITEMTEMPLATE</type>
      </ptr>
    </typedef>
    <typedef name="PDLGITEMTEMPLATE">
      <type>PDLGITEMTEMPLATEA</type>
    </typedef>
    <typedef name="LPDLGITEMTEMPLATEA">
      <ptr>
        <type>DLGITEMTEMPLATE</type>
      </ptr>
    </typedef>
    <typedef name="LPDLGITEMTEMPLATEW">
      <ptr>
        <type>DLGITEMTEMPLATE</type>
      </ptr>
    </typedef>
    <typedef name="LPDLGITEMTEMPLATE">
      <type>LPDLGITEMTEMPLATEA</type>
    </typedef>
    <struct name="tagMOUSEINPUT">
      <field offset="0" name="dx">
        <type>LONG</type>
      </field>
      <field offset="4" name="dy">
        <type>LONG</type>
      </field>
      <field offset="8" name="mouseData">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="16" name="time">
        <type>DWORD</type>
      </field>
      <field offset="20" name="dwExtraInfo">
        <type>ULONG_PTR</type>
      </field>
    </struct>
    <typedef name="MOUSEINPUT">
      <struct name="tagMOUSEINPUT" />
    </typedef>
    <typedef name="PMOUSEINPUT">
      <ptr>
        <struct name="tagMOUSEINPUT" />
      </ptr>
    </typedef>
    <typedef name="LPMOUSEINPUT">
      <ptr>
        <struct name="tagMOUSEINPUT" />
      </ptr>
    </typedef>
    <struct name="tagKEYBDINPUT">
      <field offset="0" name="wVk">
        <type>WORD</type>
      </field>
      <field offset="2" name="wScan">
        <type>WORD</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="time">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwExtraInfo">
        <type>ULONG_PTR</type>
      </field>
    </struct>
    <typedef name="KEYBDINPUT">
      <struct name="tagKEYBDINPUT" />
    </typedef>
    <typedef name="PKEYBDINPUT">
      <ptr>
        <struct name="tagKEYBDINPUT" />
      </ptr>
    </typedef>
    <typedef name="LPKEYBDINPUT">
      <ptr>
        <struct name="tagKEYBDINPUT" />
      </ptr>
    </typedef>
    <struct name="tagHARDWAREINPUT">
      <field offset="0" name="uMsg">
        <type>DWORD</type>
      </field>
      <field offset="4" name="wParamL">
        <type>WORD</type>
      </field>
      <field offset="6" name="wParamH">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="HARDWAREINPUT">
      <struct name="tagHARDWAREINPUT" />
    </typedef>
    <typedef name="PHARDWAREINPUT">
      <ptr>
        <struct name="tagHARDWAREINPUT" />
      </ptr>
    </typedef>
    <typedef name="LPHARDWAREINPUT">
      <ptr>
        <struct name="tagHARDWAREINPUT" />
      </ptr>
    </typedef>
    <struct name="tagINPUT">
      <field offset="0" name="type">
        <type>DWORD</type>
      </field>
      <field offset="8">
        <union>
          <alt name="mi">
            <type>MOUSEINPUT</type>
          </alt>
          <alt name="ki">
            <type>KEYBDINPUT</type>
          </alt>
          <alt name="hi">
            <type>HARDWAREINPUT</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="INPUT">
      <struct name="tagINPUT" />
    </typedef>
    <typedef name="PINPUT">
      <ptr>
        <struct name="tagINPUT" />
      </ptr>
    </typedef>
    <typedef name="LPINPUT">
      <ptr>
        <struct name="tagINPUT" />
      </ptr>
    </typedef>
    <struct name="HTOUCHINPUT__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HTOUCHINPUT">
      <ptr>
        <struct name="HTOUCHINPUT__" />
      </ptr>
    </typedef>
    <struct name="tagTOUCHINPUT">
      <field offset="0" name="x">
        <type>LONG</type>
      </field>
      <field offset="4" name="y">
        <type>LONG</type>
      </field>
      <field offset="8" name="hSource">
        <type>HANDLE</type>
      </field>
      <field offset="12" name="dwID">
        <type>DWORD</type>
      </field>
      <field offset="16" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="20" name="dwMask">
        <type>DWORD</type>
      </field>
      <field offset="24" name="dwTime">
        <type>DWORD</type>
      </field>
      <field offset="28" name="dwExtraInfo">
        <type>ULONG_PTR</type>
      </field>
      <field offset="32" name="cxContact">
        <type>DWORD</type>
      </field>
      <field offset="36" name="cyContact">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="TOUCHINPUT">
      <struct name="tagTOUCHINPUT" />
    </typedef>
    <typedef name="PTOUCHINPUT">
      <ptr>
        <struct name="tagTOUCHINPUT" />
      </ptr>
    </typedef>
    <typedef name="PCTOUCHINPUT">
      <ptr>
        <type>TOUCHINPUT</type>
      </ptr>
    </typedef>
    <struct name="tagLASTINPUTINFO">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="dwTime">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="LASTINPUTINFO">
      <struct name="tagLASTINPUTINFO" />
    </typedef>
    <typedef name="PLASTINPUTINFO">
      <ptr>
        <struct name="tagLASTINPUTINFO" />
      </ptr>
    </typedef>
    <struct name="tagTPMPARAMS">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="8" name="rcExclude">
        <type>RECT</type>
      </field>
    </struct>
    <typedef name="TPMPARAMS">
      <struct name="tagTPMPARAMS" />
    </typedef>
    <typedef name="LPTPMPARAMS">
      <ptr>
        <type>TPMPARAMS</type>
      </ptr>
    </typedef>
    <struct name="tagMENUINFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="fMask">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwStyle">
        <type>DWORD</type>
      </field>
      <field offset="12" name="cyMax">
        <type>UINT</type>
      </field>
      <field offset="16" name="hbrBack">
        <type>HBRUSH</type>
      </field>
      <field offset="20" name="dwContextHelpID">
        <type>DWORD</type>
      </field>
      <field offset="24" name="dwMenuData">
        <type>ULONG_PTR</type>
      </field>
    </struct>
    <typedef name="MENUINFO">
      <struct name="tagMENUINFO" />
    </typedef>
    <typedef name="LPMENUINFO">
      <ptr>
        <struct name="tagMENUINFO" />
      </ptr>
    </typedef>
    <typedef name="LPCMENUINFO">
      <ptr>
        <type>MENUINFO</type>
      </ptr>
    </typedef>
    <struct name="tagMENUGETOBJECTINFO">
      <field offset="0" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="4" name="uPos">
        <type>UINT</type>
      </field>
      <field offset="8" name="hmenu">
        <type>HMENU</type>
      </field>
      <field offset="12" name="riid">
        <type>PVOID</type>
      </field>
      <field offset="16" name="pvObj">
        <type>PVOID</type>
      </field>
    </struct>
    <typedef name="MENUGETOBJECTINFO">
      <struct name="tagMENUGETOBJECTINFO" />
    </typedef>
    <typedef name="PMENUGETOBJECTINFO">
      <ptr>
        <struct name="tagMENUGETOBJECTINFO" />
      </ptr>
    </typedef>
    <struct name="tagMENUITEMINFOA">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="fMask">
        <type>UINT</type>
      </field>
      <field offset="8" name="fType">
        <type>UINT</type>
      </field>
      <field offset="12" name="fState">
        <type>UINT</type>
      </field>
      <field offset="16" name="wID">
        <type>UINT</type>
      </field>
      <field offset="20" name="hSubMenu">
        <type>HMENU</type>
      </field>
      <field offset="24" name="hbmpChecked">
        <type>HBITMAP</type>
      </field>
      <field offset="28" name="hbmpUnchecked">
        <type>HBITMAP</type>
      </field>
      <field offset="32" name="dwItemData">
        <type>ULONG_PTR</type>
      </field>
      <field offset="36" name="dwTypeData">
        <type>LPSTR</type>
      </field>
      <field offset="40" name="cch">
        <type>UINT</type>
      </field>
      <field offset="44" name="hbmpItem">
        <type>HBITMAP</type>
      </field>
    </struct>
    <typedef name="MENUITEMINFOA">
      <struct name="tagMENUITEMINFOA" />
    </typedef>
    <typedef name="LPMENUITEMINFOA">
      <ptr>
        <struct name="tagMENUITEMINFOA" />
      </ptr>
    </typedef>
    <struct name="tagMENUITEMINFOW">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="fMask">
        <type>UINT</type>
      </field>
      <field offset="8" name="fType">
        <type>UINT</type>
      </field>
      <field offset="12" name="fState">
        <type>UINT</type>
      </field>
      <field offset="16" name="wID">
        <type>UINT</type>
      </field>
      <field offset="20" name="hSubMenu">
        <type>HMENU</type>
      </field>
      <field offset="24" name="hbmpChecked">
        <type>HBITMAP</type>
      </field>
      <field offset="28" name="hbmpUnchecked">
        <type>HBITMAP</type>
      </field>
      <field offset="32" name="dwItemData">
        <type>ULONG_PTR</type>
      </field>
      <field offset="36" name="dwTypeData">
        <type>LPWSTR</type>
      </field>
      <field offset="40" name="cch">
        <type>UINT</type>
      </field>
      <field offset="44" name="hbmpItem">
        <type>HBITMAP</type>
      </field>
    </struct>
    <typedef name="MENUITEMINFOW">
      <struct name="tagMENUITEMINFOW" />
    </typedef>
    <typedef name="LPMENUITEMINFOW">
      <ptr>
        <struct name="tagMENUITEMINFOW" />
      </ptr>
    </typedef>
    <typedef name="MENUITEMINFO">
      <type>MENUITEMINFOA</type>
    </typedef>
    <typedef name="LPMENUITEMINFO">
      <type>LPMENUITEMINFOA</type>
    </typedef>
    <typedef name="LPCMENUITEMINFOA">
      <ptr>
        <type>MENUITEMINFOA</type>
      </ptr>
    </typedef>
    <typedef name="LPCMENUITEMINFOW">
      <ptr>
        <type>MENUITEMINFOW</type>
      </ptr>
    </typedef>
    <typedef name="LPCMENUITEMINFO">
      <type>LPCMENUITEMINFOA</type>
    </typedef>
    <struct name="tagDROPSTRUCT">
      <field offset="0" name="hwndSource">
        <type>HWND</type>
      </field>
      <field offset="4" name="hwndSink">
        <type>HWND</type>
      </field>
      <field offset="8" name="wFmt">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwData">
        <type>ULONG_PTR</type>
      </field>
      <field offset="16" name="ptDrop">
        <type>POINT</type>
      </field>
      <field offset="24" name="dwControlData">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="DROPSTRUCT">
      <struct name="tagDROPSTRUCT" />
    </typedef>
    <typedef name="PDROPSTRUCT">
      <ptr>
        <struct name="tagDROPSTRUCT" />
      </ptr>
    </typedef>
    <typedef name="LPDROPSTRUCT">
      <ptr>
        <struct name="tagDROPSTRUCT" />
      </ptr>
    </typedef>
    <struct name="tagDRAWTEXTPARAMS">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="iTabLength">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="iLeftMargin">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="12" name="iRightMargin">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="uiLengthDrawn">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="DRAWTEXTPARAMS">
      <struct name="tagDRAWTEXTPARAMS" />
    </typedef>
    <typedef name="LPDRAWTEXTPARAMS">
      <ptr>
        <struct name="tagDRAWTEXTPARAMS" />
      </ptr>
    </typedef>
    <struct name="tagHELPINFO">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="iContextType">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="iCtrlId">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="12" name="hItemHandle">
        <type>HANDLE</type>
      </field>
      <field offset="16" name="dwContextId">
        <type>DWORD_PTR</type>
      </field>
      <field offset="24" name="MousePos">
        <type>POINT</type>
      </field>
    </struct>
    <typedef name="HELPINFO">
      <struct name="tagHELPINFO" />
    </typedef>
    <typedef name="LPHELPINFO">
      <ptr>
        <struct name="tagHELPINFO" />
      </ptr>
    </typedef>
    <typedef name="MSGBOXCALLBACK">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="lpHelpInfo">
            <type>LPHELPINFO</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="tagMSGBOXPARAMSA">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="hwndOwner">
        <type>HWND</type>
      </field>
      <field offset="8" name="hInstance">
        <type>HINSTANCE</type>
      </field>
      <field offset="12" name="lpszText">
        <type>LPCSTR</type>
      </field>
      <field offset="16" name="lpszCaption">
        <type>LPCSTR</type>
      </field>
      <field offset="20" name="dwStyle">
        <type>DWORD</type>
      </field>
      <field offset="24" name="lpszIcon">
        <type>LPCSTR</type>
      </field>
      <field offset="28" name="dwContextHelpId">
        <type>DWORD_PTR</type>
      </field>
      <field offset="32" name="lpfnMsgBoxCallback">
        <type>MSGBOXCALLBACK</type>
      </field>
      <field offset="36" name="dwLanguageId">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="MSGBOXPARAMSA">
      <struct name="tagMSGBOXPARAMSA" />
    </typedef>
    <typedef name="PMSGBOXPARAMSA">
      <ptr>
        <struct name="tagMSGBOXPARAMSA" />
      </ptr>
    </typedef>
    <typedef name="LPMSGBOXPARAMSA">
      <ptr>
        <struct name="tagMSGBOXPARAMSA" />
      </ptr>
    </typedef>
    <struct name="tagMSGBOXPARAMSW">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="hwndOwner">
        <type>HWND</type>
      </field>
      <field offset="8" name="hInstance">
        <type>HINSTANCE</type>
      </field>
      <field offset="12" name="lpszText">
        <type>LPCWSTR</type>
      </field>
      <field offset="16" name="lpszCaption">
        <type>LPCWSTR</type>
      </field>
      <field offset="20" name="dwStyle">
        <type>DWORD</type>
      </field>
      <field offset="24" name="lpszIcon">
        <type>LPCWSTR</type>
      </field>
      <field offset="28" name="dwContextHelpId">
        <type>DWORD_PTR</type>
      </field>
      <field offset="32" name="lpfnMsgBoxCallback">
        <type>MSGBOXCALLBACK</type>
      </field>
      <field offset="36" name="dwLanguageId">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="MSGBOXPARAMSW">
      <struct name="tagMSGBOXPARAMSW" />
    </typedef>
    <typedef name="PMSGBOXPARAMSW">
      <ptr>
        <struct name="tagMSGBOXPARAMSW" />
      </ptr>
    </typedef>
    <typedef name="LPMSGBOXPARAMSW">
      <ptr>
        <struct name="tagMSGBOXPARAMSW" />
      </ptr>
    </typedef>
    <typedef name="MSGBOXPARAMS">
      <type>MSGBOXPARAMSA</type>
    </typedef>
    <typedef name="PMSGBOXPARAMS">
      <type>PMSGBOXPARAMSA</type>
    </typedef>
    <typedef name="LPMSGBOXPARAMS">
      <type>LPMSGBOXPARAMSA</type>
    </typedef>
    <struct name="struct_82">
      <field offset="0" name="versionNumber">
        <type>WORD</type>
      </field>
      <field offset="2" name="offset">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="MENUITEMTEMPLATEHEADER">
      <struct name="struct_82" />
    </typedef>
    <typedef name="PMENUITEMTEMPLATEHEADER">
      <ptr>
        <struct name="struct_82" />
      </ptr>
    </typedef>
    <struct name="struct_83">
      <field offset="0" name="mtOption">
        <type>WORD</type>
      </field>
      <field offset="2" name="mtID">
        <type>WORD</type>
      </field>
      <field offset="4" name="mtString">
        <arr length="1">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="MENUITEMTEMPLATE">
      <struct name="struct_83" />
    </typedef>
    <typedef name="PMENUITEMTEMPLATE">
      <ptr>
        <struct name="struct_83" />
      </ptr>
    </typedef>
    <struct name="_ICONINFO">
      <field offset="0" name="fIcon">
        <type>BOOL</type>
      </field>
      <field offset="4" name="xHotspot">
        <type>DWORD</type>
      </field>
      <field offset="8" name="yHotspot">
        <type>DWORD</type>
      </field>
      <field offset="12" name="hbmMask">
        <type>HBITMAP</type>
      </field>
      <field offset="16" name="hbmColor">
        <type>HBITMAP</type>
      </field>
    </struct>
    <typedef name="ICONINFO">
      <struct name="_ICONINFO" />
    </typedef>
    <typedef name="PICONINFO">
      <ptr>
        <type>ICONINFO</type>
      </ptr>
    </typedef>
    <struct name="tagCURSORSHAPE">
      <field offset="0" name="xHotSpot">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="4" name="yHotSpot">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="cx">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="12" name="cy">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="cbWidth">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="Planes">
        <type>BYTE</type>
      </field>
      <field offset="21" name="BitsPixel">
        <type>BYTE</type>
      </field>
    </struct>
    <typedef name="CURSORSHAPE">
      <struct name="tagCURSORSHAPE" />
    </typedef>
    <typedef name="LPCURSORSHAPE">
      <ptr>
        <struct name="tagCURSORSHAPE" />
      </ptr>
    </typedef>
    <struct name="_ICONINFOEXA">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="fIcon">
        <type>BOOL</type>
      </field>
      <field offset="8" name="xHotspot">
        <type>DWORD</type>
      </field>
      <field offset="12" name="yHotspot">
        <type>DWORD</type>
      </field>
      <field offset="16" name="hbmMask">
        <type>HBITMAP</type>
      </field>
      <field offset="20" name="hbmColor">
        <type>HBITMAP</type>
      </field>
      <field offset="24" name="wResID">
        <type>WORD</type>
      </field>
      <field offset="32" name="szModName">
        <arr length="260">
          <type>CHAR</type>
        </arr>
      </field>
      <field offset="296" name="szResName">
        <arr length="260">
          <type>CHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="ICONINFOEXA">
      <struct name="_ICONINFOEXA" />
    </typedef>
    <typedef name="PICONINFOEXA">
      <ptr>
        <struct name="_ICONINFOEXA" />
      </ptr>
    </typedef>
    <struct name="_ICONINFOEXW">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="fIcon">
        <type>BOOL</type>
      </field>
      <field offset="8" name="xHotspot">
        <type>DWORD</type>
      </field>
      <field offset="12" name="yHotspot">
        <type>DWORD</type>
      </field>
      <field offset="16" name="hbmMask">
        <type>HBITMAP</type>
      </field>
      <field offset="20" name="hbmColor">
        <type>HBITMAP</type>
      </field>
      <field offset="24" name="wResID">
        <type>WORD</type>
      </field>
      <field offset="32" name="szModName">
        <arr length="260">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="552" name="szResName">
        <arr length="260">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="ICONINFOEXW">
      <struct name="_ICONINFOEXW" />
    </typedef>
    <typedef name="PICONINFOEXW">
      <ptr>
        <struct name="_ICONINFOEXW" />
      </ptr>
    </typedef>
    <typedef name="ICONINFOEX">
      <type>ICONINFOEXA</type>
    </typedef>
    <typedef name="PICONINFOEX">
      <type>PICONINFOEXA</type>
    </typedef>
    <struct name="tagSCROLLINFO">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="fMask">
        <type>UINT</type>
      </field>
      <field offset="8" name="nMin">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="12" name="nMax">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="nPage">
        <type>UINT</type>
      </field>
      <field offset="20" name="nPos">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="24" name="nTrackPos">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="SCROLLINFO">
      <struct name="tagSCROLLINFO" />
    </typedef>
    <typedef name="LPSCROLLINFO">
      <ptr>
        <struct name="tagSCROLLINFO" />
      </ptr>
    </typedef>
    <typedef name="LPCSCROLLINFO">
      <ptr>
        <type>SCROLLINFO</type>
      </ptr>
    </typedef>
    <struct name="tagMDICREATESTRUCTA">
      <field offset="0" name="szClass">
        <type>LPCSTR</type>
      </field>
      <field offset="4" name="szTitle">
        <type>LPCSTR</type>
      </field>
      <field offset="8" name="hOwner">
        <type>HANDLE</type>
      </field>
      <field offset="12" name="x">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="y">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="cx">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="24" name="cy">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="28" name="style">
        <type>DWORD</type>
      </field>
      <field offset="32" name="lParam">
        <type>LPARAM</type>
      </field>
    </struct>
    <typedef name="MDICREATESTRUCTA">
      <struct name="tagMDICREATESTRUCTA" />
    </typedef>
    <typedef name="LPMDICREATESTRUCTA">
      <ptr>
        <struct name="tagMDICREATESTRUCTA" />
      </ptr>
    </typedef>
    <struct name="tagMDICREATESTRUCTW">
      <field offset="0" name="szClass">
        <type>LPCWSTR</type>
      </field>
      <field offset="4" name="szTitle">
        <type>LPCWSTR</type>
      </field>
      <field offset="8" name="hOwner">
        <type>HANDLE</type>
      </field>
      <field offset="12" name="x">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="y">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="cx">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="24" name="cy">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="28" name="style">
        <type>DWORD</type>
      </field>
      <field offset="32" name="lParam">
        <type>LPARAM</type>
      </field>
    </struct>
    <typedef name="MDICREATESTRUCTW">
      <struct name="tagMDICREATESTRUCTW" />
    </typedef>
    <typedef name="LPMDICREATESTRUCTW">
      <ptr>
        <struct name="tagMDICREATESTRUCTW" />
      </ptr>
    </typedef>
    <typedef name="MDICREATESTRUCT">
      <type>MDICREATESTRUCTA</type>
    </typedef>
    <typedef name="LPMDICREATESTRUCT">
      <type>LPMDICREATESTRUCTA</type>
    </typedef>
    <struct name="tagCLIENTCREATESTRUCT">
      <field offset="0" name="hWindowMenu">
        <type>HANDLE</type>
      </field>
      <field offset="4" name="idFirstChild">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="CLIENTCREATESTRUCT">
      <struct name="tagCLIENTCREATESTRUCT" />
    </typedef>
    <typedef name="LPCLIENTCREATESTRUCT">
      <ptr>
        <struct name="tagCLIENTCREATESTRUCT" />
      </ptr>
    </typedef>
    <typedef name="HELPPOLY">
      <type>DWORD</type>
    </typedef>
    <struct name="tagMULTIKEYHELPA">
      <field offset="0" name="mkSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="mkKeylist">
        <type>CHAR</type>
      </field>
      <field offset="5" name="szKeyphrase">
        <arr length="1">
          <type>CHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="MULTIKEYHELPA">
      <struct name="tagMULTIKEYHELPA" />
    </typedef>
    <typedef name="PMULTIKEYHELPA">
      <ptr>
        <struct name="tagMULTIKEYHELPA" />
      </ptr>
    </typedef>
    <typedef name="LPMULTIKEYHELPA">
      <ptr>
        <struct name="tagMULTIKEYHELPA" />
      </ptr>
    </typedef>
    <struct name="tagMULTIKEYHELPW">
      <field offset="0" name="mkSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="mkKeylist">
        <type>WCHAR</type>
      </field>
      <field offset="6" name="szKeyphrase">
        <arr length="1">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="MULTIKEYHELPW">
      <struct name="tagMULTIKEYHELPW" />
    </typedef>
    <typedef name="PMULTIKEYHELPW">
      <ptr>
        <struct name="tagMULTIKEYHELPW" />
      </ptr>
    </typedef>
    <typedef name="LPMULTIKEYHELPW">
      <ptr>
        <struct name="tagMULTIKEYHELPW" />
      </ptr>
    </typedef>
    <typedef name="MULTIKEYHELP">
      <type>MULTIKEYHELPA</type>
    </typedef>
    <typedef name="PMULTIKEYHELP">
      <type>PMULTIKEYHELPA</type>
    </typedef>
    <typedef name="LPMULTIKEYHELP">
      <type>LPMULTIKEYHELPA</type>
    </typedef>
    <struct name="tagHELPWININFOA">
      <field offset="0" name="wStructSize">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="4" name="x">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="y">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="12" name="dx">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="dy">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="wMax">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="24" name="rgchMember">
        <arr length="2">
          <type>CHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="HELPWININFOA">
      <struct name="tagHELPWININFOA" />
    </typedef>
    <typedef name="PHELPWININFOA">
      <ptr>
        <struct name="tagHELPWININFOA" />
      </ptr>
    </typedef>
    <typedef name="LPHELPWININFOA">
      <ptr>
        <struct name="tagHELPWININFOA" />
      </ptr>
    </typedef>
    <struct name="tagHELPWININFOW">
      <field offset="0" name="wStructSize">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="4" name="x">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="y">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="12" name="dx">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="dy">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="wMax">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="24" name="rgchMember">
        <arr length="2">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="HELPWININFOW">
      <struct name="tagHELPWININFOW" />
    </typedef>
    <typedef name="PHELPWININFOW">
      <ptr>
        <struct name="tagHELPWININFOW" />
      </ptr>
    </typedef>
    <typedef name="LPHELPWININFOW">
      <ptr>
        <struct name="tagHELPWININFOW" />
      </ptr>
    </typedef>
    <typedef name="HELPWININFO">
      <type>HELPWININFOA</type>
    </typedef>
    <typedef name="PHELPWININFO">
      <type>PHELPWININFOA</type>
    </typedef>
    <typedef name="LPHELPWININFO">
      <type>LPHELPWININFOA</type>
    </typedef>
    <struct name="tagNONCLIENTMETRICSA">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="iBorderWidth">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="iScrollWidth">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="12" name="iScrollHeight">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="iCaptionWidth">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="iCaptionHeight">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="24" name="lfCaptionFont">
        <type>LOGFONTA</type>
      </field>
      <field offset="84" name="iSmCaptionWidth">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="88" name="iSmCaptionHeight">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="96" name="lfSmCaptionFont">
        <type>LOGFONTA</type>
      </field>
      <field offset="156" name="iMenuWidth">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="160" name="iMenuHeight">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="168" name="lfMenuFont">
        <type>LOGFONTA</type>
      </field>
      <field offset="232" name="lfStatusFont">
        <type>LOGFONTA</type>
      </field>
      <field offset="296" name="lfMessageFont">
        <type>LOGFONTA</type>
      </field>
      <field offset="356" name="iPaddedBorderWidth">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="NONCLIENTMETRICSA">
      <struct name="tagNONCLIENTMETRICSA" />
    </typedef>
    <typedef name="PNONCLIENTMETRICSA">
      <ptr>
        <struct name="tagNONCLIENTMETRICSA" />
      </ptr>
    </typedef>
    <typedef name="LPNONCLIENTMETRICSA">
      <ptr>
        <struct name="tagNONCLIENTMETRICSA" />
      </ptr>
    </typedef>
    <struct name="tagNONCLIENTMETRICSW">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="iBorderWidth">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="iScrollWidth">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="12" name="iScrollHeight">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="iCaptionWidth">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="iCaptionHeight">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="24" name="lfCaptionFont">
        <type>LOGFONTW</type>
      </field>
      <field offset="116" name="iSmCaptionWidth">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="120" name="iSmCaptionHeight">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="128" name="lfSmCaptionFont">
        <type>LOGFONTW</type>
      </field>
      <field offset="220" name="iMenuWidth">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="224" name="iMenuHeight">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="232" name="lfMenuFont">
        <type>LOGFONTW</type>
      </field>
      <field offset="328" name="lfStatusFont">
        <type>LOGFONTW</type>
      </field>
      <field offset="424" name="lfMessageFont">
        <type>LOGFONTW</type>
      </field>
      <field offset="516" name="iPaddedBorderWidth">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="NONCLIENTMETRICSW">
      <struct name="tagNONCLIENTMETRICSW" />
    </typedef>
    <typedef name="PNONCLIENTMETRICSW">
      <ptr>
        <struct name="tagNONCLIENTMETRICSW" />
      </ptr>
    </typedef>
    <typedef name="LPNONCLIENTMETRICSW">
      <ptr>
        <struct name="tagNONCLIENTMETRICSW" />
      </ptr>
    </typedef>
    <typedef name="NONCLIENTMETRICS">
      <type>NONCLIENTMETRICSA</type>
    </typedef>
    <typedef name="PNONCLIENTMETRICS">
      <type>PNONCLIENTMETRICSA</type>
    </typedef>
    <typedef name="LPNONCLIENTMETRICS">
      <type>LPNONCLIENTMETRICSA</type>
    </typedef>
    <struct name="tagMINIMIZEDMETRICS">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="iWidth">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="iHorzGap">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="12" name="iVertGap">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="iArrange">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="MINIMIZEDMETRICS">
      <struct name="tagMINIMIZEDMETRICS" />
    </typedef>
    <typedef name="PMINIMIZEDMETRICS">
      <ptr>
        <struct name="tagMINIMIZEDMETRICS" />
      </ptr>
    </typedef>
    <typedef name="LPMINIMIZEDMETRICS">
      <ptr>
        <struct name="tagMINIMIZEDMETRICS" />
      </ptr>
    </typedef>
    <struct name="tagICONMETRICSA">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="iHorzSpacing">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="iVertSpacing">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="12" name="iTitleWrap">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="lfFont">
        <type>LOGFONTA</type>
      </field>
    </struct>
    <typedef name="ICONMETRICSA">
      <struct name="tagICONMETRICSA" />
    </typedef>
    <typedef name="PICONMETRICSA">
      <ptr>
        <struct name="tagICONMETRICSA" />
      </ptr>
    </typedef>
    <typedef name="LPICONMETRICSA">
      <ptr>
        <struct name="tagICONMETRICSA" />
      </ptr>
    </typedef>
    <struct name="tagICONMETRICSW">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="iHorzSpacing">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="iVertSpacing">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="12" name="iTitleWrap">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="lfFont">
        <type>LOGFONTW</type>
      </field>
    </struct>
    <typedef name="ICONMETRICSW">
      <struct name="tagICONMETRICSW" />
    </typedef>
    <typedef name="PICONMETRICSW">
      <ptr>
        <struct name="tagICONMETRICSW" />
      </ptr>
    </typedef>
    <typedef name="LPICONMETRICSW">
      <ptr>
        <struct name="tagICONMETRICSW" />
      </ptr>
    </typedef>
    <typedef name="ICONMETRICS">
      <type>ICONMETRICSA</type>
    </typedef>
    <typedef name="PICONMETRICS">
      <type>PICONMETRICSA</type>
    </typedef>
    <typedef name="LPICONMETRICS">
      <type>LPICONMETRICSA</type>
    </typedef>
    <struct name="tagANIMATIONINFO">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="iMinAnimate">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="ANIMATIONINFO">
      <struct name="tagANIMATIONINFO" />
    </typedef>
    <typedef name="LPANIMATIONINFO">
      <ptr>
        <struct name="tagANIMATIONINFO" />
      </ptr>
    </typedef>
    <struct name="tagSERIALKEYSA">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="lpszActivePort">
        <type>LPSTR</type>
      </field>
      <field offset="12" name="lpszPort">
        <type>LPSTR</type>
      </field>
      <field offset="16" name="iBaudRate">
        <type>UINT</type>
      </field>
      <field offset="20" name="iPortState">
        <type>UINT</type>
      </field>
      <field offset="24" name="iActive">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="SERIALKEYSA">
      <struct name="tagSERIALKEYSA" />
    </typedef>
    <typedef name="LPSERIALKEYSA">
      <ptr>
        <struct name="tagSERIALKEYSA" />
      </ptr>
    </typedef>
    <struct name="tagSERIALKEYSW">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="lpszActivePort">
        <type>LPWSTR</type>
      </field>
      <field offset="12" name="lpszPort">
        <type>LPWSTR</type>
      </field>
      <field offset="16" name="iBaudRate">
        <type>UINT</type>
      </field>
      <field offset="20" name="iPortState">
        <type>UINT</type>
      </field>
      <field offset="24" name="iActive">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="SERIALKEYSW">
      <struct name="tagSERIALKEYSW" />
    </typedef>
    <typedef name="LPSERIALKEYSW">
      <ptr>
        <struct name="tagSERIALKEYSW" />
      </ptr>
    </typedef>
    <typedef name="SERIALKEYS">
      <type>SERIALKEYSA</type>
    </typedef>
    <typedef name="LPSERIALKEYS">
      <type>LPSERIALKEYSA</type>
    </typedef>
    <struct name="tagHIGHCONTRASTA">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="lpszDefaultScheme">
        <type>LPSTR</type>
      </field>
    </struct>
    <typedef name="HIGHCONTRASTA">
      <struct name="tagHIGHCONTRASTA" />
    </typedef>
    <typedef name="LPHIGHCONTRASTA">
      <ptr>
        <struct name="tagHIGHCONTRASTA" />
      </ptr>
    </typedef>
    <struct name="tagHIGHCONTRASTW">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="lpszDefaultScheme">
        <type>LPWSTR</type>
      </field>
    </struct>
    <typedef name="HIGHCONTRASTW">
      <struct name="tagHIGHCONTRASTW" />
    </typedef>
    <typedef name="LPHIGHCONTRASTW">
      <ptr>
        <struct name="tagHIGHCONTRASTW" />
      </ptr>
    </typedef>
    <typedef name="HIGHCONTRAST">
      <type>HIGHCONTRASTA</type>
    </typedef>
    <typedef name="LPHIGHCONTRAST">
      <type>LPHIGHCONTRASTA</type>
    </typedef>
    <struct name="_VIDEOPARAMETERS">
      <field offset="0" name="Guid">
        <type>GUID</type>
      </field>
      <field offset="16" name="dwOffset">
        <type>ULONG</type>
      </field>
      <field offset="20" name="dwCommand">
        <type>ULONG</type>
      </field>
      <field offset="24" name="dwFlags">
        <type>ULONG</type>
      </field>
      <field offset="28" name="dwMode">
        <type>ULONG</type>
      </field>
      <field offset="32" name="dwTVStandard">
        <type>ULONG</type>
      </field>
      <field offset="36" name="dwAvailableModes">
        <type>ULONG</type>
      </field>
      <field offset="40" name="dwAvailableTVStandard">
        <type>ULONG</type>
      </field>
      <field offset="44" name="dwFlickerFilter">
        <type>ULONG</type>
      </field>
      <field offset="48" name="dwOverScanX">
        <type>ULONG</type>
      </field>
      <field offset="52" name="dwOverScanY">
        <type>ULONG</type>
      </field>
      <field offset="56" name="dwMaxUnscaledX">
        <type>ULONG</type>
      </field>
      <field offset="60" name="dwMaxUnscaledY">
        <type>ULONG</type>
      </field>
      <field offset="64" name="dwPositionX">
        <type>ULONG</type>
      </field>
      <field offset="68" name="dwPositionY">
        <type>ULONG</type>
      </field>
      <field offset="72" name="dwBrightness">
        <type>ULONG</type>
      </field>
      <field offset="76" name="dwContrast">
        <type>ULONG</type>
      </field>
      <field offset="80" name="dwCPType">
        <type>ULONG</type>
      </field>
      <field offset="84" name="dwCPCommand">
        <type>ULONG</type>
      </field>
      <field offset="88" name="dwCPStandard">
        <type>ULONG</type>
      </field>
      <field offset="92" name="dwCPKey">
        <type>ULONG</type>
      </field>
      <field offset="96" name="bCP_APSTriggerBits">
        <type>ULONG</type>
      </field>
      <field offset="104" name="bOEMCopyProtection">
        <arr length="256">
          <type>UCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="VIDEOPARAMETERS">
      <struct name="_VIDEOPARAMETERS" />
    </typedef>
    <typedef name="PVIDEOPARAMETERS">
      <ptr>
        <struct name="_VIDEOPARAMETERS" />
      </ptr>
    </typedef>
    <typedef name="LPVIDEOPARAMETERS">
      <ptr>
        <struct name="_VIDEOPARAMETERS" />
      </ptr>
    </typedef>
    <struct name="tagFILTERKEYS">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="iWaitMSec">
        <type>DWORD</type>
      </field>
      <field offset="12" name="iDelayMSec">
        <type>DWORD</type>
      </field>
      <field offset="16" name="iRepeatMSec">
        <type>DWORD</type>
      </field>
      <field offset="20" name="iBounceMSec">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="FILTERKEYS">
      <struct name="tagFILTERKEYS" />
    </typedef>
    <typedef name="LPFILTERKEYS">
      <ptr>
        <struct name="tagFILTERKEYS" />
      </ptr>
    </typedef>
    <struct name="tagSTICKYKEYS">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="STICKYKEYS">
      <struct name="tagSTICKYKEYS" />
    </typedef>
    <typedef name="LPSTICKYKEYS">
      <ptr>
        <struct name="tagSTICKYKEYS" />
      </ptr>
    </typedef>
    <struct name="tagMOUSEKEYS">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="iMaxSpeed">
        <type>DWORD</type>
      </field>
      <field offset="12" name="iTimeToMaxSpeed">
        <type>DWORD</type>
      </field>
      <field offset="16" name="iCtrlSpeed">
        <type>DWORD</type>
      </field>
      <field offset="20" name="dwReserved1">
        <type>DWORD</type>
      </field>
      <field offset="24" name="dwReserved2">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="MOUSEKEYS">
      <struct name="tagMOUSEKEYS" />
    </typedef>
    <typedef name="LPMOUSEKEYS">
      <ptr>
        <struct name="tagMOUSEKEYS" />
      </ptr>
    </typedef>
    <struct name="tagACCESSTIMEOUT">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="iTimeOutMSec">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="ACCESSTIMEOUT">
      <struct name="tagACCESSTIMEOUT" />
    </typedef>
    <typedef name="LPACCESSTIMEOUT">
      <ptr>
        <struct name="tagACCESSTIMEOUT" />
      </ptr>
    </typedef>
    <struct name="tagSOUNDSENTRYA">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="iFSTextEffect">
        <type>DWORD</type>
      </field>
      <field offset="12" name="iFSTextEffectMSec">
        <type>DWORD</type>
      </field>
      <field offset="16" name="iFSTextEffectColorBits">
        <type>DWORD</type>
      </field>
      <field offset="20" name="iFSGrafEffect">
        <type>DWORD</type>
      </field>
      <field offset="24" name="iFSGrafEffectMSec">
        <type>DWORD</type>
      </field>
      <field offset="28" name="iFSGrafEffectColor">
        <type>DWORD</type>
      </field>
      <field offset="32" name="iWindowsEffect">
        <type>DWORD</type>
      </field>
      <field offset="36" name="iWindowsEffectMSec">
        <type>DWORD</type>
      </field>
      <field offset="40" name="lpszWindowsEffectDLL">
        <type>LPSTR</type>
      </field>
      <field offset="44" name="iWindowsEffectOrdinal">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="SOUNDSENTRYA">
      <struct name="tagSOUNDSENTRYA" />
    </typedef>
    <typedef name="LPSOUNDSENTRYA">
      <ptr>
        <struct name="tagSOUNDSENTRYA" />
      </ptr>
    </typedef>
    <struct name="tagSOUNDSENTRYW">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="iFSTextEffect">
        <type>DWORD</type>
      </field>
      <field offset="12" name="iFSTextEffectMSec">
        <type>DWORD</type>
      </field>
      <field offset="16" name="iFSTextEffectColorBits">
        <type>DWORD</type>
      </field>
      <field offset="20" name="iFSGrafEffect">
        <type>DWORD</type>
      </field>
      <field offset="24" name="iFSGrafEffectMSec">
        <type>DWORD</type>
      </field>
      <field offset="28" name="iFSGrafEffectColor">
        <type>DWORD</type>
      </field>
      <field offset="32" name="iWindowsEffect">
        <type>DWORD</type>
      </field>
      <field offset="36" name="iWindowsEffectMSec">
        <type>DWORD</type>
      </field>
      <field offset="40" name="lpszWindowsEffectDLL">
        <type>LPWSTR</type>
      </field>
      <field offset="44" name="iWindowsEffectOrdinal">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="SOUNDSENTRYW">
      <struct name="tagSOUNDSENTRYW" />
    </typedef>
    <typedef name="LPSOUNDSENTRYW">
      <ptr>
        <struct name="tagSOUNDSENTRYW" />
      </ptr>
    </typedef>
    <typedef name="SOUNDSENTRY">
      <type>SOUNDSENTRYA</type>
    </typedef>
    <typedef name="LPSOUNDSENTRY">
      <type>LPSOUNDSENTRYA</type>
    </typedef>
    <struct name="tagTOGGLEKEYS">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="TOGGLEKEYS">
      <struct name="tagTOGGLEKEYS" />
    </typedef>
    <typedef name="LPTOGGLEKEYS">
      <ptr>
        <struct name="tagTOGGLEKEYS" />
      </ptr>
    </typedef>
    <struct name="tagAUDIODESCRIPTION">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="Enabled">
        <type>BOOL</type>
      </field>
      <field offset="8" name="Locale">
        <type>LCID</type>
      </field>
    </struct>
    <typedef name="AUDIODESCRIPTION">
      <struct name="tagAUDIODESCRIPTION" />
    </typedef>
    <typedef name="LPAUDIODESCRIPTION">
      <ptr>
        <struct name="tagAUDIODESCRIPTION" />
      </ptr>
    </typedef>
    <struct name="tagMONITORINFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="8" name="rcMonitor">
        <type>RECT</type>
      </field>
      <field offset="24" name="rcWork">
        <type>RECT</type>
      </field>
      <field offset="40" name="dwFlags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="MONITORINFO">
      <struct name="tagMONITORINFO" />
    </typedef>
    <typedef name="LPMONITORINFO">
      <ptr>
        <struct name="tagMONITORINFO" />
      </ptr>
    </typedef>
    <struct name="tagMONITORINFOEXA">
      <field offset="0">
        <type>MONITORINFO</type>
      </field>
      <field offset="40" name="szDevice">
        <arr length="32">
          <type>CHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="MONITORINFOEXA">
      <struct name="tagMONITORINFOEXA" />
    </typedef>
    <typedef name="LPMONITORINFOEXA">
      <ptr>
        <struct name="tagMONITORINFOEXA" />
      </ptr>
    </typedef>
    <struct name="tagMONITORINFOEXW">
      <field offset="0">
        <type>MONITORINFO</type>
      </field>
      <field offset="40" name="szDevice">
        <arr length="32">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="MONITORINFOEXW">
      <struct name="tagMONITORINFOEXW" />
    </typedef>
    <typedef name="LPMONITORINFOEXW">
      <ptr>
        <struct name="tagMONITORINFOEXW" />
      </ptr>
    </typedef>
    <typedef name="MONITORINFOEX">
      <type>MONITORINFOEXA</type>
    </typedef>
    <typedef name="LPMONITORINFOEX">
      <type>LPMONITORINFOEXA</type>
    </typedef>
    <typedef name="MONITORENUMPROC">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>HMONITOR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>HDC</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPRECT</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="WINEVENTPROC">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="hWinEventHook">
            <type>HWINEVENTHOOK</type>
            <stack size="4" />
          </arg>
          <arg name="event">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="hwnd">
            <type>HWND</type>
            <stack size="4" />
          </arg>
          <arg name="idObject">
            <type>LONG</type>
            <stack size="4" />
          </arg>
          <arg name="idChild">
            <type>LONG</type>
            <stack size="4" />
          </arg>
          <arg name="idEventThread">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="dwmsEventTime">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="tagGUITHREADINFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="flags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="hwndActive">
        <type>HWND</type>
      </field>
      <field offset="12" name="hwndFocus">
        <type>HWND</type>
      </field>
      <field offset="16" name="hwndCapture">
        <type>HWND</type>
      </field>
      <field offset="20" name="hwndMenuOwner">
        <type>HWND</type>
      </field>
      <field offset="24" name="hwndMoveSize">
        <type>HWND</type>
      </field>
      <field offset="28" name="hwndCaret">
        <type>HWND</type>
      </field>
      <field offset="32" name="rcCaret">
        <type>RECT</type>
      </field>
    </struct>
    <typedef name="GUITHREADINFO">
      <struct name="tagGUITHREADINFO" />
    </typedef>
    <typedef name="PGUITHREADINFO">
      <ptr>
        <struct name="tagGUITHREADINFO" />
      </ptr>
    </typedef>
    <typedef name="LPGUITHREADINFO">
      <ptr>
        <struct name="tagGUITHREADINFO" />
      </ptr>
    </typedef>
    <struct name="tagCURSORINFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="flags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="hCursor">
        <type>HCURSOR</type>
      </field>
      <field offset="16" name="ptScreenPos">
        <type>POINT</type>
      </field>
    </struct>
    <typedef name="CURSORINFO">
      <struct name="tagCURSORINFO" />
    </typedef>
    <typedef name="PCURSORINFO">
      <ptr>
        <struct name="tagCURSORINFO" />
      </ptr>
    </typedef>
    <typedef name="LPCURSORINFO">
      <ptr>
        <struct name="tagCURSORINFO" />
      </ptr>
    </typedef>
    <struct name="tagWINDOWINFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="8" name="rcWindow">
        <type>RECT</type>
      </field>
      <field offset="24" name="rcClient">
        <type>RECT</type>
      </field>
      <field offset="40" name="dwStyle">
        <type>DWORD</type>
      </field>
      <field offset="44" name="dwExStyle">
        <type>DWORD</type>
      </field>
      <field offset="48" name="dwWindowStatus">
        <type>DWORD</type>
      </field>
      <field offset="52" name="cxWindowBorders">
        <type>UINT</type>
      </field>
      <field offset="56" name="cyWindowBorders">
        <type>UINT</type>
      </field>
      <field offset="60" name="atomWindowType">
        <type>ATOM</type>
      </field>
      <field offset="62" name="wCreatorVersion">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="WINDOWINFO">
      <struct name="tagWINDOWINFO" />
    </typedef>
    <typedef name="PWINDOWINFO">
      <ptr>
        <struct name="tagWINDOWINFO" />
      </ptr>
    </typedef>
    <typedef name="LPWINDOWINFO">
      <ptr>
        <struct name="tagWINDOWINFO" />
      </ptr>
    </typedef>
    <struct name="tagTITLEBARINFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="8" name="rcTitleBar">
        <type>RECT</type>
      </field>
      <field offset="24" name="rgstate">
        <arr length="6">
          <type>DWORD</type>
        </arr>
      </field>
    </struct>
    <typedef name="TITLEBARINFO">
      <struct name="tagTITLEBARINFO" />
    </typedef>
    <typedef name="PTITLEBARINFO">
      <ptr>
        <struct name="tagTITLEBARINFO" />
      </ptr>
    </typedef>
    <typedef name="LPTITLEBARINFO">
      <ptr>
        <struct name="tagTITLEBARINFO" />
      </ptr>
    </typedef>
    <struct name="tagTITLEBARINFOEX">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="8" name="rcTitleBar">
        <type>RECT</type>
      </field>
      <field offset="24" name="rgstate">
        <arr length="6">
          <type>DWORD</type>
        </arr>
      </field>
      <field offset="48" name="rgrect">
        <arr length="6">
          <type>RECT</type>
        </arr>
      </field>
    </struct>
    <typedef name="TITLEBARINFOEX">
      <struct name="tagTITLEBARINFOEX" />
    </typedef>
    <typedef name="PTITLEBARINFOEX">
      <ptr>
        <struct name="tagTITLEBARINFOEX" />
      </ptr>
    </typedef>
    <typedef name="LPTITLEBARINFOEX">
      <ptr>
        <struct name="tagTITLEBARINFOEX" />
      </ptr>
    </typedef>
    <struct name="tagMENUBARINFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="8" name="rcBar">
        <type>RECT</type>
      </field>
      <field offset="24" name="hMenu">
        <type>HMENU</type>
      </field>
      <field offset="28" name="hwndMenu">
        <type>HWND</type>
      </field>
      <field offset="32" name="fBarFocused">
        <type>BOOL</type>
      </field>
      <field offset="36" name="fFocused">
        <type>BOOL</type>
      </field>
    </struct>
    <typedef name="MENUBARINFO">
      <struct name="tagMENUBARINFO" />
    </typedef>
    <typedef name="PMENUBARINFO">
      <ptr>
        <struct name="tagMENUBARINFO" />
      </ptr>
    </typedef>
    <typedef name="LPMENUBARINFO">
      <ptr>
        <struct name="tagMENUBARINFO" />
      </ptr>
    </typedef>
    <struct name="tagSCROLLBARINFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="8" name="rcScrollBar">
        <type>RECT</type>
      </field>
      <field offset="24" name="dxyLineButton">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="28" name="xyThumbTop">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="32" name="xyThumbBottom">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="36" name="reserved">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="40" name="rgstate">
        <arr length="6">
          <type>DWORD</type>
        </arr>
      </field>
    </struct>
    <typedef name="SCROLLBARINFO">
      <struct name="tagSCROLLBARINFO" />
    </typedef>
    <typedef name="PSCROLLBARINFO">
      <ptr>
        <struct name="tagSCROLLBARINFO" />
      </ptr>
    </typedef>
    <typedef name="LPSCROLLBARINFO">
      <ptr>
        <struct name="tagSCROLLBARINFO" />
      </ptr>
    </typedef>
    <struct name="tagCOMBOBOXINFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="8" name="rcItem">
        <type>RECT</type>
      </field>
      <field offset="24" name="rcButton">
        <type>RECT</type>
      </field>
      <field offset="40" name="stateButton">
        <type>DWORD</type>
      </field>
      <field offset="44" name="hwndCombo">
        <type>HWND</type>
      </field>
      <field offset="48" name="hwndItem">
        <type>HWND</type>
      </field>
      <field offset="52" name="hwndList">
        <type>HWND</type>
      </field>
    </struct>
    <typedef name="COMBOBOXINFO">
      <struct name="tagCOMBOBOXINFO" />
    </typedef>
    <typedef name="PCOMBOBOXINFO">
      <ptr>
        <struct name="tagCOMBOBOXINFO" />
      </ptr>
    </typedef>
    <typedef name="LPCOMBOBOXINFO">
      <ptr>
        <struct name="tagCOMBOBOXINFO" />
      </ptr>
    </typedef>
    <struct name="tagALTTABINFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="cItems">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="cColumns">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="12" name="cRows">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="iColFocus">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="iRowFocus">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="24" name="cxItem">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="28" name="cyItem">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="32" name="ptStart">
        <type>POINT</type>
      </field>
    </struct>
    <typedef name="ALTTABINFO">
      <struct name="tagALTTABINFO" />
    </typedef>
    <typedef name="PALTTABINFO">
      <ptr>
        <struct name="tagALTTABINFO" />
      </ptr>
    </typedef>
    <typedef name="LPALTTABINFO">
      <ptr>
        <struct name="tagALTTABINFO" />
      </ptr>
    </typedef>
    <struct name="HRAWINPUT__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HRAWINPUT">
      <ptr>
        <struct name="HRAWINPUT__" />
      </ptr>
    </typedef>
    <struct name="tagRAWINPUTHEADER">
      <field offset="0" name="dwType">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwSize">
        <type>DWORD</type>
      </field>
      <field offset="8" name="hDevice">
        <type>HANDLE</type>
      </field>
      <field offset="12" name="wParam">
        <type>WPARAM</type>
      </field>
    </struct>
    <typedef name="RAWINPUTHEADER">
      <struct name="tagRAWINPUTHEADER" />
    </typedef>
    <typedef name="PRAWINPUTHEADER">
      <ptr>
        <struct name="tagRAWINPUTHEADER" />
      </ptr>
    </typedef>
    <typedef name="LPRAWINPUTHEADER">
      <ptr>
        <struct name="tagRAWINPUTHEADER" />
      </ptr>
    </typedef>
    <struct name="struct_84">
      <field offset="0" name="usButtonFlags">
        <type>USHORT</type>
      </field>
      <field offset="2" name="usButtonData">
        <type>USHORT</type>
      </field>
    </struct>
    <struct name="tagRAWMOUSE">
      <field offset="0" name="usFlags">
        <type>USHORT</type>
      </field>
      <field offset="4">
        <union>
          <alt name="ulButtons">
            <type>ULONG</type>
          </alt>
          <alt>
            <struct name="struct_84" />
          </alt>
        </union>
      </field>
      <field offset="8" name="ulRawButtons">
        <type>ULONG</type>
      </field>
      <field offset="12" name="lLastX">
        <type>LONG</type>
      </field>
      <field offset="16" name="lLastY">
        <type>LONG</type>
      </field>
      <field offset="20" name="ulExtraInformation">
        <type>ULONG</type>
      </field>
    </struct>
    <typedef name="RAWMOUSE">
      <struct name="tagRAWMOUSE" />
    </typedef>
    <typedef name="PRAWMOUSE">
      <ptr>
        <struct name="tagRAWMOUSE" />
      </ptr>
    </typedef>
    <typedef name="LPRAWMOUSE">
      <ptr>
        <struct name="tagRAWMOUSE" />
      </ptr>
    </typedef>
    <struct name="tagRAWKEYBOARD">
      <field offset="0" name="MakeCode">
        <type>USHORT</type>
      </field>
      <field offset="2" name="Flags">
        <type>USHORT</type>
      </field>
      <field offset="4" name="Reserved">
        <type>USHORT</type>
      </field>
      <field offset="6" name="VKey">
        <type>USHORT</type>
      </field>
      <field offset="8" name="Message">
        <type>UINT</type>
      </field>
      <field offset="12" name="ExtraInformation">
        <type>ULONG</type>
      </field>
    </struct>
    <typedef name="RAWKEYBOARD">
      <struct name="tagRAWKEYBOARD" />
    </typedef>
    <typedef name="PRAWKEYBOARD">
      <ptr>
        <struct name="tagRAWKEYBOARD" />
      </ptr>
    </typedef>
    <typedef name="LPRAWKEYBOARD">
      <ptr>
        <struct name="tagRAWKEYBOARD" />
      </ptr>
    </typedef>
    <struct name="tagRAWHID">
      <field offset="0" name="dwSizeHid">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwCount">
        <type>DWORD</type>
      </field>
      <field offset="8" name="bRawData">
        <arr length="1">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="RAWHID">
      <struct name="tagRAWHID" />
    </typedef>
    <typedef name="PRAWHID">
      <ptr>
        <struct name="tagRAWHID" />
      </ptr>
    </typedef>
    <typedef name="LPRAWHID">
      <ptr>
        <struct name="tagRAWHID" />
      </ptr>
    </typedef>
    <struct name="tagRAWINPUT">
      <field offset="0" name="header">
        <type>RAWINPUTHEADER</type>
      </field>
      <field offset="16" name="data">
        <union>
          <alt name="mouse">
            <type>RAWMOUSE</type>
          </alt>
          <alt name="keyboard">
            <type>RAWKEYBOARD</type>
          </alt>
          <alt name="hid">
            <type>RAWHID</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="RAWINPUT">
      <struct name="tagRAWINPUT" />
    </typedef>
    <typedef name="PRAWINPUT">
      <ptr>
        <struct name="tagRAWINPUT" />
      </ptr>
    </typedef>
    <typedef name="LPRAWINPUT">
      <ptr>
        <struct name="tagRAWINPUT" />
      </ptr>
    </typedef>
    <struct name="tagRID_DEVICE_INFO_MOUSE">
      <field offset="0" name="dwId">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwNumberOfButtons">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwSampleRate">
        <type>DWORD</type>
      </field>
      <field offset="12" name="fHasHorizontalWheel">
        <type>BOOL</type>
      </field>
    </struct>
    <typedef name="RID_DEVICE_INFO_MOUSE">
      <struct name="tagRID_DEVICE_INFO_MOUSE" />
    </typedef>
    <typedef name="PRID_DEVICE_INFO_MOUSE">
      <ptr>
        <struct name="tagRID_DEVICE_INFO_MOUSE" />
      </ptr>
    </typedef>
    <struct name="tagRID_DEVICE_INFO_KEYBOARD">
      <field offset="0" name="dwType">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwSubType">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwKeyboardMode">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwNumberOfFunctionKeys">
        <type>DWORD</type>
      </field>
      <field offset="16" name="dwNumberOfIndicators">
        <type>DWORD</type>
      </field>
      <field offset="20" name="dwNumberOfKeysTotal">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="RID_DEVICE_INFO_KEYBOARD">
      <struct name="tagRID_DEVICE_INFO_KEYBOARD" />
    </typedef>
    <typedef name="PRID_DEVICE_INFO_KEYBOARD">
      <ptr>
        <struct name="tagRID_DEVICE_INFO_KEYBOARD" />
      </ptr>
    </typedef>
    <struct name="tagRID_DEVICE_INFO_HID">
      <field offset="0" name="dwVendorId">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwProductId">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwVersionNumber">
        <type>DWORD</type>
      </field>
      <field offset="12" name="usUsagePage">
        <type>USHORT</type>
      </field>
      <field offset="14" name="usUsage">
        <type>USHORT</type>
      </field>
    </struct>
    <typedef name="RID_DEVICE_INFO_HID">
      <struct name="tagRID_DEVICE_INFO_HID" />
    </typedef>
    <typedef name="PRID_DEVICE_INFO_HID">
      <ptr>
        <struct name="tagRID_DEVICE_INFO_HID" />
      </ptr>
    </typedef>
    <struct name="tagRID_DEVICE_INFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwType">
        <type>DWORD</type>
      </field>
      <field offset="8">
        <union>
          <alt name="mouse">
            <type>RID_DEVICE_INFO_MOUSE</type>
          </alt>
          <alt name="keyboard">
            <type>RID_DEVICE_INFO_KEYBOARD</type>
          </alt>
          <alt name="hid">
            <type>RID_DEVICE_INFO_HID</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="RID_DEVICE_INFO">
      <struct name="tagRID_DEVICE_INFO" />
    </typedef>
    <typedef name="PRID_DEVICE_INFO">
      <ptr>
        <struct name="tagRID_DEVICE_INFO" />
      </ptr>
    </typedef>
    <typedef name="LPRID_DEVICE_INFO">
      <ptr>
        <struct name="tagRID_DEVICE_INFO" />
      </ptr>
    </typedef>
    <struct name="tagRAWINPUTDEVICE">
      <field offset="0" name="usUsagePage">
        <type>USHORT</type>
      </field>
      <field offset="2" name="usUsage">
        <type>USHORT</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="hwndTarget">
        <type>HWND</type>
      </field>
    </struct>
    <typedef name="RAWINPUTDEVICE">
      <struct name="tagRAWINPUTDEVICE" />
    </typedef>
    <typedef name="PRAWINPUTDEVICE">
      <ptr>
        <struct name="tagRAWINPUTDEVICE" />
      </ptr>
    </typedef>
    <typedef name="LPRAWINPUTDEVICE">
      <ptr>
        <struct name="tagRAWINPUTDEVICE" />
      </ptr>
    </typedef>
    <typedef name="PCRAWINPUTDEVICE">
      <ptr>
        <type>RAWINPUTDEVICE</type>
      </ptr>
    </typedef>
    <struct name="tagRAWINPUTDEVICELIST">
      <field offset="0" name="hDevice">
        <type>HANDLE</type>
      </field>
      <field offset="4" name="dwType">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="RAWINPUTDEVICELIST">
      <struct name="tagRAWINPUTDEVICELIST" />
    </typedef>
    <typedef name="PRAWINPUTDEVICELIST">
      <ptr>
        <struct name="tagRAWINPUTDEVICELIST" />
      </ptr>
    </typedef>
    <struct name="tagCHANGEFILTERSTRUCT">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="ExtStatus">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CHANGEFILTERSTRUCT">
      <struct name="tagCHANGEFILTERSTRUCT" />
    </typedef>
    <typedef name="PCHANGEFILTERSTRUCT">
      <ptr>
        <struct name="tagCHANGEFILTERSTRUCT" />
      </ptr>
    </typedef>
    <struct name="HGESTUREINFO__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HGESTUREINFO">
      <ptr>
        <struct name="HGESTUREINFO__" />
      </ptr>
    </typedef>
    <struct name="tagGESTUREINFO">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwID">
        <type>DWORD</type>
      </field>
      <field offset="12" name="hwndTarget">
        <type>HWND</type>
      </field>
      <field offset="16" name="ptsLocation">
        <type>POINTS</type>
      </field>
      <field offset="20" name="dwInstanceID">
        <type>DWORD</type>
      </field>
      <field offset="24" name="dwSequenceID">
        <type>DWORD</type>
      </field>
      <field offset="32" name="ullArguments">
        <type>ULONGLONG</type>
      </field>
      <field offset="40" name="cbExtraArgs">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="GESTUREINFO">
      <struct name="tagGESTUREINFO" />
    </typedef>
    <typedef name="PGESTUREINFO">
      <ptr>
        <struct name="tagGESTUREINFO" />
      </ptr>
    </typedef>
    <typedef name="PCGESTUREINFO">
      <ptr>
        <type>GESTUREINFO</type>
      </ptr>
    </typedef>
    <struct name="tagGESTURENOTIFYSTRUCT">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="hwndTarget">
        <type>HWND</type>
      </field>
      <field offset="12" name="ptsLocation">
        <type>POINTS</type>
      </field>
      <field offset="16" name="dwInstanceID">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="GESTURENOTIFYSTRUCT">
      <struct name="tagGESTURENOTIFYSTRUCT" />
    </typedef>
    <typedef name="PGESTURENOTIFYSTRUCT">
      <ptr>
        <struct name="tagGESTURENOTIFYSTRUCT" />
      </ptr>
    </typedef>
    <struct name="tagGESTURECONFIG">
      <field offset="0" name="dwID">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwWant">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwBlock">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="GESTURECONFIG">
      <struct name="tagGESTURECONFIG" />
    </typedef>
    <typedef name="PGESTURECONFIG">
      <ptr>
        <struct name="tagGESTURECONFIG" />
      </ptr>
    </typedef>
    <typedef name="LGRPID">
      <type>DWORD</type>
    </typedef>
    <typedef name="LCTYPE">
      <type>DWORD</type>
    </typedef>
    <typedef name="CALTYPE">
      <type>DWORD</type>
    </typedef>
    <typedef name="CALID">
      <type>DWORD</type>
    </typedef>
    <struct name="_cpinfo">
      <field offset="0" name="MaxCharSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="DefaultChar">
        <arr length="2">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="8" name="LeadByte">
        <arr length="12">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="CPINFO">
      <struct name="_cpinfo" />
    </typedef>
    <typedef name="LPCPINFO">
      <ptr>
        <struct name="_cpinfo" />
      </ptr>
    </typedef>
    <struct name="_cpinfoexA">
      <field offset="0" name="MaxCharSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="DefaultChar">
        <arr length="2">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="8" name="LeadByte">
        <arr length="12">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="20" name="UnicodeDefaultChar">
        <type>WCHAR</type>
      </field>
      <field offset="24" name="CodePage">
        <type>UINT</type>
      </field>
      <field offset="32" name="CodePageName">
        <arr length="260">
          <type>CHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="CPINFOEXA">
      <struct name="_cpinfoexA" />
    </typedef>
    <typedef name="LPCPINFOEXA">
      <ptr>
        <struct name="_cpinfoexA" />
      </ptr>
    </typedef>
    <struct name="_cpinfoexW">
      <field offset="0" name="MaxCharSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="DefaultChar">
        <arr length="2">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="8" name="LeadByte">
        <arr length="12">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="20" name="UnicodeDefaultChar">
        <type>WCHAR</type>
      </field>
      <field offset="24" name="CodePage">
        <type>UINT</type>
      </field>
      <field offset="32" name="CodePageName">
        <arr length="260">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="CPINFOEXW">
      <struct name="_cpinfoexW" />
    </typedef>
    <typedef name="LPCPINFOEXW">
      <ptr>
        <struct name="_cpinfoexW" />
      </ptr>
    </typedef>
    <typedef name="CPINFOEX">
      <type>CPINFOEXA</type>
    </typedef>
    <typedef name="LPCPINFOEX">
      <type>LPCPINFOEXA</type>
    </typedef>
    <struct name="_numberfmtA">
      <field offset="0" name="NumDigits">
        <type>UINT</type>
      </field>
      <field offset="4" name="LeadingZero">
        <type>UINT</type>
      </field>
      <field offset="8" name="Grouping">
        <type>UINT</type>
      </field>
      <field offset="12" name="lpDecimalSep">
        <type>LPSTR</type>
      </field>
      <field offset="16" name="lpThousandSep">
        <type>LPSTR</type>
      </field>
      <field offset="20" name="NegativeOrder">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="NUMBERFMTA">
      <struct name="_numberfmtA" />
    </typedef>
    <typedef name="LPNUMBERFMTA">
      <ptr>
        <struct name="_numberfmtA" />
      </ptr>
    </typedef>
    <struct name="_numberfmtW">
      <field offset="0" name="NumDigits">
        <type>UINT</type>
      </field>
      <field offset="4" name="LeadingZero">
        <type>UINT</type>
      </field>
      <field offset="8" name="Grouping">
        <type>UINT</type>
      </field>
      <field offset="12" name="lpDecimalSep">
        <type>LPWSTR</type>
      </field>
      <field offset="16" name="lpThousandSep">
        <type>LPWSTR</type>
      </field>
      <field offset="20" name="NegativeOrder">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="NUMBERFMTW">
      <struct name="_numberfmtW" />
    </typedef>
    <typedef name="LPNUMBERFMTW">
      <ptr>
        <struct name="_numberfmtW" />
      </ptr>
    </typedef>
    <typedef name="NUMBERFMT">
      <type>NUMBERFMTA</type>
    </typedef>
    <typedef name="LPNUMBERFMT">
      <type>LPNUMBERFMTA</type>
    </typedef>
    <struct name="_currencyfmtA">
      <field offset="0" name="NumDigits">
        <type>UINT</type>
      </field>
      <field offset="4" name="LeadingZero">
        <type>UINT</type>
      </field>
      <field offset="8" name="Grouping">
        <type>UINT</type>
      </field>
      <field offset="12" name="lpDecimalSep">
        <type>LPSTR</type>
      </field>
      <field offset="16" name="lpThousandSep">
        <type>LPSTR</type>
      </field>
      <field offset="20" name="NegativeOrder">
        <type>UINT</type>
      </field>
      <field offset="24" name="PositiveOrder">
        <type>UINT</type>
      </field>
      <field offset="28" name="lpCurrencySymbol">
        <type>LPSTR</type>
      </field>
    </struct>
    <typedef name="CURRENCYFMTA">
      <struct name="_currencyfmtA" />
    </typedef>
    <typedef name="LPCURRENCYFMTA">
      <ptr>
        <struct name="_currencyfmtA" />
      </ptr>
    </typedef>
    <struct name="_currencyfmtW">
      <field offset="0" name="NumDigits">
        <type>UINT</type>
      </field>
      <field offset="4" name="LeadingZero">
        <type>UINT</type>
      </field>
      <field offset="8" name="Grouping">
        <type>UINT</type>
      </field>
      <field offset="12" name="lpDecimalSep">
        <type>LPWSTR</type>
      </field>
      <field offset="16" name="lpThousandSep">
        <type>LPWSTR</type>
      </field>
      <field offset="20" name="NegativeOrder">
        <type>UINT</type>
      </field>
      <field offset="24" name="PositiveOrder">
        <type>UINT</type>
      </field>
      <field offset="28" name="lpCurrencySymbol">
        <type>LPWSTR</type>
      </field>
    </struct>
    <typedef name="CURRENCYFMTW">
      <struct name="_currencyfmtW" />
    </typedef>
    <typedef name="LPCURRENCYFMTW">
      <ptr>
        <struct name="_currencyfmtW" />
      </ptr>
    </typedef>
    <typedef name="CURRENCYFMT">
      <type>CURRENCYFMTA</type>
    </typedef>
    <typedef name="LPCURRENCYFMT">
      <type>LPCURRENCYFMTA</type>
    </typedef>
    <enum name="SYSNLS_FUNCTION">
      <member name="COMPARE_STRING" value="1" />
    </enum>
    <typedef name="NLS_FUNCTION">
      <type>DWORD</type>
    </typedef>
    <struct name="_nlsversioninfo">
      <field offset="0" name="dwNLSVersionInfoSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwNLSVersion">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwDefinedVersion">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="NLSVERSIONINFO">
      <struct name="_nlsversioninfo" />
    </typedef>
    <typedef name="LPNLSVERSIONINFO">
      <ptr>
        <struct name="_nlsversioninfo" />
      </ptr>
    </typedef>
    <struct name="_nlsversioninfoex">
      <field offset="0" name="dwNLSVersionInfoSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwNLSVersion">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwDefinedVersion">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwEffectiveId">
        <type>DWORD</type>
      </field>
      <field offset="16" name="guidCustomVersion">
        <type>GUID</type>
      </field>
    </struct>
    <typedef name="NLSVERSIONINFOEX">
      <struct name="_nlsversioninfoex" />
    </typedef>
    <typedef name="LPNLSVERSIONINFOEX">
      <ptr>
        <struct name="_nlsversioninfoex" />
      </ptr>
    </typedef>
    <typedef name="GEOID">
      <type>LONG</type>
    </typedef>
    <typedef name="GEOTYPE">
      <type>DWORD</type>
    </typedef>
    <typedef name="GEOCLASS">
      <type>DWORD</type>
    </typedef>
    <enum name="SYSGEOTYPE">
      <member name="GEO_NATION" value="1" />
      <member name="GEO_LATITUDE" value="2" />
      <member name="GEO_LONGITUDE" value="3" />
      <member name="GEO_ISO2" value="4" />
      <member name="GEO_ISO3" value="5" />
      <member name="GEO_RFC1766" value="6" />
      <member name="GEO_LCID" value="7" />
      <member name="GEO_FRIENDLYNAME" value="8" />
      <member name="GEO_OFFICIALNAME" value="9" />
      <member name="GEO_TIMEZONES" value="10" />
      <member name="GEO_OFFICIALLANGUAGES" value="11" />
    </enum>
    <enum name="SYSGEOCLASS">
      <member name="GEOCLASS_NATION" value="16" />
      <member name="GEOCLASS_REGION" value="14" />
    </enum>
    <enum name="_NORM_FORM">
      <member name="NormalizationOther" value="0" />
      <member name="NormalizationC" value="1" />
      <member name="NormalizationD" value="2" />
      <member name="NormalizationKC" value="5" />
      <member name="NormalizationKD" value="6" />
    </enum>
    <typedef name="NORM_FORM">
      <enum name="_NORM_FORM" />
    </typedef>
    <typedef name="LANGUAGEGROUP_ENUMPROCA">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>LGRPID</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPSTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPSTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LONG_PTR</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="LANGGROUPLOCALE_ENUMPROCA">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>LGRPID</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LCID</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPSTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LONG_PTR</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="UILANGUAGE_ENUMPROCA">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>LPSTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LONG_PTR</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="LOCALE_ENUMPROCA">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>LPSTR</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="CODEPAGE_ENUMPROCA">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>LPSTR</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="DATEFMT_ENUMPROCA">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>LPSTR</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="DATEFMT_ENUMPROCEXA">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>LPSTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>CALID</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="TIMEFMT_ENUMPROCA">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>LPSTR</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="CALINFO_ENUMPROCA">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>LPSTR</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="CALINFO_ENUMPROCEXA">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>LPSTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>CALID</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="LANGUAGEGROUP_ENUMPROCW">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>LGRPID</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPWSTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPWSTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LONG_PTR</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="LANGGROUPLOCALE_ENUMPROCW">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>LGRPID</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LCID</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPWSTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LONG_PTR</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="UILANGUAGE_ENUMPROCW">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>LPWSTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LONG_PTR</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="LOCALE_ENUMPROCW">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>LPWSTR</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="CODEPAGE_ENUMPROCW">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>LPWSTR</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="DATEFMT_ENUMPROCW">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>LPWSTR</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="DATEFMT_ENUMPROCEXW">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>LPWSTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>CALID</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="TIMEFMT_ENUMPROCW">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>LPWSTR</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="CALINFO_ENUMPROCW">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>LPWSTR</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="CALINFO_ENUMPROCEXW">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>LPWSTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>CALID</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="GEO_ENUMPROC">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>GEOID</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="_FILEMUIINFO">
      <field offset="0" name="dwSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwVersion">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwFileType">
        <type>DWORD</type>
      </field>
      <field offset="16" name="pChecksum">
        <arr length="16">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="32" name="pServiceChecksum">
        <arr length="16">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="48" name="dwLanguageNameOffset">
        <type>DWORD</type>
      </field>
      <field offset="52" name="dwTypeIDMainSize">
        <type>DWORD</type>
      </field>
      <field offset="56" name="dwTypeIDMainOffset">
        <type>DWORD</type>
      </field>
      <field offset="60" name="dwTypeNameMainOffset">
        <type>DWORD</type>
      </field>
      <field offset="64" name="dwTypeIDMUISize">
        <type>DWORD</type>
      </field>
      <field offset="68" name="dwTypeIDMUIOffset">
        <type>DWORD</type>
      </field>
      <field offset="72" name="dwTypeNameMUIOffset">
        <type>DWORD</type>
      </field>
      <field offset="80" name="abBuffer">
        <arr length="8">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="FILEMUIINFO">
      <struct name="_FILEMUIINFO" />
    </typedef>
    <typedef name="PFILEMUIINFO">
      <ptr>
        <struct name="_FILEMUIINFO" />
      </ptr>
    </typedef>
    <typedef name="CALINFO_ENUMPROCEXEX">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>LPWSTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>CALID</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPWSTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="DATEFMT_ENUMPROCEXEX">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>LPWSTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>CALID</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="TIMEFMT_ENUMPROCEX">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>LPWSTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="LOCALE_ENUMPROCEX">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>LPWSTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="_COORD">
      <field offset="0" name="X">
        <type>SHORT</type>
      </field>
      <field offset="2" name="Y">
        <type>SHORT</type>
      </field>
    </struct>
    <typedef name="COORD">
      <struct name="_COORD" />
    </typedef>
    <typedef name="PCOORD">
      <ptr>
        <struct name="_COORD" />
      </ptr>
    </typedef>
    <struct name="_SMALL_RECT">
      <field offset="0" name="Left">
        <type>SHORT</type>
      </field>
      <field offset="2" name="Top">
        <type>SHORT</type>
      </field>
      <field offset="4" name="Right">
        <type>SHORT</type>
      </field>
      <field offset="6" name="Bottom">
        <type>SHORT</type>
      </field>
    </struct>
    <typedef name="SMALL_RECT">
      <struct name="_SMALL_RECT" />
    </typedef>
    <typedef name="PSMALL_RECT">
      <ptr>
        <struct name="_SMALL_RECT" />
      </ptr>
    </typedef>
    <struct name="_KEY_EVENT_RECORD">
      <field offset="0" name="bKeyDown">
        <type>BOOL</type>
      </field>
      <field offset="4" name="wRepeatCount">
        <type>WORD</type>
      </field>
      <field offset="6" name="wVirtualKeyCode">
        <type>WORD</type>
      </field>
      <field offset="8" name="wVirtualScanCode">
        <type>WORD</type>
      </field>
      <field offset="10" name="uChar">
        <union>
          <alt name="UnicodeChar">
            <type>WCHAR</type>
          </alt>
          <alt name="AsciiChar">
            <type>CHAR</type>
          </alt>
        </union>
      </field>
      <field offset="12" name="dwControlKeyState">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="KEY_EVENT_RECORD">
      <struct name="_KEY_EVENT_RECORD" />
    </typedef>
    <typedef name="PKEY_EVENT_RECORD">
      <ptr>
        <struct name="_KEY_EVENT_RECORD" />
      </ptr>
    </typedef>
    <struct name="_MOUSE_EVENT_RECORD">
      <field offset="0" name="dwMousePosition">
        <type>COORD</type>
      </field>
      <field offset="4" name="dwButtonState">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwControlKeyState">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwEventFlags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="MOUSE_EVENT_RECORD">
      <struct name="_MOUSE_EVENT_RECORD" />
    </typedef>
    <typedef name="PMOUSE_EVENT_RECORD">
      <ptr>
        <struct name="_MOUSE_EVENT_RECORD" />
      </ptr>
    </typedef>
    <struct name="_WINDOW_BUFFER_SIZE_RECORD">
      <field offset="0" name="dwSize">
        <type>COORD</type>
      </field>
    </struct>
    <typedef name="WINDOW_BUFFER_SIZE_RECORD">
      <struct name="_WINDOW_BUFFER_SIZE_RECORD" />
    </typedef>
    <typedef name="PWINDOW_BUFFER_SIZE_RECORD">
      <ptr>
        <struct name="_WINDOW_BUFFER_SIZE_RECORD" />
      </ptr>
    </typedef>
    <struct name="_MENU_EVENT_RECORD">
      <field offset="0" name="dwCommandId">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="MENU_EVENT_RECORD">
      <struct name="_MENU_EVENT_RECORD" />
    </typedef>
    <typedef name="PMENU_EVENT_RECORD">
      <ptr>
        <struct name="_MENU_EVENT_RECORD" />
      </ptr>
    </typedef>
    <struct name="_FOCUS_EVENT_RECORD">
      <field offset="0" name="bSetFocus">
        <type>BOOL</type>
      </field>
    </struct>
    <typedef name="FOCUS_EVENT_RECORD">
      <struct name="_FOCUS_EVENT_RECORD" />
    </typedef>
    <typedef name="PFOCUS_EVENT_RECORD">
      <ptr>
        <struct name="_FOCUS_EVENT_RECORD" />
      </ptr>
    </typedef>
    <struct name="_INPUT_RECORD">
      <field offset="0" name="EventType">
        <type>WORD</type>
      </field>
      <field offset="8" name="Event">
        <union>
          <alt name="KeyEvent">
            <type>KEY_EVENT_RECORD</type>
          </alt>
          <alt name="MouseEvent">
            <type>MOUSE_EVENT_RECORD</type>
          </alt>
          <alt name="WindowBufferSizeEvent">
            <type>WINDOW_BUFFER_SIZE_RECORD</type>
          </alt>
          <alt name="MenuEvent">
            <type>MENU_EVENT_RECORD</type>
          </alt>
          <alt name="FocusEvent">
            <type>FOCUS_EVENT_RECORD</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="INPUT_RECORD">
      <struct name="_INPUT_RECORD" />
    </typedef>
    <typedef name="PINPUT_RECORD">
      <ptr>
        <struct name="_INPUT_RECORD" />
      </ptr>
    </typedef>
    <struct name="_CHAR_INFO">
      <field offset="0" name="Char">
        <union>
          <alt name="UnicodeChar">
            <type>WCHAR</type>
          </alt>
          <alt name="AsciiChar">
            <type>CHAR</type>
          </alt>
        </union>
      </field>
      <field offset="2" name="Attributes">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="CHAR_INFO">
      <struct name="_CHAR_INFO" />
    </typedef>
    <typedef name="PCHAR_INFO">
      <ptr>
        <struct name="_CHAR_INFO" />
      </ptr>
    </typedef>
    <struct name="_CONSOLE_SCREEN_BUFFER_INFO">
      <field offset="0" name="dwSize">
        <type>COORD</type>
      </field>
      <field offset="4" name="dwCursorPosition">
        <type>COORD</type>
      </field>
      <field offset="8" name="wAttributes">
        <type>WORD</type>
      </field>
      <field offset="16" name="srWindow">
        <type>SMALL_RECT</type>
      </field>
      <field offset="24" name="dwMaximumWindowSize">
        <type>COORD</type>
      </field>
    </struct>
    <typedef name="CONSOLE_SCREEN_BUFFER_INFO">
      <struct name="_CONSOLE_SCREEN_BUFFER_INFO" />
    </typedef>
    <typedef name="PCONSOLE_SCREEN_BUFFER_INFO">
      <ptr>
        <struct name="_CONSOLE_SCREEN_BUFFER_INFO" />
      </ptr>
    </typedef>
    <struct name="_CONSOLE_SCREEN_BUFFER_INFOEX">
      <field offset="0" name="cbSize">
        <type>ULONG</type>
      </field>
      <field offset="4" name="dwSize">
        <type>COORD</type>
      </field>
      <field offset="8" name="dwCursorPosition">
        <type>COORD</type>
      </field>
      <field offset="12" name="wAttributes">
        <type>WORD</type>
      </field>
      <field offset="16" name="srWindow">
        <type>SMALL_RECT</type>
      </field>
      <field offset="24" name="dwMaximumWindowSize">
        <type>COORD</type>
      </field>
      <field offset="28" name="wPopupAttributes">
        <type>WORD</type>
      </field>
      <field offset="32" name="bFullscreenSupported">
        <type>BOOL</type>
      </field>
      <field offset="40" name="ColorTable">
        <arr length="16">
          <type>COLORREF</type>
        </arr>
      </field>
    </struct>
    <typedef name="CONSOLE_SCREEN_BUFFER_INFOEX">
      <struct name="_CONSOLE_SCREEN_BUFFER_INFOEX" />
    </typedef>
    <typedef name="PCONSOLE_SCREEN_BUFFER_INFOEX">
      <ptr>
        <struct name="_CONSOLE_SCREEN_BUFFER_INFOEX" />
      </ptr>
    </typedef>
    <struct name="_CONSOLE_CURSOR_INFO">
      <field offset="0" name="dwSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="bVisible">
        <type>BOOL</type>
      </field>
    </struct>
    <typedef name="CONSOLE_CURSOR_INFO">
      <struct name="_CONSOLE_CURSOR_INFO" />
    </typedef>
    <typedef name="PCONSOLE_CURSOR_INFO">
      <ptr>
        <struct name="_CONSOLE_CURSOR_INFO" />
      </ptr>
    </typedef>
    <struct name="_CONSOLE_FONT_INFO">
      <field offset="0" name="nFont">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwFontSize">
        <type>COORD</type>
      </field>
    </struct>
    <typedef name="CONSOLE_FONT_INFO">
      <struct name="_CONSOLE_FONT_INFO" />
    </typedef>
    <typedef name="PCONSOLE_FONT_INFO">
      <ptr>
        <struct name="_CONSOLE_FONT_INFO" />
      </ptr>
    </typedef>
    <struct name="_CONSOLE_FONT_INFOEX">
      <field offset="0" name="cbSize">
        <type>ULONG</type>
      </field>
      <field offset="4" name="nFont">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwFontSize">
        <type>COORD</type>
      </field>
      <field offset="12" name="FontFamily">
        <type>UINT</type>
      </field>
      <field offset="16" name="FontWeight">
        <type>UINT</type>
      </field>
      <field offset="24" name="FaceName">
        <arr length="32">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="CONSOLE_FONT_INFOEX">
      <struct name="_CONSOLE_FONT_INFOEX" />
    </typedef>
    <typedef name="PCONSOLE_FONT_INFOEX">
      <ptr>
        <struct name="_CONSOLE_FONT_INFOEX" />
      </ptr>
    </typedef>
    <struct name="_CONSOLE_HISTORY_INFO">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="HistoryBufferSize">
        <type>UINT</type>
      </field>
      <field offset="8" name="NumberOfHistoryBuffers">
        <type>UINT</type>
      </field>
      <field offset="12" name="dwFlags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CONSOLE_HISTORY_INFO">
      <struct name="_CONSOLE_HISTORY_INFO" />
    </typedef>
    <typedef name="PCONSOLE_HISTORY_INFO">
      <ptr>
        <struct name="_CONSOLE_HISTORY_INFO" />
      </ptr>
    </typedef>
    <struct name="_CONSOLE_SELECTION_INFO">
      <field offset="0" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwSelectionAnchor">
        <type>COORD</type>
      </field>
      <field offset="8" name="srSelection">
        <type>SMALL_RECT</type>
      </field>
    </struct>
    <typedef name="CONSOLE_SELECTION_INFO">
      <struct name="_CONSOLE_SELECTION_INFO" />
    </typedef>
    <typedef name="PCONSOLE_SELECTION_INFO">
      <ptr>
        <struct name="_CONSOLE_SELECTION_INFO" />
      </ptr>
    </typedef>
    <typedef name="PHANDLER_ROUTINE">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="CtrlType">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="_CONSOLE_READCONSOLE_CONTROL">
      <field offset="0" name="nLength">
        <type>ULONG</type>
      </field>
      <field offset="4" name="nInitialChars">
        <type>ULONG</type>
      </field>
      <field offset="8" name="dwCtrlWakeupMask">
        <type>ULONG</type>
      </field>
      <field offset="12" name="dwControlKeyState">
        <type>ULONG</type>
      </field>
    </struct>
    <typedef name="CONSOLE_READCONSOLE_CONTROL">
      <struct name="_CONSOLE_READCONSOLE_CONTROL" />
    </typedef>
    <typedef name="PCONSOLE_READCONSOLE_CONTROL">
      <ptr>
        <struct name="_CONSOLE_READCONSOLE_CONTROL" />
      </ptr>
    </typedef>
    <struct name="tagVS_FIXEDFILEINFO">
      <field offset="0" name="dwSignature">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwStrucVersion">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwFileVersionMS">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwFileVersionLS">
        <type>DWORD</type>
      </field>
      <field offset="16" name="dwProductVersionMS">
        <type>DWORD</type>
      </field>
      <field offset="20" name="dwProductVersionLS">
        <type>DWORD</type>
      </field>
      <field offset="24" name="dwFileFlagsMask">
        <type>DWORD</type>
      </field>
      <field offset="28" name="dwFileFlags">
        <type>DWORD</type>
      </field>
      <field offset="32" name="dwFileOS">
        <type>DWORD</type>
      </field>
      <field offset="36" name="dwFileType">
        <type>DWORD</type>
      </field>
      <field offset="40" name="dwFileSubtype">
        <type>DWORD</type>
      </field>
      <field offset="44" name="dwFileDateMS">
        <type>DWORD</type>
      </field>
      <field offset="48" name="dwFileDateLS">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="VS_FIXEDFILEINFO">
      <struct name="tagVS_FIXEDFILEINFO" />
    </typedef>
    <typedef name="REGSAM">
      <type>ACCESS_MASK</type>
    </typedef>
    <struct name="val_context">
      <field offset="0" name="valuelen">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="4" name="value_context">
        <type>LPVOID</type>
      </field>
      <field offset="8" name="val_buff_ptr">
        <type>LPVOID</type>
      </field>
    </struct>
    <typedef name="PVALCONTEXT">
      <ptr>
        <struct name="val_context" />
      </ptr>
    </typedef>
    <struct name="pvalueA">
      <field offset="0" name="pv_valuename">
        <type>LPSTR</type>
      </field>
      <field offset="4" name="pv_valuelen">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="pv_value_context">
        <type>LPVOID</type>
      </field>
      <field offset="12" name="pv_type">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PVALUEA">
      <struct name="pvalueA" />
    </typedef>
    <typedef name="PPVALUEA">
      <ptr>
        <struct name="pvalueA" />
      </ptr>
    </typedef>
    <struct name="pvalueW">
      <field offset="0" name="pv_valuename">
        <type>LPWSTR</type>
      </field>
      <field offset="4" name="pv_valuelen">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="pv_value_context">
        <type>LPVOID</type>
      </field>
      <field offset="12" name="pv_type">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PVALUEW">
      <struct name="pvalueW" />
    </typedef>
    <typedef name="PPVALUEW">
      <ptr>
        <struct name="pvalueW" />
      </ptr>
    </typedef>
    <typedef name="PVALUE">
      <type>PVALUEA</type>
    </typedef>
    <typedef name="PPVALUE">
      <type>PPVALUEA</type>
    </typedef>
    <typedef name="QUERYHANDLER">
      <fn convention="__cdecl">
        <return>
          <type>DWORD</type>
          <reg>eax</reg>
        </return>
        <arg name="keycontext">
          <type>LPVOID</type>
          <stack size="4" />
        </arg>
        <arg name="val_list">
          <type>PVALCONTEXT</type>
          <stack size="4" />
        </arg>
        <arg name="num_vals">
          <type>DWORD</type>
          <stack size="4" />
        </arg>
        <arg name="outputbuffer">
          <type>LPVOID</type>
          <stack size="4" />
        </arg>
        <arg name="total_outlen">
          <ptr>
            <type>DWORD</type>
          </ptr>
          <stack size="4" />
        </arg>
        <arg name="input_blen">
          <type>DWORD</type>
          <stack size="4" />
        </arg>
      </fn>
    </typedef>
    <typedef name="PQUERYHANDLER">
      <ptr>
        <type>QUERYHANDLER</type>
      </ptr>
    </typedef>
    <struct name="provider_info">
      <field offset="0" name="pi_R0_1val">
        <type>PQUERYHANDLER</type>
      </field>
      <field offset="4" name="pi_R0_allvals">
        <type>PQUERYHANDLER</type>
      </field>
      <field offset="8" name="pi_R3_1val">
        <type>PQUERYHANDLER</type>
      </field>
      <field offset="12" name="pi_R3_allvals">
        <type>PQUERYHANDLER</type>
      </field>
      <field offset="16" name="pi_flags">
        <type>DWORD</type>
      </field>
      <field offset="20" name="pi_key_context">
        <type>LPVOID</type>
      </field>
    </struct>
    <typedef name="REG_PROVIDER">
      <struct name="provider_info" />
    </typedef>
    <typedef name="PPROVIDER">
      <ptr>
        <struct name="provider_info" />
      </ptr>
    </typedef>
    <struct name="value_entA">
      <field offset="0" name="ve_valuename">
        <type>LPSTR</type>
      </field>
      <field offset="4" name="ve_valuelen">
        <type>DWORD</type>
      </field>
      <field offset="8" name="ve_valueptr">
        <type>DWORD_PTR</type>
      </field>
      <field offset="12" name="ve_type">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="VALENTA">
      <struct name="value_entA" />
    </typedef>
    <typedef name="PVALENTA">
      <ptr>
        <struct name="value_entA" />
      </ptr>
    </typedef>
    <struct name="value_entW">
      <field offset="0" name="ve_valuename">
        <type>LPWSTR</type>
      </field>
      <field offset="4" name="ve_valuelen">
        <type>DWORD</type>
      </field>
      <field offset="8" name="ve_valueptr">
        <type>DWORD_PTR</type>
      </field>
      <field offset="12" name="ve_type">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="VALENTW">
      <struct name="value_entW" />
    </typedef>
    <typedef name="PVALENTW">
      <ptr>
        <struct name="value_entW" />
      </ptr>
    </typedef>
    <typedef name="VALENT">
      <type>VALENTA</type>
    </typedef>
    <typedef name="PVALENT">
      <type>PVALENTA</type>
    </typedef>
    <typedef name="LSTATUS">
      <type>LONG</type>
    </typedef>
    <struct name="_NETRESOURCEA">
      <field offset="0" name="dwScope">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwType">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwDisplayType">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwUsage">
        <type>DWORD</type>
      </field>
      <field offset="16" name="lpLocalName">
        <type>LPSTR</type>
      </field>
      <field offset="20" name="lpRemoteName">
        <type>LPSTR</type>
      </field>
      <field offset="24" name="lpComment">
        <type>LPSTR</type>
      </field>
      <field offset="28" name="lpProvider">
        <type>LPSTR</type>
      </field>
    </struct>
    <typedef name="NETRESOURCEA">
      <struct name="_NETRESOURCEA" />
    </typedef>
    <typedef name="LPNETRESOURCEA">
      <ptr>
        <struct name="_NETRESOURCEA" />
      </ptr>
    </typedef>
    <struct name="_NETRESOURCEW">
      <field offset="0" name="dwScope">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwType">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwDisplayType">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwUsage">
        <type>DWORD</type>
      </field>
      <field offset="16" name="lpLocalName">
        <type>LPWSTR</type>
      </field>
      <field offset="20" name="lpRemoteName">
        <type>LPWSTR</type>
      </field>
      <field offset="24" name="lpComment">
        <type>LPWSTR</type>
      </field>
      <field offset="28" name="lpProvider">
        <type>LPWSTR</type>
      </field>
    </struct>
    <typedef name="NETRESOURCEW">
      <struct name="_NETRESOURCEW" />
    </typedef>
    <typedef name="LPNETRESOURCEW">
      <ptr>
        <struct name="_NETRESOURCEW" />
      </ptr>
    </typedef>
    <typedef name="NETRESOURCE">
      <type>NETRESOURCEA</type>
    </typedef>
    <typedef name="LPNETRESOURCE">
      <type>LPNETRESOURCEA</type>
    </typedef>
    <struct name="_CONNECTDLGSTRUCTA">
      <field offset="0" name="cbStructure">
        <type>DWORD</type>
      </field>
      <field offset="4" name="hwndOwner">
        <type>HWND</type>
      </field>
      <field offset="8" name="lpConnRes">
        <type>LPNETRESOURCEA</type>
      </field>
      <field offset="12" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="16" name="dwDevNum">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CONNECTDLGSTRUCTA">
      <struct name="_CONNECTDLGSTRUCTA" />
    </typedef>
    <typedef name="LPCONNECTDLGSTRUCTA">
      <ptr>
        <struct name="_CONNECTDLGSTRUCTA" />
      </ptr>
    </typedef>
    <struct name="_CONNECTDLGSTRUCTW">
      <field offset="0" name="cbStructure">
        <type>DWORD</type>
      </field>
      <field offset="4" name="hwndOwner">
        <type>HWND</type>
      </field>
      <field offset="8" name="lpConnRes">
        <type>LPNETRESOURCEW</type>
      </field>
      <field offset="12" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="16" name="dwDevNum">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CONNECTDLGSTRUCTW">
      <struct name="_CONNECTDLGSTRUCTW" />
    </typedef>
    <typedef name="LPCONNECTDLGSTRUCTW">
      <ptr>
        <struct name="_CONNECTDLGSTRUCTW" />
      </ptr>
    </typedef>
    <typedef name="CONNECTDLGSTRUCT">
      <type>CONNECTDLGSTRUCTA</type>
    </typedef>
    <typedef name="LPCONNECTDLGSTRUCT">
      <type>LPCONNECTDLGSTRUCTA</type>
    </typedef>
    <struct name="_DISCDLGSTRUCTA">
      <field offset="0" name="cbStructure">
        <type>DWORD</type>
      </field>
      <field offset="4" name="hwndOwner">
        <type>HWND</type>
      </field>
      <field offset="8" name="lpLocalName">
        <type>LPSTR</type>
      </field>
      <field offset="12" name="lpRemoteName">
        <type>LPSTR</type>
      </field>
      <field offset="16" name="dwFlags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="DISCDLGSTRUCTA">
      <struct name="_DISCDLGSTRUCTA" />
    </typedef>
    <typedef name="LPDISCDLGSTRUCTA">
      <ptr>
        <struct name="_DISCDLGSTRUCTA" />
      </ptr>
    </typedef>
    <struct name="_DISCDLGSTRUCTW">
      <field offset="0" name="cbStructure">
        <type>DWORD</type>
      </field>
      <field offset="4" name="hwndOwner">
        <type>HWND</type>
      </field>
      <field offset="8" name="lpLocalName">
        <type>LPWSTR</type>
      </field>
      <field offset="12" name="lpRemoteName">
        <type>LPWSTR</type>
      </field>
      <field offset="16" name="dwFlags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="DISCDLGSTRUCTW">
      <struct name="_DISCDLGSTRUCTW" />
    </typedef>
    <typedef name="LPDISCDLGSTRUCTW">
      <ptr>
        <struct name="_DISCDLGSTRUCTW" />
      </ptr>
    </typedef>
    <typedef name="DISCDLGSTRUCT">
      <type>DISCDLGSTRUCTA</type>
    </typedef>
    <typedef name="LPDISCDLGSTRUCT">
      <type>LPDISCDLGSTRUCTA</type>
    </typedef>
    <struct name="_UNIVERSAL_NAME_INFOA">
      <field offset="0" name="lpUniversalName">
        <type>LPSTR</type>
      </field>
    </struct>
    <typedef name="UNIVERSAL_NAME_INFOA">
      <struct name="_UNIVERSAL_NAME_INFOA" />
    </typedef>
    <typedef name="LPUNIVERSAL_NAME_INFOA">
      <ptr>
        <struct name="_UNIVERSAL_NAME_INFOA" />
      </ptr>
    </typedef>
    <struct name="_UNIVERSAL_NAME_INFOW">
      <field offset="0" name="lpUniversalName">
        <type>LPWSTR</type>
      </field>
    </struct>
    <typedef name="UNIVERSAL_NAME_INFOW">
      <struct name="_UNIVERSAL_NAME_INFOW" />
    </typedef>
    <typedef name="LPUNIVERSAL_NAME_INFOW">
      <ptr>
        <struct name="_UNIVERSAL_NAME_INFOW" />
      </ptr>
    </typedef>
    <typedef name="UNIVERSAL_NAME_INFO">
      <type>UNIVERSAL_NAME_INFOA</type>
    </typedef>
    <typedef name="LPUNIVERSAL_NAME_INFO">
      <type>LPUNIVERSAL_NAME_INFOA</type>
    </typedef>
    <struct name="_REMOTE_NAME_INFOA">
      <field offset="0" name="lpUniversalName">
        <type>LPSTR</type>
      </field>
      <field offset="4" name="lpConnectionName">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="lpRemainingPath">
        <type>LPSTR</type>
      </field>
    </struct>
    <typedef name="REMOTE_NAME_INFOA">
      <struct name="_REMOTE_NAME_INFOA" />
    </typedef>
    <typedef name="LPREMOTE_NAME_INFOA">
      <ptr>
        <struct name="_REMOTE_NAME_INFOA" />
      </ptr>
    </typedef>
    <struct name="_REMOTE_NAME_INFOW">
      <field offset="0" name="lpUniversalName">
        <type>LPWSTR</type>
      </field>
      <field offset="4" name="lpConnectionName">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="lpRemainingPath">
        <type>LPWSTR</type>
      </field>
    </struct>
    <typedef name="REMOTE_NAME_INFOW">
      <struct name="_REMOTE_NAME_INFOW" />
    </typedef>
    <typedef name="LPREMOTE_NAME_INFOW">
      <ptr>
        <struct name="_REMOTE_NAME_INFOW" />
      </ptr>
    </typedef>
    <typedef name="REMOTE_NAME_INFO">
      <type>REMOTE_NAME_INFOA</type>
    </typedef>
    <typedef name="LPREMOTE_NAME_INFO">
      <type>LPREMOTE_NAME_INFOA</type>
    </typedef>
    <struct name="_NETINFOSTRUCT">
      <field offset="0" name="cbStructure">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwProviderVersion">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwStatus">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwCharacteristics">
        <type>DWORD</type>
      </field>
      <field offset="16" name="dwHandle">
        <type>ULONG_PTR</type>
      </field>
      <field offset="20" name="wNetType">
        <type>WORD</type>
      </field>
      <field offset="24" name="dwPrinters">
        <type>DWORD</type>
      </field>
      <field offset="28" name="dwDrives">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="NETINFOSTRUCT">
      <struct name="_NETINFOSTRUCT" />
    </typedef>
    <typedef name="LPNETINFOSTRUCT">
      <ptr>
        <struct name="_NETINFOSTRUCT" />
      </ptr>
    </typedef>
    <struct name="_NETCONNECTINFOSTRUCT">
      <field offset="0" name="cbStructure">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwSpeed">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwDelay">
        <type>DWORD</type>
      </field>
      <field offset="16" name="dwOptDataSize">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="NETCONNECTINFOSTRUCT">
      <struct name="_NETCONNECTINFOSTRUCT" />
    </typedef>
    <typedef name="LPNETCONNECTINFOSTRUCT">
      <ptr>
        <struct name="_NETCONNECTINFOSTRUCT" />
      </ptr>
    </typedef>
    <struct name="struct_85">
      <field offset="0" name="bAppReturnCode">
        <prim domain="UnsignedInt" size="2" />
      </field>
      <field offset="2" name="reserved">
        <prim domain="UnsignedInt" size="2" />
      </field>
      <field offset="4" name="fBusy">
        <prim domain="UnsignedInt" size="2" />
      </field>
      <field offset="6" name="fAck">
        <prim domain="UnsignedInt" size="2" />
      </field>
    </struct>
    <typedef name="DDEACK">
      <struct name="struct_85" />
    </typedef>
    <struct name="struct_86">
      <field offset="0" name="reserved">
        <prim domain="UnsignedInt" size="2" />
      </field>
      <field offset="2" name="fDeferUpd">
        <prim domain="UnsignedInt" size="2" />
      </field>
      <field offset="4" name="fAckReq">
        <prim domain="UnsignedInt" size="2" />
      </field>
      <field offset="6" name="cfFormat">
        <prim domain="SignedInt" size="2" />
      </field>
    </struct>
    <typedef name="DDEADVISE">
      <struct name="struct_86" />
    </typedef>
    <struct name="struct_87">
      <field offset="0" name="unused">
        <prim domain="UnsignedInt" size="2" />
      </field>
      <field offset="2" name="fResponse">
        <prim domain="UnsignedInt" size="2" />
      </field>
      <field offset="4" name="fRelease">
        <prim domain="UnsignedInt" size="2" />
      </field>
      <field offset="6" name="reserved">
        <prim domain="UnsignedInt" size="2" />
      </field>
      <field offset="8" name="fAckReq">
        <prim domain="UnsignedInt" size="2" />
      </field>
      <field offset="10" name="cfFormat">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="12" name="Value">
        <arr length="1">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="DDEDATA">
      <struct name="struct_87" />
    </typedef>
    <struct name="struct_88">
      <field offset="0" name="unused">
        <prim domain="UnsignedInt" size="2" />
      </field>
      <field offset="2" name="fRelease">
        <prim domain="UnsignedInt" size="2" />
      </field>
      <field offset="4" name="fReserved">
        <prim domain="UnsignedInt" size="2" />
      </field>
      <field offset="6" name="cfFormat">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="8" name="Value">
        <arr length="1">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="DDEPOKE">
      <struct name="struct_88" />
    </typedef>
    <struct name="struct_89">
      <field offset="0" name="unused">
        <prim domain="UnsignedInt" size="2" />
      </field>
      <field offset="2" name="fRelease">
        <prim domain="UnsignedInt" size="2" />
      </field>
      <field offset="4" name="fDeferUpd">
        <prim domain="UnsignedInt" size="2" />
      </field>
      <field offset="6" name="fAckReq">
        <prim domain="UnsignedInt" size="2" />
      </field>
      <field offset="8" name="cfFormat">
        <prim domain="SignedInt" size="2" />
      </field>
    </struct>
    <typedef name="DDELN">
      <struct name="struct_89" />
    </typedef>
    <struct name="struct_90">
      <field offset="0" name="unused">
        <prim domain="UnsignedInt" size="2" />
      </field>
      <field offset="2" name="fAck">
        <prim domain="UnsignedInt" size="2" />
      </field>
      <field offset="4" name="fRelease">
        <prim domain="UnsignedInt" size="2" />
      </field>
      <field offset="6" name="fReserved">
        <prim domain="UnsignedInt" size="2" />
      </field>
      <field offset="8" name="fAckReq">
        <prim domain="UnsignedInt" size="2" />
      </field>
      <field offset="10" name="cfFormat">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="12" name="rgb">
        <arr length="1">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="DDEUP">
      <struct name="struct_90" />
    </typedef>
    <struct name="HCONVLIST__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HCONVLIST">
      <ptr>
        <struct name="HCONVLIST__" />
      </ptr>
    </typedef>
    <struct name="HCONV__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HCONV">
      <ptr>
        <struct name="HCONV__" />
      </ptr>
    </typedef>
    <struct name="HSZ__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HSZ">
      <ptr>
        <struct name="HSZ__" />
      </ptr>
    </typedef>
    <struct name="HDDEDATA__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HDDEDATA">
      <ptr>
        <struct name="HDDEDATA__" />
      </ptr>
    </typedef>
    <struct name="tagHSZPAIR">
      <field offset="0" name="hszSvc">
        <type>HSZ</type>
      </field>
      <field offset="4" name="hszTopic">
        <type>HSZ</type>
      </field>
    </struct>
    <typedef name="HSZPAIR">
      <struct name="tagHSZPAIR" />
    </typedef>
    <typedef name="PHSZPAIR">
      <ptr>
        <struct name="tagHSZPAIR" />
      </ptr>
    </typedef>
    <struct name="tagCONVCONTEXT">
      <field offset="0" name="cb">
        <type>UINT</type>
      </field>
      <field offset="4" name="wFlags">
        <type>UINT</type>
      </field>
      <field offset="8" name="wCountryID">
        <type>UINT</type>
      </field>
      <field offset="12" name="iCodePage">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="dwLangID">
        <type>DWORD</type>
      </field>
      <field offset="20" name="dwSecurity">
        <type>DWORD</type>
      </field>
      <field offset="24" name="qos">
        <type>SECURITY_QUALITY_OF_SERVICE</type>
      </field>
    </struct>
    <typedef name="CONVCONTEXT">
      <struct name="tagCONVCONTEXT" />
    </typedef>
    <typedef name="PCONVCONTEXT">
      <ptr>
        <struct name="tagCONVCONTEXT" />
      </ptr>
    </typedef>
    <struct name="tagCONVINFO">
      <field offset="0" name="cb">
        <type>DWORD</type>
      </field>
      <field offset="4" name="hUser">
        <type>DWORD_PTR</type>
      </field>
      <field offset="8" name="hConvPartner">
        <type>HCONV</type>
      </field>
      <field offset="12" name="hszSvcPartner">
        <type>HSZ</type>
      </field>
      <field offset="16" name="hszServiceReq">
        <type>HSZ</type>
      </field>
      <field offset="20" name="hszTopic">
        <type>HSZ</type>
      </field>
      <field offset="24" name="hszItem">
        <type>HSZ</type>
      </field>
      <field offset="28" name="wFmt">
        <type>UINT</type>
      </field>
      <field offset="32" name="wType">
        <type>UINT</type>
      </field>
      <field offset="36" name="wStatus">
        <type>UINT</type>
      </field>
      <field offset="40" name="wConvst">
        <type>UINT</type>
      </field>
      <field offset="44" name="wLastError">
        <type>UINT</type>
      </field>
      <field offset="48" name="hConvList">
        <type>HCONVLIST</type>
      </field>
      <field offset="56" name="ConvCtxt">
        <type>CONVCONTEXT</type>
      </field>
      <field offset="92" name="hwnd">
        <type>HWND</type>
      </field>
      <field offset="96" name="hwndPartner">
        <type>HWND</type>
      </field>
    </struct>
    <typedef name="CONVINFO">
      <struct name="tagCONVINFO" />
    </typedef>
    <typedef name="PCONVINFO">
      <ptr>
        <struct name="tagCONVINFO" />
      </ptr>
    </typedef>
    <typedef name="FNCALLBACK">
      <fn convention="__stdcall">
        <return>
          <type>HDDEDATA</type>
          <reg>eax</reg>
        </return>
        <arg name="wType">
          <type>UINT</type>
          <stack size="4" />
        </arg>
        <arg name="wFmt">
          <type>UINT</type>
          <stack size="4" />
        </arg>
        <arg name="hConv">
          <type>HCONV</type>
          <stack size="4" />
        </arg>
        <arg name="hsz1">
          <type>HSZ</type>
          <stack size="4" />
        </arg>
        <arg name="hsz2">
          <type>HSZ</type>
          <stack size="4" />
        </arg>
        <arg name="hData">
          <type>HDDEDATA</type>
          <stack size="4" />
        </arg>
        <arg name="dwData1">
          <type>ULONG_PTR</type>
          <stack size="4" />
        </arg>
        <arg name="dwData2">
          <type>ULONG_PTR</type>
          <stack size="4" />
        </arg>
      </fn>
    </typedef>
    <typedef name="PFNCALLBACK">
      <ptr>
        <fn>
          <return>
            <type>HDDEDATA</type>
            <reg>eax</reg>
          </return>
          <arg name="wType">
            <type>UINT</type>
            <stack size="4" />
          </arg>
          <arg name="wFmt">
            <type>UINT</type>
            <stack size="4" />
          </arg>
          <arg name="hConv">
            <type>HCONV</type>
            <stack size="4" />
          </arg>
          <arg name="hsz1">
            <type>HSZ</type>
            <stack size="4" />
          </arg>
          <arg name="hsz2">
            <type>HSZ</type>
            <stack size="4" />
          </arg>
          <arg name="hData">
            <type>HDDEDATA</type>
            <stack size="4" />
          </arg>
          <arg name="dwData1">
            <type>ULONG_PTR</type>
            <stack size="4" />
          </arg>
          <arg name="dwData2">
            <type>ULONG_PTR</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="tagDDEML_MSG_HOOK_DATA">
      <field offset="0" name="uiLo">
        <type>UINT_PTR</type>
      </field>
      <field offset="4" name="uiHi">
        <type>UINT_PTR</type>
      </field>
      <field offset="8" name="cbData">
        <type>DWORD</type>
      </field>
      <field offset="16" name="Data">
        <arr length="8">
          <type>DWORD</type>
        </arr>
      </field>
    </struct>
    <typedef name="DDEML_MSG_HOOK_DATA">
      <struct name="tagDDEML_MSG_HOOK_DATA" />
    </typedef>
    <typedef name="PDDEML_MSG_HOOK_DATA">
      <ptr>
        <struct name="tagDDEML_MSG_HOOK_DATA" />
      </ptr>
    </typedef>
    <struct name="tagMONMSGSTRUCT">
      <field offset="0" name="cb">
        <type>UINT</type>
      </field>
      <field offset="4" name="hwndTo">
        <type>HWND</type>
      </field>
      <field offset="8" name="dwTime">
        <type>DWORD</type>
      </field>
      <field offset="12" name="hTask">
        <type>HANDLE</type>
      </field>
      <field offset="16" name="wMsg">
        <type>UINT</type>
      </field>
      <field offset="20" name="wParam">
        <type>WPARAM</type>
      </field>
      <field offset="24" name="lParam">
        <type>LPARAM</type>
      </field>
      <field offset="32" name="dmhd">
        <type>DDEML_MSG_HOOK_DATA</type>
      </field>
    </struct>
    <typedef name="MONMSGSTRUCT">
      <struct name="tagMONMSGSTRUCT" />
    </typedef>
    <typedef name="PMONMSGSTRUCT">
      <ptr>
        <struct name="tagMONMSGSTRUCT" />
      </ptr>
    </typedef>
    <struct name="tagMONCBSTRUCT">
      <field offset="0" name="cb">
        <type>UINT</type>
      </field>
      <field offset="4" name="dwTime">
        <type>DWORD</type>
      </field>
      <field offset="8" name="hTask">
        <type>HANDLE</type>
      </field>
      <field offset="12" name="dwRet">
        <type>DWORD</type>
      </field>
      <field offset="16" name="wType">
        <type>UINT</type>
      </field>
      <field offset="20" name="wFmt">
        <type>UINT</type>
      </field>
      <field offset="24" name="hConv">
        <type>HCONV</type>
      </field>
      <field offset="28" name="hsz1">
        <type>HSZ</type>
      </field>
      <field offset="32" name="hsz2">
        <type>HSZ</type>
      </field>
      <field offset="36" name="hData">
        <type>HDDEDATA</type>
      </field>
      <field offset="40" name="dwData1">
        <type>ULONG_PTR</type>
      </field>
      <field offset="44" name="dwData2">
        <type>ULONG_PTR</type>
      </field>
      <field offset="48" name="cc">
        <type>CONVCONTEXT</type>
      </field>
      <field offset="84" name="cbData">
        <type>DWORD</type>
      </field>
      <field offset="88" name="Data">
        <arr length="8">
          <type>DWORD</type>
        </arr>
      </field>
    </struct>
    <typedef name="MONCBSTRUCT">
      <struct name="tagMONCBSTRUCT" />
    </typedef>
    <typedef name="PMONCBSTRUCT">
      <ptr>
        <struct name="tagMONCBSTRUCT" />
      </ptr>
    </typedef>
    <struct name="tagMONHSZSTRUCTA">
      <field offset="0" name="cb">
        <type>UINT</type>
      </field>
      <field offset="4" name="fsAction">
        <type>BOOL</type>
      </field>
      <field offset="8" name="dwTime">
        <type>DWORD</type>
      </field>
      <field offset="12" name="hsz">
        <type>HSZ</type>
      </field>
      <field offset="16" name="hTask">
        <type>HANDLE</type>
      </field>
      <field offset="20" name="str">
        <arr length="1">
          <type>CHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="MONHSZSTRUCTA">
      <struct name="tagMONHSZSTRUCTA" />
    </typedef>
    <typedef name="PMONHSZSTRUCTA">
      <ptr>
        <struct name="tagMONHSZSTRUCTA" />
      </ptr>
    </typedef>
    <struct name="tagMONHSZSTRUCTW">
      <field offset="0" name="cb">
        <type>UINT</type>
      </field>
      <field offset="4" name="fsAction">
        <type>BOOL</type>
      </field>
      <field offset="8" name="dwTime">
        <type>DWORD</type>
      </field>
      <field offset="12" name="hsz">
        <type>HSZ</type>
      </field>
      <field offset="16" name="hTask">
        <type>HANDLE</type>
      </field>
      <field offset="20" name="str">
        <arr length="1">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="MONHSZSTRUCTW">
      <struct name="tagMONHSZSTRUCTW" />
    </typedef>
    <typedef name="PMONHSZSTRUCTW">
      <ptr>
        <struct name="tagMONHSZSTRUCTW" />
      </ptr>
    </typedef>
    <typedef name="MONHSZSTRUCT">
      <type>MONHSZSTRUCTA</type>
    </typedef>
    <typedef name="PMONHSZSTRUCT">
      <type>PMONHSZSTRUCTA</type>
    </typedef>
    <struct name="tagMONERRSTRUCT">
      <field offset="0" name="cb">
        <type>UINT</type>
      </field>
      <field offset="4" name="wLastError">
        <type>UINT</type>
      </field>
      <field offset="8" name="dwTime">
        <type>DWORD</type>
      </field>
      <field offset="12" name="hTask">
        <type>HANDLE</type>
      </field>
    </struct>
    <typedef name="MONERRSTRUCT">
      <struct name="tagMONERRSTRUCT" />
    </typedef>
    <typedef name="PMONERRSTRUCT">
      <ptr>
        <struct name="tagMONERRSTRUCT" />
      </ptr>
    </typedef>
    <struct name="tagMONLINKSTRUCT">
      <field offset="0" name="cb">
        <type>UINT</type>
      </field>
      <field offset="4" name="dwTime">
        <type>DWORD</type>
      </field>
      <field offset="8" name="hTask">
        <type>HANDLE</type>
      </field>
      <field offset="12" name="fEstablished">
        <type>BOOL</type>
      </field>
      <field offset="16" name="fNoData">
        <type>BOOL</type>
      </field>
      <field offset="20" name="hszSvc">
        <type>HSZ</type>
      </field>
      <field offset="24" name="hszTopic">
        <type>HSZ</type>
      </field>
      <field offset="28" name="hszItem">
        <type>HSZ</type>
      </field>
      <field offset="32" name="wFmt">
        <type>UINT</type>
      </field>
      <field offset="36" name="fServer">
        <type>BOOL</type>
      </field>
      <field offset="40" name="hConvServer">
        <type>HCONV</type>
      </field>
      <field offset="44" name="hConvClient">
        <type>HCONV</type>
      </field>
    </struct>
    <typedef name="MONLINKSTRUCT">
      <struct name="tagMONLINKSTRUCT" />
    </typedef>
    <typedef name="PMONLINKSTRUCT">
      <ptr>
        <struct name="tagMONLINKSTRUCT" />
      </ptr>
    </typedef>
    <struct name="tagMONCONVSTRUCT">
      <field offset="0" name="cb">
        <type>UINT</type>
      </field>
      <field offset="4" name="fConnect">
        <type>BOOL</type>
      </field>
      <field offset="8" name="dwTime">
        <type>DWORD</type>
      </field>
      <field offset="12" name="hTask">
        <type>HANDLE</type>
      </field>
      <field offset="16" name="hszSvc">
        <type>HSZ</type>
      </field>
      <field offset="20" name="hszTopic">
        <type>HSZ</type>
      </field>
      <field offset="24" name="hConvClient">
        <type>HCONV</type>
      </field>
      <field offset="28" name="hConvServer">
        <type>HCONV</type>
      </field>
    </struct>
    <typedef name="MONCONVSTRUCT">
      <struct name="tagMONCONVSTRUCT" />
    </typedef>
    <typedef name="PMONCONVSTRUCT">
      <ptr>
        <struct name="tagMONCONVSTRUCT" />
      </ptr>
    </typedef>
    <struct name="tagCRGB">
      <field offset="0" name="bRed">
        <type>BYTE</type>
      </field>
      <field offset="1" name="bGreen">
        <type>BYTE</type>
      </field>
      <field offset="2" name="bBlue">
        <type>BYTE</type>
      </field>
      <field offset="3" name="bExtra">
        <type>BYTE</type>
      </field>
    </struct>
    <typedef name="CRGB">
      <struct name="tagCRGB" />
    </typedef>
    <typedef name="MMVERSION">
      <type>UINT</type>
    </typedef>
    <typedef name="MMRESULT">
      <type>UINT</type>
    </typedef>
    <typedef name="LPUINT">
      <ptr>
        <type>UINT</type>
      </ptr>
    </typedef>
    <struct name="struct_91">
      <field offset="0" name="hour">
        <type>BYTE</type>
      </field>
      <field offset="1" name="min">
        <type>BYTE</type>
      </field>
      <field offset="2" name="sec">
        <type>BYTE</type>
      </field>
      <field offset="3" name="frame">
        <type>BYTE</type>
      </field>
      <field offset="4" name="fps">
        <type>BYTE</type>
      </field>
      <field offset="5" name="dummy">
        <type>BYTE</type>
      </field>
      <field offset="6" name="pad">
        <arr length="2">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <struct name="struct_92">
      <field offset="0" name="songptrpos">
        <type>DWORD</type>
      </field>
    </struct>
    <struct name="mmtime_tag">
      <field offset="0" name="wType">
        <type>UINT</type>
      </field>
      <field offset="8" name="u">
        <union>
          <alt name="ms">
            <type>DWORD</type>
          </alt>
          <alt name="sample">
            <type>DWORD</type>
          </alt>
          <alt name="cb">
            <type>DWORD</type>
          </alt>
          <alt name="ticks">
            <type>DWORD</type>
          </alt>
          <alt name="smpte">
            <struct name="struct_91" />
          </alt>
          <alt name="midi">
            <struct name="struct_92" />
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="MMTIME">
      <struct name="mmtime_tag" />
    </typedef>
    <typedef name="PMMTIME">
      <ptr>
        <struct name="mmtime_tag" />
      </ptr>
    </typedef>
    <typedef name="NPMMTIME">
      <ptr>
        <struct name="mmtime_tag" />
      </ptr>
    </typedef>
    <typedef name="LPMMTIME">
      <ptr>
        <struct name="mmtime_tag" />
      </ptr>
    </typedef>
    <struct name="HDRVR__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HDRVR">
      <ptr>
        <struct name="HDRVR__" />
      </ptr>
    </typedef>
    <struct name="DRVCONFIGINFOEX">
      <field offset="0" name="dwDCISize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="lpszDCISectionName">
        <type>LPCWSTR</type>
      </field>
      <field offset="8" name="lpszDCIAliasName">
        <type>LPCWSTR</type>
      </field>
      <field offset="12" name="dnDevNode">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="DRVCONFIGINFOEX">
      <struct name="DRVCONFIGINFOEX" />
    </typedef>
    <typedef name="PDRVCONFIGINFOEX">
      <ptr>
        <struct name="DRVCONFIGINFOEX" />
      </ptr>
    </typedef>
    <typedef name="NPDRVCONFIGINFOEX">
      <ptr>
        <struct name="DRVCONFIGINFOEX" />
      </ptr>
    </typedef>
    <typedef name="LPDRVCONFIGINFOEX">
      <ptr>
        <struct name="DRVCONFIGINFOEX" />
      </ptr>
    </typedef>
    <struct name="tagDRVCONFIGINFO">
      <field offset="0" name="dwDCISize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="lpszDCISectionName">
        <type>LPCWSTR</type>
      </field>
      <field offset="8" name="lpszDCIAliasName">
        <type>LPCWSTR</type>
      </field>
    </struct>
    <typedef name="DRVCONFIGINFO">
      <struct name="tagDRVCONFIGINFO" />
    </typedef>
    <typedef name="PDRVCONFIGINFO">
      <ptr>
        <struct name="tagDRVCONFIGINFO" />
      </ptr>
    </typedef>
    <typedef name="NPDRVCONFIGINFO">
      <ptr>
        <struct name="tagDRVCONFIGINFO" />
      </ptr>
    </typedef>
    <typedef name="LPDRVCONFIGINFO">
      <ptr>
        <struct name="tagDRVCONFIGINFO" />
      </ptr>
    </typedef>
    <typedef name="DRIVERPROC">
      <ptr>
        <fn>
          <return>
            <type>LRESULT</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>DWORD_PTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>HDRVR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>UINT</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="DRVCALLBACK">
      <fn>
        <return>
          <void />
        </return>
        <arg name="hdrvr">
          <type>HDRVR</type>
          <stack size="4" />
        </arg>
        <arg name="uMsg">
          <type>UINT</type>
          <stack size="4" />
        </arg>
        <arg name="dwUser">
          <type>DWORD_PTR</type>
          <stack size="4" />
        </arg>
        <arg name="dw1">
          <type>DWORD_PTR</type>
          <stack size="4" />
        </arg>
        <arg name="dw2">
          <type>DWORD_PTR</type>
          <stack size="4" />
        </arg>
      </fn>
    </typedef>
    <typedef name="LPDRVCALLBACK">
      <ptr>
        <type>DRVCALLBACK</type>
      </ptr>
    </typedef>
    <typedef name="PDRVCALLBACK">
      <ptr>
        <type>DRVCALLBACK</type>
      </ptr>
    </typedef>
    <struct name="HWAVE__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HWAVE">
      <ptr>
        <struct name="HWAVE__" />
      </ptr>
    </typedef>
    <struct name="HWAVEIN__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HWAVEIN">
      <ptr>
        <struct name="HWAVEIN__" />
      </ptr>
    </typedef>
    <struct name="HWAVEOUT__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HWAVEOUT">
      <ptr>
        <struct name="HWAVEOUT__" />
      </ptr>
    </typedef>
    <typedef name="LPHWAVEIN">
      <ptr>
        <type>HWAVEIN</type>
      </ptr>
    </typedef>
    <typedef name="LPHWAVEOUT">
      <ptr>
        <type>HWAVEOUT</type>
      </ptr>
    </typedef>
    <typedef name="WAVECALLBACK">
      <type>DRVCALLBACK</type>
    </typedef>
    <typedef name="LPWAVECALLBACK">
      <ptr>
        <type>WAVECALLBACK</type>
      </ptr>
    </typedef>
    <struct name="wavehdr_tag">
      <field offset="0" name="lpData">
        <type>LPSTR</type>
      </field>
      <field offset="4" name="dwBufferLength">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwBytesRecorded">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwUser">
        <type>DWORD_PTR</type>
      </field>
      <field offset="16" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="20" name="dwLoops">
        <type>DWORD</type>
      </field>
      <field offset="24" name="lpNext">
        <ptr>
          <struct name="wavehdr_tag" />
        </ptr>
      </field>
      <field offset="28" name="reserved">
        <type>DWORD_PTR</type>
      </field>
    </struct>
    <typedef name="WAVEHDR">
      <struct name="wavehdr_tag" />
    </typedef>
    <typedef name="PWAVEHDR">
      <ptr>
        <struct name="wavehdr_tag" />
      </ptr>
    </typedef>
    <typedef name="NPWAVEHDR">
      <ptr>
        <struct name="wavehdr_tag" />
      </ptr>
    </typedef>
    <typedef name="LPWAVEHDR">
      <ptr>
        <struct name="wavehdr_tag" />
      </ptr>
    </typedef>
    <struct name="tagWAVEOUTCAPSA">
      <field offset="0" name="wMid">
        <type>WORD</type>
      </field>
      <field offset="2" name="wPid">
        <type>WORD</type>
      </field>
      <field offset="4" name="vDriverVersion">
        <type>MMVERSION</type>
      </field>
      <field offset="8" name="szPname">
        <arr length="32">
          <type>CHAR</type>
        </arr>
      </field>
      <field offset="40" name="dwFormats">
        <type>DWORD</type>
      </field>
      <field offset="44" name="wChannels">
        <type>WORD</type>
      </field>
      <field offset="46" name="wReserved1">
        <type>WORD</type>
      </field>
      <field offset="48" name="dwSupport">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="WAVEOUTCAPSA">
      <struct name="tagWAVEOUTCAPSA" />
    </typedef>
    <typedef name="PWAVEOUTCAPSA">
      <ptr>
        <struct name="tagWAVEOUTCAPSA" />
      </ptr>
    </typedef>
    <typedef name="NPWAVEOUTCAPSA">
      <ptr>
        <struct name="tagWAVEOUTCAPSA" />
      </ptr>
    </typedef>
    <typedef name="LPWAVEOUTCAPSA">
      <ptr>
        <struct name="tagWAVEOUTCAPSA" />
      </ptr>
    </typedef>
    <struct name="tagWAVEOUTCAPSW">
      <field offset="0" name="wMid">
        <type>WORD</type>
      </field>
      <field offset="2" name="wPid">
        <type>WORD</type>
      </field>
      <field offset="4" name="vDriverVersion">
        <type>MMVERSION</type>
      </field>
      <field offset="8" name="szPname">
        <arr length="32">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="72" name="dwFormats">
        <type>DWORD</type>
      </field>
      <field offset="76" name="wChannels">
        <type>WORD</type>
      </field>
      <field offset="78" name="wReserved1">
        <type>WORD</type>
      </field>
      <field offset="80" name="dwSupport">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="WAVEOUTCAPSW">
      <struct name="tagWAVEOUTCAPSW" />
    </typedef>
    <typedef name="PWAVEOUTCAPSW">
      <ptr>
        <struct name="tagWAVEOUTCAPSW" />
      </ptr>
    </typedef>
    <typedef name="NPWAVEOUTCAPSW">
      <ptr>
        <struct name="tagWAVEOUTCAPSW" />
      </ptr>
    </typedef>
    <typedef name="LPWAVEOUTCAPSW">
      <ptr>
        <struct name="tagWAVEOUTCAPSW" />
      </ptr>
    </typedef>
    <typedef name="WAVEOUTCAPS">
      <type>WAVEOUTCAPSA</type>
    </typedef>
    <typedef name="PWAVEOUTCAPS">
      <type>PWAVEOUTCAPSA</type>
    </typedef>
    <typedef name="NPWAVEOUTCAPS">
      <type>NPWAVEOUTCAPSA</type>
    </typedef>
    <typedef name="LPWAVEOUTCAPS">
      <type>LPWAVEOUTCAPSA</type>
    </typedef>
    <struct name="tagWAVEOUTCAPS2A">
      <field offset="0" name="wMid">
        <type>WORD</type>
      </field>
      <field offset="2" name="wPid">
        <type>WORD</type>
      </field>
      <field offset="4" name="vDriverVersion">
        <type>MMVERSION</type>
      </field>
      <field offset="8" name="szPname">
        <arr length="32">
          <type>CHAR</type>
        </arr>
      </field>
      <field offset="40" name="dwFormats">
        <type>DWORD</type>
      </field>
      <field offset="44" name="wChannels">
        <type>WORD</type>
      </field>
      <field offset="46" name="wReserved1">
        <type>WORD</type>
      </field>
      <field offset="48" name="dwSupport">
        <type>DWORD</type>
      </field>
      <field offset="56" name="ManufacturerGuid">
        <type>GUID</type>
      </field>
      <field offset="72" name="ProductGuid">
        <type>GUID</type>
      </field>
      <field offset="88" name="NameGuid">
        <type>GUID</type>
      </field>
    </struct>
    <typedef name="WAVEOUTCAPS2A">
      <struct name="tagWAVEOUTCAPS2A" />
    </typedef>
    <typedef name="PWAVEOUTCAPS2A">
      <ptr>
        <struct name="tagWAVEOUTCAPS2A" />
      </ptr>
    </typedef>
    <typedef name="NPWAVEOUTCAPS2A">
      <ptr>
        <struct name="tagWAVEOUTCAPS2A" />
      </ptr>
    </typedef>
    <typedef name="LPWAVEOUTCAPS2A">
      <ptr>
        <struct name="tagWAVEOUTCAPS2A" />
      </ptr>
    </typedef>
    <struct name="tagWAVEOUTCAPS2W">
      <field offset="0" name="wMid">
        <type>WORD</type>
      </field>
      <field offset="2" name="wPid">
        <type>WORD</type>
      </field>
      <field offset="4" name="vDriverVersion">
        <type>MMVERSION</type>
      </field>
      <field offset="8" name="szPname">
        <arr length="32">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="72" name="dwFormats">
        <type>DWORD</type>
      </field>
      <field offset="76" name="wChannels">
        <type>WORD</type>
      </field>
      <field offset="78" name="wReserved1">
        <type>WORD</type>
      </field>
      <field offset="80" name="dwSupport">
        <type>DWORD</type>
      </field>
      <field offset="88" name="ManufacturerGuid">
        <type>GUID</type>
      </field>
      <field offset="104" name="ProductGuid">
        <type>GUID</type>
      </field>
      <field offset="120" name="NameGuid">
        <type>GUID</type>
      </field>
    </struct>
    <typedef name="WAVEOUTCAPS2W">
      <struct name="tagWAVEOUTCAPS2W" />
    </typedef>
    <typedef name="PWAVEOUTCAPS2W">
      <ptr>
        <struct name="tagWAVEOUTCAPS2W" />
      </ptr>
    </typedef>
    <typedef name="NPWAVEOUTCAPS2W">
      <ptr>
        <struct name="tagWAVEOUTCAPS2W" />
      </ptr>
    </typedef>
    <typedef name="LPWAVEOUTCAPS2W">
      <ptr>
        <struct name="tagWAVEOUTCAPS2W" />
      </ptr>
    </typedef>
    <typedef name="WAVEOUTCAPS2">
      <type>WAVEOUTCAPS2A</type>
    </typedef>
    <typedef name="PWAVEOUTCAPS2">
      <type>PWAVEOUTCAPS2A</type>
    </typedef>
    <typedef name="NPWAVEOUTCAPS2">
      <type>NPWAVEOUTCAPS2A</type>
    </typedef>
    <typedef name="LPWAVEOUTCAPS2">
      <type>LPWAVEOUTCAPS2A</type>
    </typedef>
    <struct name="tagWAVEINCAPSA">
      <field offset="0" name="wMid">
        <type>WORD</type>
      </field>
      <field offset="2" name="wPid">
        <type>WORD</type>
      </field>
      <field offset="4" name="vDriverVersion">
        <type>MMVERSION</type>
      </field>
      <field offset="8" name="szPname">
        <arr length="32">
          <type>CHAR</type>
        </arr>
      </field>
      <field offset="40" name="dwFormats">
        <type>DWORD</type>
      </field>
      <field offset="44" name="wChannels">
        <type>WORD</type>
      </field>
      <field offset="46" name="wReserved1">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="WAVEINCAPSA">
      <struct name="tagWAVEINCAPSA" />
    </typedef>
    <typedef name="PWAVEINCAPSA">
      <ptr>
        <struct name="tagWAVEINCAPSA" />
      </ptr>
    </typedef>
    <typedef name="NPWAVEINCAPSA">
      <ptr>
        <struct name="tagWAVEINCAPSA" />
      </ptr>
    </typedef>
    <typedef name="LPWAVEINCAPSA">
      <ptr>
        <struct name="tagWAVEINCAPSA" />
      </ptr>
    </typedef>
    <struct name="tagWAVEINCAPSW">
      <field offset="0" name="wMid">
        <type>WORD</type>
      </field>
      <field offset="2" name="wPid">
        <type>WORD</type>
      </field>
      <field offset="4" name="vDriverVersion">
        <type>MMVERSION</type>
      </field>
      <field offset="8" name="szPname">
        <arr length="32">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="72" name="dwFormats">
        <type>DWORD</type>
      </field>
      <field offset="76" name="wChannels">
        <type>WORD</type>
      </field>
      <field offset="78" name="wReserved1">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="WAVEINCAPSW">
      <struct name="tagWAVEINCAPSW" />
    </typedef>
    <typedef name="PWAVEINCAPSW">
      <ptr>
        <struct name="tagWAVEINCAPSW" />
      </ptr>
    </typedef>
    <typedef name="NPWAVEINCAPSW">
      <ptr>
        <struct name="tagWAVEINCAPSW" />
      </ptr>
    </typedef>
    <typedef name="LPWAVEINCAPSW">
      <ptr>
        <struct name="tagWAVEINCAPSW" />
      </ptr>
    </typedef>
    <typedef name="WAVEINCAPS">
      <type>WAVEINCAPSA</type>
    </typedef>
    <typedef name="PWAVEINCAPS">
      <type>PWAVEINCAPSA</type>
    </typedef>
    <typedef name="NPWAVEINCAPS">
      <type>NPWAVEINCAPSA</type>
    </typedef>
    <typedef name="LPWAVEINCAPS">
      <type>LPWAVEINCAPSA</type>
    </typedef>
    <struct name="tagWAVEINCAPS2A">
      <field offset="0" name="wMid">
        <type>WORD</type>
      </field>
      <field offset="2" name="wPid">
        <type>WORD</type>
      </field>
      <field offset="4" name="vDriverVersion">
        <type>MMVERSION</type>
      </field>
      <field offset="8" name="szPname">
        <arr length="32">
          <type>CHAR</type>
        </arr>
      </field>
      <field offset="40" name="dwFormats">
        <type>DWORD</type>
      </field>
      <field offset="44" name="wChannels">
        <type>WORD</type>
      </field>
      <field offset="46" name="wReserved1">
        <type>WORD</type>
      </field>
      <field offset="48" name="ManufacturerGuid">
        <type>GUID</type>
      </field>
      <field offset="64" name="ProductGuid">
        <type>GUID</type>
      </field>
      <field offset="80" name="NameGuid">
        <type>GUID</type>
      </field>
    </struct>
    <typedef name="WAVEINCAPS2A">
      <struct name="tagWAVEINCAPS2A" />
    </typedef>
    <typedef name="PWAVEINCAPS2A">
      <ptr>
        <struct name="tagWAVEINCAPS2A" />
      </ptr>
    </typedef>
    <typedef name="NPWAVEINCAPS2A">
      <ptr>
        <struct name="tagWAVEINCAPS2A" />
      </ptr>
    </typedef>
    <typedef name="LPWAVEINCAPS2A">
      <ptr>
        <struct name="tagWAVEINCAPS2A" />
      </ptr>
    </typedef>
    <struct name="tagWAVEINCAPS2W">
      <field offset="0" name="wMid">
        <type>WORD</type>
      </field>
      <field offset="2" name="wPid">
        <type>WORD</type>
      </field>
      <field offset="4" name="vDriverVersion">
        <type>MMVERSION</type>
      </field>
      <field offset="8" name="szPname">
        <arr length="32">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="72" name="dwFormats">
        <type>DWORD</type>
      </field>
      <field offset="76" name="wChannels">
        <type>WORD</type>
      </field>
      <field offset="78" name="wReserved1">
        <type>WORD</type>
      </field>
      <field offset="80" name="ManufacturerGuid">
        <type>GUID</type>
      </field>
      <field offset="96" name="ProductGuid">
        <type>GUID</type>
      </field>
      <field offset="112" name="NameGuid">
        <type>GUID</type>
      </field>
    </struct>
    <typedef name="WAVEINCAPS2W">
      <struct name="tagWAVEINCAPS2W" />
    </typedef>
    <typedef name="PWAVEINCAPS2W">
      <ptr>
        <struct name="tagWAVEINCAPS2W" />
      </ptr>
    </typedef>
    <typedef name="NPWAVEINCAPS2W">
      <ptr>
        <struct name="tagWAVEINCAPS2W" />
      </ptr>
    </typedef>
    <typedef name="LPWAVEINCAPS2W">
      <ptr>
        <struct name="tagWAVEINCAPS2W" />
      </ptr>
    </typedef>
    <typedef name="WAVEINCAPS2">
      <type>WAVEINCAPS2A</type>
    </typedef>
    <typedef name="PWAVEINCAPS2">
      <type>PWAVEINCAPS2A</type>
    </typedef>
    <typedef name="NPWAVEINCAPS2">
      <type>NPWAVEINCAPS2A</type>
    </typedef>
    <typedef name="LPWAVEINCAPS2">
      <type>LPWAVEINCAPS2A</type>
    </typedef>
    <struct name="waveformat_tag">
      <field offset="0" name="wFormatTag">
        <type>WORD</type>
      </field>
      <field offset="2" name="nChannels">
        <type>WORD</type>
      </field>
      <field offset="4" name="nSamplesPerSec">
        <type>DWORD</type>
      </field>
      <field offset="8" name="nAvgBytesPerSec">
        <type>DWORD</type>
      </field>
      <field offset="12" name="nBlockAlign">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="WAVEFORMAT">
      <struct name="waveformat_tag" />
    </typedef>
    <typedef name="PWAVEFORMAT">
      <ptr>
        <struct name="waveformat_tag" />
      </ptr>
    </typedef>
    <typedef name="NPWAVEFORMAT">
      <ptr>
        <struct name="waveformat_tag" />
      </ptr>
    </typedef>
    <typedef name="LPWAVEFORMAT">
      <ptr>
        <struct name="waveformat_tag" />
      </ptr>
    </typedef>
    <struct name="pcmwaveformat_tag">
      <field offset="0" name="wf">
        <type>WAVEFORMAT</type>
      </field>
      <field offset="14" name="wBitsPerSample">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="PCMWAVEFORMAT">
      <struct name="pcmwaveformat_tag" />
    </typedef>
    <typedef name="PPCMWAVEFORMAT">
      <ptr>
        <struct name="pcmwaveformat_tag" />
      </ptr>
    </typedef>
    <typedef name="NPPCMWAVEFORMAT">
      <ptr>
        <struct name="pcmwaveformat_tag" />
      </ptr>
    </typedef>
    <typedef name="LPPCMWAVEFORMAT">
      <ptr>
        <struct name="pcmwaveformat_tag" />
      </ptr>
    </typedef>
    <struct name="tWAVEFORMATEX">
      <field offset="0" name="wFormatTag">
        <type>WORD</type>
      </field>
      <field offset="2" name="nChannels">
        <type>WORD</type>
      </field>
      <field offset="4" name="nSamplesPerSec">
        <type>DWORD</type>
      </field>
      <field offset="8" name="nAvgBytesPerSec">
        <type>DWORD</type>
      </field>
      <field offset="12" name="nBlockAlign">
        <type>WORD</type>
      </field>
      <field offset="14" name="wBitsPerSample">
        <type>WORD</type>
      </field>
      <field offset="16" name="cbSize">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="WAVEFORMATEX">
      <struct name="tWAVEFORMATEX" />
    </typedef>
    <typedef name="PWAVEFORMATEX">
      <ptr>
        <struct name="tWAVEFORMATEX" />
      </ptr>
    </typedef>
    <typedef name="NPWAVEFORMATEX">
      <ptr>
        <struct name="tWAVEFORMATEX" />
      </ptr>
    </typedef>
    <typedef name="LPWAVEFORMATEX">
      <ptr>
        <struct name="tWAVEFORMATEX" />
      </ptr>
    </typedef>
    <typedef name="LPCWAVEFORMATEX">
      <ptr>
        <type>WAVEFORMATEX</type>
      </ptr>
    </typedef>
    <struct name="HMIDI__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HMIDI">
      <ptr>
        <struct name="HMIDI__" />
      </ptr>
    </typedef>
    <struct name="HMIDIIN__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HMIDIIN">
      <ptr>
        <struct name="HMIDIIN__" />
      </ptr>
    </typedef>
    <struct name="HMIDIOUT__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HMIDIOUT">
      <ptr>
        <struct name="HMIDIOUT__" />
      </ptr>
    </typedef>
    <struct name="HMIDISTRM__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HMIDISTRM">
      <ptr>
        <struct name="HMIDISTRM__" />
      </ptr>
    </typedef>
    <typedef name="LPHMIDI">
      <ptr>
        <type>HMIDI</type>
      </ptr>
    </typedef>
    <typedef name="LPHMIDIIN">
      <ptr>
        <type>HMIDIIN</type>
      </ptr>
    </typedef>
    <typedef name="LPHMIDIOUT">
      <ptr>
        <type>HMIDIOUT</type>
      </ptr>
    </typedef>
    <typedef name="LPHMIDISTRM">
      <ptr>
        <type>HMIDISTRM</type>
      </ptr>
    </typedef>
    <typedef name="MIDICALLBACK">
      <type>DRVCALLBACK</type>
    </typedef>
    <typedef name="LPMIDICALLBACK">
      <ptr>
        <type>MIDICALLBACK</type>
      </ptr>
    </typedef>
    <typedef name="PATCHARRAY">
      <arr length="128">
        <type>WORD</type>
      </arr>
    </typedef>
    <typedef name="LPPATCHARRAY">
      <ptr>
        <type>WORD</type>
      </ptr>
    </typedef>
    <typedef name="KEYARRAY">
      <arr length="128">
        <type>WORD</type>
      </arr>
    </typedef>
    <typedef name="LPKEYARRAY">
      <ptr>
        <type>WORD</type>
      </ptr>
    </typedef>
    <struct name="tagMIDIOUTCAPSA">
      <field offset="0" name="wMid">
        <type>WORD</type>
      </field>
      <field offset="2" name="wPid">
        <type>WORD</type>
      </field>
      <field offset="4" name="vDriverVersion">
        <type>MMVERSION</type>
      </field>
      <field offset="8" name="szPname">
        <arr length="32">
          <type>CHAR</type>
        </arr>
      </field>
      <field offset="40" name="wTechnology">
        <type>WORD</type>
      </field>
      <field offset="42" name="wVoices">
        <type>WORD</type>
      </field>
      <field offset="44" name="wNotes">
        <type>WORD</type>
      </field>
      <field offset="46" name="wChannelMask">
        <type>WORD</type>
      </field>
      <field offset="48" name="dwSupport">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="MIDIOUTCAPSA">
      <struct name="tagMIDIOUTCAPSA" />
    </typedef>
    <typedef name="PMIDIOUTCAPSA">
      <ptr>
        <struct name="tagMIDIOUTCAPSA" />
      </ptr>
    </typedef>
    <typedef name="NPMIDIOUTCAPSA">
      <ptr>
        <struct name="tagMIDIOUTCAPSA" />
      </ptr>
    </typedef>
    <typedef name="LPMIDIOUTCAPSA">
      <ptr>
        <struct name="tagMIDIOUTCAPSA" />
      </ptr>
    </typedef>
    <struct name="tagMIDIOUTCAPSW">
      <field offset="0" name="wMid">
        <type>WORD</type>
      </field>
      <field offset="2" name="wPid">
        <type>WORD</type>
      </field>
      <field offset="4" name="vDriverVersion">
        <type>MMVERSION</type>
      </field>
      <field offset="8" name="szPname">
        <arr length="32">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="72" name="wTechnology">
        <type>WORD</type>
      </field>
      <field offset="74" name="wVoices">
        <type>WORD</type>
      </field>
      <field offset="76" name="wNotes">
        <type>WORD</type>
      </field>
      <field offset="78" name="wChannelMask">
        <type>WORD</type>
      </field>
      <field offset="80" name="dwSupport">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="MIDIOUTCAPSW">
      <struct name="tagMIDIOUTCAPSW" />
    </typedef>
    <typedef name="PMIDIOUTCAPSW">
      <ptr>
        <struct name="tagMIDIOUTCAPSW" />
      </ptr>
    </typedef>
    <typedef name="NPMIDIOUTCAPSW">
      <ptr>
        <struct name="tagMIDIOUTCAPSW" />
      </ptr>
    </typedef>
    <typedef name="LPMIDIOUTCAPSW">
      <ptr>
        <struct name="tagMIDIOUTCAPSW" />
      </ptr>
    </typedef>
    <typedef name="MIDIOUTCAPS">
      <type>MIDIOUTCAPSA</type>
    </typedef>
    <typedef name="PMIDIOUTCAPS">
      <type>PMIDIOUTCAPSA</type>
    </typedef>
    <typedef name="NPMIDIOUTCAPS">
      <type>NPMIDIOUTCAPSA</type>
    </typedef>
    <typedef name="LPMIDIOUTCAPS">
      <type>LPMIDIOUTCAPSA</type>
    </typedef>
    <struct name="tagMIDIOUTCAPS2A">
      <field offset="0" name="wMid">
        <type>WORD</type>
      </field>
      <field offset="2" name="wPid">
        <type>WORD</type>
      </field>
      <field offset="4" name="vDriverVersion">
        <type>MMVERSION</type>
      </field>
      <field offset="8" name="szPname">
        <arr length="32">
          <type>CHAR</type>
        </arr>
      </field>
      <field offset="40" name="wTechnology">
        <type>WORD</type>
      </field>
      <field offset="42" name="wVoices">
        <type>WORD</type>
      </field>
      <field offset="44" name="wNotes">
        <type>WORD</type>
      </field>
      <field offset="46" name="wChannelMask">
        <type>WORD</type>
      </field>
      <field offset="48" name="dwSupport">
        <type>DWORD</type>
      </field>
      <field offset="56" name="ManufacturerGuid">
        <type>GUID</type>
      </field>
      <field offset="72" name="ProductGuid">
        <type>GUID</type>
      </field>
      <field offset="88" name="NameGuid">
        <type>GUID</type>
      </field>
    </struct>
    <typedef name="MIDIOUTCAPS2A">
      <struct name="tagMIDIOUTCAPS2A" />
    </typedef>
    <typedef name="PMIDIOUTCAPS2A">
      <ptr>
        <struct name="tagMIDIOUTCAPS2A" />
      </ptr>
    </typedef>
    <typedef name="NPMIDIOUTCAPS2A">
      <ptr>
        <struct name="tagMIDIOUTCAPS2A" />
      </ptr>
    </typedef>
    <typedef name="LPMIDIOUTCAPS2A">
      <ptr>
        <struct name="tagMIDIOUTCAPS2A" />
      </ptr>
    </typedef>
    <struct name="tagMIDIOUTCAPS2W">
      <field offset="0" name="wMid">
        <type>WORD</type>
      </field>
      <field offset="2" name="wPid">
        <type>WORD</type>
      </field>
      <field offset="4" name="vDriverVersion">
        <type>MMVERSION</type>
      </field>
      <field offset="8" name="szPname">
        <arr length="32">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="72" name="wTechnology">
        <type>WORD</type>
      </field>
      <field offset="74" name="wVoices">
        <type>WORD</type>
      </field>
      <field offset="76" name="wNotes">
        <type>WORD</type>
      </field>
      <field offset="78" name="wChannelMask">
        <type>WORD</type>
      </field>
      <field offset="80" name="dwSupport">
        <type>DWORD</type>
      </field>
      <field offset="88" name="ManufacturerGuid">
        <type>GUID</type>
      </field>
      <field offset="104" name="ProductGuid">
        <type>GUID</type>
      </field>
      <field offset="120" name="NameGuid">
        <type>GUID</type>
      </field>
    </struct>
    <typedef name="MIDIOUTCAPS2W">
      <struct name="tagMIDIOUTCAPS2W" />
    </typedef>
    <typedef name="PMIDIOUTCAPS2W">
      <ptr>
        <struct name="tagMIDIOUTCAPS2W" />
      </ptr>
    </typedef>
    <typedef name="NPMIDIOUTCAPS2W">
      <ptr>
        <struct name="tagMIDIOUTCAPS2W" />
      </ptr>
    </typedef>
    <typedef name="LPMIDIOUTCAPS2W">
      <ptr>
        <struct name="tagMIDIOUTCAPS2W" />
      </ptr>
    </typedef>
    <typedef name="MIDIOUTCAPS2">
      <type>MIDIOUTCAPS2A</type>
    </typedef>
    <typedef name="PMIDIOUTCAPS2">
      <type>PMIDIOUTCAPS2A</type>
    </typedef>
    <typedef name="NPMIDIOUTCAPS2">
      <type>NPMIDIOUTCAPS2A</type>
    </typedef>
    <typedef name="LPMIDIOUTCAPS2">
      <type>LPMIDIOUTCAPS2A</type>
    </typedef>
    <struct name="tagMIDIINCAPSA">
      <field offset="0" name="wMid">
        <type>WORD</type>
      </field>
      <field offset="2" name="wPid">
        <type>WORD</type>
      </field>
      <field offset="4" name="vDriverVersion">
        <type>MMVERSION</type>
      </field>
      <field offset="8" name="szPname">
        <arr length="32">
          <type>CHAR</type>
        </arr>
      </field>
      <field offset="40" name="dwSupport">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="MIDIINCAPSA">
      <struct name="tagMIDIINCAPSA" />
    </typedef>
    <typedef name="PMIDIINCAPSA">
      <ptr>
        <struct name="tagMIDIINCAPSA" />
      </ptr>
    </typedef>
    <typedef name="NPMIDIINCAPSA">
      <ptr>
        <struct name="tagMIDIINCAPSA" />
      </ptr>
    </typedef>
    <typedef name="LPMIDIINCAPSA">
      <ptr>
        <struct name="tagMIDIINCAPSA" />
      </ptr>
    </typedef>
    <struct name="tagMIDIINCAPSW">
      <field offset="0" name="wMid">
        <type>WORD</type>
      </field>
      <field offset="2" name="wPid">
        <type>WORD</type>
      </field>
      <field offset="4" name="vDriverVersion">
        <type>MMVERSION</type>
      </field>
      <field offset="8" name="szPname">
        <arr length="32">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="72" name="dwSupport">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="MIDIINCAPSW">
      <struct name="tagMIDIINCAPSW" />
    </typedef>
    <typedef name="PMIDIINCAPSW">
      <ptr>
        <struct name="tagMIDIINCAPSW" />
      </ptr>
    </typedef>
    <typedef name="NPMIDIINCAPSW">
      <ptr>
        <struct name="tagMIDIINCAPSW" />
      </ptr>
    </typedef>
    <typedef name="LPMIDIINCAPSW">
      <ptr>
        <struct name="tagMIDIINCAPSW" />
      </ptr>
    </typedef>
    <typedef name="MIDIINCAPS">
      <type>MIDIINCAPSA</type>
    </typedef>
    <typedef name="PMIDIINCAPS">
      <type>PMIDIINCAPSA</type>
    </typedef>
    <typedef name="NPMIDIINCAPS">
      <type>NPMIDIINCAPSA</type>
    </typedef>
    <typedef name="LPMIDIINCAPS">
      <type>LPMIDIINCAPSA</type>
    </typedef>
    <struct name="tagMIDIINCAPS2A">
      <field offset="0" name="wMid">
        <type>WORD</type>
      </field>
      <field offset="2" name="wPid">
        <type>WORD</type>
      </field>
      <field offset="4" name="vDriverVersion">
        <type>MMVERSION</type>
      </field>
      <field offset="8" name="szPname">
        <arr length="32">
          <type>CHAR</type>
        </arr>
      </field>
      <field offset="40" name="dwSupport">
        <type>DWORD</type>
      </field>
      <field offset="48" name="ManufacturerGuid">
        <type>GUID</type>
      </field>
      <field offset="64" name="ProductGuid">
        <type>GUID</type>
      </field>
      <field offset="80" name="NameGuid">
        <type>GUID</type>
      </field>
    </struct>
    <typedef name="MIDIINCAPS2A">
      <struct name="tagMIDIINCAPS2A" />
    </typedef>
    <typedef name="PMIDIINCAPS2A">
      <ptr>
        <struct name="tagMIDIINCAPS2A" />
      </ptr>
    </typedef>
    <typedef name="NPMIDIINCAPS2A">
      <ptr>
        <struct name="tagMIDIINCAPS2A" />
      </ptr>
    </typedef>
    <typedef name="LPMIDIINCAPS2A">
      <ptr>
        <struct name="tagMIDIINCAPS2A" />
      </ptr>
    </typedef>
    <struct name="tagMIDIINCAPS2W">
      <field offset="0" name="wMid">
        <type>WORD</type>
      </field>
      <field offset="2" name="wPid">
        <type>WORD</type>
      </field>
      <field offset="4" name="vDriverVersion">
        <type>MMVERSION</type>
      </field>
      <field offset="8" name="szPname">
        <arr length="32">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="72" name="dwSupport">
        <type>DWORD</type>
      </field>
      <field offset="80" name="ManufacturerGuid">
        <type>GUID</type>
      </field>
      <field offset="96" name="ProductGuid">
        <type>GUID</type>
      </field>
      <field offset="112" name="NameGuid">
        <type>GUID</type>
      </field>
    </struct>
    <typedef name="MIDIINCAPS2W">
      <struct name="tagMIDIINCAPS2W" />
    </typedef>
    <typedef name="PMIDIINCAPS2W">
      <ptr>
        <struct name="tagMIDIINCAPS2W" />
      </ptr>
    </typedef>
    <typedef name="NPMIDIINCAPS2W">
      <ptr>
        <struct name="tagMIDIINCAPS2W" />
      </ptr>
    </typedef>
    <typedef name="LPMIDIINCAPS2W">
      <ptr>
        <struct name="tagMIDIINCAPS2W" />
      </ptr>
    </typedef>
    <typedef name="MIDIINCAPS2">
      <type>MIDIINCAPS2A</type>
    </typedef>
    <typedef name="PMIDIINCAPS2">
      <type>PMIDIINCAPS2A</type>
    </typedef>
    <typedef name="NPMIDIINCAPS2">
      <type>NPMIDIINCAPS2A</type>
    </typedef>
    <typedef name="LPMIDIINCAPS2">
      <type>LPMIDIINCAPS2A</type>
    </typedef>
    <struct name="midihdr_tag">
      <field offset="0" name="lpData">
        <type>LPSTR</type>
      </field>
      <field offset="4" name="dwBufferLength">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwBytesRecorded">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwUser">
        <type>DWORD_PTR</type>
      </field>
      <field offset="16" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="20" name="lpNext">
        <ptr>
          <struct name="midihdr_tag" />
        </ptr>
      </field>
      <field offset="24" name="reserved">
        <type>DWORD_PTR</type>
      </field>
      <field offset="28" name="dwOffset">
        <type>DWORD</type>
      </field>
      <field offset="32" name="dwReserved">
        <arr length="8">
          <type>DWORD_PTR</type>
        </arr>
      </field>
    </struct>
    <typedef name="MIDIHDR">
      <struct name="midihdr_tag" />
    </typedef>
    <typedef name="PMIDIHDR">
      <ptr>
        <struct name="midihdr_tag" />
      </ptr>
    </typedef>
    <typedef name="NPMIDIHDR">
      <ptr>
        <struct name="midihdr_tag" />
      </ptr>
    </typedef>
    <typedef name="LPMIDIHDR">
      <ptr>
        <struct name="midihdr_tag" />
      </ptr>
    </typedef>
    <struct name="midievent_tag">
      <field offset="0" name="dwDeltaTime">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwStreamID">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwEvent">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwParms">
        <arr length="1">
          <type>DWORD</type>
        </arr>
      </field>
    </struct>
    <typedef name="MIDIEVENT">
      <struct name="midievent_tag" />
    </typedef>
    <struct name="midistrmbuffver_tag">
      <field offset="0" name="dwVersion">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwMid">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwOEMVersion">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="MIDISTRMBUFFVER">
      <struct name="midistrmbuffver_tag" />
    </typedef>
    <struct name="midiproptimediv_tag">
      <field offset="0" name="cbStruct">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwTimeDiv">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="MIDIPROPTIMEDIV">
      <struct name="midiproptimediv_tag" />
    </typedef>
    <typedef name="LPMIDIPROPTIMEDIV">
      <ptr>
        <struct name="midiproptimediv_tag" />
      </ptr>
    </typedef>
    <struct name="midiproptempo_tag">
      <field offset="0" name="cbStruct">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwTempo">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="MIDIPROPTEMPO">
      <struct name="midiproptempo_tag" />
    </typedef>
    <typedef name="LPMIDIPROPTEMPO">
      <ptr>
        <struct name="midiproptempo_tag" />
      </ptr>
    </typedef>
    <struct name="tagAUXCAPSA">
      <field offset="0" name="wMid">
        <type>WORD</type>
      </field>
      <field offset="2" name="wPid">
        <type>WORD</type>
      </field>
      <field offset="4" name="vDriverVersion">
        <type>MMVERSION</type>
      </field>
      <field offset="8" name="szPname">
        <arr length="32">
          <type>CHAR</type>
        </arr>
      </field>
      <field offset="40" name="wTechnology">
        <type>WORD</type>
      </field>
      <field offset="42" name="wReserved1">
        <type>WORD</type>
      </field>
      <field offset="44" name="dwSupport">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="AUXCAPSA">
      <struct name="tagAUXCAPSA" />
    </typedef>
    <typedef name="PAUXCAPSA">
      <ptr>
        <struct name="tagAUXCAPSA" />
      </ptr>
    </typedef>
    <typedef name="NPAUXCAPSA">
      <ptr>
        <struct name="tagAUXCAPSA" />
      </ptr>
    </typedef>
    <typedef name="LPAUXCAPSA">
      <ptr>
        <struct name="tagAUXCAPSA" />
      </ptr>
    </typedef>
    <struct name="tagAUXCAPSW">
      <field offset="0" name="wMid">
        <type>WORD</type>
      </field>
      <field offset="2" name="wPid">
        <type>WORD</type>
      </field>
      <field offset="4" name="vDriverVersion">
        <type>MMVERSION</type>
      </field>
      <field offset="8" name="szPname">
        <arr length="32">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="72" name="wTechnology">
        <type>WORD</type>
      </field>
      <field offset="74" name="wReserved1">
        <type>WORD</type>
      </field>
      <field offset="76" name="dwSupport">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="AUXCAPSW">
      <struct name="tagAUXCAPSW" />
    </typedef>
    <typedef name="PAUXCAPSW">
      <ptr>
        <struct name="tagAUXCAPSW" />
      </ptr>
    </typedef>
    <typedef name="NPAUXCAPSW">
      <ptr>
        <struct name="tagAUXCAPSW" />
      </ptr>
    </typedef>
    <typedef name="LPAUXCAPSW">
      <ptr>
        <struct name="tagAUXCAPSW" />
      </ptr>
    </typedef>
    <typedef name="AUXCAPS">
      <type>AUXCAPSA</type>
    </typedef>
    <typedef name="PAUXCAPS">
      <type>PAUXCAPSA</type>
    </typedef>
    <typedef name="NPAUXCAPS">
      <type>NPAUXCAPSA</type>
    </typedef>
    <typedef name="LPAUXCAPS">
      <type>LPAUXCAPSA</type>
    </typedef>
    <struct name="tagAUXCAPS2A">
      <field offset="0" name="wMid">
        <type>WORD</type>
      </field>
      <field offset="2" name="wPid">
        <type>WORD</type>
      </field>
      <field offset="4" name="vDriverVersion">
        <type>MMVERSION</type>
      </field>
      <field offset="8" name="szPname">
        <arr length="32">
          <type>CHAR</type>
        </arr>
      </field>
      <field offset="40" name="wTechnology">
        <type>WORD</type>
      </field>
      <field offset="42" name="wReserved1">
        <type>WORD</type>
      </field>
      <field offset="44" name="dwSupport">
        <type>DWORD</type>
      </field>
      <field offset="48" name="ManufacturerGuid">
        <type>GUID</type>
      </field>
      <field offset="64" name="ProductGuid">
        <type>GUID</type>
      </field>
      <field offset="80" name="NameGuid">
        <type>GUID</type>
      </field>
    </struct>
    <typedef name="AUXCAPS2A">
      <struct name="tagAUXCAPS2A" />
    </typedef>
    <typedef name="PAUXCAPS2A">
      <ptr>
        <struct name="tagAUXCAPS2A" />
      </ptr>
    </typedef>
    <typedef name="NPAUXCAPS2A">
      <ptr>
        <struct name="tagAUXCAPS2A" />
      </ptr>
    </typedef>
    <typedef name="LPAUXCAPS2A">
      <ptr>
        <struct name="tagAUXCAPS2A" />
      </ptr>
    </typedef>
    <struct name="tagAUXCAPS2W">
      <field offset="0" name="wMid">
        <type>WORD</type>
      </field>
      <field offset="2" name="wPid">
        <type>WORD</type>
      </field>
      <field offset="4" name="vDriverVersion">
        <type>MMVERSION</type>
      </field>
      <field offset="8" name="szPname">
        <arr length="32">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="72" name="wTechnology">
        <type>WORD</type>
      </field>
      <field offset="74" name="wReserved1">
        <type>WORD</type>
      </field>
      <field offset="76" name="dwSupport">
        <type>DWORD</type>
      </field>
      <field offset="80" name="ManufacturerGuid">
        <type>GUID</type>
      </field>
      <field offset="96" name="ProductGuid">
        <type>GUID</type>
      </field>
      <field offset="112" name="NameGuid">
        <type>GUID</type>
      </field>
    </struct>
    <typedef name="AUXCAPS2W">
      <struct name="tagAUXCAPS2W" />
    </typedef>
    <typedef name="PAUXCAPS2W">
      <ptr>
        <struct name="tagAUXCAPS2W" />
      </ptr>
    </typedef>
    <typedef name="NPAUXCAPS2W">
      <ptr>
        <struct name="tagAUXCAPS2W" />
      </ptr>
    </typedef>
    <typedef name="LPAUXCAPS2W">
      <ptr>
        <struct name="tagAUXCAPS2W" />
      </ptr>
    </typedef>
    <typedef name="AUXCAPS2">
      <type>AUXCAPS2A</type>
    </typedef>
    <typedef name="PAUXCAPS2">
      <type>PAUXCAPS2A</type>
    </typedef>
    <typedef name="NPAUXCAPS2">
      <type>NPAUXCAPS2A</type>
    </typedef>
    <typedef name="LPAUXCAPS2">
      <type>LPAUXCAPS2A</type>
    </typedef>
    <struct name="HMIXEROBJ__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HMIXEROBJ">
      <ptr>
        <struct name="HMIXEROBJ__" />
      </ptr>
    </typedef>
    <typedef name="LPHMIXEROBJ">
      <ptr>
        <type>HMIXEROBJ</type>
      </ptr>
    </typedef>
    <struct name="HMIXER__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HMIXER">
      <ptr>
        <struct name="HMIXER__" />
      </ptr>
    </typedef>
    <typedef name="LPHMIXER">
      <ptr>
        <type>HMIXER</type>
      </ptr>
    </typedef>
    <struct name="tagMIXERCAPSA">
      <field offset="0" name="wMid">
        <type>WORD</type>
      </field>
      <field offset="2" name="wPid">
        <type>WORD</type>
      </field>
      <field offset="4" name="vDriverVersion">
        <type>MMVERSION</type>
      </field>
      <field offset="8" name="szPname">
        <arr length="32">
          <type>CHAR</type>
        </arr>
      </field>
      <field offset="40" name="fdwSupport">
        <type>DWORD</type>
      </field>
      <field offset="44" name="cDestinations">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="MIXERCAPSA">
      <struct name="tagMIXERCAPSA" />
    </typedef>
    <typedef name="PMIXERCAPSA">
      <ptr>
        <struct name="tagMIXERCAPSA" />
      </ptr>
    </typedef>
    <typedef name="LPMIXERCAPSA">
      <ptr>
        <struct name="tagMIXERCAPSA" />
      </ptr>
    </typedef>
    <struct name="tagMIXERCAPSW">
      <field offset="0" name="wMid">
        <type>WORD</type>
      </field>
      <field offset="2" name="wPid">
        <type>WORD</type>
      </field>
      <field offset="4" name="vDriverVersion">
        <type>MMVERSION</type>
      </field>
      <field offset="8" name="szPname">
        <arr length="32">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="72" name="fdwSupport">
        <type>DWORD</type>
      </field>
      <field offset="76" name="cDestinations">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="MIXERCAPSW">
      <struct name="tagMIXERCAPSW" />
    </typedef>
    <typedef name="PMIXERCAPSW">
      <ptr>
        <struct name="tagMIXERCAPSW" />
      </ptr>
    </typedef>
    <typedef name="LPMIXERCAPSW">
      <ptr>
        <struct name="tagMIXERCAPSW" />
      </ptr>
    </typedef>
    <typedef name="MIXERCAPS">
      <type>MIXERCAPSA</type>
    </typedef>
    <typedef name="PMIXERCAPS">
      <type>PMIXERCAPSA</type>
    </typedef>
    <typedef name="LPMIXERCAPS">
      <type>LPMIXERCAPSA</type>
    </typedef>
    <struct name="tagMIXERCAPS2A">
      <field offset="0" name="wMid">
        <type>WORD</type>
      </field>
      <field offset="2" name="wPid">
        <type>WORD</type>
      </field>
      <field offset="4" name="vDriverVersion">
        <type>MMVERSION</type>
      </field>
      <field offset="8" name="szPname">
        <arr length="32">
          <type>CHAR</type>
        </arr>
      </field>
      <field offset="40" name="fdwSupport">
        <type>DWORD</type>
      </field>
      <field offset="44" name="cDestinations">
        <type>DWORD</type>
      </field>
      <field offset="48" name="ManufacturerGuid">
        <type>GUID</type>
      </field>
      <field offset="64" name="ProductGuid">
        <type>GUID</type>
      </field>
      <field offset="80" name="NameGuid">
        <type>GUID</type>
      </field>
    </struct>
    <typedef name="MIXERCAPS2A">
      <struct name="tagMIXERCAPS2A" />
    </typedef>
    <typedef name="PMIXERCAPS2A">
      <ptr>
        <struct name="tagMIXERCAPS2A" />
      </ptr>
    </typedef>
    <typedef name="LPMIXERCAPS2A">
      <ptr>
        <struct name="tagMIXERCAPS2A" />
      </ptr>
    </typedef>
    <struct name="tagMIXERCAPS2W">
      <field offset="0" name="wMid">
        <type>WORD</type>
      </field>
      <field offset="2" name="wPid">
        <type>WORD</type>
      </field>
      <field offset="4" name="vDriverVersion">
        <type>MMVERSION</type>
      </field>
      <field offset="8" name="szPname">
        <arr length="32">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="72" name="fdwSupport">
        <type>DWORD</type>
      </field>
      <field offset="76" name="cDestinations">
        <type>DWORD</type>
      </field>
      <field offset="80" name="ManufacturerGuid">
        <type>GUID</type>
      </field>
      <field offset="96" name="ProductGuid">
        <type>GUID</type>
      </field>
      <field offset="112" name="NameGuid">
        <type>GUID</type>
      </field>
    </struct>
    <typedef name="MIXERCAPS2W">
      <struct name="tagMIXERCAPS2W" />
    </typedef>
    <typedef name="PMIXERCAPS2W">
      <ptr>
        <struct name="tagMIXERCAPS2W" />
      </ptr>
    </typedef>
    <typedef name="LPMIXERCAPS2W">
      <ptr>
        <struct name="tagMIXERCAPS2W" />
      </ptr>
    </typedef>
    <typedef name="MIXERCAPS2">
      <type>MIXERCAPS2A</type>
    </typedef>
    <typedef name="PMIXERCAPS2">
      <type>PMIXERCAPS2A</type>
    </typedef>
    <typedef name="LPMIXERCAPS2">
      <type>LPMIXERCAPS2A</type>
    </typedef>
    <struct name="struct_93">
      <field offset="0" name="dwType">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwDeviceID">
        <type>DWORD</type>
      </field>
      <field offset="8" name="wMid">
        <type>WORD</type>
      </field>
      <field offset="10" name="wPid">
        <type>WORD</type>
      </field>
      <field offset="12" name="vDriverVersion">
        <type>MMVERSION</type>
      </field>
      <field offset="16" name="szPname">
        <arr length="32">
          <type>CHAR</type>
        </arr>
      </field>
    </struct>
    <struct name="tagMIXERLINEA">
      <field offset="0" name="cbStruct">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwDestination">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwSource">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwLineID">
        <type>DWORD</type>
      </field>
      <field offset="16" name="fdwLine">
        <type>DWORD</type>
      </field>
      <field offset="20" name="dwUser">
        <type>DWORD_PTR</type>
      </field>
      <field offset="24" name="dwComponentType">
        <type>DWORD</type>
      </field>
      <field offset="28" name="cChannels">
        <type>DWORD</type>
      </field>
      <field offset="32" name="cConnections">
        <type>DWORD</type>
      </field>
      <field offset="36" name="cControls">
        <type>DWORD</type>
      </field>
      <field offset="40" name="szShortName">
        <arr length="16">
          <type>CHAR</type>
        </arr>
      </field>
      <field offset="56" name="szName">
        <arr length="64">
          <type>CHAR</type>
        </arr>
      </field>
      <field offset="120" name="Target">
        <struct name="struct_93" />
      </field>
    </struct>
    <typedef name="MIXERLINEA">
      <struct name="tagMIXERLINEA" />
    </typedef>
    <typedef name="PMIXERLINEA">
      <ptr>
        <struct name="tagMIXERLINEA" />
      </ptr>
    </typedef>
    <typedef name="LPMIXERLINEA">
      <ptr>
        <struct name="tagMIXERLINEA" />
      </ptr>
    </typedef>
    <struct name="struct_94">
      <field offset="0" name="dwType">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwDeviceID">
        <type>DWORD</type>
      </field>
      <field offset="8" name="wMid">
        <type>WORD</type>
      </field>
      <field offset="10" name="wPid">
        <type>WORD</type>
      </field>
      <field offset="12" name="vDriverVersion">
        <type>MMVERSION</type>
      </field>
      <field offset="16" name="szPname">
        <arr length="32">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <struct name="tagMIXERLINEW">
      <field offset="0" name="cbStruct">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwDestination">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwSource">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwLineID">
        <type>DWORD</type>
      </field>
      <field offset="16" name="fdwLine">
        <type>DWORD</type>
      </field>
      <field offset="20" name="dwUser">
        <type>DWORD_PTR</type>
      </field>
      <field offset="24" name="dwComponentType">
        <type>DWORD</type>
      </field>
      <field offset="28" name="cChannels">
        <type>DWORD</type>
      </field>
      <field offset="32" name="cConnections">
        <type>DWORD</type>
      </field>
      <field offset="36" name="cControls">
        <type>DWORD</type>
      </field>
      <field offset="40" name="szShortName">
        <arr length="16">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="72" name="szName">
        <arr length="64">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="200" name="Target">
        <struct name="struct_94" />
      </field>
    </struct>
    <typedef name="MIXERLINEW">
      <struct name="tagMIXERLINEW" />
    </typedef>
    <typedef name="PMIXERLINEW">
      <ptr>
        <struct name="tagMIXERLINEW" />
      </ptr>
    </typedef>
    <typedef name="LPMIXERLINEW">
      <ptr>
        <struct name="tagMIXERLINEW" />
      </ptr>
    </typedef>
    <typedef name="MIXERLINE">
      <type>MIXERLINEA</type>
    </typedef>
    <typedef name="PMIXERLINE">
      <type>PMIXERLINEA</type>
    </typedef>
    <typedef name="LPMIXERLINE">
      <type>LPMIXERLINEA</type>
    </typedef>
    <struct name="struct_95">
      <field offset="0" name="lMinimum">
        <type>LONG</type>
      </field>
      <field offset="4" name="lMaximum">
        <type>LONG</type>
      </field>
    </struct>
    <struct name="struct_96">
      <field offset="0" name="dwMinimum">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwMaximum">
        <type>DWORD</type>
      </field>
    </struct>
    <struct name="tagMIXERCONTROLA">
      <field offset="0" name="cbStruct">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwControlID">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwControlType">
        <type>DWORD</type>
      </field>
      <field offset="12" name="fdwControl">
        <type>DWORD</type>
      </field>
      <field offset="16" name="cMultipleItems">
        <type>DWORD</type>
      </field>
      <field offset="24" name="szShortName">
        <arr length="16">
          <type>CHAR</type>
        </arr>
      </field>
      <field offset="40" name="szName">
        <arr length="64">
          <type>CHAR</type>
        </arr>
      </field>
      <field offset="104" name="Bounds">
        <union>
          <alt>
            <struct name="struct_95" />
          </alt>
          <alt>
            <struct name="struct_96" />
          </alt>
          <alt name="dwReserved">
            <arr length="6">
              <type>DWORD</type>
            </arr>
          </alt>
        </union>
      </field>
      <field offset="128" name="Metrics">
        <union>
          <alt name="cSteps">
            <type>DWORD</type>
          </alt>
          <alt name="cbCustomData">
            <type>DWORD</type>
          </alt>
          <alt name="dwReserved">
            <arr length="6">
              <type>DWORD</type>
            </arr>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="MIXERCONTROLA">
      <struct name="tagMIXERCONTROLA" />
    </typedef>
    <typedef name="PMIXERCONTROLA">
      <ptr>
        <struct name="tagMIXERCONTROLA" />
      </ptr>
    </typedef>
    <typedef name="LPMIXERCONTROLA">
      <ptr>
        <struct name="tagMIXERCONTROLA" />
      </ptr>
    </typedef>
    <struct name="struct_97">
      <field offset="0" name="lMinimum">
        <type>LONG</type>
      </field>
      <field offset="4" name="lMaximum">
        <type>LONG</type>
      </field>
    </struct>
    <struct name="struct_98">
      <field offset="0" name="dwMinimum">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwMaximum">
        <type>DWORD</type>
      </field>
    </struct>
    <struct name="tagMIXERCONTROLW">
      <field offset="0" name="cbStruct">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwControlID">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwControlType">
        <type>DWORD</type>
      </field>
      <field offset="12" name="fdwControl">
        <type>DWORD</type>
      </field>
      <field offset="16" name="cMultipleItems">
        <type>DWORD</type>
      </field>
      <field offset="24" name="szShortName">
        <arr length="16">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="56" name="szName">
        <arr length="64">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="184" name="Bounds">
        <union>
          <alt>
            <struct name="struct_97" />
          </alt>
          <alt>
            <struct name="struct_98" />
          </alt>
          <alt name="dwReserved">
            <arr length="6">
              <type>DWORD</type>
            </arr>
          </alt>
        </union>
      </field>
      <field offset="208" name="Metrics">
        <union>
          <alt name="cSteps">
            <type>DWORD</type>
          </alt>
          <alt name="cbCustomData">
            <type>DWORD</type>
          </alt>
          <alt name="dwReserved">
            <arr length="6">
              <type>DWORD</type>
            </arr>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="MIXERCONTROLW">
      <struct name="tagMIXERCONTROLW" />
    </typedef>
    <typedef name="PMIXERCONTROLW">
      <ptr>
        <struct name="tagMIXERCONTROLW" />
      </ptr>
    </typedef>
    <typedef name="LPMIXERCONTROLW">
      <ptr>
        <struct name="tagMIXERCONTROLW" />
      </ptr>
    </typedef>
    <typedef name="MIXERCONTROL">
      <type>MIXERCONTROLA</type>
    </typedef>
    <typedef name="PMIXERCONTROL">
      <type>PMIXERCONTROLA</type>
    </typedef>
    <typedef name="LPMIXERCONTROL">
      <type>LPMIXERCONTROLA</type>
    </typedef>
    <struct name="tagMIXERLINECONTROLSA">
      <field offset="0" name="cbStruct">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwLineID">
        <type>DWORD</type>
      </field>
      <field offset="8">
        <union>
          <alt name="dwControlID">
            <type>DWORD</type>
          </alt>
          <alt name="dwControlType">
            <type>DWORD</type>
          </alt>
        </union>
      </field>
      <field offset="12" name="cControls">
        <type>DWORD</type>
      </field>
      <field offset="16" name="cbmxctrl">
        <type>DWORD</type>
      </field>
      <field offset="20" name="pamxctrl">
        <type>LPMIXERCONTROLA</type>
      </field>
    </struct>
    <typedef name="MIXERLINECONTROLSA">
      <struct name="tagMIXERLINECONTROLSA" />
    </typedef>
    <typedef name="PMIXERLINECONTROLSA">
      <ptr>
        <struct name="tagMIXERLINECONTROLSA" />
      </ptr>
    </typedef>
    <typedef name="LPMIXERLINECONTROLSA">
      <ptr>
        <struct name="tagMIXERLINECONTROLSA" />
      </ptr>
    </typedef>
    <struct name="tagMIXERLINECONTROLSW">
      <field offset="0" name="cbStruct">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwLineID">
        <type>DWORD</type>
      </field>
      <field offset="8">
        <union>
          <alt name="dwControlID">
            <type>DWORD</type>
          </alt>
          <alt name="dwControlType">
            <type>DWORD</type>
          </alt>
        </union>
      </field>
      <field offset="12" name="cControls">
        <type>DWORD</type>
      </field>
      <field offset="16" name="cbmxctrl">
        <type>DWORD</type>
      </field>
      <field offset="20" name="pamxctrl">
        <type>LPMIXERCONTROLW</type>
      </field>
    </struct>
    <typedef name="MIXERLINECONTROLSW">
      <struct name="tagMIXERLINECONTROLSW" />
    </typedef>
    <typedef name="PMIXERLINECONTROLSW">
      <ptr>
        <struct name="tagMIXERLINECONTROLSW" />
      </ptr>
    </typedef>
    <typedef name="LPMIXERLINECONTROLSW">
      <ptr>
        <struct name="tagMIXERLINECONTROLSW" />
      </ptr>
    </typedef>
    <typedef name="MIXERLINECONTROLS">
      <type>MIXERLINECONTROLSA</type>
    </typedef>
    <typedef name="PMIXERLINECONTROLS">
      <type>PMIXERLINECONTROLSA</type>
    </typedef>
    <typedef name="LPMIXERLINECONTROLS">
      <type>LPMIXERLINECONTROLSA</type>
    </typedef>
    <struct name="tMIXERCONTROLDETAILS">
      <field offset="0" name="cbStruct">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwControlID">
        <type>DWORD</type>
      </field>
      <field offset="8" name="cChannels">
        <type>DWORD</type>
      </field>
      <field offset="12">
        <union>
          <alt name="hwndOwner">
            <type>HWND</type>
          </alt>
          <alt name="cMultipleItems">
            <type>DWORD</type>
          </alt>
        </union>
      </field>
      <field offset="16" name="cbDetails">
        <type>DWORD</type>
      </field>
      <field offset="20" name="paDetails">
        <type>LPVOID</type>
      </field>
    </struct>
    <typedef name="MIXERCONTROLDETAILS">
      <struct name="tMIXERCONTROLDETAILS" />
    </typedef>
    <typedef name="PMIXERCONTROLDETAILS">
      <ptr>
        <struct name="tMIXERCONTROLDETAILS" />
      </ptr>
    </typedef>
    <typedef name="LPMIXERCONTROLDETAILS">
      <ptr>
        <struct name="tMIXERCONTROLDETAILS" />
      </ptr>
    </typedef>
    <struct name="tagMIXERCONTROLDETAILS_LISTTEXTA">
      <field offset="0" name="dwParam1">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwParam2">
        <type>DWORD</type>
      </field>
      <field offset="8" name="szName">
        <arr length="64">
          <type>CHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="MIXERCONTROLDETAILS_LISTTEXTA">
      <struct name="tagMIXERCONTROLDETAILS_LISTTEXTA" />
    </typedef>
    <typedef name="PMIXERCONTROLDETAILS_LISTTEXTA">
      <ptr>
        <struct name="tagMIXERCONTROLDETAILS_LISTTEXTA" />
      </ptr>
    </typedef>
    <typedef name="LPMIXERCONTROLDETAILS_LISTTEXTA">
      <ptr>
        <struct name="tagMIXERCONTROLDETAILS_LISTTEXTA" />
      </ptr>
    </typedef>
    <struct name="tagMIXERCONTROLDETAILS_LISTTEXTW">
      <field offset="0" name="dwParam1">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwParam2">
        <type>DWORD</type>
      </field>
      <field offset="8" name="szName">
        <arr length="64">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="MIXERCONTROLDETAILS_LISTTEXTW">
      <struct name="tagMIXERCONTROLDETAILS_LISTTEXTW" />
    </typedef>
    <typedef name="PMIXERCONTROLDETAILS_LISTTEXTW">
      <ptr>
        <struct name="tagMIXERCONTROLDETAILS_LISTTEXTW" />
      </ptr>
    </typedef>
    <typedef name="LPMIXERCONTROLDETAILS_LISTTEXTW">
      <ptr>
        <struct name="tagMIXERCONTROLDETAILS_LISTTEXTW" />
      </ptr>
    </typedef>
    <typedef name="MIXERCONTROLDETAILS_LISTTEXT">
      <type>MIXERCONTROLDETAILS_LISTTEXTA</type>
    </typedef>
    <typedef name="PMIXERCONTROLDETAILS_LISTTEXT">
      <type>PMIXERCONTROLDETAILS_LISTTEXTA</type>
    </typedef>
    <typedef name="LPMIXERCONTROLDETAILS_LISTTEXT">
      <type>LPMIXERCONTROLDETAILS_LISTTEXTA</type>
    </typedef>
    <struct name="tMIXERCONTROLDETAILS_BOOLEAN">
      <field offset="0" name="fValue">
        <type>LONG</type>
      </field>
    </struct>
    <typedef name="MIXERCONTROLDETAILS_BOOLEAN">
      <struct name="tMIXERCONTROLDETAILS_BOOLEAN" />
    </typedef>
    <typedef name="PMIXERCONTROLDETAILS_BOOLEAN">
      <ptr>
        <struct name="tMIXERCONTROLDETAILS_BOOLEAN" />
      </ptr>
    </typedef>
    <typedef name="LPMIXERCONTROLDETAILS_BOOLEAN">
      <ptr>
        <struct name="tMIXERCONTROLDETAILS_BOOLEAN" />
      </ptr>
    </typedef>
    <struct name="tMIXERCONTROLDETAILS_SIGNED">
      <field offset="0" name="lValue">
        <type>LONG</type>
      </field>
    </struct>
    <typedef name="MIXERCONTROLDETAILS_SIGNED">
      <struct name="tMIXERCONTROLDETAILS_SIGNED" />
    </typedef>
    <typedef name="PMIXERCONTROLDETAILS_SIGNED">
      <ptr>
        <struct name="tMIXERCONTROLDETAILS_SIGNED" />
      </ptr>
    </typedef>
    <typedef name="LPMIXERCONTROLDETAILS_SIGNED">
      <ptr>
        <struct name="tMIXERCONTROLDETAILS_SIGNED" />
      </ptr>
    </typedef>
    <struct name="tMIXERCONTROLDETAILS_UNSIGNED">
      <field offset="0" name="dwValue">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="MIXERCONTROLDETAILS_UNSIGNED">
      <struct name="tMIXERCONTROLDETAILS_UNSIGNED" />
    </typedef>
    <typedef name="PMIXERCONTROLDETAILS_UNSIGNED">
      <ptr>
        <struct name="tMIXERCONTROLDETAILS_UNSIGNED" />
      </ptr>
    </typedef>
    <typedef name="LPMIXERCONTROLDETAILS_UNSIGNED">
      <ptr>
        <struct name="tMIXERCONTROLDETAILS_UNSIGNED" />
      </ptr>
    </typedef>
    <typedef name="TIMECALLBACK">
      <fn>
        <return>
          <void />
        </return>
        <arg name="uTimerID">
          <type>UINT</type>
          <stack size="4" />
        </arg>
        <arg name="uMsg">
          <type>UINT</type>
          <stack size="4" />
        </arg>
        <arg name="dwUser">
          <type>DWORD_PTR</type>
          <stack size="4" />
        </arg>
        <arg name="dw1">
          <type>DWORD_PTR</type>
          <stack size="4" />
        </arg>
        <arg name="dw2">
          <type>DWORD_PTR</type>
          <stack size="4" />
        </arg>
      </fn>
    </typedef>
    <typedef name="LPTIMECALLBACK">
      <ptr>
        <type>TIMECALLBACK</type>
      </ptr>
    </typedef>
    <struct name="timecaps_tag">
      <field offset="0" name="wPeriodMin">
        <type>UINT</type>
      </field>
      <field offset="4" name="wPeriodMax">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="TIMECAPS">
      <struct name="timecaps_tag" />
    </typedef>
    <typedef name="PTIMECAPS">
      <ptr>
        <struct name="timecaps_tag" />
      </ptr>
    </typedef>
    <typedef name="NPTIMECAPS">
      <ptr>
        <struct name="timecaps_tag" />
      </ptr>
    </typedef>
    <typedef name="LPTIMECAPS">
      <ptr>
        <struct name="timecaps_tag" />
      </ptr>
    </typedef>
    <struct name="tagJOYCAPSA">
      <field offset="0" name="wMid">
        <type>WORD</type>
      </field>
      <field offset="2" name="wPid">
        <type>WORD</type>
      </field>
      <field offset="8" name="szPname">
        <arr length="32">
          <type>CHAR</type>
        </arr>
      </field>
      <field offset="40" name="wXmin">
        <type>UINT</type>
      </field>
      <field offset="44" name="wXmax">
        <type>UINT</type>
      </field>
      <field offset="48" name="wYmin">
        <type>UINT</type>
      </field>
      <field offset="52" name="wYmax">
        <type>UINT</type>
      </field>
      <field offset="56" name="wZmin">
        <type>UINT</type>
      </field>
      <field offset="60" name="wZmax">
        <type>UINT</type>
      </field>
      <field offset="64" name="wNumButtons">
        <type>UINT</type>
      </field>
      <field offset="68" name="wPeriodMin">
        <type>UINT</type>
      </field>
      <field offset="72" name="wPeriodMax">
        <type>UINT</type>
      </field>
      <field offset="76" name="wRmin">
        <type>UINT</type>
      </field>
      <field offset="80" name="wRmax">
        <type>UINT</type>
      </field>
      <field offset="84" name="wUmin">
        <type>UINT</type>
      </field>
      <field offset="88" name="wUmax">
        <type>UINT</type>
      </field>
      <field offset="92" name="wVmin">
        <type>UINT</type>
      </field>
      <field offset="96" name="wVmax">
        <type>UINT</type>
      </field>
      <field offset="100" name="wCaps">
        <type>UINT</type>
      </field>
      <field offset="104" name="wMaxAxes">
        <type>UINT</type>
      </field>
      <field offset="108" name="wNumAxes">
        <type>UINT</type>
      </field>
      <field offset="112" name="wMaxButtons">
        <type>UINT</type>
      </field>
      <field offset="120" name="szRegKey">
        <arr length="32">
          <type>CHAR</type>
        </arr>
      </field>
      <field offset="152" name="szOEMVxD">
        <arr length="260">
          <type>CHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="JOYCAPSA">
      <struct name="tagJOYCAPSA" />
    </typedef>
    <typedef name="PJOYCAPSA">
      <ptr>
        <struct name="tagJOYCAPSA" />
      </ptr>
    </typedef>
    <typedef name="NPJOYCAPSA">
      <ptr>
        <struct name="tagJOYCAPSA" />
      </ptr>
    </typedef>
    <typedef name="LPJOYCAPSA">
      <ptr>
        <struct name="tagJOYCAPSA" />
      </ptr>
    </typedef>
    <struct name="tagJOYCAPSW">
      <field offset="0" name="wMid">
        <type>WORD</type>
      </field>
      <field offset="2" name="wPid">
        <type>WORD</type>
      </field>
      <field offset="8" name="szPname">
        <arr length="32">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="72" name="wXmin">
        <type>UINT</type>
      </field>
      <field offset="76" name="wXmax">
        <type>UINT</type>
      </field>
      <field offset="80" name="wYmin">
        <type>UINT</type>
      </field>
      <field offset="84" name="wYmax">
        <type>UINT</type>
      </field>
      <field offset="88" name="wZmin">
        <type>UINT</type>
      </field>
      <field offset="92" name="wZmax">
        <type>UINT</type>
      </field>
      <field offset="96" name="wNumButtons">
        <type>UINT</type>
      </field>
      <field offset="100" name="wPeriodMin">
        <type>UINT</type>
      </field>
      <field offset="104" name="wPeriodMax">
        <type>UINT</type>
      </field>
      <field offset="108" name="wRmin">
        <type>UINT</type>
      </field>
      <field offset="112" name="wRmax">
        <type>UINT</type>
      </field>
      <field offset="116" name="wUmin">
        <type>UINT</type>
      </field>
      <field offset="120" name="wUmax">
        <type>UINT</type>
      </field>
      <field offset="124" name="wVmin">
        <type>UINT</type>
      </field>
      <field offset="128" name="wVmax">
        <type>UINT</type>
      </field>
      <field offset="132" name="wCaps">
        <type>UINT</type>
      </field>
      <field offset="136" name="wMaxAxes">
        <type>UINT</type>
      </field>
      <field offset="140" name="wNumAxes">
        <type>UINT</type>
      </field>
      <field offset="144" name="wMaxButtons">
        <type>UINT</type>
      </field>
      <field offset="152" name="szRegKey">
        <arr length="32">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="216" name="szOEMVxD">
        <arr length="260">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="JOYCAPSW">
      <struct name="tagJOYCAPSW" />
    </typedef>
    <typedef name="PJOYCAPSW">
      <ptr>
        <struct name="tagJOYCAPSW" />
      </ptr>
    </typedef>
    <typedef name="NPJOYCAPSW">
      <ptr>
        <struct name="tagJOYCAPSW" />
      </ptr>
    </typedef>
    <typedef name="LPJOYCAPSW">
      <ptr>
        <struct name="tagJOYCAPSW" />
      </ptr>
    </typedef>
    <typedef name="JOYCAPS">
      <type>JOYCAPSA</type>
    </typedef>
    <typedef name="PJOYCAPS">
      <type>PJOYCAPSA</type>
    </typedef>
    <typedef name="NPJOYCAPS">
      <type>NPJOYCAPSA</type>
    </typedef>
    <typedef name="LPJOYCAPS">
      <type>LPJOYCAPSA</type>
    </typedef>
    <struct name="tagJOYCAPS2A">
      <field offset="0" name="wMid">
        <type>WORD</type>
      </field>
      <field offset="2" name="wPid">
        <type>WORD</type>
      </field>
      <field offset="8" name="szPname">
        <arr length="32">
          <type>CHAR</type>
        </arr>
      </field>
      <field offset="40" name="wXmin">
        <type>UINT</type>
      </field>
      <field offset="44" name="wXmax">
        <type>UINT</type>
      </field>
      <field offset="48" name="wYmin">
        <type>UINT</type>
      </field>
      <field offset="52" name="wYmax">
        <type>UINT</type>
      </field>
      <field offset="56" name="wZmin">
        <type>UINT</type>
      </field>
      <field offset="60" name="wZmax">
        <type>UINT</type>
      </field>
      <field offset="64" name="wNumButtons">
        <type>UINT</type>
      </field>
      <field offset="68" name="wPeriodMin">
        <type>UINT</type>
      </field>
      <field offset="72" name="wPeriodMax">
        <type>UINT</type>
      </field>
      <field offset="76" name="wRmin">
        <type>UINT</type>
      </field>
      <field offset="80" name="wRmax">
        <type>UINT</type>
      </field>
      <field offset="84" name="wUmin">
        <type>UINT</type>
      </field>
      <field offset="88" name="wUmax">
        <type>UINT</type>
      </field>
      <field offset="92" name="wVmin">
        <type>UINT</type>
      </field>
      <field offset="96" name="wVmax">
        <type>UINT</type>
      </field>
      <field offset="100" name="wCaps">
        <type>UINT</type>
      </field>
      <field offset="104" name="wMaxAxes">
        <type>UINT</type>
      </field>
      <field offset="108" name="wNumAxes">
        <type>UINT</type>
      </field>
      <field offset="112" name="wMaxButtons">
        <type>UINT</type>
      </field>
      <field offset="120" name="szRegKey">
        <arr length="32">
          <type>CHAR</type>
        </arr>
      </field>
      <field offset="152" name="szOEMVxD">
        <arr length="260">
          <type>CHAR</type>
        </arr>
      </field>
      <field offset="416" name="ManufacturerGuid">
        <type>GUID</type>
      </field>
      <field offset="432" name="ProductGuid">
        <type>GUID</type>
      </field>
      <field offset="448" name="NameGuid">
        <type>GUID</type>
      </field>
    </struct>
    <typedef name="JOYCAPS2A">
      <struct name="tagJOYCAPS2A" />
    </typedef>
    <typedef name="PJOYCAPS2A">
      <ptr>
        <struct name="tagJOYCAPS2A" />
      </ptr>
    </typedef>
    <typedef name="NPJOYCAPS2A">
      <ptr>
        <struct name="tagJOYCAPS2A" />
      </ptr>
    </typedef>
    <typedef name="LPJOYCAPS2A">
      <ptr>
        <struct name="tagJOYCAPS2A" />
      </ptr>
    </typedef>
    <struct name="tagJOYCAPS2W">
      <field offset="0" name="wMid">
        <type>WORD</type>
      </field>
      <field offset="2" name="wPid">
        <type>WORD</type>
      </field>
      <field offset="8" name="szPname">
        <arr length="32">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="72" name="wXmin">
        <type>UINT</type>
      </field>
      <field offset="76" name="wXmax">
        <type>UINT</type>
      </field>
      <field offset="80" name="wYmin">
        <type>UINT</type>
      </field>
      <field offset="84" name="wYmax">
        <type>UINT</type>
      </field>
      <field offset="88" name="wZmin">
        <type>UINT</type>
      </field>
      <field offset="92" name="wZmax">
        <type>UINT</type>
      </field>
      <field offset="96" name="wNumButtons">
        <type>UINT</type>
      </field>
      <field offset="100" name="wPeriodMin">
        <type>UINT</type>
      </field>
      <field offset="104" name="wPeriodMax">
        <type>UINT</type>
      </field>
      <field offset="108" name="wRmin">
        <type>UINT</type>
      </field>
      <field offset="112" name="wRmax">
        <type>UINT</type>
      </field>
      <field offset="116" name="wUmin">
        <type>UINT</type>
      </field>
      <field offset="120" name="wUmax">
        <type>UINT</type>
      </field>
      <field offset="124" name="wVmin">
        <type>UINT</type>
      </field>
      <field offset="128" name="wVmax">
        <type>UINT</type>
      </field>
      <field offset="132" name="wCaps">
        <type>UINT</type>
      </field>
      <field offset="136" name="wMaxAxes">
        <type>UINT</type>
      </field>
      <field offset="140" name="wNumAxes">
        <type>UINT</type>
      </field>
      <field offset="144" name="wMaxButtons">
        <type>UINT</type>
      </field>
      <field offset="152" name="szRegKey">
        <arr length="32">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="216" name="szOEMVxD">
        <arr length="260">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="736" name="ManufacturerGuid">
        <type>GUID</type>
      </field>
      <field offset="752" name="ProductGuid">
        <type>GUID</type>
      </field>
      <field offset="768" name="NameGuid">
        <type>GUID</type>
      </field>
    </struct>
    <typedef name="JOYCAPS2W">
      <struct name="tagJOYCAPS2W" />
    </typedef>
    <typedef name="PJOYCAPS2W">
      <ptr>
        <struct name="tagJOYCAPS2W" />
      </ptr>
    </typedef>
    <typedef name="NPJOYCAPS2W">
      <ptr>
        <struct name="tagJOYCAPS2W" />
      </ptr>
    </typedef>
    <typedef name="LPJOYCAPS2W">
      <ptr>
        <struct name="tagJOYCAPS2W" />
      </ptr>
    </typedef>
    <typedef name="JOYCAPS2">
      <type>JOYCAPS2A</type>
    </typedef>
    <typedef name="PJOYCAPS2">
      <type>PJOYCAPS2A</type>
    </typedef>
    <typedef name="NPJOYCAPS2">
      <type>NPJOYCAPS2A</type>
    </typedef>
    <typedef name="LPJOYCAPS2">
      <type>LPJOYCAPS2A</type>
    </typedef>
    <struct name="joyinfo_tag">
      <field offset="0" name="wXpos">
        <type>UINT</type>
      </field>
      <field offset="4" name="wYpos">
        <type>UINT</type>
      </field>
      <field offset="8" name="wZpos">
        <type>UINT</type>
      </field>
      <field offset="12" name="wButtons">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="JOYINFO">
      <struct name="joyinfo_tag" />
    </typedef>
    <typedef name="PJOYINFO">
      <ptr>
        <struct name="joyinfo_tag" />
      </ptr>
    </typedef>
    <typedef name="NPJOYINFO">
      <ptr>
        <struct name="joyinfo_tag" />
      </ptr>
    </typedef>
    <typedef name="LPJOYINFO">
      <ptr>
        <struct name="joyinfo_tag" />
      </ptr>
    </typedef>
    <struct name="joyinfoex_tag">
      <field offset="0" name="dwSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwXpos">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwYpos">
        <type>DWORD</type>
      </field>
      <field offset="16" name="dwZpos">
        <type>DWORD</type>
      </field>
      <field offset="20" name="dwRpos">
        <type>DWORD</type>
      </field>
      <field offset="24" name="dwUpos">
        <type>DWORD</type>
      </field>
      <field offset="28" name="dwVpos">
        <type>DWORD</type>
      </field>
      <field offset="32" name="dwButtons">
        <type>DWORD</type>
      </field>
      <field offset="36" name="dwButtonNumber">
        <type>DWORD</type>
      </field>
      <field offset="40" name="dwPOV">
        <type>DWORD</type>
      </field>
      <field offset="44" name="dwReserved1">
        <type>DWORD</type>
      </field>
      <field offset="48" name="dwReserved2">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="JOYINFOEX">
      <struct name="joyinfoex_tag" />
    </typedef>
    <typedef name="PJOYINFOEX">
      <ptr>
        <struct name="joyinfoex_tag" />
      </ptr>
    </typedef>
    <typedef name="NPJOYINFOEX">
      <ptr>
        <struct name="joyinfoex_tag" />
      </ptr>
    </typedef>
    <typedef name="LPJOYINFOEX">
      <ptr>
        <struct name="joyinfoex_tag" />
      </ptr>
    </typedef>
    <typedef name="FOURCC">
      <type>DWORD</type>
    </typedef>
    <typedef name="HPSTR">
      <ptr>
        <prim domain="Character" size="1" />
      </ptr>
    </typedef>
    <struct name="HMMIO__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HMMIO">
      <ptr>
        <struct name="HMMIO__" />
      </ptr>
    </typedef>
    <typedef name="MMIOPROC">
      <fn>
        <return>
          <type>LRESULT</type>
          <reg>eax</reg>
        </return>
        <arg name="lpmmioinfo">
          <type>LPSTR</type>
          <stack size="4" />
        </arg>
        <arg name="uMsg">
          <type>UINT</type>
          <stack size="4" />
        </arg>
        <arg name="lParam1">
          <type>LPARAM</type>
          <stack size="4" />
        </arg>
        <arg name="lParam2">
          <type>LPARAM</type>
          <stack size="4" />
        </arg>
      </fn>
    </typedef>
    <typedef name="LPMMIOPROC">
      <ptr>
        <type>MMIOPROC</type>
      </ptr>
    </typedef>
    <struct name="_MMIOINFO">
      <field offset="0" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="4" name="fccIOProc">
        <type>FOURCC</type>
      </field>
      <field offset="8" name="pIOProc">
        <type>LPMMIOPROC</type>
      </field>
      <field offset="12" name="wErrorRet">
        <type>UINT</type>
      </field>
      <field offset="16" name="htask">
        <type>HTASK</type>
      </field>
      <field offset="20" name="cchBuffer">
        <type>LONG</type>
      </field>
      <field offset="24" name="pchBuffer">
        <type>HPSTR</type>
      </field>
      <field offset="28" name="pchNext">
        <type>HPSTR</type>
      </field>
      <field offset="32" name="pchEndRead">
        <type>HPSTR</type>
      </field>
      <field offset="36" name="pchEndWrite">
        <type>HPSTR</type>
      </field>
      <field offset="40" name="lBufOffset">
        <type>LONG</type>
      </field>
      <field offset="44" name="lDiskOffset">
        <type>LONG</type>
      </field>
      <field offset="48" name="adwInfo">
        <arr length="3">
          <type>DWORD</type>
        </arr>
      </field>
      <field offset="60" name="dwReserved1">
        <type>DWORD</type>
      </field>
      <field offset="64" name="dwReserved2">
        <type>DWORD</type>
      </field>
      <field offset="68" name="hmmio">
        <type>HMMIO</type>
      </field>
    </struct>
    <typedef name="MMIOINFO">
      <struct name="_MMIOINFO" />
    </typedef>
    <typedef name="PMMIOINFO">
      <ptr>
        <struct name="_MMIOINFO" />
      </ptr>
    </typedef>
    <typedef name="NPMMIOINFO">
      <ptr>
        <struct name="_MMIOINFO" />
      </ptr>
    </typedef>
    <typedef name="LPMMIOINFO">
      <ptr>
        <struct name="_MMIOINFO" />
      </ptr>
    </typedef>
    <typedef name="LPCMMIOINFO">
      <ptr>
        <type>MMIOINFO</type>
      </ptr>
    </typedef>
    <struct name="_MMCKINFO">
      <field offset="0" name="ckid">
        <type>FOURCC</type>
      </field>
      <field offset="4" name="cksize">
        <type>DWORD</type>
      </field>
      <field offset="8" name="fccType">
        <type>FOURCC</type>
      </field>
      <field offset="12" name="dwDataOffset">
        <type>DWORD</type>
      </field>
      <field offset="16" name="dwFlags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="MMCKINFO">
      <struct name="_MMCKINFO" />
    </typedef>
    <typedef name="PMMCKINFO">
      <ptr>
        <struct name="_MMCKINFO" />
      </ptr>
    </typedef>
    <typedef name="NPMMCKINFO">
      <ptr>
        <struct name="_MMCKINFO" />
      </ptr>
    </typedef>
    <typedef name="LPMMCKINFO">
      <ptr>
        <struct name="_MMCKINFO" />
      </ptr>
    </typedef>
    <typedef name="LPCMMCKINFO">
      <ptr>
        <type>MMCKINFO</type>
      </ptr>
    </typedef>
    <typedef name="MCIERROR">
      <type>DWORD</type>
    </typedef>
    <typedef name="MCIDEVICEID">
      <type>UINT</type>
    </typedef>
    <typedef name="YIELDPROC">
      <ptr>
        <fn>
          <return>
            <type>UINT</type>
            <reg>eax</reg>
          </return>
          <arg name="mciId">
            <type>MCIDEVICEID</type>
            <stack size="4" />
          </arg>
          <arg name="dwYieldData">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="tagMCI_GENERIC_PARMS">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
    </struct>
    <typedef name="MCI_GENERIC_PARMS">
      <struct name="tagMCI_GENERIC_PARMS" />
    </typedef>
    <typedef name="PMCI_GENERIC_PARMS">
      <ptr>
        <struct name="tagMCI_GENERIC_PARMS" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_GENERIC_PARMS">
      <ptr>
        <struct name="tagMCI_GENERIC_PARMS" />
      </ptr>
    </typedef>
    <struct name="tagMCI_OPEN_PARMSA">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="wDeviceID">
        <type>MCIDEVICEID</type>
      </field>
      <field offset="8" name="lpstrDeviceType">
        <type>LPCSTR</type>
      </field>
      <field offset="12" name="lpstrElementName">
        <type>LPCSTR</type>
      </field>
      <field offset="16" name="lpstrAlias">
        <type>LPCSTR</type>
      </field>
    </struct>
    <typedef name="MCI_OPEN_PARMSA">
      <struct name="tagMCI_OPEN_PARMSA" />
    </typedef>
    <typedef name="PMCI_OPEN_PARMSA">
      <ptr>
        <struct name="tagMCI_OPEN_PARMSA" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_OPEN_PARMSA">
      <ptr>
        <struct name="tagMCI_OPEN_PARMSA" />
      </ptr>
    </typedef>
    <struct name="tagMCI_OPEN_PARMSW">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="wDeviceID">
        <type>MCIDEVICEID</type>
      </field>
      <field offset="8" name="lpstrDeviceType">
        <type>LPCWSTR</type>
      </field>
      <field offset="12" name="lpstrElementName">
        <type>LPCWSTR</type>
      </field>
      <field offset="16" name="lpstrAlias">
        <type>LPCWSTR</type>
      </field>
    </struct>
    <typedef name="MCI_OPEN_PARMSW">
      <struct name="tagMCI_OPEN_PARMSW" />
    </typedef>
    <typedef name="PMCI_OPEN_PARMSW">
      <ptr>
        <struct name="tagMCI_OPEN_PARMSW" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_OPEN_PARMSW">
      <ptr>
        <struct name="tagMCI_OPEN_PARMSW" />
      </ptr>
    </typedef>
    <typedef name="MCI_OPEN_PARMS">
      <type>MCI_OPEN_PARMSA</type>
    </typedef>
    <typedef name="PMCI_OPEN_PARMS">
      <type>PMCI_OPEN_PARMSA</type>
    </typedef>
    <typedef name="LPMCI_OPEN_PARMS">
      <type>LPMCI_OPEN_PARMSA</type>
    </typedef>
    <struct name="tagMCI_PLAY_PARMS">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="dwFrom">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwTo">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="MCI_PLAY_PARMS">
      <struct name="tagMCI_PLAY_PARMS" />
    </typedef>
    <typedef name="PMCI_PLAY_PARMS">
      <ptr>
        <struct name="tagMCI_PLAY_PARMS" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_PLAY_PARMS">
      <ptr>
        <struct name="tagMCI_PLAY_PARMS" />
      </ptr>
    </typedef>
    <struct name="tagMCI_SEEK_PARMS">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="dwTo">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="MCI_SEEK_PARMS">
      <struct name="tagMCI_SEEK_PARMS" />
    </typedef>
    <typedef name="PMCI_SEEK_PARMS">
      <ptr>
        <struct name="tagMCI_SEEK_PARMS" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_SEEK_PARMS">
      <ptr>
        <struct name="tagMCI_SEEK_PARMS" />
      </ptr>
    </typedef>
    <struct name="tagMCI_STATUS_PARMS">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="dwReturn">
        <type>DWORD_PTR</type>
      </field>
      <field offset="8" name="dwItem">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwTrack">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="MCI_STATUS_PARMS">
      <struct name="tagMCI_STATUS_PARMS" />
    </typedef>
    <typedef name="PMCI_STATUS_PARMS">
      <ptr>
        <struct name="tagMCI_STATUS_PARMS" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_STATUS_PARMS">
      <ptr>
        <struct name="tagMCI_STATUS_PARMS" />
      </ptr>
    </typedef>
    <struct name="tagMCI_INFO_PARMSA">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="lpstrReturn">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="dwRetSize">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="MCI_INFO_PARMSA">
      <struct name="tagMCI_INFO_PARMSA" />
    </typedef>
    <typedef name="LPMCI_INFO_PARMSA">
      <ptr>
        <struct name="tagMCI_INFO_PARMSA" />
      </ptr>
    </typedef>
    <struct name="tagMCI_INFO_PARMSW">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="lpstrReturn">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="dwRetSize">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="MCI_INFO_PARMSW">
      <struct name="tagMCI_INFO_PARMSW" />
    </typedef>
    <typedef name="LPMCI_INFO_PARMSW">
      <ptr>
        <struct name="tagMCI_INFO_PARMSW" />
      </ptr>
    </typedef>
    <typedef name="MCI_INFO_PARMS">
      <type>MCI_INFO_PARMSA</type>
    </typedef>
    <typedef name="LPMCI_INFO_PARMS">
      <type>LPMCI_INFO_PARMSA</type>
    </typedef>
    <struct name="tagMCI_GETDEVCAPS_PARMS">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="dwReturn">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwItem">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="MCI_GETDEVCAPS_PARMS">
      <struct name="tagMCI_GETDEVCAPS_PARMS" />
    </typedef>
    <typedef name="PMCI_GETDEVCAPS_PARMS">
      <ptr>
        <struct name="tagMCI_GETDEVCAPS_PARMS" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_GETDEVCAPS_PARMS">
      <ptr>
        <struct name="tagMCI_GETDEVCAPS_PARMS" />
      </ptr>
    </typedef>
    <struct name="tagMCI_SYSINFO_PARMSA">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="lpstrReturn">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="dwRetSize">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwNumber">
        <type>DWORD</type>
      </field>
      <field offset="16" name="wDeviceType">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="MCI_SYSINFO_PARMSA">
      <struct name="tagMCI_SYSINFO_PARMSA" />
    </typedef>
    <typedef name="PMCI_SYSINFO_PARMSA">
      <ptr>
        <struct name="tagMCI_SYSINFO_PARMSA" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_SYSINFO_PARMSA">
      <ptr>
        <struct name="tagMCI_SYSINFO_PARMSA" />
      </ptr>
    </typedef>
    <struct name="tagMCI_SYSINFO_PARMSW">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="lpstrReturn">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="dwRetSize">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwNumber">
        <type>DWORD</type>
      </field>
      <field offset="16" name="wDeviceType">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="MCI_SYSINFO_PARMSW">
      <struct name="tagMCI_SYSINFO_PARMSW" />
    </typedef>
    <typedef name="PMCI_SYSINFO_PARMSW">
      <ptr>
        <struct name="tagMCI_SYSINFO_PARMSW" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_SYSINFO_PARMSW">
      <ptr>
        <struct name="tagMCI_SYSINFO_PARMSW" />
      </ptr>
    </typedef>
    <typedef name="MCI_SYSINFO_PARMS">
      <type>MCI_SYSINFO_PARMSA</type>
    </typedef>
    <typedef name="PMCI_SYSINFO_PARMS">
      <type>PMCI_SYSINFO_PARMSA</type>
    </typedef>
    <typedef name="LPMCI_SYSINFO_PARMS">
      <type>LPMCI_SYSINFO_PARMSA</type>
    </typedef>
    <struct name="tagMCI_SET_PARMS">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="dwTimeFormat">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwAudio">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="MCI_SET_PARMS">
      <struct name="tagMCI_SET_PARMS" />
    </typedef>
    <typedef name="PMCI_SET_PARMS">
      <ptr>
        <struct name="tagMCI_SET_PARMS" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_SET_PARMS">
      <ptr>
        <struct name="tagMCI_SET_PARMS" />
      </ptr>
    </typedef>
    <struct name="tagMCI_BREAK_PARMS">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="nVirtKey">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="hwndBreak">
        <type>HWND</type>
      </field>
    </struct>
    <typedef name="MCI_BREAK_PARMS">
      <struct name="tagMCI_BREAK_PARMS" />
    </typedef>
    <typedef name="PMCI_BREAK_PARMS">
      <ptr>
        <struct name="tagMCI_BREAK_PARMS" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_BREAK_PARMS">
      <ptr>
        <struct name="tagMCI_BREAK_PARMS" />
      </ptr>
    </typedef>
    <struct name="tagMCI_SAVE_PARMSA">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="lpfilename">
        <type>LPCSTR</type>
      </field>
    </struct>
    <typedef name="MCI_SAVE_PARMSA">
      <struct name="tagMCI_SAVE_PARMSA" />
    </typedef>
    <typedef name="PMCI_SAVE_PARMSA">
      <ptr>
        <struct name="tagMCI_SAVE_PARMSA" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_SAVE_PARMSA">
      <ptr>
        <struct name="tagMCI_SAVE_PARMSA" />
      </ptr>
    </typedef>
    <struct name="tagMCI_SAVE_PARMSW">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="lpfilename">
        <type>LPCWSTR</type>
      </field>
    </struct>
    <typedef name="MCI_SAVE_PARMSW">
      <struct name="tagMCI_SAVE_PARMSW" />
    </typedef>
    <typedef name="PMCI_SAVE_PARMSW">
      <ptr>
        <struct name="tagMCI_SAVE_PARMSW" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_SAVE_PARMSW">
      <ptr>
        <struct name="tagMCI_SAVE_PARMSW" />
      </ptr>
    </typedef>
    <typedef name="MCI_SAVE_PARMS">
      <type>MCI_SAVE_PARMSA</type>
    </typedef>
    <typedef name="PMCI_SAVE_PARMS">
      <type>PMCI_SAVE_PARMSA</type>
    </typedef>
    <typedef name="LPMCI_SAVE_PARMS">
      <type>LPMCI_SAVE_PARMSA</type>
    </typedef>
    <struct name="tagMCI_LOAD_PARMSA">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="lpfilename">
        <type>LPCSTR</type>
      </field>
    </struct>
    <typedef name="MCI_LOAD_PARMSA">
      <struct name="tagMCI_LOAD_PARMSA" />
    </typedef>
    <typedef name="PMCI_LOAD_PARMSA">
      <ptr>
        <struct name="tagMCI_LOAD_PARMSA" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_LOAD_PARMSA">
      <ptr>
        <struct name="tagMCI_LOAD_PARMSA" />
      </ptr>
    </typedef>
    <struct name="tagMCI_LOAD_PARMSW">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="lpfilename">
        <type>LPCWSTR</type>
      </field>
    </struct>
    <typedef name="MCI_LOAD_PARMSW">
      <struct name="tagMCI_LOAD_PARMSW" />
    </typedef>
    <typedef name="PMCI_LOAD_PARMSW">
      <ptr>
        <struct name="tagMCI_LOAD_PARMSW" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_LOAD_PARMSW">
      <ptr>
        <struct name="tagMCI_LOAD_PARMSW" />
      </ptr>
    </typedef>
    <typedef name="MCI_LOAD_PARMS">
      <type>MCI_LOAD_PARMSA</type>
    </typedef>
    <typedef name="PMCI_LOAD_PARMS">
      <type>PMCI_LOAD_PARMSA</type>
    </typedef>
    <typedef name="LPMCI_LOAD_PARMS">
      <type>LPMCI_LOAD_PARMSA</type>
    </typedef>
    <struct name="tagMCI_RECORD_PARMS">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="dwFrom">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwTo">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="MCI_RECORD_PARMS">
      <struct name="tagMCI_RECORD_PARMS" />
    </typedef>
    <typedef name="LPMCI_RECORD_PARMS">
      <ptr>
        <struct name="tagMCI_RECORD_PARMS" />
      </ptr>
    </typedef>
    <struct name="tagMCI_VD_PLAY_PARMS">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="dwFrom">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwTo">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwSpeed">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="MCI_VD_PLAY_PARMS">
      <struct name="tagMCI_VD_PLAY_PARMS" />
    </typedef>
    <typedef name="PMCI_VD_PLAY_PARMS">
      <ptr>
        <struct name="tagMCI_VD_PLAY_PARMS" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_VD_PLAY_PARMS">
      <ptr>
        <struct name="tagMCI_VD_PLAY_PARMS" />
      </ptr>
    </typedef>
    <struct name="tagMCI_VD_STEP_PARMS">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="dwFrames">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="MCI_VD_STEP_PARMS">
      <struct name="tagMCI_VD_STEP_PARMS" />
    </typedef>
    <typedef name="PMCI_VD_STEP_PARMS">
      <ptr>
        <struct name="tagMCI_VD_STEP_PARMS" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_VD_STEP_PARMS">
      <ptr>
        <struct name="tagMCI_VD_STEP_PARMS" />
      </ptr>
    </typedef>
    <struct name="tagMCI_VD_ESCAPE_PARMSA">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="lpstrCommand">
        <type>LPCSTR</type>
      </field>
    </struct>
    <typedef name="MCI_VD_ESCAPE_PARMSA">
      <struct name="tagMCI_VD_ESCAPE_PARMSA" />
    </typedef>
    <typedef name="PMCI_VD_ESCAPE_PARMSA">
      <ptr>
        <struct name="tagMCI_VD_ESCAPE_PARMSA" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_VD_ESCAPE_PARMSA">
      <ptr>
        <struct name="tagMCI_VD_ESCAPE_PARMSA" />
      </ptr>
    </typedef>
    <struct name="tagMCI_VD_ESCAPE_PARMSW">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="lpstrCommand">
        <type>LPCWSTR</type>
      </field>
    </struct>
    <typedef name="MCI_VD_ESCAPE_PARMSW">
      <struct name="tagMCI_VD_ESCAPE_PARMSW" />
    </typedef>
    <typedef name="PMCI_VD_ESCAPE_PARMSW">
      <ptr>
        <struct name="tagMCI_VD_ESCAPE_PARMSW" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_VD_ESCAPE_PARMSW">
      <ptr>
        <struct name="tagMCI_VD_ESCAPE_PARMSW" />
      </ptr>
    </typedef>
    <typedef name="MCI_VD_ESCAPE_PARMS">
      <type>MCI_VD_ESCAPE_PARMSA</type>
    </typedef>
    <typedef name="PMCI_VD_ESCAPE_PARMS">
      <type>PMCI_VD_ESCAPE_PARMSA</type>
    </typedef>
    <typedef name="LPMCI_VD_ESCAPE_PARMS">
      <type>LPMCI_VD_ESCAPE_PARMSA</type>
    </typedef>
    <struct name="tagMCI_WAVE_OPEN_PARMSA">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="wDeviceID">
        <type>MCIDEVICEID</type>
      </field>
      <field offset="8" name="lpstrDeviceType">
        <type>LPCSTR</type>
      </field>
      <field offset="12" name="lpstrElementName">
        <type>LPCSTR</type>
      </field>
      <field offset="16" name="lpstrAlias">
        <type>LPCSTR</type>
      </field>
      <field offset="20" name="dwBufferSeconds">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="MCI_WAVE_OPEN_PARMSA">
      <struct name="tagMCI_WAVE_OPEN_PARMSA" />
    </typedef>
    <typedef name="PMCI_WAVE_OPEN_PARMSA">
      <ptr>
        <struct name="tagMCI_WAVE_OPEN_PARMSA" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_WAVE_OPEN_PARMSA">
      <ptr>
        <struct name="tagMCI_WAVE_OPEN_PARMSA" />
      </ptr>
    </typedef>
    <struct name="tagMCI_WAVE_OPEN_PARMSW">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="wDeviceID">
        <type>MCIDEVICEID</type>
      </field>
      <field offset="8" name="lpstrDeviceType">
        <type>LPCWSTR</type>
      </field>
      <field offset="12" name="lpstrElementName">
        <type>LPCWSTR</type>
      </field>
      <field offset="16" name="lpstrAlias">
        <type>LPCWSTR</type>
      </field>
      <field offset="20" name="dwBufferSeconds">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="MCI_WAVE_OPEN_PARMSW">
      <struct name="tagMCI_WAVE_OPEN_PARMSW" />
    </typedef>
    <typedef name="PMCI_WAVE_OPEN_PARMSW">
      <ptr>
        <struct name="tagMCI_WAVE_OPEN_PARMSW" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_WAVE_OPEN_PARMSW">
      <ptr>
        <struct name="tagMCI_WAVE_OPEN_PARMSW" />
      </ptr>
    </typedef>
    <typedef name="MCI_WAVE_OPEN_PARMS">
      <type>MCI_WAVE_OPEN_PARMSA</type>
    </typedef>
    <typedef name="PMCI_WAVE_OPEN_PARMS">
      <type>PMCI_WAVE_OPEN_PARMSA</type>
    </typedef>
    <typedef name="LPMCI_WAVE_OPEN_PARMS">
      <type>LPMCI_WAVE_OPEN_PARMSA</type>
    </typedef>
    <struct name="tagMCI_WAVE_DELETE_PARMS">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="dwFrom">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwTo">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="MCI_WAVE_DELETE_PARMS">
      <struct name="tagMCI_WAVE_DELETE_PARMS" />
    </typedef>
    <typedef name="PMCI_WAVE_DELETE_PARMS">
      <ptr>
        <struct name="tagMCI_WAVE_DELETE_PARMS" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_WAVE_DELETE_PARMS">
      <ptr>
        <struct name="tagMCI_WAVE_DELETE_PARMS" />
      </ptr>
    </typedef>
    <struct name="tagMCI_WAVE_SET_PARMS">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="dwTimeFormat">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwAudio">
        <type>DWORD</type>
      </field>
      <field offset="12" name="wInput">
        <type>UINT</type>
      </field>
      <field offset="16" name="wOutput">
        <type>UINT</type>
      </field>
      <field offset="20" name="wFormatTag">
        <type>WORD</type>
      </field>
      <field offset="22" name="wReserved2">
        <type>WORD</type>
      </field>
      <field offset="24" name="nChannels">
        <type>WORD</type>
      </field>
      <field offset="26" name="wReserved3">
        <type>WORD</type>
      </field>
      <field offset="28" name="nSamplesPerSec">
        <type>DWORD</type>
      </field>
      <field offset="32" name="nAvgBytesPerSec">
        <type>DWORD</type>
      </field>
      <field offset="36" name="nBlockAlign">
        <type>WORD</type>
      </field>
      <field offset="38" name="wReserved4">
        <type>WORD</type>
      </field>
      <field offset="40" name="wBitsPerSample">
        <type>WORD</type>
      </field>
      <field offset="42" name="wReserved5">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="MCI_WAVE_SET_PARMS">
      <struct name="tagMCI_WAVE_SET_PARMS" />
    </typedef>
    <typedef name="PMCI_WAVE_SET_PARMS">
      <ptr>
        <struct name="tagMCI_WAVE_SET_PARMS" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_WAVE_SET_PARMS">
      <ptr>
        <struct name="tagMCI_WAVE_SET_PARMS" />
      </ptr>
    </typedef>
    <struct name="tagMCI_SEQ_SET_PARMS">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="dwTimeFormat">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwAudio">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwTempo">
        <type>DWORD</type>
      </field>
      <field offset="16" name="dwPort">
        <type>DWORD</type>
      </field>
      <field offset="20" name="dwSlave">
        <type>DWORD</type>
      </field>
      <field offset="24" name="dwMaster">
        <type>DWORD</type>
      </field>
      <field offset="28" name="dwOffset">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="MCI_SEQ_SET_PARMS">
      <struct name="tagMCI_SEQ_SET_PARMS" />
    </typedef>
    <typedef name="PMCI_SEQ_SET_PARMS">
      <ptr>
        <struct name="tagMCI_SEQ_SET_PARMS" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_SEQ_SET_PARMS">
      <ptr>
        <struct name="tagMCI_SEQ_SET_PARMS" />
      </ptr>
    </typedef>
    <struct name="tagMCI_ANIM_OPEN_PARMSA">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="wDeviceID">
        <type>MCIDEVICEID</type>
      </field>
      <field offset="8" name="lpstrDeviceType">
        <type>LPCSTR</type>
      </field>
      <field offset="12" name="lpstrElementName">
        <type>LPCSTR</type>
      </field>
      <field offset="16" name="lpstrAlias">
        <type>LPCSTR</type>
      </field>
      <field offset="20" name="dwStyle">
        <type>DWORD</type>
      </field>
      <field offset="24" name="hWndParent">
        <type>HWND</type>
      </field>
    </struct>
    <typedef name="MCI_ANIM_OPEN_PARMSA">
      <struct name="tagMCI_ANIM_OPEN_PARMSA" />
    </typedef>
    <typedef name="PMCI_ANIM_OPEN_PARMSA">
      <ptr>
        <struct name="tagMCI_ANIM_OPEN_PARMSA" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_ANIM_OPEN_PARMSA">
      <ptr>
        <struct name="tagMCI_ANIM_OPEN_PARMSA" />
      </ptr>
    </typedef>
    <struct name="tagMCI_ANIM_OPEN_PARMSW">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="wDeviceID">
        <type>MCIDEVICEID</type>
      </field>
      <field offset="8" name="lpstrDeviceType">
        <type>LPCWSTR</type>
      </field>
      <field offset="12" name="lpstrElementName">
        <type>LPCWSTR</type>
      </field>
      <field offset="16" name="lpstrAlias">
        <type>LPCWSTR</type>
      </field>
      <field offset="20" name="dwStyle">
        <type>DWORD</type>
      </field>
      <field offset="24" name="hWndParent">
        <type>HWND</type>
      </field>
    </struct>
    <typedef name="MCI_ANIM_OPEN_PARMSW">
      <struct name="tagMCI_ANIM_OPEN_PARMSW" />
    </typedef>
    <typedef name="PMCI_ANIM_OPEN_PARMSW">
      <ptr>
        <struct name="tagMCI_ANIM_OPEN_PARMSW" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_ANIM_OPEN_PARMSW">
      <ptr>
        <struct name="tagMCI_ANIM_OPEN_PARMSW" />
      </ptr>
    </typedef>
    <typedef name="MCI_ANIM_OPEN_PARMS">
      <type>MCI_ANIM_OPEN_PARMSA</type>
    </typedef>
    <typedef name="PMCI_ANIM_OPEN_PARMS">
      <type>PMCI_ANIM_OPEN_PARMSA</type>
    </typedef>
    <typedef name="LPMCI_ANIM_OPEN_PARMS">
      <type>LPMCI_ANIM_OPEN_PARMSA</type>
    </typedef>
    <struct name="tagMCI_ANIM_PLAY_PARMS">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="dwFrom">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwTo">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwSpeed">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="MCI_ANIM_PLAY_PARMS">
      <struct name="tagMCI_ANIM_PLAY_PARMS" />
    </typedef>
    <typedef name="PMCI_ANIM_PLAY_PARMS">
      <ptr>
        <struct name="tagMCI_ANIM_PLAY_PARMS" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_ANIM_PLAY_PARMS">
      <ptr>
        <struct name="tagMCI_ANIM_PLAY_PARMS" />
      </ptr>
    </typedef>
    <struct name="tagMCI_ANIM_STEP_PARMS">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="dwFrames">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="MCI_ANIM_STEP_PARMS">
      <struct name="tagMCI_ANIM_STEP_PARMS" />
    </typedef>
    <typedef name="PMCI_ANIM_STEP_PARMS">
      <ptr>
        <struct name="tagMCI_ANIM_STEP_PARMS" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_ANIM_STEP_PARMS">
      <ptr>
        <struct name="tagMCI_ANIM_STEP_PARMS" />
      </ptr>
    </typedef>
    <struct name="tagMCI_ANIM_WINDOW_PARMSA">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="hWnd">
        <type>HWND</type>
      </field>
      <field offset="8" name="nCmdShow">
        <type>UINT</type>
      </field>
      <field offset="12" name="lpstrText">
        <type>LPCSTR</type>
      </field>
    </struct>
    <typedef name="MCI_ANIM_WINDOW_PARMSA">
      <struct name="tagMCI_ANIM_WINDOW_PARMSA" />
    </typedef>
    <typedef name="PMCI_ANIM_WINDOW_PARMSA">
      <ptr>
        <struct name="tagMCI_ANIM_WINDOW_PARMSA" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_ANIM_WINDOW_PARMSA">
      <ptr>
        <struct name="tagMCI_ANIM_WINDOW_PARMSA" />
      </ptr>
    </typedef>
    <struct name="tagMCI_ANIM_WINDOW_PARMSW">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="hWnd">
        <type>HWND</type>
      </field>
      <field offset="8" name="nCmdShow">
        <type>UINT</type>
      </field>
      <field offset="12" name="lpstrText">
        <type>LPCWSTR</type>
      </field>
    </struct>
    <typedef name="MCI_ANIM_WINDOW_PARMSW">
      <struct name="tagMCI_ANIM_WINDOW_PARMSW" />
    </typedef>
    <typedef name="PMCI_ANIM_WINDOW_PARMSW">
      <ptr>
        <struct name="tagMCI_ANIM_WINDOW_PARMSW" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_ANIM_WINDOW_PARMSW">
      <ptr>
        <struct name="tagMCI_ANIM_WINDOW_PARMSW" />
      </ptr>
    </typedef>
    <typedef name="MCI_ANIM_WINDOW_PARMS">
      <type>MCI_ANIM_WINDOW_PARMSA</type>
    </typedef>
    <typedef name="PMCI_ANIM_WINDOW_PARMS">
      <type>PMCI_ANIM_WINDOW_PARMSA</type>
    </typedef>
    <typedef name="LPMCI_ANIM_WINDOW_PARMS">
      <type>LPMCI_ANIM_WINDOW_PARMSA</type>
    </typedef>
    <struct name="tagMCI_ANIM_RECT_PARMS">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="8" name="rc">
        <type>RECT</type>
      </field>
    </struct>
    <typedef name="MCI_ANIM_RECT_PARMS">
      <struct name="tagMCI_ANIM_RECT_PARMS" />
    </typedef>
    <typedef name="PMCI_ANIM_RECT_PARMS">
      <ptr>
        <type>MCI_ANIM_RECT_PARMS</type>
      </ptr>
    </typedef>
    <typedef name="LPMCI_ANIM_RECT_PARMS">
      <ptr>
        <type>MCI_ANIM_RECT_PARMS</type>
      </ptr>
    </typedef>
    <struct name="tagMCI_ANIM_UPDATE_PARMS">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="8" name="rc">
        <type>RECT</type>
      </field>
      <field offset="24" name="hDC">
        <type>HDC</type>
      </field>
    </struct>
    <typedef name="MCI_ANIM_UPDATE_PARMS">
      <struct name="tagMCI_ANIM_UPDATE_PARMS" />
    </typedef>
    <typedef name="PMCI_ANIM_UPDATE_PARMS">
      <ptr>
        <struct name="tagMCI_ANIM_UPDATE_PARMS" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_ANIM_UPDATE_PARMS">
      <ptr>
        <struct name="tagMCI_ANIM_UPDATE_PARMS" />
      </ptr>
    </typedef>
    <struct name="tagMCI_OVLY_OPEN_PARMSA">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="wDeviceID">
        <type>MCIDEVICEID</type>
      </field>
      <field offset="8" name="lpstrDeviceType">
        <type>LPCSTR</type>
      </field>
      <field offset="12" name="lpstrElementName">
        <type>LPCSTR</type>
      </field>
      <field offset="16" name="lpstrAlias">
        <type>LPCSTR</type>
      </field>
      <field offset="20" name="dwStyle">
        <type>DWORD</type>
      </field>
      <field offset="24" name="hWndParent">
        <type>HWND</type>
      </field>
    </struct>
    <typedef name="MCI_OVLY_OPEN_PARMSA">
      <struct name="tagMCI_OVLY_OPEN_PARMSA" />
    </typedef>
    <typedef name="PMCI_OVLY_OPEN_PARMSA">
      <ptr>
        <struct name="tagMCI_OVLY_OPEN_PARMSA" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_OVLY_OPEN_PARMSA">
      <ptr>
        <struct name="tagMCI_OVLY_OPEN_PARMSA" />
      </ptr>
    </typedef>
    <struct name="tagMCI_OVLY_OPEN_PARMSW">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="wDeviceID">
        <type>MCIDEVICEID</type>
      </field>
      <field offset="8" name="lpstrDeviceType">
        <type>LPCWSTR</type>
      </field>
      <field offset="12" name="lpstrElementName">
        <type>LPCWSTR</type>
      </field>
      <field offset="16" name="lpstrAlias">
        <type>LPCWSTR</type>
      </field>
      <field offset="20" name="dwStyle">
        <type>DWORD</type>
      </field>
      <field offset="24" name="hWndParent">
        <type>HWND</type>
      </field>
    </struct>
    <typedef name="MCI_OVLY_OPEN_PARMSW">
      <struct name="tagMCI_OVLY_OPEN_PARMSW" />
    </typedef>
    <typedef name="PMCI_OVLY_OPEN_PARMSW">
      <ptr>
        <struct name="tagMCI_OVLY_OPEN_PARMSW" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_OVLY_OPEN_PARMSW">
      <ptr>
        <struct name="tagMCI_OVLY_OPEN_PARMSW" />
      </ptr>
    </typedef>
    <typedef name="MCI_OVLY_OPEN_PARMS">
      <type>MCI_OVLY_OPEN_PARMSA</type>
    </typedef>
    <typedef name="PMCI_OVLY_OPEN_PARMS">
      <type>PMCI_OVLY_OPEN_PARMSA</type>
    </typedef>
    <typedef name="LPMCI_OVLY_OPEN_PARMS">
      <type>LPMCI_OVLY_OPEN_PARMSA</type>
    </typedef>
    <struct name="tagMCI_OVLY_WINDOW_PARMSA">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="hWnd">
        <type>HWND</type>
      </field>
      <field offset="8" name="nCmdShow">
        <type>UINT</type>
      </field>
      <field offset="12" name="lpstrText">
        <type>LPCSTR</type>
      </field>
    </struct>
    <typedef name="MCI_OVLY_WINDOW_PARMSA">
      <struct name="tagMCI_OVLY_WINDOW_PARMSA" />
    </typedef>
    <typedef name="PMCI_OVLY_WINDOW_PARMSA">
      <ptr>
        <struct name="tagMCI_OVLY_WINDOW_PARMSA" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_OVLY_WINDOW_PARMSA">
      <ptr>
        <struct name="tagMCI_OVLY_WINDOW_PARMSA" />
      </ptr>
    </typedef>
    <struct name="tagMCI_OVLY_WINDOW_PARMSW">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="hWnd">
        <type>HWND</type>
      </field>
      <field offset="8" name="nCmdShow">
        <type>UINT</type>
      </field>
      <field offset="12" name="lpstrText">
        <type>LPCWSTR</type>
      </field>
    </struct>
    <typedef name="MCI_OVLY_WINDOW_PARMSW">
      <struct name="tagMCI_OVLY_WINDOW_PARMSW" />
    </typedef>
    <typedef name="PMCI_OVLY_WINDOW_PARMSW">
      <ptr>
        <struct name="tagMCI_OVLY_WINDOW_PARMSW" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_OVLY_WINDOW_PARMSW">
      <ptr>
        <struct name="tagMCI_OVLY_WINDOW_PARMSW" />
      </ptr>
    </typedef>
    <typedef name="MCI_OVLY_WINDOW_PARMS">
      <type>MCI_OVLY_WINDOW_PARMSA</type>
    </typedef>
    <typedef name="PMCI_OVLY_WINDOW_PARMS">
      <type>PMCI_OVLY_WINDOW_PARMSA</type>
    </typedef>
    <typedef name="LPMCI_OVLY_WINDOW_PARMS">
      <type>LPMCI_OVLY_WINDOW_PARMSA</type>
    </typedef>
    <struct name="tagMCI_OVLY_RECT_PARMS">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="8" name="rc">
        <type>RECT</type>
      </field>
    </struct>
    <typedef name="MCI_OVLY_RECT_PARMS">
      <struct name="tagMCI_OVLY_RECT_PARMS" />
    </typedef>
    <typedef name="PMCI_OVLY_RECT_PARMS">
      <ptr>
        <struct name="tagMCI_OVLY_RECT_PARMS" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_OVLY_RECT_PARMS">
      <ptr>
        <struct name="tagMCI_OVLY_RECT_PARMS" />
      </ptr>
    </typedef>
    <struct name="tagMCI_OVLY_SAVE_PARMSA">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="lpfilename">
        <type>LPCSTR</type>
      </field>
      <field offset="8" name="rc">
        <type>RECT</type>
      </field>
    </struct>
    <typedef name="MCI_OVLY_SAVE_PARMSA">
      <struct name="tagMCI_OVLY_SAVE_PARMSA" />
    </typedef>
    <typedef name="PMCI_OVLY_SAVE_PARMSA">
      <ptr>
        <struct name="tagMCI_OVLY_SAVE_PARMSA" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_OVLY_SAVE_PARMSA">
      <ptr>
        <struct name="tagMCI_OVLY_SAVE_PARMSA" />
      </ptr>
    </typedef>
    <struct name="tagMCI_OVLY_SAVE_PARMSW">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="lpfilename">
        <type>LPCWSTR</type>
      </field>
      <field offset="8" name="rc">
        <type>RECT</type>
      </field>
    </struct>
    <typedef name="MCI_OVLY_SAVE_PARMSW">
      <struct name="tagMCI_OVLY_SAVE_PARMSW" />
    </typedef>
    <typedef name="PMCI_OVLY_SAVE_PARMSW">
      <ptr>
        <struct name="tagMCI_OVLY_SAVE_PARMSW" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_OVLY_SAVE_PARMSW">
      <ptr>
        <struct name="tagMCI_OVLY_SAVE_PARMSW" />
      </ptr>
    </typedef>
    <typedef name="MCI_OVLY_SAVE_PARMS">
      <type>MCI_OVLY_SAVE_PARMSA</type>
    </typedef>
    <typedef name="PMCI_OVLY_SAVE_PARMS">
      <type>PMCI_OVLY_SAVE_PARMSA</type>
    </typedef>
    <typedef name="LPMCI_OVLY_SAVE_PARMS">
      <type>LPMCI_OVLY_SAVE_PARMSA</type>
    </typedef>
    <struct name="tagMCI_OVLY_LOAD_PARMSA">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="lpfilename">
        <type>LPCSTR</type>
      </field>
      <field offset="8" name="rc">
        <type>RECT</type>
      </field>
    </struct>
    <typedef name="MCI_OVLY_LOAD_PARMSA">
      <struct name="tagMCI_OVLY_LOAD_PARMSA" />
    </typedef>
    <typedef name="PMCI_OVLY_LOAD_PARMSA">
      <ptr>
        <struct name="tagMCI_OVLY_LOAD_PARMSA" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_OVLY_LOAD_PARMSA">
      <ptr>
        <struct name="tagMCI_OVLY_LOAD_PARMSA" />
      </ptr>
    </typedef>
    <struct name="tagMCI_OVLY_LOAD_PARMSW">
      <field offset="0" name="dwCallback">
        <type>DWORD_PTR</type>
      </field>
      <field offset="4" name="lpfilename">
        <type>LPCWSTR</type>
      </field>
      <field offset="8" name="rc">
        <type>RECT</type>
      </field>
    </struct>
    <typedef name="MCI_OVLY_LOAD_PARMSW">
      <struct name="tagMCI_OVLY_LOAD_PARMSW" />
    </typedef>
    <typedef name="PMCI_OVLY_LOAD_PARMSW">
      <ptr>
        <struct name="tagMCI_OVLY_LOAD_PARMSW" />
      </ptr>
    </typedef>
    <typedef name="LPMCI_OVLY_LOAD_PARMSW">
      <ptr>
        <struct name="tagMCI_OVLY_LOAD_PARMSW" />
      </ptr>
    </typedef>
    <typedef name="MCI_OVLY_LOAD_PARMS">
      <type>MCI_OVLY_LOAD_PARMSA</type>
    </typedef>
    <typedef name="PMCI_OVLY_LOAD_PARMS">
      <type>PMCI_OVLY_LOAD_PARMSA</type>
    </typedef>
    <typedef name="LPMCI_OVLY_LOAD_PARMS">
      <type>LPMCI_OVLY_LOAD_PARMSA</type>
    </typedef>
    <struct name="_NCB">
      <field offset="0" name="ncb_command">
        <type>UCHAR</type>
      </field>
      <field offset="1" name="ncb_retcode">
        <type>UCHAR</type>
      </field>
      <field offset="2" name="ncb_lsn">
        <type>UCHAR</type>
      </field>
      <field offset="3" name="ncb_num">
        <type>UCHAR</type>
      </field>
      <field offset="4" name="ncb_buffer">
        <type>PUCHAR</type>
      </field>
      <field offset="8" name="ncb_length">
        <type>WORD</type>
      </field>
      <field offset="16" name="ncb_callname">
        <arr length="16">
          <type>UCHAR</type>
        </arr>
      </field>
      <field offset="32" name="ncb_name">
        <arr length="16">
          <type>UCHAR</type>
        </arr>
      </field>
      <field offset="48" name="ncb_rto">
        <type>UCHAR</type>
      </field>
      <field offset="49" name="ncb_sto">
        <type>UCHAR</type>
      </field>
      <field offset="52" name="ncb_post">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg>
              <ptr>
                <struct name="_NCB" />
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="ncb_lana_num">
        <type>UCHAR</type>
      </field>
      <field offset="57" name="ncb_cmd_cplt">
        <type>UCHAR</type>
      </field>
      <field offset="64" name="ncb_reserve">
        <arr length="10">
          <type>UCHAR</type>
        </arr>
      </field>
      <field offset="76" name="ncb_event">
        <type>HANDLE</type>
      </field>
    </struct>
    <typedef name="NCB">
      <struct name="_NCB" />
    </typedef>
    <typedef name="PNCB">
      <ptr>
        <struct name="_NCB" />
      </ptr>
    </typedef>
    <struct name="_ADAPTER_STATUS">
      <field offset="0" name="adapter_address">
        <arr length="6">
          <type>UCHAR</type>
        </arr>
      </field>
      <field offset="6" name="rev_major">
        <type>UCHAR</type>
      </field>
      <field offset="7" name="reserved0">
        <type>UCHAR</type>
      </field>
      <field offset="8" name="adapter_type">
        <type>UCHAR</type>
      </field>
      <field offset="9" name="rev_minor">
        <type>UCHAR</type>
      </field>
      <field offset="10" name="duration">
        <type>WORD</type>
      </field>
      <field offset="12" name="frmr_recv">
        <type>WORD</type>
      </field>
      <field offset="14" name="frmr_xmit">
        <type>WORD</type>
      </field>
      <field offset="16" name="iframe_recv_err">
        <type>WORD</type>
      </field>
      <field offset="18" name="xmit_aborts">
        <type>WORD</type>
      </field>
      <field offset="20" name="xmit_success">
        <type>DWORD</type>
      </field>
      <field offset="24" name="recv_success">
        <type>DWORD</type>
      </field>
      <field offset="28" name="iframe_xmit_err">
        <type>WORD</type>
      </field>
      <field offset="30" name="recv_buff_unavail">
        <type>WORD</type>
      </field>
      <field offset="32" name="t1_timeouts">
        <type>WORD</type>
      </field>
      <field offset="34" name="ti_timeouts">
        <type>WORD</type>
      </field>
      <field offset="36" name="reserved1">
        <type>DWORD</type>
      </field>
      <field offset="40" name="free_ncbs">
        <type>WORD</type>
      </field>
      <field offset="42" name="max_cfg_ncbs">
        <type>WORD</type>
      </field>
      <field offset="44" name="max_ncbs">
        <type>WORD</type>
      </field>
      <field offset="46" name="xmit_buf_unavail">
        <type>WORD</type>
      </field>
      <field offset="48" name="max_dgram_size">
        <type>WORD</type>
      </field>
      <field offset="50" name="pending_sess">
        <type>WORD</type>
      </field>
      <field offset="52" name="max_cfg_sess">
        <type>WORD</type>
      </field>
      <field offset="54" name="max_sess">
        <type>WORD</type>
      </field>
      <field offset="56" name="max_sess_pkt_size">
        <type>WORD</type>
      </field>
      <field offset="58" name="name_count">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="ADAPTER_STATUS">
      <struct name="_ADAPTER_STATUS" />
    </typedef>
    <typedef name="PADAPTER_STATUS">
      <ptr>
        <struct name="_ADAPTER_STATUS" />
      </ptr>
    </typedef>
    <struct name="_NAME_BUFFER">
      <field offset="0" name="name">
        <arr length="16">
          <type>UCHAR</type>
        </arr>
      </field>
      <field offset="16" name="name_num">
        <type>UCHAR</type>
      </field>
      <field offset="17" name="name_flags">
        <type>UCHAR</type>
      </field>
    </struct>
    <typedef name="NAME_BUFFER">
      <struct name="_NAME_BUFFER" />
    </typedef>
    <typedef name="PNAME_BUFFER">
      <ptr>
        <struct name="_NAME_BUFFER" />
      </ptr>
    </typedef>
    <struct name="_SESSION_HEADER">
      <field offset="0" name="sess_name">
        <type>UCHAR</type>
      </field>
      <field offset="1" name="num_sess">
        <type>UCHAR</type>
      </field>
      <field offset="2" name="rcv_dg_outstanding">
        <type>UCHAR</type>
      </field>
      <field offset="3" name="rcv_any_outstanding">
        <type>UCHAR</type>
      </field>
    </struct>
    <typedef name="SESSION_HEADER">
      <struct name="_SESSION_HEADER" />
    </typedef>
    <typedef name="PSESSION_HEADER">
      <ptr>
        <struct name="_SESSION_HEADER" />
      </ptr>
    </typedef>
    <struct name="_SESSION_BUFFER">
      <field offset="0" name="lsn">
        <type>UCHAR</type>
      </field>
      <field offset="1" name="state">
        <type>UCHAR</type>
      </field>
      <field offset="8" name="local_name">
        <arr length="16">
          <type>UCHAR</type>
        </arr>
      </field>
      <field offset="24" name="remote_name">
        <arr length="16">
          <type>UCHAR</type>
        </arr>
      </field>
      <field offset="40" name="rcvs_outstanding">
        <type>UCHAR</type>
      </field>
      <field offset="41" name="sends_outstanding">
        <type>UCHAR</type>
      </field>
    </struct>
    <typedef name="SESSION_BUFFER">
      <struct name="_SESSION_BUFFER" />
    </typedef>
    <typedef name="PSESSION_BUFFER">
      <ptr>
        <struct name="_SESSION_BUFFER" />
      </ptr>
    </typedef>
    <struct name="_LANA_ENUM">
      <field offset="0" name="length">
        <type>UCHAR</type>
      </field>
      <field offset="8" name="lana">
        <arr length="255">
          <type>UCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="LANA_ENUM">
      <struct name="_LANA_ENUM" />
    </typedef>
    <typedef name="PLANA_ENUM">
      <ptr>
        <struct name="_LANA_ENUM" />
      </ptr>
    </typedef>
    <struct name="_FIND_NAME_HEADER">
      <field offset="0" name="node_count">
        <type>WORD</type>
      </field>
      <field offset="2" name="reserved">
        <type>UCHAR</type>
      </field>
      <field offset="3" name="unique_group">
        <type>UCHAR</type>
      </field>
    </struct>
    <typedef name="FIND_NAME_HEADER">
      <struct name="_FIND_NAME_HEADER" />
    </typedef>
    <typedef name="PFIND_NAME_HEADER">
      <ptr>
        <struct name="_FIND_NAME_HEADER" />
      </ptr>
    </typedef>
    <struct name="_FIND_NAME_BUFFER">
      <field offset="0" name="length">
        <type>UCHAR</type>
      </field>
      <field offset="1" name="access_control">
        <type>UCHAR</type>
      </field>
      <field offset="2" name="frame_control">
        <type>UCHAR</type>
      </field>
      <field offset="6" name="destination_addr">
        <arr length="6">
          <type>UCHAR</type>
        </arr>
      </field>
      <field offset="12" name="source_addr">
        <arr length="6">
          <type>UCHAR</type>
        </arr>
      </field>
      <field offset="24" name="routing_info">
        <arr length="18">
          <type>UCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="FIND_NAME_BUFFER">
      <struct name="_FIND_NAME_BUFFER" />
    </typedef>
    <typedef name="PFIND_NAME_BUFFER">
      <ptr>
        <struct name="_FIND_NAME_BUFFER" />
      </ptr>
    </typedef>
    <struct name="_ACTION_HEADER">
      <field offset="0" name="transport_id">
        <type>ULONG</type>
      </field>
      <field offset="4" name="action_code">
        <type>USHORT</type>
      </field>
      <field offset="6" name="reserved">
        <type>USHORT</type>
      </field>
    </struct>
    <typedef name="ACTION_HEADER">
      <struct name="_ACTION_HEADER" />
    </typedef>
    <typedef name="PACTION_HEADER">
      <ptr>
        <struct name="_ACTION_HEADER" />
      </ptr>
    </typedef>
    <typedef name="I_RPC_HANDLE">
      <ptr>
        <void />
      </ptr>
    </typedef>
    <typedef name="RPC_STATUS">
      <prim domain="SignedInt" size="4" />
    </typedef>
    <typedef name="RPC_CSTR">
      <ptr>
        <prim domain="UnsignedInt" size="1" />
      </ptr>
    </typedef>
    <typedef name="RPC_WSTR">
      <ptr>
        <prim domain="UnsignedInt" size="2" />
      </ptr>
    </typedef>
    <typedef name="RPC_CWSTR">
      <ptr>
        <prim domain="UnsignedInt" size="2" />
      </ptr>
    </typedef>
    <typedef name="RPC_BINDING_HANDLE">
      <type>I_RPC_HANDLE</type>
    </typedef>
    <typedef name="handle_t">
      <type>RPC_BINDING_HANDLE</type>
    </typedef>
    <typedef name="UUID">
      <type>GUID</type>
    </typedef>
    <struct name="_RPC_BINDING_VECTOR">
      <field offset="0" name="Count">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="BindingH">
        <arr length="1">
          <type>RPC_BINDING_HANDLE</type>
        </arr>
      </field>
    </struct>
    <typedef name="RPC_BINDING_VECTOR">
      <struct name="_RPC_BINDING_VECTOR" />
    </typedef>
    <struct name="_UUID_VECTOR">
      <field offset="0" name="Count">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="Uuid">
        <arr length="1">
          <ptr>
            <type>UUID</type>
          </ptr>
        </arr>
      </field>
    </struct>
    <typedef name="UUID_VECTOR">
      <struct name="_UUID_VECTOR" />
    </typedef>
    <typedef name="RPC_IF_HANDLE">
      <ptr>
        <void />
      </ptr>
    </typedef>
    <struct name="_RPC_IF_ID">
      <field offset="0" name="Uuid">
        <type>UUID</type>
      </field>
      <field offset="16" name="VersMajor">
        <prim domain="UnsignedInt" size="2" />
      </field>
      <field offset="18" name="VersMinor">
        <prim domain="UnsignedInt" size="2" />
      </field>
    </struct>
    <typedef name="RPC_IF_ID">
      <struct name="_RPC_IF_ID" />
    </typedef>
    <struct name="_RPC_PROTSEQ_VECTORA">
      <field offset="0" name="Count">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="Protseq">
        <arr length="1">
          <ptr>
            <prim domain="UnsignedInt" size="1" />
          </ptr>
        </arr>
      </field>
    </struct>
    <typedef name="RPC_PROTSEQ_VECTORA">
      <struct name="_RPC_PROTSEQ_VECTORA" />
    </typedef>
    <struct name="_RPC_PROTSEQ_VECTORW">
      <field offset="0" name="Count">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="Protseq">
        <arr length="1">
          <ptr>
            <prim domain="UnsignedInt" size="2" />
          </ptr>
        </arr>
      </field>
    </struct>
    <typedef name="RPC_PROTSEQ_VECTORW">
      <struct name="_RPC_PROTSEQ_VECTORW" />
    </typedef>
    <struct name="_RPC_POLICY">
      <field offset="0" name="Length">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="EndpointFlags">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="8" name="NICFlags">
        <prim domain="UnsignedInt" size="4" />
      </field>
    </struct>
    <typedef name="RPC_POLICY">
      <struct name="_RPC_POLICY" />
    </typedef>
    <typedef name="PRPC_POLICY">
      <ptr>
        <struct name="_RPC_POLICY" />
      </ptr>
    </typedef>
    <typedef name="RPC_OBJECT_INQ_FN">
      <fn convention="__stdcall">
        <return>
          <void />
        </return>
        <arg name="ObjectUuid">
          <ptr>
            <type>UUID</type>
          </ptr>
          <stack size="4" />
        </arg>
        <arg name="TypeUuid">
          <ptr>
            <type>UUID</type>
          </ptr>
          <stack size="4" />
        </arg>
        <arg name="Status">
          <ptr>
            <type>RPC_STATUS</type>
          </ptr>
          <stack size="4" />
        </arg>
      </fn>
    </typedef>
    <typedef name="RPC_IF_CALLBACK_FN">
      <fn convention="__stdcall">
        <return>
          <type>RPC_STATUS</type>
          <reg>eax</reg>
        </return>
        <arg name="InterfaceUuid">
          <type>RPC_IF_HANDLE</type>
          <stack size="4" />
        </arg>
        <arg name="Context">
          <ptr>
            <void />
          </ptr>
          <stack size="4" />
        </arg>
      </fn>
    </typedef>
    <typedef name="RPC_SECURITY_CALLBACK_FN">
      <fn convention="__stdcall">
        <return>
          <void />
        </return>
        <arg name="Context">
          <ptr>
            <void />
          </ptr>
          <stack size="4" />
        </arg>
      </fn>
    </typedef>
    <struct name="struct_99">
      <field offset="0" name="Count">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="Stats">
        <arr length="1">
          <prim domain="UnsignedInt" size="4" />
        </arr>
      </field>
    </struct>
    <typedef name="RPC_STATS_VECTOR">
      <struct name="struct_99" />
    </typedef>
    <struct name="struct_100">
      <field offset="0" name="Count">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="IfId">
        <arr length="1">
          <ptr>
            <type>RPC_IF_ID</type>
          </ptr>
        </arr>
      </field>
    </struct>
    <typedef name="RPC_IF_ID_VECTOR">
      <struct name="struct_100" />
    </typedef>
    <typedef name="RPC_AUTH_IDENTITY_HANDLE">
      <ptr>
        <void />
      </ptr>
    </typedef>
    <typedef name="RPC_AUTHZ_HANDLE">
      <ptr>
        <void />
      </ptr>
    </typedef>
    <struct name="_RPC_SECURITY_QOS">
      <field offset="0" name="Version">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="Capabilities">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="8" name="IdentityTracking">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="12" name="ImpersonationType">
        <prim domain="UnsignedInt" size="4" />
      </field>
    </struct>
    <typedef name="RPC_SECURITY_QOS">
      <struct name="_RPC_SECURITY_QOS" />
    </typedef>
    <typedef name="PRPC_SECURITY_QOS">
      <ptr>
        <struct name="_RPC_SECURITY_QOS" />
      </ptr>
    </typedef>
    <struct name="_SEC_WINNT_AUTH_IDENTITY_W">
      <field offset="0" name="User">
        <ptr>
          <prim domain="UnsignedInt" size="2" />
        </ptr>
      </field>
      <field offset="4" name="UserLength">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="8" name="Domain">
        <ptr>
          <prim domain="UnsignedInt" size="2" />
        </ptr>
      </field>
      <field offset="12" name="DomainLength">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="16" name="Password">
        <ptr>
          <prim domain="UnsignedInt" size="2" />
        </ptr>
      </field>
      <field offset="20" name="PasswordLength">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="24" name="Flags">
        <prim domain="UnsignedInt" size="4" />
      </field>
    </struct>
    <typedef name="SEC_WINNT_AUTH_IDENTITY_W">
      <struct name="_SEC_WINNT_AUTH_IDENTITY_W" />
    </typedef>
    <typedef name="PSEC_WINNT_AUTH_IDENTITY_W">
      <ptr>
        <struct name="_SEC_WINNT_AUTH_IDENTITY_W" />
      </ptr>
    </typedef>
    <struct name="_SEC_WINNT_AUTH_IDENTITY_A">
      <field offset="0" name="User">
        <ptr>
          <prim domain="UnsignedInt" size="1" />
        </ptr>
      </field>
      <field offset="4" name="UserLength">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="8" name="Domain">
        <ptr>
          <prim domain="UnsignedInt" size="1" />
        </ptr>
      </field>
      <field offset="12" name="DomainLength">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="16" name="Password">
        <ptr>
          <prim domain="UnsignedInt" size="1" />
        </ptr>
      </field>
      <field offset="20" name="PasswordLength">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="24" name="Flags">
        <prim domain="UnsignedInt" size="4" />
      </field>
    </struct>
    <typedef name="SEC_WINNT_AUTH_IDENTITY_A">
      <struct name="_SEC_WINNT_AUTH_IDENTITY_A" />
    </typedef>
    <typedef name="PSEC_WINNT_AUTH_IDENTITY_A">
      <ptr>
        <struct name="_SEC_WINNT_AUTH_IDENTITY_A" />
      </ptr>
    </typedef>
    <struct name="_RPC_HTTP_TRANSPORT_CREDENTIALS_W">
      <field offset="0" name="TransportCredentials">
        <ptr>
          <type>SEC_WINNT_AUTH_IDENTITY_W</type>
        </ptr>
      </field>
      <field offset="4" name="Flags">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="8" name="AuthenticationTarget">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="12" name="NumberOfAuthnSchemes">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="16" name="AuthnSchemes">
        <ptr>
          <prim domain="UnsignedInt" size="4" />
        </ptr>
      </field>
      <field offset="20" name="ServerCertificateSubject">
        <ptr>
          <prim domain="UnsignedInt" size="2" />
        </ptr>
      </field>
    </struct>
    <typedef name="RPC_HTTP_TRANSPORT_CREDENTIALS_W">
      <struct name="_RPC_HTTP_TRANSPORT_CREDENTIALS_W" />
    </typedef>
    <typedef name="PRPC_HTTP_TRANSPORT_CREDENTIALS_W">
      <ptr>
        <struct name="_RPC_HTTP_TRANSPORT_CREDENTIALS_W" />
      </ptr>
    </typedef>
    <struct name="_RPC_HTTP_TRANSPORT_CREDENTIALS_A">
      <field offset="0" name="TransportCredentials">
        <ptr>
          <type>SEC_WINNT_AUTH_IDENTITY_A</type>
        </ptr>
      </field>
      <field offset="4" name="Flags">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="8" name="AuthenticationTarget">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="12" name="NumberOfAuthnSchemes">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="16" name="AuthnSchemes">
        <ptr>
          <prim domain="UnsignedInt" size="4" />
        </ptr>
      </field>
      <field offset="20" name="ServerCertificateSubject">
        <ptr>
          <prim domain="UnsignedInt" size="1" />
        </ptr>
      </field>
    </struct>
    <typedef name="RPC_HTTP_TRANSPORT_CREDENTIALS_A">
      <struct name="_RPC_HTTP_TRANSPORT_CREDENTIALS_A" />
    </typedef>
    <typedef name="PRPC_HTTP_TRANSPORT_CREDENTIALS_A">
      <ptr>
        <struct name="_RPC_HTTP_TRANSPORT_CREDENTIALS_A" />
      </ptr>
    </typedef>
    <struct name="_RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W">
      <field offset="0" name="TransportCredentials">
        <ptr>
          <type>SEC_WINNT_AUTH_IDENTITY_W</type>
        </ptr>
      </field>
      <field offset="4" name="Flags">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="8" name="AuthenticationTarget">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="12" name="NumberOfAuthnSchemes">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="16" name="AuthnSchemes">
        <ptr>
          <prim domain="UnsignedInt" size="4" />
        </ptr>
      </field>
      <field offset="20" name="ServerCertificateSubject">
        <ptr>
          <prim domain="UnsignedInt" size="2" />
        </ptr>
      </field>
      <field offset="24" name="ProxyCredentials">
        <ptr>
          <type>SEC_WINNT_AUTH_IDENTITY_W</type>
        </ptr>
      </field>
      <field offset="28" name="NumberOfProxyAuthnSchemes">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="32" name="ProxyAuthnSchemes">
        <ptr>
          <prim domain="UnsignedInt" size="4" />
        </ptr>
      </field>
    </struct>
    <typedef name="RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W">
      <struct name="_RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W" />
    </typedef>
    <typedef name="PRPC_HTTP_TRANSPORT_CREDENTIALS_V2_W">
      <ptr>
        <struct name="_RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W" />
      </ptr>
    </typedef>
    <struct name="_RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A">
      <field offset="0" name="TransportCredentials">
        <ptr>
          <type>SEC_WINNT_AUTH_IDENTITY_A</type>
        </ptr>
      </field>
      <field offset="4" name="Flags">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="8" name="AuthenticationTarget">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="12" name="NumberOfAuthnSchemes">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="16" name="AuthnSchemes">
        <ptr>
          <prim domain="UnsignedInt" size="4" />
        </ptr>
      </field>
      <field offset="20" name="ServerCertificateSubject">
        <ptr>
          <prim domain="UnsignedInt" size="1" />
        </ptr>
      </field>
      <field offset="24" name="ProxyCredentials">
        <ptr>
          <type>SEC_WINNT_AUTH_IDENTITY_A</type>
        </ptr>
      </field>
      <field offset="28" name="NumberOfProxyAuthnSchemes">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="32" name="ProxyAuthnSchemes">
        <ptr>
          <prim domain="UnsignedInt" size="4" />
        </ptr>
      </field>
    </struct>
    <typedef name="RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A">
      <struct name="_RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A" />
    </typedef>
    <typedef name="PRPC_HTTP_TRANSPORT_CREDENTIALS_V2_A">
      <ptr>
        <struct name="_RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A" />
      </ptr>
    </typedef>
    <struct name="_RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W">
      <field offset="0" name="TransportCredentials">
        <type>RPC_AUTH_IDENTITY_HANDLE</type>
      </field>
      <field offset="4" name="Flags">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="8" name="AuthenticationTarget">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="12" name="NumberOfAuthnSchemes">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="16" name="AuthnSchemes">
        <ptr>
          <prim domain="UnsignedInt" size="4" />
        </ptr>
      </field>
      <field offset="20" name="ServerCertificateSubject">
        <ptr>
          <prim domain="UnsignedInt" size="2" />
        </ptr>
      </field>
      <field offset="24" name="ProxyCredentials">
        <type>RPC_AUTH_IDENTITY_HANDLE</type>
      </field>
      <field offset="28" name="NumberOfProxyAuthnSchemes">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="32" name="ProxyAuthnSchemes">
        <ptr>
          <prim domain="UnsignedInt" size="4" />
        </ptr>
      </field>
    </struct>
    <typedef name="RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W">
      <struct name="_RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W" />
    </typedef>
    <typedef name="PRPC_HTTP_TRANSPORT_CREDENTIALS_V3_W">
      <ptr>
        <struct name="_RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W" />
      </ptr>
    </typedef>
    <struct name="_RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A">
      <field offset="0" name="TransportCredentials">
        <type>RPC_AUTH_IDENTITY_HANDLE</type>
      </field>
      <field offset="4" name="Flags">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="8" name="AuthenticationTarget">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="12" name="NumberOfAuthnSchemes">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="16" name="AuthnSchemes">
        <ptr>
          <prim domain="UnsignedInt" size="4" />
        </ptr>
      </field>
      <field offset="20" name="ServerCertificateSubject">
        <ptr>
          <prim domain="UnsignedInt" size="1" />
        </ptr>
      </field>
      <field offset="24" name="ProxyCredentials">
        <type>RPC_AUTH_IDENTITY_HANDLE</type>
      </field>
      <field offset="28" name="NumberOfProxyAuthnSchemes">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="32" name="ProxyAuthnSchemes">
        <ptr>
          <prim domain="UnsignedInt" size="4" />
        </ptr>
      </field>
    </struct>
    <typedef name="RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A">
      <struct name="_RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A" />
    </typedef>
    <typedef name="PRPC_HTTP_TRANSPORT_CREDENTIALS_V3_A">
      <ptr>
        <struct name="_RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A" />
      </ptr>
    </typedef>
    <struct name="_RPC_SECURITY_QOS_V2_W">
      <field offset="0" name="Version">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="Capabilities">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="8" name="IdentityTracking">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="12" name="ImpersonationType">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="16" name="AdditionalSecurityInfoType">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="20" name="u">
        <union>
          <alt name="HttpCredentials">
            <ptr>
              <type>RPC_HTTP_TRANSPORT_CREDENTIALS_W</type>
            </ptr>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="RPC_SECURITY_QOS_V2_W">
      <struct name="_RPC_SECURITY_QOS_V2_W" />
    </typedef>
    <typedef name="PRPC_SECURITY_QOS_V2_W">
      <ptr>
        <struct name="_RPC_SECURITY_QOS_V2_W" />
      </ptr>
    </typedef>
    <struct name="_RPC_SECURITY_QOS_V2_A">
      <field offset="0" name="Version">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="Capabilities">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="8" name="IdentityTracking">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="12" name="ImpersonationType">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="16" name="AdditionalSecurityInfoType">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="20" name="u">
        <union>
          <alt name="HttpCredentials">
            <ptr>
              <type>RPC_HTTP_TRANSPORT_CREDENTIALS_A</type>
            </ptr>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="RPC_SECURITY_QOS_V2_A">
      <struct name="_RPC_SECURITY_QOS_V2_A" />
    </typedef>
    <typedef name="PRPC_SECURITY_QOS_V2_A">
      <ptr>
        <struct name="_RPC_SECURITY_QOS_V2_A" />
      </ptr>
    </typedef>
    <struct name="_RPC_SECURITY_QOS_V3_W">
      <field offset="0" name="Version">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="Capabilities">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="8" name="IdentityTracking">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="12" name="ImpersonationType">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="16" name="AdditionalSecurityInfoType">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="20" name="u">
        <union>
          <alt name="HttpCredentials">
            <ptr>
              <type>RPC_HTTP_TRANSPORT_CREDENTIALS_W</type>
            </ptr>
          </alt>
        </union>
      </field>
      <field offset="24" name="Sid">
        <ptr>
          <void />
        </ptr>
      </field>
    </struct>
    <typedef name="RPC_SECURITY_QOS_V3_W">
      <struct name="_RPC_SECURITY_QOS_V3_W" />
    </typedef>
    <typedef name="PRPC_SECURITY_QOS_V3_W">
      <ptr>
        <struct name="_RPC_SECURITY_QOS_V3_W" />
      </ptr>
    </typedef>
    <struct name="_RPC_SECURITY_QOS_V3_A">
      <field offset="0" name="Version">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="Capabilities">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="8" name="IdentityTracking">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="12" name="ImpersonationType">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="16" name="AdditionalSecurityInfoType">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="20" name="u">
        <union>
          <alt name="HttpCredentials">
            <ptr>
              <type>RPC_HTTP_TRANSPORT_CREDENTIALS_A</type>
            </ptr>
          </alt>
        </union>
      </field>
      <field offset="24" name="Sid">
        <ptr>
          <void />
        </ptr>
      </field>
    </struct>
    <typedef name="RPC_SECURITY_QOS_V3_A">
      <struct name="_RPC_SECURITY_QOS_V3_A" />
    </typedef>
    <typedef name="PRPC_SECURITY_QOS_V3_A">
      <ptr>
        <struct name="_RPC_SECURITY_QOS_V3_A" />
      </ptr>
    </typedef>
    <struct name="_RPC_SECURITY_QOS_V4_W">
      <field offset="0" name="Version">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="Capabilities">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="8" name="IdentityTracking">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="12" name="ImpersonationType">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="16" name="AdditionalSecurityInfoType">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="20" name="u">
        <union>
          <alt name="HttpCredentials">
            <ptr>
              <type>RPC_HTTP_TRANSPORT_CREDENTIALS_W</type>
            </ptr>
          </alt>
        </union>
      </field>
      <field offset="24" name="Sid">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="28" name="EffectiveOnly">
        <prim domain="UnsignedInt" size="4" />
      </field>
    </struct>
    <typedef name="RPC_SECURITY_QOS_V4_W">
      <struct name="_RPC_SECURITY_QOS_V4_W" />
    </typedef>
    <typedef name="PRPC_SECURITY_QOS_V4_W">
      <ptr>
        <struct name="_RPC_SECURITY_QOS_V4_W" />
      </ptr>
    </typedef>
    <struct name="_RPC_SECURITY_QOS_V4_A">
      <field offset="0" name="Version">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="Capabilities">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="8" name="IdentityTracking">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="12" name="ImpersonationType">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="16" name="AdditionalSecurityInfoType">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="20" name="u">
        <union>
          <alt name="HttpCredentials">
            <ptr>
              <type>RPC_HTTP_TRANSPORT_CREDENTIALS_A</type>
            </ptr>
          </alt>
        </union>
      </field>
      <field offset="24" name="Sid">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="28" name="EffectiveOnly">
        <prim domain="UnsignedInt" size="4" />
      </field>
    </struct>
    <typedef name="RPC_SECURITY_QOS_V4_A">
      <struct name="_RPC_SECURITY_QOS_V4_A" />
    </typedef>
    <typedef name="PRPC_SECURITY_QOS_V4_A">
      <ptr>
        <struct name="_RPC_SECURITY_QOS_V4_A" />
      </ptr>
    </typedef>
    <struct name="_RPC_BINDING_HANDLE_TEMPLATE_V1_W">
      <field offset="0" name="Version">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="Flags">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="8" name="ProtocolSequence">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="12" name="NetworkAddress">
        <ptr>
          <prim domain="UnsignedInt" size="2" />
        </ptr>
      </field>
      <field offset="16" name="StringEndpoint">
        <ptr>
          <prim domain="UnsignedInt" size="2" />
        </ptr>
      </field>
      <field offset="20" name="u1">
        <union>
          <alt name="Reserved">
            <ptr>
              <prim domain="UnsignedInt" size="2" />
            </ptr>
          </alt>
        </union>
      </field>
      <field offset="24" name="ObjectUuid">
        <type>UUID</type>
      </field>
    </struct>
    <typedef name="RPC_BINDING_HANDLE_TEMPLATE_V1_W">
      <struct name="_RPC_BINDING_HANDLE_TEMPLATE_V1_W" />
    </typedef>
    <typedef name="PRPC_BINDING_HANDLE_TEMPLATE_V1_W">
      <ptr>
        <struct name="_RPC_BINDING_HANDLE_TEMPLATE_V1_W" />
      </ptr>
    </typedef>
    <struct name="_RPC_BINDING_HANDLE_TEMPLATE_V1_A">
      <field offset="0" name="Version">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="Flags">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="8" name="ProtocolSequence">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="12" name="NetworkAddress">
        <ptr>
          <prim domain="UnsignedInt" size="1" />
        </ptr>
      </field>
      <field offset="16" name="StringEndpoint">
        <ptr>
          <prim domain="UnsignedInt" size="1" />
        </ptr>
      </field>
      <field offset="20" name="u1">
        <union>
          <alt name="Reserved">
            <ptr>
              <prim domain="UnsignedInt" size="1" />
            </ptr>
          </alt>
        </union>
      </field>
      <field offset="24" name="ObjectUuid">
        <type>UUID</type>
      </field>
    </struct>
    <typedef name="RPC_BINDING_HANDLE_TEMPLATE_V1_A">
      <struct name="_RPC_BINDING_HANDLE_TEMPLATE_V1_A" />
    </typedef>
    <typedef name="PRPC_BINDING_HANDLE_TEMPLATE_V1_A">
      <ptr>
        <struct name="_RPC_BINDING_HANDLE_TEMPLATE_V1_A" />
      </ptr>
    </typedef>
    <struct name="_RPC_BINDING_HANDLE_SECURITY_V1_W">
      <field offset="0" name="Version">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="ServerPrincName">
        <ptr>
          <prim domain="UnsignedInt" size="2" />
        </ptr>
      </field>
      <field offset="8" name="AuthnLevel">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="12" name="AuthnSvc">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="16" name="AuthIdentity">
        <ptr>
          <type>SEC_WINNT_AUTH_IDENTITY_W</type>
        </ptr>
      </field>
      <field offset="20" name="SecurityQos">
        <ptr>
          <type>RPC_SECURITY_QOS</type>
        </ptr>
      </field>
    </struct>
    <typedef name="RPC_BINDING_HANDLE_SECURITY_V1_W">
      <struct name="_RPC_BINDING_HANDLE_SECURITY_V1_W" />
    </typedef>
    <typedef name="PRPC_BINDING_HANDLE_SECURITY_V1_W">
      <ptr>
        <struct name="_RPC_BINDING_HANDLE_SECURITY_V1_W" />
      </ptr>
    </typedef>
    <struct name="_RPC_BINDING_HANDLE_SECURITY_V1_A">
      <field offset="0" name="Version">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="ServerPrincName">
        <ptr>
          <prim domain="UnsignedInt" size="1" />
        </ptr>
      </field>
      <field offset="8" name="AuthnLevel">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="12" name="AuthnSvc">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="16" name="AuthIdentity">
        <ptr>
          <type>SEC_WINNT_AUTH_IDENTITY_A</type>
        </ptr>
      </field>
      <field offset="20" name="SecurityQos">
        <ptr>
          <type>RPC_SECURITY_QOS</type>
        </ptr>
      </field>
    </struct>
    <typedef name="RPC_BINDING_HANDLE_SECURITY_V1_A">
      <struct name="_RPC_BINDING_HANDLE_SECURITY_V1_A" />
    </typedef>
    <typedef name="PRPC_BINDING_HANDLE_SECURITY_V1_A">
      <ptr>
        <struct name="_RPC_BINDING_HANDLE_SECURITY_V1_A" />
      </ptr>
    </typedef>
    <struct name="_RPC_BINDING_HANDLE_OPTIONS_V1">
      <field offset="0" name="Version">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="Flags">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="8" name="ComTimeout">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="12" name="CallTimeout">
        <prim domain="UnsignedInt" size="4" />
      </field>
    </struct>
    <typedef name="RPC_BINDING_HANDLE_OPTIONS_V1">
      <struct name="_RPC_BINDING_HANDLE_OPTIONS_V1" />
    </typedef>
    <typedef name="PRPC_BINDING_HANDLE_OPTIONS_V1">
      <ptr>
        <struct name="_RPC_BINDING_HANDLE_OPTIONS_V1" />
      </ptr>
    </typedef>
    <enum name="_RPC_HTTP_REDIRECTOR_STAGE">
      <member name="RPCHTTP_RS_REDIRECT" value="1" />
      <member name="RPCHTTP_RS_ACCESS_1" value="2" />
      <member name="RPCHTTP_RS_SESSION" value="3" />
      <member name="RPCHTTP_RS_ACCESS_2" value="4" />
      <member name="RPCHTTP_RS_INTERFACE" value="5" />
    </enum>
    <typedef name="RPC_HTTP_REDIRECTOR_STAGE">
      <enum name="_RPC_HTTP_REDIRECTOR_STAGE" />
    </typedef>
    <typedef name="RPC_NEW_HTTP_PROXY_CHANNEL">
      <ptr>
        <fn>
          <return>
            <type>RPC_STATUS</type>
            <reg>eax</reg>
          </return>
          <arg name="RedirectorStage">
            <type>RPC_HTTP_REDIRECTOR_STAGE</type>
            <stack size="4" />
          </arg>
          <arg name="ServerName">
            <type>RPC_WSTR</type>
            <stack size="4" />
          </arg>
          <arg name="ServerPort">
            <type>RPC_WSTR</type>
            <stack size="4" />
          </arg>
          <arg name="RemoteUser">
            <type>RPC_WSTR</type>
            <stack size="4" />
          </arg>
          <arg name="AuthType">
            <type>RPC_WSTR</type>
            <stack size="4" />
          </arg>
          <arg name="ResourceUuid">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="SessionId">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="Interface">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="Reserved">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="Flags">
            <prim domain="UnsignedInt" size="4" />
            <stack size="4" />
          </arg>
          <arg name="NewServerName">
            <ptr>
              <type>RPC_WSTR</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="NewServerPort">
            <ptr>
              <type>RPC_WSTR</type>
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="RPC_HTTP_PROXY_FREE_STRING">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="String">
            <type>RPC_WSTR</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="RPC_AUTH_KEY_RETRIEVAL_FN">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="Arg">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="ServerPrincName">
            <type>RPC_WSTR</type>
            <stack size="4" />
          </arg>
          <arg name="KeyVer">
            <prim domain="UnsignedInt" size="4" />
            <stack size="4" />
          </arg>
          <arg name="Key">
            <ptr>
              <ptr>
                <void />
              </ptr>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="Status">
            <ptr>
              <type>RPC_STATUS</type>
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="struct_101">
      <field offset="0" name="UserName">
        <ptr>
          <prim domain="UnsignedInt" size="1" />
        </ptr>
      </field>
      <field offset="4" name="ComputerName">
        <ptr>
          <prim domain="UnsignedInt" size="1" />
        </ptr>
      </field>
      <field offset="8" name="Privilege">
        <prim domain="UnsignedInt" size="2" />
      </field>
      <field offset="12" name="AuthFlags">
        <prim domain="UnsignedInt" size="4" />
      </field>
    </struct>
    <typedef name="RPC_CLIENT_INFORMATION1">
      <struct name="struct_101" />
    </typedef>
    <typedef name="PRPC_CLIENT_INFORMATION1">
      <ptr>
        <struct name="struct_101" />
      </ptr>
    </typedef>
    <typedef name="RPC_EP_INQ_HANDLE">
      <ptr>
        <type>I_RPC_HANDLE</type>
      </ptr>
    </typedef>
    <typedef name="RPC_MGMT_AUTHORIZATION_FN">
      <ptr>
        <fn>
          <return>
            <prim domain="SignedInt" size="4" />
            <reg>eax</reg>
          </return>
          <arg name="ClientBinding">
            <type>RPC_BINDING_HANDLE</type>
            <stack size="4" />
          </arg>
          <arg name="RequestedMgmtOperation">
            <prim domain="UnsignedInt" size="4" />
            <stack size="4" />
          </arg>
          <arg name="Status">
            <ptr>
              <type>RPC_STATUS</type>
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="_RPC_VERSION">
      <field offset="0" name="MajorVersion">
        <prim domain="UnsignedInt" size="2" />
      </field>
      <field offset="2" name="MinorVersion">
        <prim domain="UnsignedInt" size="2" />
      </field>
    </struct>
    <typedef name="RPC_VERSION">
      <struct name="_RPC_VERSION" />
    </typedef>
    <struct name="_RPC_SYNTAX_IDENTIFIER">
      <field offset="0" name="SyntaxGUID">
        <type>GUID</type>
      </field>
      <field offset="16" name="SyntaxVersion">
        <type>RPC_VERSION</type>
      </field>
    </struct>
    <typedef name="RPC_SYNTAX_IDENTIFIER">
      <struct name="_RPC_SYNTAX_IDENTIFIER" />
    </typedef>
    <typedef name="PRPC_SYNTAX_IDENTIFIER">
      <ptr>
        <struct name="_RPC_SYNTAX_IDENTIFIER" />
      </ptr>
    </typedef>
    <struct name="_RPC_MESSAGE">
      <field offset="0" name="Handle">
        <type>RPC_BINDING_HANDLE</type>
      </field>
      <field offset="4" name="DataRepresentation">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="8" name="Buffer">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="12" name="BufferLength">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="16" name="ProcNum">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="20" name="TransferSyntax">
        <type>PRPC_SYNTAX_IDENTIFIER</type>
      </field>
      <field offset="24" name="RpcInterfaceInformation">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="28" name="ReservedForRuntime">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="32" name="ManagerEpv">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="36" name="ImportContext">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="40" name="RpcFlags">
        <prim domain="UnsignedInt" size="4" />
      </field>
    </struct>
    <typedef name="RPC_MESSAGE">
      <struct name="_RPC_MESSAGE" />
    </typedef>
    <typedef name="PRPC_MESSAGE">
      <ptr>
        <struct name="_RPC_MESSAGE" />
      </ptr>
    </typedef>
    <typedef name="RPC_FORWARD_FUNCTION">
      <fn convention="__stdcall">
        <return>
          <type>RPC_STATUS</type>
          <reg>eax</reg>
        </return>
        <arg name="InterfaceId">
          <ptr>
            <type>UUID</type>
          </ptr>
          <stack size="4" />
        </arg>
        <arg name="InterfaceVersion">
          <ptr>
            <type>RPC_VERSION</type>
          </ptr>
          <stack size="4" />
        </arg>
        <arg name="ObjectId">
          <ptr>
            <type>UUID</type>
          </ptr>
          <stack size="4" />
        </arg>
        <arg name="Rpcpro">
          <ptr>
            <prim domain="UnsignedInt" size="1" />
          </ptr>
          <stack size="4" />
        </arg>
        <arg name="ppDestEndpoint">
          <ptr>
            <ptr>
              <void />
            </ptr>
          </ptr>
          <stack size="4" />
        </arg>
      </fn>
    </typedef>
    <enum name="RPC_ADDRESS_CHANGE_TYPE">
      <member name="PROTOCOL_NOT_LOADED" value="1" />
      <member name="PROTOCOL_LOADED" value="2" />
      <member name="PROTOCOL_ADDRESS_CHANGE" value="3" />
    </enum>
    <typedef name="RPC_ADDRESS_CHANGE_FN">
      <fn convention="__stdcall">
        <return>
          <void />
        </return>
        <arg name="arg">
          <ptr>
            <void />
          </ptr>
          <stack size="4" />
        </arg>
      </fn>
    </typedef>
    <typedef name="RPC_DISPATCH_FUNCTION">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="Message">
            <type>PRPC_MESSAGE</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="struct_102">
      <field offset="0" name="DispatchTableCount">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="DispatchTable">
        <ptr>
          <type>RPC_DISPATCH_FUNCTION</type>
        </ptr>
      </field>
      <field offset="8" name="Reserved">
        <type>LONG_PTR</type>
      </field>
    </struct>
    <typedef name="RPC_DISPATCH_TABLE">
      <struct name="struct_102" />
    </typedef>
    <typedef name="PRPC_DISPATCH_TABLE">
      <ptr>
        <struct name="struct_102" />
      </ptr>
    </typedef>
    <struct name="_RPC_PROTSEQ_ENDPOINT">
      <field offset="0" name="RpcProtocolSequence">
        <ptr>
          <prim domain="UnsignedInt" size="1" />
        </ptr>
      </field>
      <field offset="4" name="Endpoint">
        <ptr>
          <prim domain="UnsignedInt" size="1" />
        </ptr>
      </field>
    </struct>
    <typedef name="RPC_PROTSEQ_ENDPOINT">
      <struct name="_RPC_PROTSEQ_ENDPOINT" />
    </typedef>
    <typedef name="PRPC_PROTSEQ_ENDPOINT">
      <ptr>
        <struct name="_RPC_PROTSEQ_ENDPOINT" />
      </ptr>
    </typedef>
    <struct name="_RPC_SERVER_INTERFACE">
      <field offset="0" name="Length">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="8" name="InterfaceId">
        <type>RPC_SYNTAX_IDENTIFIER</type>
      </field>
      <field offset="32" name="TransferSyntax">
        <type>RPC_SYNTAX_IDENTIFIER</type>
      </field>
      <field offset="52" name="DispatchTable">
        <type>PRPC_DISPATCH_TABLE</type>
      </field>
      <field offset="56" name="RpcProtseqEndpointCount">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="60" name="RpcProtseqEndpoint">
        <type>PRPC_PROTSEQ_ENDPOINT</type>
      </field>
      <field offset="64" name="DefaultManagerEpv">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="68" name="InterpreterInfo">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="72" name="Flags">
        <prim domain="UnsignedInt" size="4" />
      </field>
    </struct>
    <typedef name="RPC_SERVER_INTERFACE">
      <struct name="_RPC_SERVER_INTERFACE" />
    </typedef>
    <typedef name="PRPC_SERVER_INTERFACE">
      <ptr>
        <struct name="_RPC_SERVER_INTERFACE" />
      </ptr>
    </typedef>
    <struct name="_RPC_CLIENT_INTERFACE">
      <field offset="0" name="Length">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="8" name="InterfaceId">
        <type>RPC_SYNTAX_IDENTIFIER</type>
      </field>
      <field offset="32" name="TransferSyntax">
        <type>RPC_SYNTAX_IDENTIFIER</type>
      </field>
      <field offset="52" name="DispatchTable">
        <type>PRPC_DISPATCH_TABLE</type>
      </field>
      <field offset="56" name="RpcProtseqEndpointCount">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="60" name="RpcProtseqEndpoint">
        <type>PRPC_PROTSEQ_ENDPOINT</type>
      </field>
      <field offset="64" name="Reserved">
        <type>ULONG_PTR</type>
      </field>
      <field offset="68" name="InterpreterInfo">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="72" name="Flags">
        <prim domain="UnsignedInt" size="4" />
      </field>
    </struct>
    <typedef name="RPC_CLIENT_INTERFACE">
      <struct name="_RPC_CLIENT_INTERFACE" />
    </typedef>
    <typedef name="PRPC_CLIENT_INTERFACE">
      <ptr>
        <struct name="_RPC_CLIENT_INTERFACE" />
      </ptr>
    </typedef>
    <typedef name="I_RPC_MUTEX">
      <ptr>
        <void />
      </ptr>
    </typedef>
    <typedef name="PRPC_RUNDOWN">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="AssociationContext">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="_RPC_TRANSFER_SYNTAX">
      <field offset="0" name="Uuid">
        <type>UUID</type>
      </field>
      <field offset="16" name="VersMajor">
        <prim domain="UnsignedInt" size="2" />
      </field>
      <field offset="18" name="VersMinor">
        <prim domain="UnsignedInt" size="2" />
      </field>
    </struct>
    <typedef name="RPC_TRANSFER_SYNTAX">
      <struct name="_RPC_TRANSFER_SYNTAX" />
    </typedef>
    <typedef name="RPCLT_PDU_FILTER_FUNC">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="Buffer">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="BufferLength">
            <prim domain="UnsignedInt" size="4" />
            <stack size="4" />
          </arg>
          <arg name="fDatagram">
            <prim domain="SignedInt" size="4" />
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="RPC_SETFILTER_FUNC">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="pfnFilter">
            <type>RPCLT_PDU_FILTER_FUNC</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="RPC_BLOCKING_FN">
      <ptr>
        <fn>
          <return>
            <type>RPC_STATUS</type>
            <reg>eax</reg>
          </return>
          <arg name="hWnd">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="Context">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="hSyncEvent">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="_RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR">
      <field offset="0" name="BufferSize">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="Buffer">
        <ptr>
          <prim domain="Character" size="1" />
        </ptr>
      </field>
    </struct>
    <typedef name="RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR">
      <struct name="_RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR" />
    </typedef>
    <struct name="_RDR_CALLOUT_STATE">
      <field offset="0" name="LastError">
        <type>RPC_STATUS</type>
      </field>
      <field offset="4" name="LastEEInfo">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="8" name="LastCalledStage">
        <type>RPC_HTTP_REDIRECTOR_STAGE</type>
      </field>
      <field offset="12" name="ServerName">
        <ptr>
          <prim domain="UnsignedInt" size="2" />
        </ptr>
      </field>
      <field offset="16" name="ServerPort">
        <ptr>
          <prim domain="UnsignedInt" size="2" />
        </ptr>
      </field>
      <field offset="20" name="RemoteUser">
        <ptr>
          <prim domain="UnsignedInt" size="2" />
        </ptr>
      </field>
      <field offset="24" name="AuthType">
        <ptr>
          <prim domain="UnsignedInt" size="2" />
        </ptr>
      </field>
      <field offset="28" name="ResourceTypePresent">
        <prim domain="UnsignedInt" size="1" />
      </field>
      <field offset="29" name="SessionIdPresent">
        <prim domain="UnsignedInt" size="1" />
      </field>
      <field offset="30" name="InterfacePresent">
        <prim domain="UnsignedInt" size="1" />
      </field>
      <field offset="32" name="ResourceType">
        <type>UUID</type>
      </field>
      <field offset="48" name="SessionId">
        <type>UUID</type>
      </field>
      <field offset="64" name="Interface">
        <type>RPC_SYNTAX_IDENTIFIER</type>
      </field>
      <field offset="84" name="CertContext">
        <ptr>
          <void />
        </ptr>
      </field>
    </struct>
    <typedef name="RDR_CALLOUT_STATE">
      <struct name="_RDR_CALLOUT_STATE" />
    </typedef>
    <typedef name="I_RpcProxyIsValidMachineFn">
      <ptr>
        <fn>
          <return>
            <type>RPC_STATUS</type>
            <reg>eax</reg>
          </return>
          <arg name="Machine">
            <type>RPC_WSTR</type>
            <stack size="4" />
          </arg>
          <arg name="DotMachine">
            <type>RPC_WSTR</type>
            <stack size="4" />
          </arg>
          <arg name="PortNumber">
            <prim domain="UnsignedInt" size="4" />
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="I_RpcProxyGetClientAddressFn">
      <ptr>
        <fn>
          <return>
            <type>RPC_STATUS</type>
            <reg>eax</reg>
          </return>
          <arg name="Context">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="Buffer">
            <ptr>
              <prim domain="Character" size="1" />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="BufferLength">
            <ptr>
              <prim domain="UnsignedInt" size="4" />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="I_RpcProxyGetConnectionTimeoutFn">
      <ptr>
        <fn>
          <return>
            <type>RPC_STATUS</type>
            <reg>eax</reg>
          </return>
          <arg name="ConnectionTimeout">
            <ptr>
              <prim domain="UnsignedInt" size="4" />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="I_RpcPerformCalloutFn">
      <ptr>
        <fn>
          <return>
            <type>RPC_STATUS</type>
            <reg>eax</reg>
          </return>
          <arg name="Context">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="CallOutState">
            <ptr>
              <type>RDR_CALLOUT_STATE</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="Stage">
            <type>RPC_HTTP_REDIRECTOR_STAGE</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="I_RpcFreeCalloutStateFn">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="CallOutState">
            <ptr>
              <type>RDR_CALLOUT_STATE</type>
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="I_RpcProxyGetClientSessionAndResourceUUID">
      <ptr>
        <fn>
          <return>
            <type>RPC_STATUS</type>
            <reg>eax</reg>
          </return>
          <arg name="Context">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="SessionIdPresent">
            <ptr>
              <prim domain="SignedInt" size="4" />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="SessionId">
            <ptr>
              <type>UUID</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="ResourceIdPresent">
            <ptr>
              <prim domain="SignedInt" size="4" />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="ResourceId">
            <ptr>
              <type>UUID</type>
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="I_RpcProxyFilterIfFn">
      <ptr>
        <fn>
          <return>
            <type>RPC_STATUS</type>
            <reg>eax</reg>
          </return>
          <arg name="Context">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="IfUuid">
            <ptr>
              <type>UUID</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="IfMajorVersion">
            <prim domain="UnsignedInt" size="2" />
            <stack size="4" />
          </arg>
          <arg name="fAllow">
            <ptr>
              <prim domain="SignedInt" size="4" />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <enum name="RpcProxyPerfCounters">
      <member name="RpcCurrentUniqueUser" value="1" />
      <member name="RpcBackEndConnectionAttempts" value="2" />
      <member name="RpcBackEndConnectionFailed" value="3" />
      <member name="RpcRequestsPerSecond" value="4" />
      <member name="RpcIncomingConnections" value="5" />
      <member name="RpcIncomingBandwidth" value="6" />
      <member name="RpcOutgoingBandwidth" value="7" />
      <member name="RpcAttemptedLbsDecisions" value="8" />
      <member name="RpcFailedLbsDecisions" value="9" />
      <member name="RpcAttemptedLbsMessages" value="10" />
      <member name="RpcFailedLbsMessages" value="11" />
      <member name="RpcLastCounter" value="12" />
    </enum>
    <typedef name="RpcPerfCounters">
      <enum name="RpcProxyPerfCounters" />
    </typedef>
    <typedef name="I_RpcProxyUpdatePerfCounterFn">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="Counter">
            <type>RpcPerfCounters</type>
            <stack size="4" />
          </arg>
          <arg name="ModifyTrend">
            <prim domain="SignedInt" size="4" />
            <stack size="4" />
          </arg>
          <arg name="Size">
            <prim domain="UnsignedInt" size="4" />
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="I_RpcProxyUpdatePerfCounterBackendServerFn">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="MachineName">
            <ptr>
              <prim domain="UnsignedInt" size="2" />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="IsConnectEvent">
            <prim domain="SignedInt" size="4" />
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="tagI_RpcProxyCallbackInterface">
      <field offset="0" name="IsValidMachineFn">
        <type>I_RpcProxyIsValidMachineFn</type>
      </field>
      <field offset="4" name="GetClientAddressFn">
        <type>I_RpcProxyGetClientAddressFn</type>
      </field>
      <field offset="8" name="GetConnectionTimeoutFn">
        <type>I_RpcProxyGetConnectionTimeoutFn</type>
      </field>
      <field offset="12" name="PerformCalloutFn">
        <type>I_RpcPerformCalloutFn</type>
      </field>
      <field offset="16" name="FreeCalloutStateFn">
        <type>I_RpcFreeCalloutStateFn</type>
      </field>
      <field offset="20" name="GetClientSessionAndResourceUUIDFn">
        <type>I_RpcProxyGetClientSessionAndResourceUUID</type>
      </field>
      <field offset="24" name="ProxyFilterIfFn">
        <type>I_RpcProxyFilterIfFn</type>
      </field>
      <field offset="28" name="RpcProxyUpdatePerfCounterFn">
        <type>I_RpcProxyUpdatePerfCounterFn</type>
      </field>
      <field offset="32" name="RpcProxyUpdatePerfCounterBackendServerFn">
        <type>I_RpcProxyUpdatePerfCounterBackendServerFn</type>
      </field>
    </struct>
    <typedef name="I_RpcProxyCallbackInterface">
      <struct name="tagI_RpcProxyCallbackInterface" />
    </typedef>
    <typedef name="RPC_NS_HANDLE">
      <ptr>
        <void />
      </ptr>
    </typedef>
    <enum name="_RPC_NOTIFICATION_TYPES">
      <member name="RpcNotificationTypeNone" value="0" />
      <member name="RpcNotificationTypeEvent" value="1" />
      <member name="RpcNotificationTypeApc" value="2" />
      <member name="RpcNotificationTypeIoc" value="3" />
      <member name="RpcNotificationTypeHwnd" value="4" />
      <member name="RpcNotificationTypeCallback" value="5" />
    </enum>
    <typedef name="RPC_NOTIFICATION_TYPES">
      <enum name="_RPC_NOTIFICATION_TYPES" />
    </typedef>
    <enum name="_RPC_ASYNC_EVENT">
      <member name="RpcCallComplete" value="0" />
      <member name="RpcSendComplete" value="1" />
      <member name="RpcReceiveComplete" value="2" />
      <member name="RpcClientDisconnect" value="3" />
      <member name="RpcClientCancel" value="4" />
    </enum>
    <typedef name="RPC_ASYNC_EVENT">
      <enum name="_RPC_ASYNC_EVENT" />
    </typedef>
    <typedef name="RPCNOTIFICATION_ROUTINE">
      <fn convention="__stdcall">
        <return>
          <void />
        </return>
        <arg name="pAsync">
          <ptr>
            <struct name="_RPC_ASYNC_STATE" />
          </ptr>
          <stack size="4" />
        </arg>
        <arg name="Context">
          <ptr>
            <void />
          </ptr>
          <stack size="4" />
        </arg>
        <arg name="Event">
          <type>RPC_ASYNC_EVENT</type>
          <stack size="4" />
        </arg>
      </fn>
    </typedef>
    <typedef name="PFN_RPCNOTIFICATION_ROUTINE">
      <ptr>
        <type>RPCNOTIFICATION_ROUTINE</type>
      </ptr>
    </typedef>
    <struct name="struct_103">
      <field offset="0" name="NotificationRoutine">
        <type>PFN_RPCNOTIFICATION_ROUTINE</type>
      </field>
      <field offset="4" name="hThread">
        <type>HANDLE</type>
      </field>
    </struct>
    <struct name="struct_104">
      <field offset="0" name="hIOPort">
        <type>HANDLE</type>
      </field>
      <field offset="4" name="dwNumberOfBytesTransferred">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwCompletionKey">
        <type>DWORD_PTR</type>
      </field>
      <field offset="12" name="lpOverlapped">
        <type>LPOVERLAPPED</type>
      </field>
    </struct>
    <struct name="struct_105">
      <field offset="0" name="hWnd">
        <type>HWND</type>
      </field>
      <field offset="4" name="Msg">
        <type>UINT</type>
      </field>
    </struct>
    <union name="_RPC_ASYNC_NOTIFICATION_INFO">
      <alt name="APC">
        <struct name="struct_103" />
      </alt>
      <alt name="IOC">
        <struct name="struct_104" />
      </alt>
      <alt>
        <type>HWND</type>
      </alt>
      <alt name="hEvent">
        <type>HANDLE</type>
      </alt>
      <alt name="NotificationRoutine">
        <type>PFN_RPCNOTIFICATION_ROUTINE</type>
      </alt>
    </union>
    <typedef name="RPC_ASYNC_NOTIFICATION_INFO">
      <union name="_RPC_ASYNC_NOTIFICATION_INFO" />
    </typedef>
    <typedef name="PRPC_ASYNC_NOTIFICATION_INFO">
      <ptr>
        <union name="_RPC_ASYNC_NOTIFICATION_INFO" />
      </ptr>
    </typedef>
    <struct name="_RPC_ASYNC_STATE">
      <field offset="0" name="Size">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="Signature">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="8" name="Lock">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="12" name="Flags">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="16" name="StubInfo">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="20" name="UserInfo">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="24" name="RuntimeInfo">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="28" name="Event">
        <type>RPC_ASYNC_EVENT</type>
      </field>
      <field offset="32" name="NotificationType">
        <type>RPC_NOTIFICATION_TYPES</type>
      </field>
      <field offset="40" name="u">
        <type>RPC_ASYNC_NOTIFICATION_INFO</type>
      </field>
      <field offset="56" name="Reserved">
        <arr length="4">
          <type>LONG_PTR</type>
        </arr>
      </field>
    </struct>
    <typedef name="RPC_ASYNC_STATE">
      <struct name="_RPC_ASYNC_STATE" />
    </typedef>
    <typedef name="PRPC_ASYNC_STATE">
      <ptr>
        <struct name="_RPC_ASYNC_STATE" />
      </ptr>
    </typedef>
    <enum name="tagExtendedErrorParamTypes">
      <member name="eeptAnsiString" value="1" />
      <member name="eeptUnicodeString" value="2" />
      <member name="eeptLongVal" value="3" />
      <member name="eeptShortVal" value="4" />
      <member name="eeptPointerVal" value="5" />
      <member name="eeptNone" value="6" />
      <member name="eeptBinary" value="7" />
    </enum>
    <typedef name="ExtendedErrorParamTypes">
      <enum name="tagExtendedErrorParamTypes" />
    </typedef>
    <struct name="tagBinaryParam">
      <field offset="0" name="Buffer">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="4" name="Size">
        <prim domain="SignedInt" size="2" />
      </field>
    </struct>
    <typedef name="BinaryParam">
      <struct name="tagBinaryParam" />
    </typedef>
    <struct name="tagRPC_EE_INFO_PARAM">
      <field offset="0" name="ParameterType">
        <type>ExtendedErrorParamTypes</type>
      </field>
      <field offset="8" name="u">
        <union>
          <alt name="AnsiString">
            <type>LPSTR</type>
          </alt>
          <alt name="UnicodeString">
            <type>LPWSTR</type>
          </alt>
          <alt name="LVal">
            <prim domain="SignedInt" size="4" />
          </alt>
          <alt name="SVal">
            <prim domain="SignedInt" size="2" />
          </alt>
          <alt name="PVal">
            <type>ULONGLONG</type>
          </alt>
          <alt name="BVal">
            <type>BinaryParam</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="RPC_EE_INFO_PARAM">
      <struct name="tagRPC_EE_INFO_PARAM" />
    </typedef>
    <struct name="tagRPC_EXTENDED_ERROR_INFO">
      <field offset="0" name="Version">
        <type>ULONG</type>
      </field>
      <field offset="4" name="ComputerName">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="ProcessID">
        <type>ULONG</type>
      </field>
      <field offset="16" name="u">
        <union>
          <alt name="SystemTime">
            <type>SYSTEMTIME</type>
          </alt>
          <alt name="FileTime">
            <type>FILETIME</type>
          </alt>
        </union>
      </field>
      <field offset="32" name="GeneratingComponent">
        <type>ULONG</type>
      </field>
      <field offset="36" name="Status">
        <type>ULONG</type>
      </field>
      <field offset="40" name="DetectionLocation">
        <type>USHORT</type>
      </field>
      <field offset="42" name="Flags">
        <type>USHORT</type>
      </field>
      <field offset="44" name="NumberOfParameters">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="48" name="Parameters">
        <arr length="4">
          <type>RPC_EE_INFO_PARAM</type>
        </arr>
      </field>
    </struct>
    <typedef name="RPC_EXTENDED_ERROR_INFO">
      <struct name="tagRPC_EXTENDED_ERROR_INFO" />
    </typedef>
    <struct name="tagRPC_ERROR_ENUM_HANDLE">
      <field offset="0" name="Signature">
        <type>ULONG</type>
      </field>
      <field offset="4" name="CurrentPos">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="8" name="Head">
        <ptr>
          <void />
        </ptr>
      </field>
    </struct>
    <typedef name="RPC_ERROR_ENUM_HANDLE">
      <struct name="tagRPC_ERROR_ENUM_HANDLE" />
    </typedef>
    <enum name="tagRpcLocalAddressFormat">
      <member name="rlafInvalid" value="0" />
      <member name="rlafIPv4" value="1" />
      <member name="rlafIPv6" value="2" />
    </enum>
    <typedef name="RpcLocalAddressFormat">
      <enum name="tagRpcLocalAddressFormat" />
    </typedef>
    <struct name="_RPC_CALL_LOCAL_ADDRESS_V1">
      <field offset="0" name="Version">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="Buffer">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="8" name="BufferSize">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="12" name="AddressFormat">
        <type>RpcLocalAddressFormat</type>
      </field>
    </struct>
    <typedef name="RPC_CALL_LOCAL_ADDRESS_V1">
      <struct name="_RPC_CALL_LOCAL_ADDRESS_V1" />
    </typedef>
    <typedef name="PRPC_CALL_LOCAL_ADDRESS_V1">
      <ptr>
        <struct name="_RPC_CALL_LOCAL_ADDRESS_V1" />
      </ptr>
    </typedef>
    <struct name="tagRPC_CALL_ATTRIBUTES_V1_W">
      <field offset="0" name="Version">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="Flags">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="8" name="ServerPrincipalNameBufferLength">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="12" name="ServerPrincipalName">
        <ptr>
          <prim domain="UnsignedInt" size="2" />
        </ptr>
      </field>
      <field offset="16" name="ClientPrincipalNameBufferLength">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="20" name="ClientPrincipalName">
        <ptr>
          <prim domain="UnsignedInt" size="2" />
        </ptr>
      </field>
      <field offset="24" name="AuthenticationLevel">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="28" name="AuthenticationService">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="32" name="NullSession">
        <type>BOOL</type>
      </field>
    </struct>
    <typedef name="RPC_CALL_ATTRIBUTES_V1_W">
      <struct name="tagRPC_CALL_ATTRIBUTES_V1_W" />
    </typedef>
    <struct name="tagRPC_CALL_ATTRIBUTES_V1_A">
      <field offset="0" name="Version">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="Flags">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="8" name="ServerPrincipalNameBufferLength">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="12" name="ServerPrincipalName">
        <ptr>
          <prim domain="UnsignedInt" size="1" />
        </ptr>
      </field>
      <field offset="16" name="ClientPrincipalNameBufferLength">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="20" name="ClientPrincipalName">
        <ptr>
          <prim domain="UnsignedInt" size="1" />
        </ptr>
      </field>
      <field offset="24" name="AuthenticationLevel">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="28" name="AuthenticationService">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="32" name="NullSession">
        <type>BOOL</type>
      </field>
    </struct>
    <typedef name="RPC_CALL_ATTRIBUTES_V1_A">
      <struct name="tagRPC_CALL_ATTRIBUTES_V1_A" />
    </typedef>
    <enum name="tagRpcCallType">
      <member name="rctInvalid" value="0" />
      <member name="rctNormal" value="1" />
      <member name="rctTraining" value="2" />
      <member name="rctGuaranteed" value="3" />
    </enum>
    <typedef name="RpcCallType">
      <enum name="tagRpcCallType" />
    </typedef>
    <enum name="tagRpcCallClientLocality">
      <member name="rcclInvalid" value="0" />
      <member name="rcclLocal" value="1" />
      <member name="rcclRemote" value="2" />
      <member name="rcclClientUnknownLocality" value="3" />
    </enum>
    <typedef name="RpcCallClientLocality">
      <enum name="tagRpcCallClientLocality" />
    </typedef>
    <struct name="tagRPC_CALL_ATTRIBUTES_V2_W">
      <field offset="0" name="Version">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="Flags">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="8" name="ServerPrincipalNameBufferLength">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="12" name="ServerPrincipalName">
        <ptr>
          <prim domain="UnsignedInt" size="2" />
        </ptr>
      </field>
      <field offset="16" name="ClientPrincipalNameBufferLength">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="20" name="ClientPrincipalName">
        <ptr>
          <prim domain="UnsignedInt" size="2" />
        </ptr>
      </field>
      <field offset="24" name="AuthenticationLevel">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="28" name="AuthenticationService">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="32" name="NullSession">
        <type>BOOL</type>
      </field>
      <field offset="36" name="KernelModeCaller">
        <type>BOOL</type>
      </field>
      <field offset="40" name="ProtocolSequence">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="44" name="IsClientLocal">
        <type>RpcCallClientLocality</type>
      </field>
      <field offset="48" name="ClientPID">
        <type>HANDLE</type>
      </field>
      <field offset="52" name="CallStatus">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="56" name="CallType">
        <type>RpcCallType</type>
      </field>
      <field offset="60" name="CallLocalAddress">
        <ptr>
          <type>RPC_CALL_LOCAL_ADDRESS_V1</type>
        </ptr>
      </field>
      <field offset="64" name="OpNum">
        <prim domain="UnsignedInt" size="2" />
      </field>
      <field offset="72" name="InterfaceUuid">
        <type>UUID</type>
      </field>
    </struct>
    <typedef name="RPC_CALL_ATTRIBUTES_V2_W">
      <struct name="tagRPC_CALL_ATTRIBUTES_V2_W" />
    </typedef>
    <struct name="tagRPC_CALL_ATTRIBUTES_V2_A">
      <field offset="0" name="Version">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="Flags">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="8" name="ServerPrincipalNameBufferLength">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="12" name="ServerPrincipalName">
        <ptr>
          <prim domain="UnsignedInt" size="1" />
        </ptr>
      </field>
      <field offset="16" name="ClientPrincipalNameBufferLength">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="20" name="ClientPrincipalName">
        <ptr>
          <prim domain="UnsignedInt" size="1" />
        </ptr>
      </field>
      <field offset="24" name="AuthenticationLevel">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="28" name="AuthenticationService">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="32" name="NullSession">
        <type>BOOL</type>
      </field>
      <field offset="36" name="KernelModeCaller">
        <type>BOOL</type>
      </field>
      <field offset="40" name="ProtocolSequence">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="44" name="IsClientLocal">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="48" name="ClientPID">
        <type>HANDLE</type>
      </field>
      <field offset="52" name="CallStatus">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="56" name="CallType">
        <type>RpcCallType</type>
      </field>
      <field offset="60" name="CallLocalAddress">
        <ptr>
          <type>RPC_CALL_LOCAL_ADDRESS_V1</type>
        </ptr>
      </field>
      <field offset="64" name="OpNum">
        <prim domain="UnsignedInt" size="2" />
      </field>
      <field offset="72" name="InterfaceUuid">
        <type>UUID</type>
      </field>
    </struct>
    <typedef name="RPC_CALL_ATTRIBUTES_V2_A">
      <struct name="tagRPC_CALL_ATTRIBUTES_V2_A" />
    </typedef>
    <typedef name="RPC_CALL_ATTRIBUTES">
      <type>RPC_CALL_ATTRIBUTES_V2_A</type>
    </typedef>
    <enum name="_RPC_NOTIFICATIONS">
      <member name="RpcNotificationCallNone" value="0" />
      <member name="RpcNotificationClientDisconnect" value="1" />
      <member name="RpcNotificationCallCancel" value="2" />
    </enum>
    <typedef name="RPC_NOTIFICATIONS">
      <enum name="_RPC_NOTIFICATIONS" />
    </typedef>
    <struct name="HDROP__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HDROP">
      <ptr>
        <struct name="HDROP__" />
      </ptr>
    </typedef>
    <struct name="_DRAGINFOA">
      <field offset="0" name="uSize">
        <type>UINT</type>
      </field>
      <field offset="8" name="pt">
        <type>POINT</type>
      </field>
      <field offset="16" name="fNC">
        <type>BOOL</type>
      </field>
      <field offset="20" name="lpFileList">
        <type>LPSTR</type>
      </field>
      <field offset="24" name="grfKeyState">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="DRAGINFOA">
      <struct name="_DRAGINFOA" />
    </typedef>
    <typedef name="LPDRAGINFOA">
      <ptr>
        <struct name="_DRAGINFOA" />
      </ptr>
    </typedef>
    <struct name="_DRAGINFOW">
      <field offset="0" name="uSize">
        <type>UINT</type>
      </field>
      <field offset="8" name="pt">
        <type>POINT</type>
      </field>
      <field offset="16" name="fNC">
        <type>BOOL</type>
      </field>
      <field offset="20" name="lpFileList">
        <type>LPWSTR</type>
      </field>
      <field offset="24" name="grfKeyState">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="DRAGINFOW">
      <struct name="_DRAGINFOW" />
    </typedef>
    <typedef name="LPDRAGINFOW">
      <ptr>
        <struct name="_DRAGINFOW" />
      </ptr>
    </typedef>
    <typedef name="DRAGINFO">
      <type>DRAGINFOA</type>
    </typedef>
    <typedef name="LPDRAGINFO">
      <type>LPDRAGINFOA</type>
    </typedef>
    <struct name="_AppBarData">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="hWnd">
        <type>HWND</type>
      </field>
      <field offset="8" name="uCallbackMessage">
        <type>UINT</type>
      </field>
      <field offset="12" name="uEdge">
        <type>UINT</type>
      </field>
      <field offset="16" name="rc">
        <type>RECT</type>
      </field>
      <field offset="32" name="lParam">
        <type>LPARAM</type>
      </field>
    </struct>
    <typedef name="APPBARDATA">
      <struct name="_AppBarData" />
    </typedef>
    <typedef name="PAPPBARDATA">
      <ptr>
        <struct name="_AppBarData" />
      </ptr>
    </typedef>
    <typedef name="FILEOP_FLAGS">
      <type>WORD</type>
    </typedef>
    <typedef name="PRINTEROP_FLAGS">
      <type>WORD</type>
    </typedef>
    <struct name="_SHFILEOPSTRUCTA">
      <field offset="0" name="hwnd">
        <type>HWND</type>
      </field>
      <field offset="4" name="wFunc">
        <type>UINT</type>
      </field>
      <field offset="8" name="pFrom">
        <type>LPCSTR</type>
      </field>
      <field offset="12" name="pTo">
        <type>LPCSTR</type>
      </field>
      <field offset="16" name="fFlags">
        <type>FILEOP_FLAGS</type>
      </field>
      <field offset="20" name="fAnyOperationsAborted">
        <type>BOOL</type>
      </field>
      <field offset="24" name="hNameMappings">
        <type>LPVOID</type>
      </field>
      <field offset="28" name="lpszProgressTitle">
        <type>LPCSTR</type>
      </field>
    </struct>
    <typedef name="SHFILEOPSTRUCTA">
      <struct name="_SHFILEOPSTRUCTA" />
    </typedef>
    <typedef name="LPSHFILEOPSTRUCTA">
      <ptr>
        <struct name="_SHFILEOPSTRUCTA" />
      </ptr>
    </typedef>
    <struct name="_SHFILEOPSTRUCTW">
      <field offset="0" name="hwnd">
        <type>HWND</type>
      </field>
      <field offset="4" name="wFunc">
        <type>UINT</type>
      </field>
      <field offset="8" name="pFrom">
        <type>LPCWSTR</type>
      </field>
      <field offset="12" name="pTo">
        <type>LPCWSTR</type>
      </field>
      <field offset="16" name="fFlags">
        <type>FILEOP_FLAGS</type>
      </field>
      <field offset="20" name="fAnyOperationsAborted">
        <type>BOOL</type>
      </field>
      <field offset="24" name="hNameMappings">
        <type>LPVOID</type>
      </field>
      <field offset="28" name="lpszProgressTitle">
        <type>LPCWSTR</type>
      </field>
    </struct>
    <typedef name="SHFILEOPSTRUCTW">
      <struct name="_SHFILEOPSTRUCTW" />
    </typedef>
    <typedef name="LPSHFILEOPSTRUCTW">
      <ptr>
        <struct name="_SHFILEOPSTRUCTW" />
      </ptr>
    </typedef>
    <typedef name="SHFILEOPSTRUCT">
      <type>SHFILEOPSTRUCTA</type>
    </typedef>
    <typedef name="LPSHFILEOPSTRUCT">
      <type>LPSHFILEOPSTRUCTA</type>
    </typedef>
    <struct name="_SHNAMEMAPPINGA">
      <field offset="0" name="pszOldPath">
        <type>LPSTR</type>
      </field>
      <field offset="4" name="pszNewPath">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="cchOldPath">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="12" name="cchNewPath">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="SHNAMEMAPPINGA">
      <struct name="_SHNAMEMAPPINGA" />
    </typedef>
    <typedef name="LPSHNAMEMAPPINGA">
      <ptr>
        <struct name="_SHNAMEMAPPINGA" />
      </ptr>
    </typedef>
    <struct name="_SHNAMEMAPPINGW">
      <field offset="0" name="pszOldPath">
        <type>LPWSTR</type>
      </field>
      <field offset="4" name="pszNewPath">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="cchOldPath">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="12" name="cchNewPath">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="SHNAMEMAPPINGW">
      <struct name="_SHNAMEMAPPINGW" />
    </typedef>
    <typedef name="LPSHNAMEMAPPINGW">
      <ptr>
        <struct name="_SHNAMEMAPPINGW" />
      </ptr>
    </typedef>
    <typedef name="SHNAMEMAPPING">
      <type>SHNAMEMAPPINGA</type>
    </typedef>
    <typedef name="LPSHNAMEMAPPING">
      <type>LPSHNAMEMAPPINGA</type>
    </typedef>
    <struct name="_SHELLEXECUTEINFOA">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="fMask">
        <type>ULONG</type>
      </field>
      <field offset="8" name="hwnd">
        <type>HWND</type>
      </field>
      <field offset="12" name="lpVerb">
        <type>LPCSTR</type>
      </field>
      <field offset="16" name="lpFile">
        <type>LPCSTR</type>
      </field>
      <field offset="20" name="lpParameters">
        <type>LPCSTR</type>
      </field>
      <field offset="24" name="lpDirectory">
        <type>LPCSTR</type>
      </field>
      <field offset="28" name="nShow">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="32" name="hInstApp">
        <type>HINSTANCE</type>
      </field>
      <field offset="36" name="lpIDList">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="40" name="lpClass">
        <type>LPCSTR</type>
      </field>
      <field offset="44" name="hkeyClass">
        <type>HKEY</type>
      </field>
      <field offset="48" name="dwHotKey">
        <type>DWORD</type>
      </field>
      <field offset="52">
        <union>
          <alt name="hIcon">
            <type>HANDLE</type>
          </alt>
          <alt name="hMonitor">
            <type>HANDLE</type>
          </alt>
        </union>
      </field>
      <field offset="56" name="hProcess">
        <type>HANDLE</type>
      </field>
    </struct>
    <typedef name="SHELLEXECUTEINFOA">
      <struct name="_SHELLEXECUTEINFOA" />
    </typedef>
    <typedef name="LPSHELLEXECUTEINFOA">
      <ptr>
        <struct name="_SHELLEXECUTEINFOA" />
      </ptr>
    </typedef>
    <struct name="_SHELLEXECUTEINFOW">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="fMask">
        <type>ULONG</type>
      </field>
      <field offset="8" name="hwnd">
        <type>HWND</type>
      </field>
      <field offset="12" name="lpVerb">
        <type>LPCWSTR</type>
      </field>
      <field offset="16" name="lpFile">
        <type>LPCWSTR</type>
      </field>
      <field offset="20" name="lpParameters">
        <type>LPCWSTR</type>
      </field>
      <field offset="24" name="lpDirectory">
        <type>LPCWSTR</type>
      </field>
      <field offset="28" name="nShow">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="32" name="hInstApp">
        <type>HINSTANCE</type>
      </field>
      <field offset="36" name="lpIDList">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="40" name="lpClass">
        <type>LPCWSTR</type>
      </field>
      <field offset="44" name="hkeyClass">
        <type>HKEY</type>
      </field>
      <field offset="48" name="dwHotKey">
        <type>DWORD</type>
      </field>
      <field offset="52">
        <union>
          <alt name="hIcon">
            <type>HANDLE</type>
          </alt>
          <alt name="hMonitor">
            <type>HANDLE</type>
          </alt>
        </union>
      </field>
      <field offset="56" name="hProcess">
        <type>HANDLE</type>
      </field>
    </struct>
    <typedef name="SHELLEXECUTEINFOW">
      <struct name="_SHELLEXECUTEINFOW" />
    </typedef>
    <typedef name="LPSHELLEXECUTEINFOW">
      <ptr>
        <struct name="_SHELLEXECUTEINFOW" />
      </ptr>
    </typedef>
    <typedef name="SHELLEXECUTEINFO">
      <type>SHELLEXECUTEINFOA</type>
    </typedef>
    <typedef name="LPSHELLEXECUTEINFO">
      <type>LPSHELLEXECUTEINFOA</type>
    </typedef>
    <struct name="_SHCREATEPROCESSINFOW">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="fMask">
        <type>ULONG</type>
      </field>
      <field offset="8" name="hwnd">
        <type>HWND</type>
      </field>
      <field offset="12" name="pszFile">
        <type>LPCWSTR</type>
      </field>
      <field offset="16" name="pszParameters">
        <type>LPCWSTR</type>
      </field>
      <field offset="20" name="pszCurrentDirectory">
        <type>LPCWSTR</type>
      </field>
      <field offset="24" name="hUserToken">
        <type>HANDLE</type>
      </field>
      <field offset="28" name="lpProcessAttributes">
        <type>LPSECURITY_ATTRIBUTES</type>
      </field>
      <field offset="32" name="lpThreadAttributes">
        <type>LPSECURITY_ATTRIBUTES</type>
      </field>
      <field offset="36" name="bInheritHandles">
        <type>BOOL</type>
      </field>
      <field offset="40" name="dwCreationFlags">
        <type>DWORD</type>
      </field>
      <field offset="44" name="lpStartupInfo">
        <type>LPSTARTUPINFOW</type>
      </field>
      <field offset="48" name="lpProcessInformation">
        <type>LPPROCESS_INFORMATION</type>
      </field>
    </struct>
    <typedef name="SHCREATEPROCESSINFOW">
      <struct name="_SHCREATEPROCESSINFOW" />
    </typedef>
    <typedef name="PSHCREATEPROCESSINFOW">
      <ptr>
        <struct name="_SHCREATEPROCESSINFOW" />
      </ptr>
    </typedef>
    <enum name="ASSOCCLASS">
      <member name="ASSOCCLASS_SHELL_KEY" value="0" />
      <member name="ASSOCCLASS_PROGID_KEY" value="1" />
      <member name="ASSOCCLASS_PROGID_STR" value="2" />
      <member name="ASSOCCLASS_CLSID_KEY" value="3" />
      <member name="ASSOCCLASS_CLSID_STR" value="4" />
      <member name="ASSOCCLASS_APP_KEY" value="5" />
      <member name="ASSOCCLASS_APP_STR" value="6" />
      <member name="ASSOCCLASS_SYSTEM_STR" value="7" />
      <member name="ASSOCCLASS_FOLDER" value="8" />
      <member name="ASSOCCLASS_STAR" value="9" />
    </enum>
    <typedef name="ASSOCCLASS">
      <enum name="ASSOCCLASS" />
    </typedef>
    <struct name="ASSOCIATIONELEMENT_">
      <field offset="0" name="ac">
        <type>ASSOCCLASS</type>
      </field>
      <field offset="4" name="hkClass">
        <type>HKEY</type>
      </field>
      <field offset="8" name="pszClass">
        <type>PCWSTR</type>
      </field>
    </struct>
    <typedef name="ASSOCIATIONELEMENT">
      <struct name="ASSOCIATIONELEMENT_" />
    </typedef>
    <struct name="_SHQUERYRBINFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="8" name="i64Size">
        <prim domain="SignedInt" size="8" />
      </field>
      <field offset="16" name="i64NumItems">
        <prim domain="SignedInt" size="8" />
      </field>
    </struct>
    <typedef name="SHQUERYRBINFO">
      <struct name="_SHQUERYRBINFO" />
    </typedef>
    <typedef name="LPSHQUERYRBINFO">
      <ptr>
        <struct name="_SHQUERYRBINFO" />
      </ptr>
    </typedef>
    <enum name="enum_81">
      <member name="QUNS_NOT_PRESENT" value="1" />
      <member name="QUNS_BUSY" value="2" />
      <member name="QUNS_RUNNING_D3D_FULL_SCREEN" value="3" />
      <member name="QUNS_PRESENTATION_MODE" value="4" />
      <member name="QUNS_ACCEPTS_NOTIFICATIONS" value="5" />
      <member name="QUNS_QUIET_TIME" value="6" />
    </enum>
    <typedef name="QUERY_USER_NOTIFICATION_STATE">
      <enum name="enum_81" />
    </typedef>
    <struct name="_NOTIFYICONDATAA">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="hWnd">
        <type>HWND</type>
      </field>
      <field offset="8" name="uID">
        <type>UINT</type>
      </field>
      <field offset="12" name="uFlags">
        <type>UINT</type>
      </field>
      <field offset="16" name="uCallbackMessage">
        <type>UINT</type>
      </field>
      <field offset="20" name="hIcon">
        <type>HICON</type>
      </field>
      <field offset="24" name="szTip">
        <arr length="128">
          <type>CHAR</type>
        </arr>
      </field>
      <field offset="152" name="dwState">
        <type>DWORD</type>
      </field>
      <field offset="156" name="dwStateMask">
        <type>DWORD</type>
      </field>
      <field offset="160" name="szInfo">
        <arr length="256">
          <type>CHAR</type>
        </arr>
      </field>
      <field offset="416">
        <union>
          <alt name="uTimeout">
            <type>UINT</type>
          </alt>
          <alt name="uVersion">
            <type>UINT</type>
          </alt>
        </union>
      </field>
      <field offset="424" name="szInfoTitle">
        <arr length="64">
          <type>CHAR</type>
        </arr>
      </field>
      <field offset="488" name="dwInfoFlags">
        <type>DWORD</type>
      </field>
      <field offset="496" name="guidItem">
        <type>GUID</type>
      </field>
      <field offset="512" name="hBalloonIcon">
        <type>HICON</type>
      </field>
    </struct>
    <typedef name="NOTIFYICONDATAA">
      <struct name="_NOTIFYICONDATAA" />
    </typedef>
    <typedef name="PNOTIFYICONDATAA">
      <ptr>
        <struct name="_NOTIFYICONDATAA" />
      </ptr>
    </typedef>
    <struct name="_NOTIFYICONDATAW">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="hWnd">
        <type>HWND</type>
      </field>
      <field offset="8" name="uID">
        <type>UINT</type>
      </field>
      <field offset="12" name="uFlags">
        <type>UINT</type>
      </field>
      <field offset="16" name="uCallbackMessage">
        <type>UINT</type>
      </field>
      <field offset="20" name="hIcon">
        <type>HICON</type>
      </field>
      <field offset="24" name="szTip">
        <arr length="128">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="280" name="dwState">
        <type>DWORD</type>
      </field>
      <field offset="284" name="dwStateMask">
        <type>DWORD</type>
      </field>
      <field offset="288" name="szInfo">
        <arr length="256">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="800">
        <union>
          <alt name="uTimeout">
            <type>UINT</type>
          </alt>
          <alt name="uVersion">
            <type>UINT</type>
          </alt>
        </union>
      </field>
      <field offset="808" name="szInfoTitle">
        <arr length="64">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="936" name="dwInfoFlags">
        <type>DWORD</type>
      </field>
      <field offset="944" name="guidItem">
        <type>GUID</type>
      </field>
      <field offset="960" name="hBalloonIcon">
        <type>HICON</type>
      </field>
    </struct>
    <typedef name="NOTIFYICONDATAW">
      <struct name="_NOTIFYICONDATAW" />
    </typedef>
    <typedef name="PNOTIFYICONDATAW">
      <ptr>
        <struct name="_NOTIFYICONDATAW" />
      </ptr>
    </typedef>
    <typedef name="NOTIFYICONDATA">
      <type>NOTIFYICONDATAA</type>
    </typedef>
    <typedef name="PNOTIFYICONDATA">
      <type>PNOTIFYICONDATAA</type>
    </typedef>
    <struct name="_NOTIFYICONIDENTIFIER">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="hWnd">
        <type>HWND</type>
      </field>
      <field offset="8" name="uID">
        <type>UINT</type>
      </field>
      <field offset="16" name="guidItem">
        <type>GUID</type>
      </field>
    </struct>
    <typedef name="NOTIFYICONIDENTIFIER">
      <struct name="_NOTIFYICONIDENTIFIER" />
    </typedef>
    <typedef name="PNOTIFYICONIDENTIFIER">
      <ptr>
        <struct name="_NOTIFYICONIDENTIFIER" />
      </ptr>
    </typedef>
    <struct name="_SHFILEINFOA">
      <field offset="0" name="hIcon">
        <type>HICON</type>
      </field>
      <field offset="4" name="iIcon">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="dwAttributes">
        <type>DWORD</type>
      </field>
      <field offset="16" name="szDisplayName">
        <arr length="260">
          <type>CHAR</type>
        </arr>
      </field>
      <field offset="280" name="szTypeName">
        <arr length="80">
          <type>CHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="SHFILEINFOA">
      <struct name="_SHFILEINFOA" />
    </typedef>
    <struct name="_SHFILEINFOW">
      <field offset="0" name="hIcon">
        <type>HICON</type>
      </field>
      <field offset="4" name="iIcon">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="dwAttributes">
        <type>DWORD</type>
      </field>
      <field offset="16" name="szDisplayName">
        <arr length="260">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="536" name="szTypeName">
        <arr length="80">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="SHFILEINFOW">
      <struct name="_SHFILEINFOW" />
    </typedef>
    <typedef name="SHFILEINFO">
      <type>SHFILEINFOA</type>
    </typedef>
    <struct name="_SHSTOCKICONINFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="hIcon">
        <type>HICON</type>
      </field>
      <field offset="8" name="iSysImageIndex">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="12" name="iIcon">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="szPath">
        <arr length="260">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="SHSTOCKICONINFO">
      <struct name="_SHSTOCKICONINFO" />
    </typedef>
    <enum name="SHSTOCKICONID">
      <member name="SIID_DOCNOASSOC" value="0" />
      <member name="SIID_DOCASSOC" value="1" />
      <member name="SIID_APPLICATION" value="2" />
      <member name="SIID_FOLDER" value="3" />
      <member name="SIID_FOLDEROPEN" value="4" />
      <member name="SIID_DRIVE525" value="5" />
      <member name="SIID_DRIVE35" value="6" />
      <member name="SIID_DRIVEREMOVE" value="7" />
      <member name="SIID_DRIVEFIXED" value="8" />
      <member name="SIID_DRIVENET" value="9" />
      <member name="SIID_DRIVENETDISABLED" value="10" />
      <member name="SIID_DRIVECD" value="11" />
      <member name="SIID_DRIVERAM" value="12" />
      <member name="SIID_WORLD" value="13" />
      <member name="SIID_SERVER" value="15" />
      <member name="SIID_PRINTER" value="16" />
      <member name="SIID_MYNETWORK" value="17" />
      <member name="SIID_FIND" value="22" />
      <member name="SIID_HELP" value="23" />
      <member name="SIID_SHARE" value="28" />
      <member name="SIID_LINK" value="29" />
      <member name="SIID_SLOWFILE" value="30" />
      <member name="SIID_RECYCLER" value="31" />
      <member name="SIID_RECYCLERFULL" value="32" />
      <member name="SIID_MEDIACDAUDIO" value="40" />
      <member name="SIID_LOCK" value="47" />
      <member name="SIID_AUTOLIST" value="49" />
      <member name="SIID_PRINTERNET" value="50" />
      <member name="SIID_SERVERSHARE" value="51" />
      <member name="SIID_PRINTERFAX" value="52" />
      <member name="SIID_PRINTERFAXNET" value="53" />
      <member name="SIID_PRINTERFILE" value="54" />
      <member name="SIID_STACK" value="55" />
      <member name="SIID_MEDIASVCD" value="56" />
      <member name="SIID_STUFFEDFOLDER" value="57" />
      <member name="SIID_DRIVEUNKNOWN" value="58" />
      <member name="SIID_DRIVEDVD" value="59" />
      <member name="SIID_MEDIADVD" value="60" />
      <member name="SIID_MEDIADVDRAM" value="61" />
      <member name="SIID_MEDIADVDRW" value="62" />
      <member name="SIID_MEDIADVDR" value="63" />
      <member name="SIID_MEDIADVDROM" value="64" />
      <member name="SIID_MEDIACDAUDIOPLUS" value="65" />
      <member name="SIID_MEDIACDRW" value="66" />
      <member name="SIID_MEDIACDR" value="67" />
      <member name="SIID_MEDIACDBURN" value="68" />
      <member name="SIID_MEDIABLANKCD" value="69" />
      <member name="SIID_MEDIACDROM" value="70" />
      <member name="SIID_AUDIOFILES" value="71" />
      <member name="SIID_IMAGEFILES" value="72" />
      <member name="SIID_VIDEOFILES" value="73" />
      <member name="SIID_MIXEDFILES" value="74" />
      <member name="SIID_FOLDERBACK" value="75" />
      <member name="SIID_FOLDERFRONT" value="76" />
      <member name="SIID_SHIELD" value="77" />
      <member name="SIID_WARNING" value="78" />
      <member name="SIID_INFO" value="79" />
      <member name="SIID_ERROR" value="80" />
      <member name="SIID_KEY" value="81" />
      <member name="SIID_SOFTWARE" value="82" />
      <member name="SIID_RENAME" value="83" />
      <member name="SIID_DELETE" value="84" />
      <member name="SIID_MEDIAAUDIODVD" value="85" />
      <member name="SIID_MEDIAMOVIEDVD" value="86" />
      <member name="SIID_MEDIAENHANCEDCD" value="87" />
      <member name="SIID_MEDIAENHANCEDDVD" value="88" />
      <member name="SIID_MEDIAHDDVD" value="89" />
      <member name="SIID_MEDIABLURAY" value="90" />
      <member name="SIID_MEDIAVCD" value="91" />
      <member name="SIID_MEDIADVDPLUSR" value="92" />
      <member name="SIID_MEDIADVDPLUSRW" value="93" />
      <member name="SIID_DESKTOPPC" value="94" />
      <member name="SIID_MOBILEPC" value="95" />
      <member name="SIID_USERS" value="96" />
      <member name="SIID_MEDIASMARTMEDIA" value="97" />
      <member name="SIID_MEDIACOMPACTFLASH" value="98" />
      <member name="SIID_DEVICECELLPHONE" value="99" />
      <member name="SIID_DEVICECAMERA" value="100" />
      <member name="SIID_DEVICEVIDEOCAMERA" value="101" />
      <member name="SIID_DEVICEAUDIOPLAYER" value="102" />
      <member name="SIID_NETWORKCONNECT" value="103" />
      <member name="SIID_INTERNET" value="104" />
      <member name="SIID_ZIPFILE" value="105" />
      <member name="SIID_SETTINGS" value="106" />
      <member name="SIID_DRIVEHDDVD" value="132" />
      <member name="SIID_DRIVEBD" value="133" />
      <member name="SIID_MEDIAHDDVDROM" value="134" />
      <member name="SIID_MEDIAHDDVDR" value="135" />
      <member name="SIID_MEDIAHDDVDRAM" value="136" />
      <member name="SIID_MEDIABDROM" value="137" />
      <member name="SIID_MEDIABDR" value="138" />
      <member name="SIID_MEDIABDRE" value="139" />
      <member name="SIID_CLUSTEREDDRIVE" value="140" />
      <member name="SIID_MAX_ICONS" value="174" />
    </enum>
    <typedef name="SHSTOCKICONID">
      <enum name="SHSTOCKICONID" />
    </typedef>
    <struct name="_OPEN_PRINTER_PROPS_INFOA">
      <field offset="0" name="dwSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pszSheetName">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="uSheetIndex">
        <type>UINT</type>
      </field>
      <field offset="12" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="16" name="bModal">
        <type>BOOL</type>
      </field>
    </struct>
    <typedef name="OPEN_PRINTER_PROPS_INFOA">
      <struct name="_OPEN_PRINTER_PROPS_INFOA" />
    </typedef>
    <typedef name="POPEN_PRINTER_PROPS_INFOA">
      <ptr>
        <struct name="_OPEN_PRINTER_PROPS_INFOA" />
      </ptr>
    </typedef>
    <struct name="_OPEN_PRINTER_PROPS_INFOW">
      <field offset="0" name="dwSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pszSheetName">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="uSheetIndex">
        <type>UINT</type>
      </field>
      <field offset="12" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="16" name="bModal">
        <type>BOOL</type>
      </field>
    </struct>
    <typedef name="OPEN_PRINTER_PROPS_INFOW">
      <struct name="_OPEN_PRINTER_PROPS_INFOW" />
    </typedef>
    <typedef name="POPEN_PRINTER_PROPS_INFOW">
      <ptr>
        <struct name="_OPEN_PRINTER_PROPS_INFOW" />
      </ptr>
    </typedef>
    <typedef name="OPEN_PRINTER_PROPS_INFO">
      <type>OPEN_PRINTER_PROPS_INFOA</type>
    </typedef>
    <typedef name="POPEN_PRINTER_PROPS_INFO">
      <type>POPEN_PRINTER_PROPS_INFOA</type>
    </typedef>
    <typedef name="PFNCANSHAREFOLDERW">
      <ptr>
        <fn>
          <return>
            <type>HRESULT</type>
            <reg>eax</reg>
          </return>
          <arg name="pszPath">
            <type>LPCWSTR</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFNSHOWSHAREFOLDERUIW">
      <ptr>
        <fn>
          <return>
            <type>HRESULT</type>
            <reg>eax</reg>
          </return>
          <arg name="hwndParent">
            <type>HWND</type>
            <stack size="4" />
          </arg>
          <arg name="pszPath">
            <type>LPCWSTR</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="tagNC_ADDRESS">
      <field offset="0" name="pAddrInfo">
        <ptr>
          <struct name="NET_ADDRESS_INFO_" />
        </ptr>
      </field>
      <field offset="4" name="PortNumber">
        <type>USHORT</type>
      </field>
      <field offset="6" name="PrefixLength">
        <type>BYTE</type>
      </field>
    </struct>
    <typedef name="NC_ADDRESS">
      <struct name="tagNC_ADDRESS" />
    </typedef>
    <typedef name="PNC_ADDRESS">
      <ptr>
        <struct name="tagNC_ADDRESS" />
      </ptr>
    </typedef>
    <struct name="_PERF_DATA_BLOCK">
      <field offset="0" name="Signature">
        <arr length="4">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="8" name="LittleEndian">
        <type>DWORD</type>
      </field>
      <field offset="12" name="Version">
        <type>DWORD</type>
      </field>
      <field offset="16" name="Revision">
        <type>DWORD</type>
      </field>
      <field offset="20" name="TotalByteLength">
        <type>DWORD</type>
      </field>
      <field offset="24" name="HeaderLength">
        <type>DWORD</type>
      </field>
      <field offset="28" name="NumObjectTypes">
        <type>DWORD</type>
      </field>
      <field offset="32" name="DefaultObject">
        <type>LONG</type>
      </field>
      <field offset="40" name="SystemTime">
        <type>SYSTEMTIME</type>
      </field>
      <field offset="56" name="PerfTime">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="64" name="PerfFreq">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="72" name="PerfTime100nSec">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="80" name="SystemNameLength">
        <type>DWORD</type>
      </field>
      <field offset="84" name="SystemNameOffset">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PERF_DATA_BLOCK">
      <struct name="_PERF_DATA_BLOCK" />
    </typedef>
    <typedef name="PPERF_DATA_BLOCK">
      <ptr>
        <struct name="_PERF_DATA_BLOCK" />
      </ptr>
    </typedef>
    <struct name="_PERF_OBJECT_TYPE">
      <field offset="0" name="TotalByteLength">
        <type>DWORD</type>
      </field>
      <field offset="4" name="DefinitionLength">
        <type>DWORD</type>
      </field>
      <field offset="8" name="HeaderLength">
        <type>DWORD</type>
      </field>
      <field offset="12" name="ObjectNameTitleIndex">
        <type>DWORD</type>
      </field>
      <field offset="16" name="ObjectNameTitle">
        <type>LPWSTR</type>
      </field>
      <field offset="20" name="ObjectHelpTitleIndex">
        <type>DWORD</type>
      </field>
      <field offset="24" name="ObjectHelpTitle">
        <type>LPWSTR</type>
      </field>
      <field offset="28" name="DetailLevel">
        <type>DWORD</type>
      </field>
      <field offset="32" name="NumCounters">
        <type>DWORD</type>
      </field>
      <field offset="36" name="DefaultCounter">
        <type>LONG</type>
      </field>
      <field offset="40" name="NumInstances">
        <type>LONG</type>
      </field>
      <field offset="44" name="CodePage">
        <type>DWORD</type>
      </field>
      <field offset="48" name="PerfTime">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="56" name="PerfFreq">
        <type>LARGE_INTEGER</type>
      </field>
    </struct>
    <typedef name="PERF_OBJECT_TYPE">
      <struct name="_PERF_OBJECT_TYPE" />
    </typedef>
    <typedef name="PPERF_OBJECT_TYPE">
      <ptr>
        <struct name="_PERF_OBJECT_TYPE" />
      </ptr>
    </typedef>
    <struct name="_PERF_COUNTER_DEFINITION">
      <field offset="0" name="ByteLength">
        <type>DWORD</type>
      </field>
      <field offset="4" name="CounterNameTitleIndex">
        <type>DWORD</type>
      </field>
      <field offset="8" name="CounterNameTitle">
        <type>LPWSTR</type>
      </field>
      <field offset="12" name="CounterHelpTitleIndex">
        <type>DWORD</type>
      </field>
      <field offset="16" name="CounterHelpTitle">
        <type>LPWSTR</type>
      </field>
      <field offset="20" name="DefaultScale">
        <type>LONG</type>
      </field>
      <field offset="24" name="DetailLevel">
        <type>DWORD</type>
      </field>
      <field offset="28" name="CounterType">
        <type>DWORD</type>
      </field>
      <field offset="32" name="CounterSize">
        <type>DWORD</type>
      </field>
      <field offset="36" name="CounterOffset">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PERF_COUNTER_DEFINITION">
      <struct name="_PERF_COUNTER_DEFINITION" />
    </typedef>
    <typedef name="PPERF_COUNTER_DEFINITION">
      <ptr>
        <struct name="_PERF_COUNTER_DEFINITION" />
      </ptr>
    </typedef>
    <struct name="_PERF_INSTANCE_DEFINITION">
      <field offset="0" name="ByteLength">
        <type>DWORD</type>
      </field>
      <field offset="4" name="ParentObjectTitleIndex">
        <type>DWORD</type>
      </field>
      <field offset="8" name="ParentObjectInstance">
        <type>DWORD</type>
      </field>
      <field offset="12" name="UniqueID">
        <type>LONG</type>
      </field>
      <field offset="16" name="NameOffset">
        <type>DWORD</type>
      </field>
      <field offset="20" name="NameLength">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PERF_INSTANCE_DEFINITION">
      <struct name="_PERF_INSTANCE_DEFINITION" />
    </typedef>
    <typedef name="PPERF_INSTANCE_DEFINITION">
      <ptr>
        <struct name="_PERF_INSTANCE_DEFINITION" />
      </ptr>
    </typedef>
    <struct name="_PERF_COUNTER_BLOCK">
      <field offset="0" name="ByteLength">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PERF_COUNTER_BLOCK">
      <struct name="_PERF_COUNTER_BLOCK" />
    </typedef>
    <typedef name="PPERF_COUNTER_BLOCK">
      <ptr>
        <struct name="_PERF_COUNTER_BLOCK" />
      </ptr>
    </typedef>
    <typedef name="PM_OPEN_PROC">
      <fn>
        <return>
          <type>DWORD</type>
          <reg>eax</reg>
        </return>
        <arg>
          <type>LPWSTR</type>
          <stack size="4" />
        </arg>
      </fn>
    </typedef>
    <typedef name="PM_COLLECT_PROC">
      <fn>
        <return>
          <type>DWORD</type>
          <reg>eax</reg>
        </return>
        <arg>
          <type>LPWSTR</type>
          <stack size="4" />
        </arg>
        <arg>
          <ptr>
            <type>LPVOID</type>
          </ptr>
          <stack size="4" />
        </arg>
        <arg>
          <type>LPDWORD</type>
          <stack size="4" />
        </arg>
        <arg>
          <type>LPDWORD</type>
          <stack size="4" />
        </arg>
      </fn>
    </typedef>
    <typedef name="PM_CLOSE_PROC">
      <fn>
        <return>
          <type>DWORD</type>
          <reg>eax</reg>
        </return>
      </fn>
    </typedef>
    <typedef name="PM_QUERY_PROC">
      <fn>
        <return>
          <type>DWORD</type>
          <reg>eax</reg>
        </return>
        <arg>
          <type>LPDWORD</type>
          <stack size="4" />
        </arg>
        <arg>
          <ptr>
            <type>LPVOID</type>
          </ptr>
          <stack size="4" />
        </arg>
        <arg>
          <type>LPDWORD</type>
          <stack size="4" />
        </arg>
        <arg>
          <type>LPDWORD</type>
          <stack size="4" />
        </arg>
      </fn>
    </typedef>
    <typedef name="u_char">
      <prim domain="UnsignedInt" size="1" />
    </typedef>
    <typedef name="u_short">
      <prim domain="UnsignedInt" size="2" />
    </typedef>
    <typedef name="u_int">
      <prim domain="UnsignedInt" size="4" />
    </typedef>
    <typedef name="u_long">
      <prim domain="UnsignedInt" size="4" />
    </typedef>
    <typedef name="SOCKET">
      <type>UINT_PTR</type>
    </typedef>
    <struct name="fd_set">
      <field offset="0" name="fd_count">
        <type>u_int</type>
      </field>
      <field offset="8" name="fd_array">
        <arr length="64">
          <type>SOCKET</type>
        </arr>
      </field>
    </struct>
    <typedef name="fd_set">
      <struct name="fd_set" />
    </typedef>
    <struct name="timeval">
      <field offset="0" name="tv_sec">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="4" name="tv_usec">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <struct name="hostent">
      <field offset="0" name="h_name">
        <ptr>
          <prim domain="Character" size="1" />
        </ptr>
      </field>
      <field offset="4" name="h_aliases">
        <ptr>
          <ptr>
            <prim domain="Character" size="1" />
          </ptr>
        </ptr>
      </field>
      <field offset="8" name="h_addrtype">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="10" name="h_length">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="12" name="h_addr_list">
        <ptr>
          <ptr>
            <prim domain="Character" size="1" />
          </ptr>
        </ptr>
      </field>
    </struct>
    <struct name="netent">
      <field offset="0" name="n_name">
        <ptr>
          <prim domain="Character" size="1" />
        </ptr>
      </field>
      <field offset="4" name="n_aliases">
        <ptr>
          <ptr>
            <prim domain="Character" size="1" />
          </ptr>
        </ptr>
      </field>
      <field offset="8" name="n_addrtype">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="12" name="n_net">
        <type>u_long</type>
      </field>
    </struct>
    <struct name="servent">
      <field offset="0" name="s_name">
        <ptr>
          <prim domain="Character" size="1" />
        </ptr>
      </field>
      <field offset="4" name="s_aliases">
        <ptr>
          <ptr>
            <prim domain="Character" size="1" />
          </ptr>
        </ptr>
      </field>
      <field offset="8" name="s_port">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="12" name="s_proto">
        <ptr>
          <prim domain="Character" size="1" />
        </ptr>
      </field>
    </struct>
    <struct name="protoent">
      <field offset="0" name="p_name">
        <ptr>
          <prim domain="Character" size="1" />
        </ptr>
      </field>
      <field offset="4" name="p_aliases">
        <ptr>
          <ptr>
            <prim domain="Character" size="1" />
          </ptr>
        </ptr>
      </field>
      <field offset="8" name="p_proto">
        <prim domain="SignedInt" size="2" />
      </field>
    </struct>
    <struct name="struct_106">
      <field offset="0" name="s_b1">
        <type>UCHAR</type>
      </field>
      <field offset="1" name="s_b2">
        <type>UCHAR</type>
      </field>
      <field offset="2" name="s_b3">
        <type>UCHAR</type>
      </field>
      <field offset="3" name="s_b4">
        <type>UCHAR</type>
      </field>
    </struct>
    <struct name="struct_107">
      <field offset="0" name="s_w1">
        <type>USHORT</type>
      </field>
      <field offset="2" name="s_w2">
        <type>USHORT</type>
      </field>
    </struct>
    <struct name="in_addr">
      <field offset="0" name="S_un">
        <union>
          <alt name="S_un_b">
            <struct name="struct_106" />
          </alt>
          <alt name="S_un_w">
            <struct name="struct_107" />
          </alt>
          <alt name="S_addr">
            <type>ULONG</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="IN_ADDR">
      <struct name="in_addr" />
    </typedef>
    <typedef name="PIN_ADDR">
      <ptr>
        <struct name="in_addr" />
      </ptr>
    </typedef>
    <typedef name="LPIN_ADDR">
      <ptr>
        <struct name="in_addr" />
      </ptr>
    </typedef>
    <struct name="sockaddr_in">
      <field offset="0" name="sin_family">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="2" name="sin_port">
        <type>u_short</type>
      </field>
      <field offset="4" name="sin_addr">
        <struct name="in_addr" />
      </field>
      <field offset="8" name="sin_zero">
        <arr length="8">
          <prim domain="Character" size="1" />
        </arr>
      </field>
    </struct>
    <struct name="WSAData">
      <field offset="0" name="wVersion">
        <type>WORD</type>
      </field>
      <field offset="2" name="wHighVersion">
        <type>WORD</type>
      </field>
      <field offset="8" name="szDescription">
        <arr length="257">
          <prim domain="Character" size="1" />
        </arr>
      </field>
      <field offset="272" name="szSystemStatus">
        <arr length="129">
          <prim domain="Character" size="1" />
        </arr>
      </field>
      <field offset="402" name="iMaxSockets">
        <prim domain="UnsignedInt" size="2" />
      </field>
      <field offset="404" name="iMaxUdpDg">
        <prim domain="UnsignedInt" size="2" />
      </field>
      <field offset="408" name="lpVendorInfo">
        <ptr>
          <prim domain="Character" size="1" />
        </ptr>
      </field>
    </struct>
    <typedef name="WSADATA">
      <struct name="WSAData" />
    </typedef>
    <typedef name="LPWSADATA">
      <ptr>
        <type>WSADATA</type>
      </ptr>
    </typedef>
    <struct name="ip_mreq">
      <field offset="0" name="imr_multiaddr">
        <struct name="in_addr" />
      </field>
      <field offset="4" name="imr_interface">
        <struct name="in_addr" />
      </field>
    </struct>
    <struct name="sockaddr">
      <field offset="0" name="sa_family">
        <type>u_short</type>
      </field>
      <field offset="8" name="sa_data">
        <arr length="14">
          <prim domain="Character" size="1" />
        </arr>
      </field>
    </struct>
    <struct name="sockproto">
      <field offset="0" name="sp_family">
        <type>u_short</type>
      </field>
      <field offset="2" name="sp_protocol">
        <type>u_short</type>
      </field>
    </struct>
    <struct name="linger">
      <field offset="0" name="l_onoff">
        <type>u_short</type>
      </field>
      <field offset="2" name="l_linger">
        <type>u_short</type>
      </field>
    </struct>
    <struct name="_TRANSMIT_FILE_BUFFERS">
      <field offset="0" name="Head">
        <type>PVOID</type>
      </field>
      <field offset="4" name="HeadLength">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Tail">
        <type>PVOID</type>
      </field>
      <field offset="12" name="TailLength">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="TRANSMIT_FILE_BUFFERS">
      <struct name="_TRANSMIT_FILE_BUFFERS" />
    </typedef>
    <typedef name="PTRANSMIT_FILE_BUFFERS">
      <ptr>
        <struct name="_TRANSMIT_FILE_BUFFERS" />
      </ptr>
    </typedef>
    <typedef name="LPTRANSMIT_FILE_BUFFERS">
      <ptr>
        <struct name="_TRANSMIT_FILE_BUFFERS" />
      </ptr>
    </typedef>
    <typedef name="SOCKADDR">
      <struct name="sockaddr" />
    </typedef>
    <typedef name="PSOCKADDR">
      <ptr>
        <struct name="sockaddr" />
      </ptr>
    </typedef>
    <typedef name="LPSOCKADDR">
      <ptr>
        <struct name="sockaddr" />
      </ptr>
    </typedef>
    <typedef name="SOCKADDR_IN">
      <struct name="sockaddr_in" />
    </typedef>
    <typedef name="PSOCKADDR_IN">
      <ptr>
        <struct name="sockaddr_in" />
      </ptr>
    </typedef>
    <typedef name="LPSOCKADDR_IN">
      <ptr>
        <struct name="sockaddr_in" />
      </ptr>
    </typedef>
    <typedef name="LINGER">
      <struct name="linger" />
    </typedef>
    <typedef name="PLINGER">
      <ptr>
        <struct name="linger" />
      </ptr>
    </typedef>
    <typedef name="LPLINGER">
      <ptr>
        <struct name="linger" />
      </ptr>
    </typedef>
    <typedef name="FD_SET">
      <struct name="fd_set" />
    </typedef>
    <typedef name="PFD_SET">
      <ptr>
        <struct name="fd_set" />
      </ptr>
    </typedef>
    <typedef name="LPFD_SET">
      <ptr>
        <struct name="fd_set" />
      </ptr>
    </typedef>
    <typedef name="HOSTENT">
      <struct name="hostent" />
    </typedef>
    <typedef name="PHOSTENT">
      <ptr>
        <struct name="hostent" />
      </ptr>
    </typedef>
    <typedef name="LPHOSTENT">
      <ptr>
        <struct name="hostent" />
      </ptr>
    </typedef>
    <typedef name="SERVENT">
      <struct name="servent" />
    </typedef>
    <typedef name="PSERVENT">
      <ptr>
        <struct name="servent" />
      </ptr>
    </typedef>
    <typedef name="LPSERVENT">
      <ptr>
        <struct name="servent" />
      </ptr>
    </typedef>
    <typedef name="PROTOENT">
      <struct name="protoent" />
    </typedef>
    <typedef name="PPROTOENT">
      <ptr>
        <struct name="protoent" />
      </ptr>
    </typedef>
    <typedef name="LPPROTOENT">
      <ptr>
        <struct name="protoent" />
      </ptr>
    </typedef>
    <typedef name="TIMEVAL">
      <struct name="timeval" />
    </typedef>
    <typedef name="PTIMEVAL">
      <ptr>
        <struct name="timeval" />
      </ptr>
    </typedef>
    <typedef name="LPTIMEVAL">
      <ptr>
        <struct name="timeval" />
      </ptr>
    </typedef>
    <typedef name="ALG_ID">
      <prim domain="UnsignedInt" size="4" />
    </typedef>
    <typedef name="HCRYPTPROV">
      <type>ULONG_PTR</type>
    </typedef>
    <typedef name="HCRYPTKEY">
      <type>ULONG_PTR</type>
    </typedef>
    <typedef name="HCRYPTHASH">
      <type>ULONG_PTR</type>
    </typedef>
    <struct name="_CMS_KEY_INFO">
      <field offset="0" name="dwVersion">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Algid">
        <type>ALG_ID</type>
      </field>
      <field offset="8" name="pbOID">
        <ptr>
          <type>BYTE</type>
        </ptr>
      </field>
      <field offset="12" name="cbOID">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CMS_KEY_INFO">
      <struct name="_CMS_KEY_INFO" />
    </typedef>
    <typedef name="PCMS_KEY_INFO">
      <ptr>
        <struct name="_CMS_KEY_INFO" />
      </ptr>
    </typedef>
    <struct name="_HMAC_Info">
      <field offset="0" name="HashAlgid">
        <type>ALG_ID</type>
      </field>
      <field offset="4" name="pbInnerString">
        <ptr>
          <type>BYTE</type>
        </ptr>
      </field>
      <field offset="8" name="cbInnerString">
        <type>DWORD</type>
      </field>
      <field offset="12" name="pbOuterString">
        <ptr>
          <type>BYTE</type>
        </ptr>
      </field>
      <field offset="16" name="cbOuterString">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="HMAC_INFO">
      <struct name="_HMAC_Info" />
    </typedef>
    <typedef name="PHMAC_INFO">
      <ptr>
        <struct name="_HMAC_Info" />
      </ptr>
    </typedef>
    <struct name="_SCHANNEL_ALG">
      <field offset="0" name="dwUse">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Algid">
        <type>ALG_ID</type>
      </field>
      <field offset="8" name="cBits">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="16" name="dwReserved">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="SCHANNEL_ALG">
      <struct name="_SCHANNEL_ALG" />
    </typedef>
    <typedef name="PSCHANNEL_ALG">
      <ptr>
        <struct name="_SCHANNEL_ALG" />
      </ptr>
    </typedef>
    <struct name="_PROV_ENUMALGS">
      <field offset="0" name="aiAlgid">
        <type>ALG_ID</type>
      </field>
      <field offset="4" name="dwBitLen">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwNameLen">
        <type>DWORD</type>
      </field>
      <field offset="16" name="szName">
        <arr length="20">
          <type>CHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="PROV_ENUMALGS">
      <struct name="_PROV_ENUMALGS" />
    </typedef>
    <struct name="_PROV_ENUMALGS_EX">
      <field offset="0" name="aiAlgid">
        <type>ALG_ID</type>
      </field>
      <field offset="4" name="dwDefaultLen">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwMinLen">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwMaxLen">
        <type>DWORD</type>
      </field>
      <field offset="16" name="dwProtocols">
        <type>DWORD</type>
      </field>
      <field offset="20" name="dwNameLen">
        <type>DWORD</type>
      </field>
      <field offset="24" name="szName">
        <arr length="20">
          <type>CHAR</type>
        </arr>
      </field>
      <field offset="44" name="dwLongNameLen">
        <type>DWORD</type>
      </field>
      <field offset="48" name="szLongName">
        <arr length="40">
          <type>CHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="PROV_ENUMALGS_EX">
      <struct name="_PROV_ENUMALGS_EX" />
    </typedef>
    <struct name="_PUBLICKEYSTRUC">
      <field offset="0" name="bType">
        <type>BYTE</type>
      </field>
      <field offset="1" name="bVersion">
        <type>BYTE</type>
      </field>
      <field offset="2" name="reserved">
        <type>WORD</type>
      </field>
      <field offset="4" name="aiKeyAlg">
        <type>ALG_ID</type>
      </field>
    </struct>
    <typedef name="BLOBHEADER">
      <struct name="_PUBLICKEYSTRUC" />
    </typedef>
    <typedef name="PUBLICKEYSTRUC">
      <struct name="_PUBLICKEYSTRUC" />
    </typedef>
    <struct name="_RSAPUBKEY">
      <field offset="0" name="magic">
        <type>DWORD</type>
      </field>
      <field offset="4" name="bitlen">
        <type>DWORD</type>
      </field>
      <field offset="8" name="pubexp">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="RSAPUBKEY">
      <struct name="_RSAPUBKEY" />
    </typedef>
    <struct name="_PUBKEY">
      <field offset="0" name="magic">
        <type>DWORD</type>
      </field>
      <field offset="4" name="bitlen">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="DHPUBKEY">
      <struct name="_PUBKEY" />
    </typedef>
    <typedef name="DSSPUBKEY">
      <struct name="_PUBKEY" />
    </typedef>
    <typedef name="KEAPUBKEY">
      <struct name="_PUBKEY" />
    </typedef>
    <typedef name="TEKPUBKEY">
      <struct name="_PUBKEY" />
    </typedef>
    <struct name="_DSSSEED">
      <field offset="0" name="counter">
        <type>DWORD</type>
      </field>
      <field offset="8" name="seed">
        <arr length="20">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="DSSSEED">
      <struct name="_DSSSEED" />
    </typedef>
    <struct name="_PUBKEYVER3">
      <field offset="0" name="magic">
        <type>DWORD</type>
      </field>
      <field offset="4" name="bitlenP">
        <type>DWORD</type>
      </field>
      <field offset="8" name="bitlenQ">
        <type>DWORD</type>
      </field>
      <field offset="12" name="bitlenJ">
        <type>DWORD</type>
      </field>
      <field offset="16" name="DSSSeed">
        <type>DSSSEED</type>
      </field>
    </struct>
    <typedef name="DHPUBKEY_VER3">
      <struct name="_PUBKEYVER3" />
    </typedef>
    <typedef name="DSSPUBKEY_VER3">
      <struct name="_PUBKEYVER3" />
    </typedef>
    <struct name="_PRIVKEYVER3">
      <field offset="0" name="magic">
        <type>DWORD</type>
      </field>
      <field offset="4" name="bitlenP">
        <type>DWORD</type>
      </field>
      <field offset="8" name="bitlenQ">
        <type>DWORD</type>
      </field>
      <field offset="12" name="bitlenJ">
        <type>DWORD</type>
      </field>
      <field offset="16" name="bitlenX">
        <type>DWORD</type>
      </field>
      <field offset="24" name="DSSSeed">
        <type>DSSSEED</type>
      </field>
    </struct>
    <typedef name="DHPRIVKEY_VER3">
      <struct name="_PRIVKEYVER3" />
    </typedef>
    <typedef name="DSSPRIVKEY_VER3">
      <struct name="_PRIVKEYVER3" />
    </typedef>
    <struct name="_KEY_TYPE_SUBTYPE">
      <field offset="0" name="dwKeySpec">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Type">
        <type>GUID</type>
      </field>
      <field offset="24" name="Subtype">
        <type>GUID</type>
      </field>
    </struct>
    <typedef name="KEY_TYPE_SUBTYPE">
      <struct name="_KEY_TYPE_SUBTYPE" />
    </typedef>
    <typedef name="PKEY_TYPE_SUBTYPE">
      <ptr>
        <struct name="_KEY_TYPE_SUBTYPE" />
      </ptr>
    </typedef>
    <struct name="_CERT_FORTEZZA_DATA_PROP">
      <field offset="0" name="SerialNumber">
        <arr length="8">
          <prim domain="UnsignedInt" size="1" />
        </arr>
      </field>
      <field offset="8" name="CertIndex">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="CertLabel">
        <arr length="36">
          <prim domain="UnsignedInt" size="1" />
        </arr>
      </field>
    </struct>
    <typedef name="CERT_FORTEZZA_DATA_PROP">
      <struct name="_CERT_FORTEZZA_DATA_PROP" />
    </typedef>
    <struct name="_CRYPT_RC4_KEY_STATE">
      <field offset="0" name="Key">
        <arr length="16">
          <prim domain="UnsignedInt" size="1" />
        </arr>
      </field>
      <field offset="16" name="SBox">
        <arr length="256">
          <prim domain="UnsignedInt" size="1" />
        </arr>
      </field>
      <field offset="272" name="i">
        <prim domain="UnsignedInt" size="1" />
      </field>
      <field offset="273" name="j">
        <prim domain="UnsignedInt" size="1" />
      </field>
    </struct>
    <typedef name="CRYPT_RC4_KEY_STATE">
      <struct name="_CRYPT_RC4_KEY_STATE" />
    </typedef>
    <typedef name="PCRYPT_RC4_KEY_STATE">
      <ptr>
        <struct name="_CRYPT_RC4_KEY_STATE" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_DES_KEY_STATE">
      <field offset="0" name="Key">
        <arr length="8">
          <prim domain="UnsignedInt" size="1" />
        </arr>
      </field>
      <field offset="8" name="IV">
        <arr length="8">
          <prim domain="UnsignedInt" size="1" />
        </arr>
      </field>
      <field offset="16" name="Feedback">
        <arr length="8">
          <prim domain="UnsignedInt" size="1" />
        </arr>
      </field>
    </struct>
    <typedef name="CRYPT_DES_KEY_STATE">
      <struct name="_CRYPT_DES_KEY_STATE" />
    </typedef>
    <typedef name="PCRYPT_DES_KEY_STATE">
      <ptr>
        <struct name="_CRYPT_DES_KEY_STATE" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_3DES_KEY_STATE">
      <field offset="0" name="Key">
        <arr length="24">
          <prim domain="UnsignedInt" size="1" />
        </arr>
      </field>
      <field offset="24" name="IV">
        <arr length="8">
          <prim domain="UnsignedInt" size="1" />
        </arr>
      </field>
      <field offset="32" name="Feedback">
        <arr length="8">
          <prim domain="UnsignedInt" size="1" />
        </arr>
      </field>
    </struct>
    <typedef name="CRYPT_3DES_KEY_STATE">
      <struct name="_CRYPT_3DES_KEY_STATE" />
    </typedef>
    <typedef name="PCRYPT_3DES_KEY_STATE">
      <ptr>
        <struct name="_CRYPT_3DES_KEY_STATE" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_AES_128_KEY_STATE">
      <field offset="0" name="Key">
        <arr length="16">
          <prim domain="UnsignedInt" size="1" />
        </arr>
      </field>
      <field offset="16" name="IV">
        <arr length="16">
          <prim domain="UnsignedInt" size="1" />
        </arr>
      </field>
      <field offset="32" name="EncryptionState">
        <arr length="11">
          <arr length="16">
            <prim domain="UnsignedInt" size="1" />
          </arr>
        </arr>
      </field>
      <field offset="208" name="DecryptionState">
        <arr length="11">
          <arr length="16">
            <prim domain="UnsignedInt" size="1" />
          </arr>
        </arr>
      </field>
      <field offset="384" name="Feedback">
        <arr length="16">
          <prim domain="UnsignedInt" size="1" />
        </arr>
      </field>
    </struct>
    <typedef name="CRYPT_AES_128_KEY_STATE">
      <struct name="_CRYPT_AES_128_KEY_STATE" />
    </typedef>
    <typedef name="PCRYPT_AES_128_KEY_STATE">
      <ptr>
        <struct name="_CRYPT_AES_128_KEY_STATE" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_AES_256_KEY_STATE">
      <field offset="0" name="Key">
        <arr length="32">
          <prim domain="UnsignedInt" size="1" />
        </arr>
      </field>
      <field offset="32" name="IV">
        <arr length="16">
          <prim domain="UnsignedInt" size="1" />
        </arr>
      </field>
      <field offset="48" name="EncryptionState">
        <arr length="15">
          <arr length="16">
            <prim domain="UnsignedInt" size="1" />
          </arr>
        </arr>
      </field>
      <field offset="288" name="DecryptionState">
        <arr length="15">
          <arr length="16">
            <prim domain="UnsignedInt" size="1" />
          </arr>
        </arr>
      </field>
      <field offset="528" name="Feedback">
        <arr length="16">
          <prim domain="UnsignedInt" size="1" />
        </arr>
      </field>
    </struct>
    <typedef name="CRYPT_AES_256_KEY_STATE">
      <struct name="_CRYPT_AES_256_KEY_STATE" />
    </typedef>
    <typedef name="PCRYPT_AES_256_KEY_STATE">
      <ptr>
        <struct name="_CRYPT_AES_256_KEY_STATE" />
      </ptr>
    </typedef>
    <struct name="_CRYPTOAPI_BLOB">
      <field offset="0" name="cbData">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pbData">
        <ptr>
          <type>BYTE</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CRYPT_INTEGER_BLOB">
      <struct name="_CRYPTOAPI_BLOB" />
    </typedef>
    <typedef name="PCRYPT_INTEGER_BLOB">
      <ptr>
        <struct name="_CRYPTOAPI_BLOB" />
      </ptr>
    </typedef>
    <typedef name="CRYPT_UINT_BLOB">
      <struct name="_CRYPTOAPI_BLOB" />
    </typedef>
    <typedef name="PCRYPT_UINT_BLOB">
      <ptr>
        <struct name="_CRYPTOAPI_BLOB" />
      </ptr>
    </typedef>
    <typedef name="CRYPT_OBJID_BLOB">
      <struct name="_CRYPTOAPI_BLOB" />
    </typedef>
    <typedef name="PCRYPT_OBJID_BLOB">
      <ptr>
        <struct name="_CRYPTOAPI_BLOB" />
      </ptr>
    </typedef>
    <typedef name="CERT_NAME_BLOB">
      <struct name="_CRYPTOAPI_BLOB" />
    </typedef>
    <typedef name="PCERT_NAME_BLOB">
      <ptr>
        <struct name="_CRYPTOAPI_BLOB" />
      </ptr>
    </typedef>
    <typedef name="CERT_RDN_VALUE_BLOB">
      <struct name="_CRYPTOAPI_BLOB" />
    </typedef>
    <typedef name="PCERT_RDN_VALUE_BLOB">
      <ptr>
        <struct name="_CRYPTOAPI_BLOB" />
      </ptr>
    </typedef>
    <typedef name="CERT_BLOB">
      <struct name="_CRYPTOAPI_BLOB" />
    </typedef>
    <typedef name="PCERT_BLOB">
      <ptr>
        <struct name="_CRYPTOAPI_BLOB" />
      </ptr>
    </typedef>
    <typedef name="CRL_BLOB">
      <struct name="_CRYPTOAPI_BLOB" />
    </typedef>
    <typedef name="PCRL_BLOB">
      <ptr>
        <struct name="_CRYPTOAPI_BLOB" />
      </ptr>
    </typedef>
    <typedef name="DATA_BLOB">
      <struct name="_CRYPTOAPI_BLOB" />
    </typedef>
    <typedef name="PDATA_BLOB">
      <ptr>
        <struct name="_CRYPTOAPI_BLOB" />
      </ptr>
    </typedef>
    <typedef name="CRYPT_DATA_BLOB">
      <struct name="_CRYPTOAPI_BLOB" />
    </typedef>
    <typedef name="PCRYPT_DATA_BLOB">
      <ptr>
        <struct name="_CRYPTOAPI_BLOB" />
      </ptr>
    </typedef>
    <typedef name="CRYPT_HASH_BLOB">
      <struct name="_CRYPTOAPI_BLOB" />
    </typedef>
    <typedef name="PCRYPT_HASH_BLOB">
      <ptr>
        <struct name="_CRYPTOAPI_BLOB" />
      </ptr>
    </typedef>
    <typedef name="CRYPT_DIGEST_BLOB">
      <struct name="_CRYPTOAPI_BLOB" />
    </typedef>
    <typedef name="PCRYPT_DIGEST_BLOB">
      <ptr>
        <struct name="_CRYPTOAPI_BLOB" />
      </ptr>
    </typedef>
    <typedef name="CRYPT_DER_BLOB">
      <struct name="_CRYPTOAPI_BLOB" />
    </typedef>
    <typedef name="PCRYPT_DER_BLOB">
      <ptr>
        <struct name="_CRYPTOAPI_BLOB" />
      </ptr>
    </typedef>
    <typedef name="CRYPT_ATTR_BLOB">
      <struct name="_CRYPTOAPI_BLOB" />
    </typedef>
    <typedef name="PCRYPT_ATTR_BLOB">
      <ptr>
        <struct name="_CRYPTOAPI_BLOB" />
      </ptr>
    </typedef>
    <struct name="_CMS_DH_KEY_INFO">
      <field offset="0" name="dwVersion">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Algid">
        <type>ALG_ID</type>
      </field>
      <field offset="8" name="pszContentEncObjId">
        <type>LPSTR</type>
      </field>
      <field offset="16" name="PubInfo">
        <type>CRYPT_DATA_BLOB</type>
      </field>
      <field offset="24" name="pReserved">
        <ptr>
          <void />
        </ptr>
      </field>
    </struct>
    <typedef name="CMS_DH_KEY_INFO">
      <struct name="_CMS_DH_KEY_INFO" />
    </typedef>
    <typedef name="PCMS_DH_KEY_INFO">
      <ptr>
        <struct name="_CMS_DH_KEY_INFO" />
      </ptr>
    </typedef>
    <typedef name="NTSTATUS">
      <type>LONG</type>
    </typedef>
    <typedef name="PNTSTATUS">
      <ptr>
        <type>NTSTATUS</type>
      </ptr>
    </typedef>
    <struct name="__BCRYPT_KEY_LENGTHS_STRUCT">
      <field offset="0" name="dwMinLength">
        <type>ULONG</type>
      </field>
      <field offset="4" name="dwMaxLength">
        <type>ULONG</type>
      </field>
      <field offset="8" name="dwIncrement">
        <type>ULONG</type>
      </field>
    </struct>
    <typedef name="BCRYPT_KEY_LENGTHS_STRUCT">
      <struct name="__BCRYPT_KEY_LENGTHS_STRUCT" />
    </typedef>
    <typedef name="BCRYPT_AUTH_TAG_LENGTHS_STRUCT">
      <type>BCRYPT_KEY_LENGTHS_STRUCT</type>
    </typedef>
    <struct name="_BCRYPT_OID">
      <field offset="0" name="cbOID">
        <type>ULONG</type>
      </field>
      <field offset="4" name="pbOID">
        <type>PUCHAR</type>
      </field>
    </struct>
    <typedef name="BCRYPT_OID">
      <struct name="_BCRYPT_OID" />
    </typedef>
    <struct name="_BCRYPT_OID_LIST">
      <field offset="0" name="dwOIDCount">
        <type>ULONG</type>
      </field>
      <field offset="4" name="pOIDs">
        <ptr>
          <type>BCRYPT_OID</type>
        </ptr>
      </field>
    </struct>
    <typedef name="BCRYPT_OID_LIST">
      <struct name="_BCRYPT_OID_LIST" />
    </typedef>
    <struct name="_BCRYPT_PKCS1_PADDING_INFO">
      <field offset="0" name="pszAlgId">
        <type>LPCWSTR</type>
      </field>
    </struct>
    <typedef name="BCRYPT_PKCS1_PADDING_INFO">
      <struct name="_BCRYPT_PKCS1_PADDING_INFO" />
    </typedef>
    <struct name="_BCRYPT_PSS_PADDING_INFO">
      <field offset="0" name="pszAlgId">
        <type>LPCWSTR</type>
      </field>
      <field offset="4" name="cbSalt">
        <type>ULONG</type>
      </field>
    </struct>
    <typedef name="BCRYPT_PSS_PADDING_INFO">
      <struct name="_BCRYPT_PSS_PADDING_INFO" />
    </typedef>
    <struct name="_BCRYPT_OAEP_PADDING_INFO">
      <field offset="0" name="pszAlgId">
        <type>LPCWSTR</type>
      </field>
      <field offset="4" name="pbLabel">
        <type>PUCHAR</type>
      </field>
      <field offset="8" name="cbLabel">
        <type>ULONG</type>
      </field>
    </struct>
    <typedef name="BCRYPT_OAEP_PADDING_INFO">
      <struct name="_BCRYPT_OAEP_PADDING_INFO" />
    </typedef>
    <struct name="_BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO">
      <field offset="0" name="cbSize">
        <type>ULONG</type>
      </field>
      <field offset="4" name="dwInfoVersion">
        <type>ULONG</type>
      </field>
      <field offset="8" name="pbNonce">
        <type>PUCHAR</type>
      </field>
      <field offset="12" name="cbNonce">
        <type>ULONG</type>
      </field>
      <field offset="16" name="pbAuthData">
        <type>PUCHAR</type>
      </field>
      <field offset="20" name="cbAuthData">
        <type>ULONG</type>
      </field>
      <field offset="24" name="pbTag">
        <type>PUCHAR</type>
      </field>
      <field offset="28" name="cbTag">
        <type>ULONG</type>
      </field>
      <field offset="32" name="pbMacContext">
        <type>PUCHAR</type>
      </field>
      <field offset="36" name="cbMacContext">
        <type>ULONG</type>
      </field>
      <field offset="40" name="cbAAD">
        <type>ULONG</type>
      </field>
      <field offset="48" name="cbData">
        <type>ULONGLONG</type>
      </field>
      <field offset="56" name="dwFlags">
        <type>ULONG</type>
      </field>
    </struct>
    <typedef name="BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO">
      <struct name="_BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO" />
    </typedef>
    <typedef name="PBCRYPT_AUTHENTICATED_CIPHER_MODE_INFO">
      <ptr>
        <struct name="_BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO" />
      </ptr>
    </typedef>
    <struct name="_BCryptBuffer">
      <field offset="0" name="cbBuffer">
        <type>ULONG</type>
      </field>
      <field offset="4" name="BufferType">
        <type>ULONG</type>
      </field>
      <field offset="8" name="pvBuffer">
        <type>PVOID</type>
      </field>
    </struct>
    <typedef name="BCryptBuffer">
      <struct name="_BCryptBuffer" />
    </typedef>
    <typedef name="PBCryptBuffer">
      <ptr>
        <struct name="_BCryptBuffer" />
      </ptr>
    </typedef>
    <struct name="_BCryptBufferDesc">
      <field offset="0" name="ulVersion">
        <type>ULONG</type>
      </field>
      <field offset="4" name="cBuffers">
        <type>ULONG</type>
      </field>
      <field offset="8" name="pBuffers">
        <type>PBCryptBuffer</type>
      </field>
    </struct>
    <typedef name="BCryptBufferDesc">
      <struct name="_BCryptBufferDesc" />
    </typedef>
    <typedef name="PBCryptBufferDesc">
      <ptr>
        <struct name="_BCryptBufferDesc" />
      </ptr>
    </typedef>
    <typedef name="BCRYPT_HANDLE">
      <type>PVOID</type>
    </typedef>
    <typedef name="BCRYPT_ALG_HANDLE">
      <type>PVOID</type>
    </typedef>
    <typedef name="BCRYPT_KEY_HANDLE">
      <type>PVOID</type>
    </typedef>
    <typedef name="BCRYPT_HASH_HANDLE">
      <type>PVOID</type>
    </typedef>
    <typedef name="BCRYPT_SECRET_HANDLE">
      <type>PVOID</type>
    </typedef>
    <struct name="_BCRYPT_KEY_BLOB">
      <field offset="0" name="Magic">
        <type>ULONG</type>
      </field>
    </struct>
    <typedef name="BCRYPT_KEY_BLOB">
      <struct name="_BCRYPT_KEY_BLOB" />
    </typedef>
    <struct name="_BCRYPT_RSAKEY_BLOB">
      <field offset="0" name="Magic">
        <type>ULONG</type>
      </field>
      <field offset="4" name="BitLength">
        <type>ULONG</type>
      </field>
      <field offset="8" name="cbPublicExp">
        <type>ULONG</type>
      </field>
      <field offset="12" name="cbModulus">
        <type>ULONG</type>
      </field>
      <field offset="16" name="cbPrime1">
        <type>ULONG</type>
      </field>
      <field offset="20" name="cbPrime2">
        <type>ULONG</type>
      </field>
    </struct>
    <typedef name="BCRYPT_RSAKEY_BLOB">
      <struct name="_BCRYPT_RSAKEY_BLOB" />
    </typedef>
    <struct name="_BCRYPT_ECCKEY_BLOB">
      <field offset="0" name="dwMagic">
        <type>ULONG</type>
      </field>
      <field offset="4" name="cbKey">
        <type>ULONG</type>
      </field>
    </struct>
    <typedef name="BCRYPT_ECCKEY_BLOB">
      <struct name="_BCRYPT_ECCKEY_BLOB" />
    </typedef>
    <typedef name="PBCRYPT_ECCKEY_BLOB">
      <ptr>
        <struct name="_BCRYPT_ECCKEY_BLOB" />
      </ptr>
    </typedef>
    <struct name="_BCRYPT_DH_KEY_BLOB">
      <field offset="0" name="dwMagic">
        <type>ULONG</type>
      </field>
      <field offset="4" name="cbKey">
        <type>ULONG</type>
      </field>
    </struct>
    <typedef name="BCRYPT_DH_KEY_BLOB">
      <struct name="_BCRYPT_DH_KEY_BLOB" />
    </typedef>
    <typedef name="PBCRYPT_DH_KEY_BLOB">
      <ptr>
        <struct name="_BCRYPT_DH_KEY_BLOB" />
      </ptr>
    </typedef>
    <struct name="_BCRYPT_DH_PARAMETER_HEADER">
      <field offset="0" name="cbLength">
        <type>ULONG</type>
      </field>
      <field offset="4" name="dwMagic">
        <type>ULONG</type>
      </field>
      <field offset="8" name="cbKeyLength">
        <type>ULONG</type>
      </field>
    </struct>
    <typedef name="BCRYPT_DH_PARAMETER_HEADER">
      <struct name="_BCRYPT_DH_PARAMETER_HEADER" />
    </typedef>
    <struct name="_BCRYPT_DSA_KEY_BLOB">
      <field offset="0" name="dwMagic">
        <type>ULONG</type>
      </field>
      <field offset="4" name="cbKey">
        <type>ULONG</type>
      </field>
      <field offset="8" name="Count">
        <arr length="4">
          <type>UCHAR</type>
        </arr>
      </field>
      <field offset="16" name="Seed">
        <arr length="20">
          <type>UCHAR</type>
        </arr>
      </field>
      <field offset="40" name="q">
        <arr length="20">
          <type>UCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="BCRYPT_DSA_KEY_BLOB">
      <struct name="_BCRYPT_DSA_KEY_BLOB" />
    </typedef>
    <typedef name="PBCRYPT_DSA_KEY_BLOB">
      <ptr>
        <struct name="_BCRYPT_DSA_KEY_BLOB" />
      </ptr>
    </typedef>
    <struct name="_BCRYPT_KEY_DATA_BLOB_HEADER">
      <field offset="0" name="dwMagic">
        <type>ULONG</type>
      </field>
      <field offset="4" name="dwVersion">
        <type>ULONG</type>
      </field>
      <field offset="8" name="cbKeyData">
        <type>ULONG</type>
      </field>
    </struct>
    <typedef name="BCRYPT_KEY_DATA_BLOB_HEADER">
      <struct name="_BCRYPT_KEY_DATA_BLOB_HEADER" />
    </typedef>
    <typedef name="PBCRYPT_KEY_DATA_BLOB_HEADER">
      <ptr>
        <struct name="_BCRYPT_KEY_DATA_BLOB_HEADER" />
      </ptr>
    </typedef>
    <struct name="_BCRYPT_DSA_PARAMETER_HEADER">
      <field offset="0" name="cbLength">
        <type>ULONG</type>
      </field>
      <field offset="4" name="dwMagic">
        <type>ULONG</type>
      </field>
      <field offset="8" name="cbKeyLength">
        <type>ULONG</type>
      </field>
      <field offset="12" name="Count">
        <arr length="4">
          <type>UCHAR</type>
        </arr>
      </field>
      <field offset="16" name="Seed">
        <arr length="20">
          <type>UCHAR</type>
        </arr>
      </field>
      <field offset="40" name="q">
        <arr length="20">
          <type>UCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="BCRYPT_DSA_PARAMETER_HEADER">
      <struct name="_BCRYPT_DSA_PARAMETER_HEADER" />
    </typedef>
    <struct name="_BCRYPT_ALGORITHM_IDENTIFIER">
      <field offset="0" name="pszName">
        <type>LPWSTR</type>
      </field>
      <field offset="4" name="dwClass">
        <type>ULONG</type>
      </field>
      <field offset="8" name="dwFlags">
        <type>ULONG</type>
      </field>
    </struct>
    <typedef name="BCRYPT_ALGORITHM_IDENTIFIER">
      <struct name="_BCRYPT_ALGORITHM_IDENTIFIER" />
    </typedef>
    <struct name="_BCRYPT_PROVIDER_NAME">
      <field offset="0" name="pszProviderName">
        <type>LPWSTR</type>
      </field>
    </struct>
    <typedef name="BCRYPT_PROVIDER_NAME">
      <struct name="_BCRYPT_PROVIDER_NAME" />
    </typedef>
    <struct name="_BCRYPT_INTERFACE_VERSION">
      <field offset="0" name="MajorVersion">
        <type>USHORT</type>
      </field>
      <field offset="2" name="MinorVersion">
        <type>USHORT</type>
      </field>
    </struct>
    <typedef name="BCRYPT_INTERFACE_VERSION">
      <struct name="_BCRYPT_INTERFACE_VERSION" />
    </typedef>
    <typedef name="PBCRYPT_INTERFACE_VERSION">
      <ptr>
        <struct name="_BCRYPT_INTERFACE_VERSION" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_INTERFACE_REG">
      <field offset="0" name="dwInterface">
        <type>ULONG</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>ULONG</type>
      </field>
      <field offset="8" name="cFunctions">
        <type>ULONG</type>
      </field>
      <field offset="12" name="rgpszFunctions">
        <ptr>
          <type>PWSTR</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CRYPT_INTERFACE_REG">
      <struct name="_CRYPT_INTERFACE_REG" />
    </typedef>
    <typedef name="PCRYPT_INTERFACE_REG">
      <ptr>
        <struct name="_CRYPT_INTERFACE_REG" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_IMAGE_REG">
      <field offset="0" name="pszImage">
        <type>PWSTR</type>
      </field>
      <field offset="4" name="cInterfaces">
        <type>ULONG</type>
      </field>
      <field offset="8" name="rgpInterfaces">
        <ptr>
          <type>PCRYPT_INTERFACE_REG</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CRYPT_IMAGE_REG">
      <struct name="_CRYPT_IMAGE_REG" />
    </typedef>
    <typedef name="PCRYPT_IMAGE_REG">
      <ptr>
        <struct name="_CRYPT_IMAGE_REG" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_PROVIDER_REG">
      <field offset="0" name="cAliases">
        <type>ULONG</type>
      </field>
      <field offset="4" name="rgpszAliases">
        <ptr>
          <type>PWSTR</type>
        </ptr>
      </field>
      <field offset="8" name="pUM">
        <type>PCRYPT_IMAGE_REG</type>
      </field>
      <field offset="12" name="pKM">
        <type>PCRYPT_IMAGE_REG</type>
      </field>
    </struct>
    <typedef name="CRYPT_PROVIDER_REG">
      <struct name="_CRYPT_PROVIDER_REG" />
    </typedef>
    <typedef name="PCRYPT_PROVIDER_REG">
      <ptr>
        <struct name="_CRYPT_PROVIDER_REG" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_PROVIDERS">
      <field offset="0" name="cProviders">
        <type>ULONG</type>
      </field>
      <field offset="4" name="rgpszProviders">
        <ptr>
          <type>PWSTR</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CRYPT_PROVIDERS">
      <struct name="_CRYPT_PROVIDERS" />
    </typedef>
    <typedef name="PCRYPT_PROVIDERS">
      <ptr>
        <struct name="_CRYPT_PROVIDERS" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_CONTEXT_CONFIG">
      <field offset="0" name="dwFlags">
        <type>ULONG</type>
      </field>
      <field offset="4" name="dwReserved">
        <type>ULONG</type>
      </field>
    </struct>
    <typedef name="CRYPT_CONTEXT_CONFIG">
      <struct name="_CRYPT_CONTEXT_CONFIG" />
    </typedef>
    <typedef name="PCRYPT_CONTEXT_CONFIG">
      <ptr>
        <struct name="_CRYPT_CONTEXT_CONFIG" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_CONTEXT_FUNCTION_CONFIG">
      <field offset="0" name="dwFlags">
        <type>ULONG</type>
      </field>
      <field offset="4" name="dwReserved">
        <type>ULONG</type>
      </field>
    </struct>
    <typedef name="CRYPT_CONTEXT_FUNCTION_CONFIG">
      <struct name="_CRYPT_CONTEXT_FUNCTION_CONFIG" />
    </typedef>
    <typedef name="PCRYPT_CONTEXT_FUNCTION_CONFIG">
      <ptr>
        <struct name="_CRYPT_CONTEXT_FUNCTION_CONFIG" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_CONTEXTS">
      <field offset="0" name="cContexts">
        <type>ULONG</type>
      </field>
      <field offset="4" name="rgpszContexts">
        <ptr>
          <type>PWSTR</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CRYPT_CONTEXTS">
      <struct name="_CRYPT_CONTEXTS" />
    </typedef>
    <typedef name="PCRYPT_CONTEXTS">
      <ptr>
        <struct name="_CRYPT_CONTEXTS" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_CONTEXT_FUNCTIONS">
      <field offset="0" name="cFunctions">
        <type>ULONG</type>
      </field>
      <field offset="4" name="rgpszFunctions">
        <ptr>
          <type>PWSTR</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CRYPT_CONTEXT_FUNCTIONS">
      <struct name="_CRYPT_CONTEXT_FUNCTIONS" />
    </typedef>
    <typedef name="PCRYPT_CONTEXT_FUNCTIONS">
      <ptr>
        <struct name="_CRYPT_CONTEXT_FUNCTIONS" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_CONTEXT_FUNCTION_PROVIDERS">
      <field offset="0" name="cProviders">
        <type>ULONG</type>
      </field>
      <field offset="4" name="rgpszProviders">
        <ptr>
          <type>PWSTR</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CRYPT_CONTEXT_FUNCTION_PROVIDERS">
      <struct name="_CRYPT_CONTEXT_FUNCTION_PROVIDERS" />
    </typedef>
    <typedef name="PCRYPT_CONTEXT_FUNCTION_PROVIDERS">
      <ptr>
        <struct name="_CRYPT_CONTEXT_FUNCTION_PROVIDERS" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_PROPERTY_REF">
      <field offset="0" name="pszProperty">
        <type>PWSTR</type>
      </field>
      <field offset="4" name="cbValue">
        <type>ULONG</type>
      </field>
      <field offset="8" name="pbValue">
        <type>PUCHAR</type>
      </field>
    </struct>
    <typedef name="CRYPT_PROPERTY_REF">
      <struct name="_CRYPT_PROPERTY_REF" />
    </typedef>
    <typedef name="PCRYPT_PROPERTY_REF">
      <ptr>
        <struct name="_CRYPT_PROPERTY_REF" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_IMAGE_REF">
      <field offset="0" name="pszImage">
        <type>PWSTR</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>ULONG</type>
      </field>
    </struct>
    <typedef name="CRYPT_IMAGE_REF">
      <struct name="_CRYPT_IMAGE_REF" />
    </typedef>
    <typedef name="PCRYPT_IMAGE_REF">
      <ptr>
        <struct name="_CRYPT_IMAGE_REF" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_PROVIDER_REF">
      <field offset="0" name="dwInterface">
        <type>ULONG</type>
      </field>
      <field offset="4" name="pszFunction">
        <type>PWSTR</type>
      </field>
      <field offset="8" name="pszProvider">
        <type>PWSTR</type>
      </field>
      <field offset="12" name="cProperties">
        <type>ULONG</type>
      </field>
      <field offset="16" name="rgpProperties">
        <ptr>
          <type>PCRYPT_PROPERTY_REF</type>
        </ptr>
      </field>
      <field offset="20" name="pUM">
        <type>PCRYPT_IMAGE_REF</type>
      </field>
      <field offset="24" name="pKM">
        <type>PCRYPT_IMAGE_REF</type>
      </field>
    </struct>
    <typedef name="CRYPT_PROVIDER_REF">
      <struct name="_CRYPT_PROVIDER_REF" />
    </typedef>
    <typedef name="PCRYPT_PROVIDER_REF">
      <ptr>
        <struct name="_CRYPT_PROVIDER_REF" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_PROVIDER_REFS">
      <field offset="0" name="cProviders">
        <type>ULONG</type>
      </field>
      <field offset="4" name="rgpProviders">
        <ptr>
          <type>PCRYPT_PROVIDER_REF</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CRYPT_PROVIDER_REFS">
      <struct name="_CRYPT_PROVIDER_REFS" />
    </typedef>
    <typedef name="PCRYPT_PROVIDER_REFS">
      <ptr>
        <struct name="_CRYPT_PROVIDER_REFS" />
      </ptr>
    </typedef>
    <typedef name="SECURITY_STATUS">
      <type>LONG</type>
    </typedef>
    <typedef name="NCryptBuffer">
      <type>BCryptBuffer</type>
    </typedef>
    <typedef name="PNCryptBuffer">
      <ptr>
        <type>BCryptBuffer</type>
      </ptr>
    </typedef>
    <typedef name="NCryptBufferDesc">
      <type>BCryptBufferDesc</type>
    </typedef>
    <typedef name="PNCryptBufferDesc">
      <ptr>
        <type>BCryptBufferDesc</type>
      </ptr>
    </typedef>
    <typedef name="NCRYPT_HANDLE">
      <type>ULONG_PTR</type>
    </typedef>
    <typedef name="NCRYPT_PROV_HANDLE">
      <type>ULONG_PTR</type>
    </typedef>
    <typedef name="NCRYPT_KEY_HANDLE">
      <type>ULONG_PTR</type>
    </typedef>
    <typedef name="NCRYPT_HASH_HANDLE">
      <type>ULONG_PTR</type>
    </typedef>
    <typedef name="NCRYPT_SECRET_HANDLE">
      <type>ULONG_PTR</type>
    </typedef>
    <struct name="_NCryptAlgorithmName">
      <field offset="0" name="pszName">
        <type>LPWSTR</type>
      </field>
      <field offset="4" name="dwClass">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwAlgOperations">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwFlags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="NCryptAlgorithmName">
      <struct name="_NCryptAlgorithmName" />
    </typedef>
    <struct name="NCryptKeyName">
      <field offset="0" name="pszName">
        <type>LPWSTR</type>
      </field>
      <field offset="4" name="pszAlgid">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="dwLegacyKeySpec">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwFlags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="NCryptKeyName">
      <struct name="NCryptKeyName" />
    </typedef>
    <struct name="NCryptProviderName">
      <field offset="0" name="pszName">
        <type>LPWSTR</type>
      </field>
      <field offset="4" name="pszComment">
        <type>LPWSTR</type>
      </field>
    </struct>
    <typedef name="NCryptProviderName">
      <struct name="NCryptProviderName" />
    </typedef>
    <struct name="__NCRYPT_UI_POLICY_BLOB">
      <field offset="0" name="dwVersion">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="cbCreationTitle">
        <type>DWORD</type>
      </field>
      <field offset="12" name="cbFriendlyName">
        <type>DWORD</type>
      </field>
      <field offset="16" name="cbDescription">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="NCRYPT_UI_POLICY_BLOB">
      <struct name="__NCRYPT_UI_POLICY_BLOB" />
    </typedef>
    <struct name="__NCRYPT_UI_POLICY">
      <field offset="0" name="dwVersion">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="pszCreationTitle">
        <type>LPCWSTR</type>
      </field>
      <field offset="12" name="pszFriendlyName">
        <type>LPCWSTR</type>
      </field>
      <field offset="16" name="pszDescription">
        <type>LPCWSTR</type>
      </field>
    </struct>
    <typedef name="NCRYPT_UI_POLICY">
      <struct name="__NCRYPT_UI_POLICY" />
    </typedef>
    <struct name="__NCRYPT_SUPPORTED_LENGTHS">
      <field offset="0" name="dwMinLength">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwMaxLength">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwIncrement">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwDefaultLength">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="NCRYPT_SUPPORTED_LENGTHS">
      <struct name="__NCRYPT_SUPPORTED_LENGTHS" />
    </typedef>
    <typedef name="HCRYPTPROV_OR_NCRYPT_KEY_HANDLE">
      <type>ULONG_PTR</type>
    </typedef>
    <typedef name="HCRYPTPROV_LEGACY">
      <type>ULONG_PTR</type>
    </typedef>
    <struct name="_CRYPT_BIT_BLOB">
      <field offset="0" name="cbData">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pbData">
        <ptr>
          <type>BYTE</type>
        </ptr>
      </field>
      <field offset="8" name="cUnusedBits">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CRYPT_BIT_BLOB">
      <struct name="_CRYPT_BIT_BLOB" />
    </typedef>
    <typedef name="PCRYPT_BIT_BLOB">
      <ptr>
        <struct name="_CRYPT_BIT_BLOB" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_ALGORITHM_IDENTIFIER">
      <field offset="0" name="pszObjId">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="Parameters">
        <type>CRYPT_OBJID_BLOB</type>
      </field>
    </struct>
    <typedef name="CRYPT_ALGORITHM_IDENTIFIER">
      <struct name="_CRYPT_ALGORITHM_IDENTIFIER" />
    </typedef>
    <typedef name="PCRYPT_ALGORITHM_IDENTIFIER">
      <ptr>
        <struct name="_CRYPT_ALGORITHM_IDENTIFIER" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_OBJID_TABLE">
      <field offset="0" name="dwAlgId">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pszObjId">
        <type>LPCSTR</type>
      </field>
    </struct>
    <typedef name="CRYPT_OBJID_TABLE">
      <struct name="_CRYPT_OBJID_TABLE" />
    </typedef>
    <typedef name="PCRYPT_OBJID_TABLE">
      <ptr>
        <struct name="_CRYPT_OBJID_TABLE" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_HASH_INFO">
      <field offset="0" name="HashAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="16" name="Hash">
        <type>CRYPT_HASH_BLOB</type>
      </field>
    </struct>
    <typedef name="CRYPT_HASH_INFO">
      <struct name="_CRYPT_HASH_INFO" />
    </typedef>
    <typedef name="PCRYPT_HASH_INFO">
      <ptr>
        <struct name="_CRYPT_HASH_INFO" />
      </ptr>
    </typedef>
    <struct name="_CERT_EXTENSION">
      <field offset="0" name="pszObjId">
        <type>LPSTR</type>
      </field>
      <field offset="4" name="fCritical">
        <type>BOOL</type>
      </field>
      <field offset="8" name="Value">
        <type>CRYPT_OBJID_BLOB</type>
      </field>
    </struct>
    <typedef name="CERT_EXTENSION">
      <struct name="_CERT_EXTENSION" />
    </typedef>
    <typedef name="PCERT_EXTENSION">
      <ptr>
        <struct name="_CERT_EXTENSION" />
      </ptr>
    </typedef>
    <typedef name="PCCERT_EXTENSION">
      <ptr>
        <type>CERT_EXTENSION</type>
      </ptr>
    </typedef>
    <struct name="_CRYPT_ATTRIBUTE_TYPE_VALUE">
      <field offset="0" name="pszObjId">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="Value">
        <type>CRYPT_OBJID_BLOB</type>
      </field>
    </struct>
    <typedef name="CRYPT_ATTRIBUTE_TYPE_VALUE">
      <struct name="_CRYPT_ATTRIBUTE_TYPE_VALUE" />
    </typedef>
    <typedef name="PCRYPT_ATTRIBUTE_TYPE_VALUE">
      <ptr>
        <struct name="_CRYPT_ATTRIBUTE_TYPE_VALUE" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_ATTRIBUTE">
      <field offset="0" name="pszObjId">
        <type>LPSTR</type>
      </field>
      <field offset="4" name="cValue">
        <type>DWORD</type>
      </field>
      <field offset="8" name="rgValue">
        <type>PCRYPT_ATTR_BLOB</type>
      </field>
    </struct>
    <typedef name="CRYPT_ATTRIBUTE">
      <struct name="_CRYPT_ATTRIBUTE" />
    </typedef>
    <typedef name="PCRYPT_ATTRIBUTE">
      <ptr>
        <struct name="_CRYPT_ATTRIBUTE" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_ATTRIBUTES">
      <field offset="0" name="cAttr">
        <type>DWORD</type>
      </field>
      <field offset="4" name="rgAttr">
        <type>PCRYPT_ATTRIBUTE</type>
      </field>
    </struct>
    <typedef name="CRYPT_ATTRIBUTES">
      <struct name="_CRYPT_ATTRIBUTES" />
    </typedef>
    <typedef name="PCRYPT_ATTRIBUTES">
      <ptr>
        <struct name="_CRYPT_ATTRIBUTES" />
      </ptr>
    </typedef>
    <struct name="_CERT_RDN_ATTR">
      <field offset="0" name="pszObjId">
        <type>LPSTR</type>
      </field>
      <field offset="4" name="dwValueType">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Value">
        <type>CERT_RDN_VALUE_BLOB</type>
      </field>
    </struct>
    <typedef name="CERT_RDN_ATTR">
      <struct name="_CERT_RDN_ATTR" />
    </typedef>
    <typedef name="PCERT_RDN_ATTR">
      <ptr>
        <struct name="_CERT_RDN_ATTR" />
      </ptr>
    </typedef>
    <struct name="_CERT_RDN">
      <field offset="0" name="cRDNAttr">
        <type>DWORD</type>
      </field>
      <field offset="4" name="rgRDNAttr">
        <type>PCERT_RDN_ATTR</type>
      </field>
    </struct>
    <typedef name="CERT_RDN">
      <struct name="_CERT_RDN" />
    </typedef>
    <typedef name="PCERT_RDN">
      <ptr>
        <struct name="_CERT_RDN" />
      </ptr>
    </typedef>
    <struct name="_CERT_NAME_INFO">
      <field offset="0" name="cRDN">
        <type>DWORD</type>
      </field>
      <field offset="4" name="rgRDN">
        <type>PCERT_RDN</type>
      </field>
    </struct>
    <typedef name="CERT_NAME_INFO">
      <struct name="_CERT_NAME_INFO" />
    </typedef>
    <typedef name="PCERT_NAME_INFO">
      <ptr>
        <struct name="_CERT_NAME_INFO" />
      </ptr>
    </typedef>
    <struct name="_CERT_NAME_VALUE">
      <field offset="0" name="dwValueType">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Value">
        <type>CERT_RDN_VALUE_BLOB</type>
      </field>
    </struct>
    <typedef name="CERT_NAME_VALUE">
      <struct name="_CERT_NAME_VALUE" />
    </typedef>
    <typedef name="PCERT_NAME_VALUE">
      <ptr>
        <struct name="_CERT_NAME_VALUE" />
      </ptr>
    </typedef>
    <struct name="_CERT_PUBLIC_KEY_INFO">
      <field offset="0" name="Algorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="16" name="PublicKey">
        <type>CRYPT_BIT_BLOB</type>
      </field>
    </struct>
    <typedef name="CERT_PUBLIC_KEY_INFO">
      <struct name="_CERT_PUBLIC_KEY_INFO" />
    </typedef>
    <typedef name="PCERT_PUBLIC_KEY_INFO">
      <ptr>
        <struct name="_CERT_PUBLIC_KEY_INFO" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_PRIVATE_KEY_INFO">
      <field offset="0" name="Version">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Algorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="24" name="PrivateKey">
        <type>CRYPT_DER_BLOB</type>
      </field>
      <field offset="32" name="pAttributes">
        <type>PCRYPT_ATTRIBUTES</type>
      </field>
    </struct>
    <typedef name="CRYPT_PRIVATE_KEY_INFO">
      <struct name="_CRYPT_PRIVATE_KEY_INFO" />
    </typedef>
    <typedef name="PCRYPT_PRIVATE_KEY_INFO">
      <ptr>
        <struct name="_CRYPT_PRIVATE_KEY_INFO" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_ENCRYPTED_PRIVATE_KEY_INFO">
      <field offset="0" name="EncryptionAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="16" name="EncryptedPrivateKey">
        <type>CRYPT_DATA_BLOB</type>
      </field>
    </struct>
    <typedef name="CRYPT_ENCRYPTED_PRIVATE_KEY_INFO">
      <struct name="_CRYPT_ENCRYPTED_PRIVATE_KEY_INFO" />
    </typedef>
    <typedef name="PCRYPT_ENCRYPTED_PRIVATE_KEY_INFO">
      <ptr>
        <struct name="_CRYPT_ENCRYPTED_PRIVATE_KEY_INFO" />
      </ptr>
    </typedef>
    <typedef name="PCRYPT_DECRYPT_PRIVATE_KEY_FUNC">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="Algorithm">
            <type>CRYPT_ALGORITHM_IDENTIFIER</type>
            <stack size="12" />
          </arg>
          <arg name="EncryptedPrivateKey">
            <type>CRYPT_DATA_BLOB</type>
            <stack size="8" />
          </arg>
          <arg name="pbClearTextKey">
            <ptr>
              <type>BYTE</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pcbClearTextKey">
            <ptr>
              <type>DWORD</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pVoidDecryptFunc">
            <type>LPVOID</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PCRYPT_ENCRYPT_PRIVATE_KEY_FUNC">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="pAlgorithm">
            <ptr>
              <type>CRYPT_ALGORITHM_IDENTIFIER</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pClearTextPrivateKey">
            <ptr>
              <type>CRYPT_DATA_BLOB</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pbEncryptedKey">
            <ptr>
              <type>BYTE</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pcbEncryptedKey">
            <ptr>
              <type>DWORD</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pVoidEncryptFunc">
            <type>LPVOID</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PCRYPT_RESOLVE_HCRYPTPROV_FUNC">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="pPrivateKeyInfo">
            <ptr>
              <type>CRYPT_PRIVATE_KEY_INFO</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="phCryptProv">
            <ptr>
              <type>HCRYPTPROV</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pVoidResolveFunc">
            <type>LPVOID</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="_CRYPT_PKCS8_IMPORT_PARAMS">
      <field offset="0" name="PrivateKey">
        <type>CRYPT_DIGEST_BLOB</type>
      </field>
      <field offset="8" name="pResolvehCryptProvFunc">
        <type>PCRYPT_RESOLVE_HCRYPTPROV_FUNC</type>
      </field>
      <field offset="12" name="pVoidResolveFunc">
        <type>LPVOID</type>
      </field>
      <field offset="16" name="pDecryptPrivateKeyFunc">
        <type>PCRYPT_DECRYPT_PRIVATE_KEY_FUNC</type>
      </field>
      <field offset="20" name="pVoidDecryptFunc">
        <type>LPVOID</type>
      </field>
    </struct>
    <typedef name="CRYPT_PKCS8_IMPORT_PARAMS">
      <struct name="_CRYPT_PKCS8_IMPORT_PARAMS" />
    </typedef>
    <typedef name="PCRYPT_PKCS8_IMPORT_PARAMS">
      <ptr>
        <struct name="_CRYPT_PKCS8_IMPORT_PARAMS" />
      </ptr>
    </typedef>
    <typedef name="CRYPT_PRIVATE_KEY_BLOB_AND_PARAMS">
      <struct name="_CRYPT_PKCS8_IMPORT_PARAMS" />
    </typedef>
    <typedef name="PCRYPT_PRIVATE_KEY_BLOB_AND_PARAMS">
      <ptr>
        <struct name="_CRYPT_PKCS8_IMPORT_PARAMS" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_PKCS8_EXPORT_PARAMS">
      <field offset="0" name="hCryptProv">
        <type>HCRYPTPROV</type>
      </field>
      <field offset="4" name="dwKeySpec">
        <type>DWORD</type>
      </field>
      <field offset="8" name="pszPrivateKeyObjId">
        <type>LPSTR</type>
      </field>
      <field offset="12" name="pEncryptPrivateKeyFunc">
        <type>PCRYPT_ENCRYPT_PRIVATE_KEY_FUNC</type>
      </field>
      <field offset="16" name="pVoidEncryptFunc">
        <type>LPVOID</type>
      </field>
    </struct>
    <typedef name="CRYPT_PKCS8_EXPORT_PARAMS">
      <struct name="_CRYPT_PKCS8_EXPORT_PARAMS" />
    </typedef>
    <typedef name="PCRYPT_PKCS8_EXPORT_PARAMS">
      <ptr>
        <struct name="_CRYPT_PKCS8_EXPORT_PARAMS" />
      </ptr>
    </typedef>
    <struct name="_CERT_INFO">
      <field offset="0" name="dwVersion">
        <type>DWORD</type>
      </field>
      <field offset="8" name="SerialNumber">
        <type>CRYPT_INTEGER_BLOB</type>
      </field>
      <field offset="16" name="SignatureAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="32" name="Issuer">
        <type>CERT_NAME_BLOB</type>
      </field>
      <field offset="40" name="NotBefore">
        <type>FILETIME</type>
      </field>
      <field offset="48" name="NotAfter">
        <type>FILETIME</type>
      </field>
      <field offset="56" name="Subject">
        <type>CERT_NAME_BLOB</type>
      </field>
      <field offset="64" name="SubjectPublicKeyInfo">
        <type>CERT_PUBLIC_KEY_INFO</type>
      </field>
      <field offset="88" name="IssuerUniqueId">
        <type>CRYPT_BIT_BLOB</type>
      </field>
      <field offset="104" name="SubjectUniqueId">
        <type>CRYPT_BIT_BLOB</type>
      </field>
      <field offset="116" name="cExtension">
        <type>DWORD</type>
      </field>
      <field offset="120" name="rgExtension">
        <type>PCERT_EXTENSION</type>
      </field>
    </struct>
    <typedef name="CERT_INFO">
      <struct name="_CERT_INFO" />
    </typedef>
    <typedef name="PCERT_INFO">
      <ptr>
        <struct name="_CERT_INFO" />
      </ptr>
    </typedef>
    <struct name="_CRL_ENTRY">
      <field offset="0" name="SerialNumber">
        <type>CRYPT_INTEGER_BLOB</type>
      </field>
      <field offset="8" name="RevocationDate">
        <type>FILETIME</type>
      </field>
      <field offset="16" name="cExtension">
        <type>DWORD</type>
      </field>
      <field offset="20" name="rgExtension">
        <type>PCERT_EXTENSION</type>
      </field>
    </struct>
    <typedef name="CRL_ENTRY">
      <struct name="_CRL_ENTRY" />
    </typedef>
    <typedef name="PCRL_ENTRY">
      <ptr>
        <struct name="_CRL_ENTRY" />
      </ptr>
    </typedef>
    <struct name="_CRL_INFO">
      <field offset="0" name="dwVersion">
        <type>DWORD</type>
      </field>
      <field offset="8" name="SignatureAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="24" name="Issuer">
        <type>CERT_NAME_BLOB</type>
      </field>
      <field offset="32" name="ThisUpdate">
        <type>FILETIME</type>
      </field>
      <field offset="40" name="NextUpdate">
        <type>FILETIME</type>
      </field>
      <field offset="48" name="cCRLEntry">
        <type>DWORD</type>
      </field>
      <field offset="52" name="rgCRLEntry">
        <type>PCRL_ENTRY</type>
      </field>
      <field offset="56" name="cExtension">
        <type>DWORD</type>
      </field>
      <field offset="60" name="rgExtension">
        <type>PCERT_EXTENSION</type>
      </field>
    </struct>
    <typedef name="CRL_INFO">
      <struct name="_CRL_INFO" />
    </typedef>
    <typedef name="PCRL_INFO">
      <ptr>
        <struct name="_CRL_INFO" />
      </ptr>
    </typedef>
    <struct name="_CERT_OR_CRL_BLOB">
      <field offset="0" name="dwChoice">
        <type>DWORD</type>
      </field>
      <field offset="4" name="cbEncoded">
        <type>DWORD</type>
      </field>
      <field offset="8" name="pbEncoded">
        <ptr>
          <type>BYTE</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CERT_OR_CRL_BLOB">
      <struct name="_CERT_OR_CRL_BLOB" />
    </typedef>
    <typedef name="PCERT_OR_CRL_BLOB">
      <ptr>
        <struct name="_CERT_OR_CRL_BLOB" />
      </ptr>
    </typedef>
    <struct name="_CERT_OR_CRL_BUNDLE">
      <field offset="0" name="cItem">
        <type>DWORD</type>
      </field>
      <field offset="4" name="rgItem">
        <type>PCERT_OR_CRL_BLOB</type>
      </field>
    </struct>
    <typedef name="CERT_OR_CRL_BUNDLE">
      <struct name="_CERT_OR_CRL_BUNDLE" />
    </typedef>
    <typedef name="PCERT_OR_CRL_BUNDLE">
      <ptr>
        <struct name="_CERT_OR_CRL_BUNDLE" />
      </ptr>
    </typedef>
    <struct name="_CERT_REQUEST_INFO">
      <field offset="0" name="dwVersion">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Subject">
        <type>CERT_NAME_BLOB</type>
      </field>
      <field offset="16" name="SubjectPublicKeyInfo">
        <type>CERT_PUBLIC_KEY_INFO</type>
      </field>
      <field offset="40" name="cAttribute">
        <type>DWORD</type>
      </field>
      <field offset="44" name="rgAttribute">
        <type>PCRYPT_ATTRIBUTE</type>
      </field>
    </struct>
    <typedef name="CERT_REQUEST_INFO">
      <struct name="_CERT_REQUEST_INFO" />
    </typedef>
    <typedef name="PCERT_REQUEST_INFO">
      <ptr>
        <struct name="_CERT_REQUEST_INFO" />
      </ptr>
    </typedef>
    <struct name="_CERT_KEYGEN_REQUEST_INFO">
      <field offset="0" name="dwVersion">
        <type>DWORD</type>
      </field>
      <field offset="8" name="SubjectPublicKeyInfo">
        <type>CERT_PUBLIC_KEY_INFO</type>
      </field>
      <field offset="32" name="pwszChallengeString">
        <type>LPWSTR</type>
      </field>
    </struct>
    <typedef name="CERT_KEYGEN_REQUEST_INFO">
      <struct name="_CERT_KEYGEN_REQUEST_INFO" />
    </typedef>
    <typedef name="PCERT_KEYGEN_REQUEST_INFO">
      <ptr>
        <struct name="_CERT_KEYGEN_REQUEST_INFO" />
      </ptr>
    </typedef>
    <struct name="_CERT_SIGNED_CONTENT_INFO">
      <field offset="0" name="ToBeSigned">
        <type>CRYPT_DER_BLOB</type>
      </field>
      <field offset="8" name="SignatureAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="24" name="Signature">
        <type>CRYPT_BIT_BLOB</type>
      </field>
    </struct>
    <typedef name="CERT_SIGNED_CONTENT_INFO">
      <struct name="_CERT_SIGNED_CONTENT_INFO" />
    </typedef>
    <typedef name="PCERT_SIGNED_CONTENT_INFO">
      <ptr>
        <struct name="_CERT_SIGNED_CONTENT_INFO" />
      </ptr>
    </typedef>
    <struct name="_CTL_USAGE">
      <field offset="0" name="cUsageIdentifier">
        <type>DWORD</type>
      </field>
      <field offset="4" name="rgpszUsageIdentifier">
        <ptr>
          <type>LPSTR</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CTL_USAGE">
      <struct name="_CTL_USAGE" />
    </typedef>
    <typedef name="PCTL_USAGE">
      <ptr>
        <struct name="_CTL_USAGE" />
      </ptr>
    </typedef>
    <typedef name="CERT_ENHKEY_USAGE">
      <struct name="_CTL_USAGE" />
    </typedef>
    <typedef name="PCERT_ENHKEY_USAGE">
      <ptr>
        <struct name="_CTL_USAGE" />
      </ptr>
    </typedef>
    <typedef name="PCCTL_USAGE">
      <ptr>
        <type>CTL_USAGE</type>
      </ptr>
    </typedef>
    <typedef name="PCCERT_ENHKEY_USAGE">
      <ptr>
        <type>CERT_ENHKEY_USAGE</type>
      </ptr>
    </typedef>
    <struct name="_CTL_ENTRY">
      <field offset="0" name="SubjectIdentifier">
        <type>CRYPT_DATA_BLOB</type>
      </field>
      <field offset="8" name="cAttribute">
        <type>DWORD</type>
      </field>
      <field offset="12" name="rgAttribute">
        <type>PCRYPT_ATTRIBUTE</type>
      </field>
    </struct>
    <typedef name="CTL_ENTRY">
      <struct name="_CTL_ENTRY" />
    </typedef>
    <typedef name="PCTL_ENTRY">
      <ptr>
        <struct name="_CTL_ENTRY" />
      </ptr>
    </typedef>
    <struct name="_CTL_INFO">
      <field offset="0" name="dwVersion">
        <type>DWORD</type>
      </field>
      <field offset="8" name="SubjectUsage">
        <type>CTL_USAGE</type>
      </field>
      <field offset="16" name="ListIdentifier">
        <type>CRYPT_DATA_BLOB</type>
      </field>
      <field offset="24" name="SequenceNumber">
        <type>CRYPT_INTEGER_BLOB</type>
      </field>
      <field offset="32" name="ThisUpdate">
        <type>FILETIME</type>
      </field>
      <field offset="40" name="NextUpdate">
        <type>FILETIME</type>
      </field>
      <field offset="48" name="SubjectAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="60" name="cCTLEntry">
        <type>DWORD</type>
      </field>
      <field offset="64" name="rgCTLEntry">
        <type>PCTL_ENTRY</type>
      </field>
      <field offset="68" name="cExtension">
        <type>DWORD</type>
      </field>
      <field offset="72" name="rgExtension">
        <type>PCERT_EXTENSION</type>
      </field>
    </struct>
    <typedef name="CTL_INFO">
      <struct name="_CTL_INFO" />
    </typedef>
    <typedef name="PCTL_INFO">
      <ptr>
        <struct name="_CTL_INFO" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_TIME_STAMP_REQUEST_INFO">
      <field offset="0" name="pszTimeStampAlgorithm">
        <type>LPSTR</type>
      </field>
      <field offset="4" name="pszContentType">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="Content">
        <type>CRYPT_OBJID_BLOB</type>
      </field>
      <field offset="16" name="cAttribute">
        <type>DWORD</type>
      </field>
      <field offset="20" name="rgAttribute">
        <type>PCRYPT_ATTRIBUTE</type>
      </field>
    </struct>
    <typedef name="CRYPT_TIME_STAMP_REQUEST_INFO">
      <struct name="_CRYPT_TIME_STAMP_REQUEST_INFO" />
    </typedef>
    <typedef name="PCRYPT_TIME_STAMP_REQUEST_INFO">
      <ptr>
        <struct name="_CRYPT_TIME_STAMP_REQUEST_INFO" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_ENROLLMENT_NAME_VALUE_PAIR">
      <field offset="0" name="pwszName">
        <type>LPWSTR</type>
      </field>
      <field offset="4" name="pwszValue">
        <type>LPWSTR</type>
      </field>
    </struct>
    <typedef name="CRYPT_ENROLLMENT_NAME_VALUE_PAIR">
      <struct name="_CRYPT_ENROLLMENT_NAME_VALUE_PAIR" />
    </typedef>
    <typedef name="PCRYPT_ENROLLMENT_NAME_VALUE_PAIR">
      <ptr>
        <struct name="_CRYPT_ENROLLMENT_NAME_VALUE_PAIR" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_CSP_PROVIDER">
      <field offset="0" name="dwKeySpec">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pwszProviderName">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="Signature">
        <type>CRYPT_BIT_BLOB</type>
      </field>
    </struct>
    <typedef name="CRYPT_CSP_PROVIDER">
      <struct name="_CRYPT_CSP_PROVIDER" />
    </typedef>
    <typedef name="PCRYPT_CSP_PROVIDER">
      <ptr>
        <struct name="_CRYPT_CSP_PROVIDER" />
      </ptr>
    </typedef>
    <typedef name="PFN_CRYPT_ALLOC">
      <ptr>
        <fn>
          <return>
            <type>LPVOID</type>
            <reg>eax</reg>
          </return>
          <arg name="cbSize">
            <type>size_t</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_CRYPT_FREE">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="pv">
            <type>LPVOID</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="_CRYPT_ENCODE_PARA">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pfnAlloc">
        <type>PFN_CRYPT_ALLOC</type>
      </field>
      <field offset="8" name="pfnFree">
        <type>PFN_CRYPT_FREE</type>
      </field>
    </struct>
    <typedef name="CRYPT_ENCODE_PARA">
      <struct name="_CRYPT_ENCODE_PARA" />
    </typedef>
    <typedef name="PCRYPT_ENCODE_PARA">
      <ptr>
        <struct name="_CRYPT_ENCODE_PARA" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_DECODE_PARA">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pfnAlloc">
        <type>PFN_CRYPT_ALLOC</type>
      </field>
      <field offset="8" name="pfnFree">
        <type>PFN_CRYPT_FREE</type>
      </field>
    </struct>
    <typedef name="CRYPT_DECODE_PARA">
      <struct name="_CRYPT_DECODE_PARA" />
    </typedef>
    <typedef name="PCRYPT_DECODE_PARA">
      <ptr>
        <struct name="_CRYPT_DECODE_PARA" />
      </ptr>
    </typedef>
    <struct name="_CERT_EXTENSIONS">
      <field offset="0" name="cExtension">
        <type>DWORD</type>
      </field>
      <field offset="4" name="rgExtension">
        <type>PCERT_EXTENSION</type>
      </field>
    </struct>
    <typedef name="CERT_EXTENSIONS">
      <struct name="_CERT_EXTENSIONS" />
    </typedef>
    <typedef name="PCERT_EXTENSIONS">
      <ptr>
        <struct name="_CERT_EXTENSIONS" />
      </ptr>
    </typedef>
    <struct name="_CERT_AUTHORITY_KEY_ID_INFO">
      <field offset="0" name="KeyId">
        <type>CRYPT_DATA_BLOB</type>
      </field>
      <field offset="8" name="CertIssuer">
        <type>CERT_NAME_BLOB</type>
      </field>
      <field offset="16" name="CertSerialNumber">
        <type>CRYPT_INTEGER_BLOB</type>
      </field>
    </struct>
    <typedef name="CERT_AUTHORITY_KEY_ID_INFO">
      <struct name="_CERT_AUTHORITY_KEY_ID_INFO" />
    </typedef>
    <typedef name="PCERT_AUTHORITY_KEY_ID_INFO">
      <ptr>
        <struct name="_CERT_AUTHORITY_KEY_ID_INFO" />
      </ptr>
    </typedef>
    <struct name="_CERT_PRIVATE_KEY_VALIDITY">
      <field offset="0" name="NotBefore">
        <type>FILETIME</type>
      </field>
      <field offset="8" name="NotAfter">
        <type>FILETIME</type>
      </field>
    </struct>
    <typedef name="CERT_PRIVATE_KEY_VALIDITY">
      <struct name="_CERT_PRIVATE_KEY_VALIDITY" />
    </typedef>
    <typedef name="PCERT_PRIVATE_KEY_VALIDITY">
      <ptr>
        <struct name="_CERT_PRIVATE_KEY_VALIDITY" />
      </ptr>
    </typedef>
    <struct name="_CERT_KEY_ATTRIBUTES_INFO">
      <field offset="0" name="KeyId">
        <type>CRYPT_DATA_BLOB</type>
      </field>
      <field offset="8" name="IntendedKeyUsage">
        <type>CRYPT_BIT_BLOB</type>
      </field>
      <field offset="20" name="pPrivateKeyUsagePeriod">
        <type>PCERT_PRIVATE_KEY_VALIDITY</type>
      </field>
    </struct>
    <typedef name="CERT_KEY_ATTRIBUTES_INFO">
      <struct name="_CERT_KEY_ATTRIBUTES_INFO" />
    </typedef>
    <typedef name="PCERT_KEY_ATTRIBUTES_INFO">
      <ptr>
        <struct name="_CERT_KEY_ATTRIBUTES_INFO" />
      </ptr>
    </typedef>
    <struct name="_CERT_POLICY_ID">
      <field offset="0" name="cCertPolicyElementId">
        <type>DWORD</type>
      </field>
      <field offset="4" name="rgpszCertPolicyElementId">
        <ptr>
          <type>LPSTR</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CERT_POLICY_ID">
      <struct name="_CERT_POLICY_ID" />
    </typedef>
    <typedef name="PCERT_POLICY_ID">
      <ptr>
        <struct name="_CERT_POLICY_ID" />
      </ptr>
    </typedef>
    <struct name="_CERT_KEY_USAGE_RESTRICTION_INFO">
      <field offset="0" name="cCertPolicyId">
        <type>DWORD</type>
      </field>
      <field offset="4" name="rgCertPolicyId">
        <type>PCERT_POLICY_ID</type>
      </field>
      <field offset="8" name="RestrictedKeyUsage">
        <type>CRYPT_BIT_BLOB</type>
      </field>
    </struct>
    <typedef name="CERT_KEY_USAGE_RESTRICTION_INFO">
      <struct name="_CERT_KEY_USAGE_RESTRICTION_INFO" />
    </typedef>
    <typedef name="PCERT_KEY_USAGE_RESTRICTION_INFO">
      <ptr>
        <struct name="_CERT_KEY_USAGE_RESTRICTION_INFO" />
      </ptr>
    </typedef>
    <struct name="_CERT_OTHER_NAME">
      <field offset="0" name="pszObjId">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="Value">
        <type>CRYPT_OBJID_BLOB</type>
      </field>
    </struct>
    <typedef name="CERT_OTHER_NAME">
      <struct name="_CERT_OTHER_NAME" />
    </typedef>
    <typedef name="PCERT_OTHER_NAME">
      <ptr>
        <struct name="_CERT_OTHER_NAME" />
      </ptr>
    </typedef>
    <struct name="_CERT_ALT_NAME_ENTRY">
      <field offset="0" name="dwAltNameChoice">
        <type>DWORD</type>
      </field>
      <field offset="8">
        <union>
          <alt name="pOtherName">
            <type>PCERT_OTHER_NAME</type>
          </alt>
          <alt name="pwszRfc822Name">
            <type>LPWSTR</type>
          </alt>
          <alt name="pwszDNSName">
            <type>LPWSTR</type>
          </alt>
          <alt name="DirectoryName">
            <type>CERT_NAME_BLOB</type>
          </alt>
          <alt name="pwszURL">
            <type>LPWSTR</type>
          </alt>
          <alt name="IPAddress">
            <type>CRYPT_DATA_BLOB</type>
          </alt>
          <alt name="pszRegisteredID">
            <type>LPSTR</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="CERT_ALT_NAME_ENTRY">
      <struct name="_CERT_ALT_NAME_ENTRY" />
    </typedef>
    <typedef name="PCERT_ALT_NAME_ENTRY">
      <ptr>
        <struct name="_CERT_ALT_NAME_ENTRY" />
      </ptr>
    </typedef>
    <struct name="_CERT_ALT_NAME_INFO">
      <field offset="0" name="cAltEntry">
        <type>DWORD</type>
      </field>
      <field offset="4" name="rgAltEntry">
        <type>PCERT_ALT_NAME_ENTRY</type>
      </field>
    </struct>
    <typedef name="CERT_ALT_NAME_INFO">
      <struct name="_CERT_ALT_NAME_INFO" />
    </typedef>
    <typedef name="PCERT_ALT_NAME_INFO">
      <ptr>
        <struct name="_CERT_ALT_NAME_INFO" />
      </ptr>
    </typedef>
    <struct name="_CERT_BASIC_CONSTRAINTS_INFO">
      <field offset="0" name="SubjectType">
        <type>CRYPT_BIT_BLOB</type>
      </field>
      <field offset="12" name="fPathLenConstraint">
        <type>BOOL</type>
      </field>
      <field offset="16" name="dwPathLenConstraint">
        <type>DWORD</type>
      </field>
      <field offset="20" name="cSubtreesConstraint">
        <type>DWORD</type>
      </field>
      <field offset="24" name="rgSubtreesConstraint">
        <ptr>
          <type>CERT_NAME_BLOB</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CERT_BASIC_CONSTRAINTS_INFO">
      <struct name="_CERT_BASIC_CONSTRAINTS_INFO" />
    </typedef>
    <typedef name="PCERT_BASIC_CONSTRAINTS_INFO">
      <ptr>
        <struct name="_CERT_BASIC_CONSTRAINTS_INFO" />
      </ptr>
    </typedef>
    <struct name="_CERT_BASIC_CONSTRAINTS2_INFO">
      <field offset="0" name="fCA">
        <type>BOOL</type>
      </field>
      <field offset="4" name="fPathLenConstraint">
        <type>BOOL</type>
      </field>
      <field offset="8" name="dwPathLenConstraint">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CERT_BASIC_CONSTRAINTS2_INFO">
      <struct name="_CERT_BASIC_CONSTRAINTS2_INFO" />
    </typedef>
    <typedef name="PCERT_BASIC_CONSTRAINTS2_INFO">
      <ptr>
        <struct name="_CERT_BASIC_CONSTRAINTS2_INFO" />
      </ptr>
    </typedef>
    <struct name="_CERT_POLICY_QUALIFIER_INFO">
      <field offset="0" name="pszPolicyQualifierId">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="Qualifier">
        <type>CRYPT_OBJID_BLOB</type>
      </field>
    </struct>
    <typedef name="CERT_POLICY_QUALIFIER_INFO">
      <struct name="_CERT_POLICY_QUALIFIER_INFO" />
    </typedef>
    <typedef name="PCERT_POLICY_QUALIFIER_INFO">
      <ptr>
        <struct name="_CERT_POLICY_QUALIFIER_INFO" />
      </ptr>
    </typedef>
    <struct name="_CERT_POLICY_INFO">
      <field offset="0" name="pszPolicyIdentifier">
        <type>LPSTR</type>
      </field>
      <field offset="4" name="cPolicyQualifier">
        <type>DWORD</type>
      </field>
      <field offset="8" name="rgPolicyQualifier">
        <ptr>
          <type>CERT_POLICY_QUALIFIER_INFO</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CERT_POLICY_INFO">
      <struct name="_CERT_POLICY_INFO" />
    </typedef>
    <typedef name="PCERT_POLICY_INFO">
      <ptr>
        <struct name="_CERT_POLICY_INFO" />
      </ptr>
    </typedef>
    <struct name="_CERT_POLICIES_INFO">
      <field offset="0" name="cPolicyInfo">
        <type>DWORD</type>
      </field>
      <field offset="4" name="rgPolicyInfo">
        <ptr>
          <type>CERT_POLICY_INFO</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CERT_POLICIES_INFO">
      <struct name="_CERT_POLICIES_INFO" />
    </typedef>
    <typedef name="PCERT_POLICIES_INFO">
      <ptr>
        <struct name="_CERT_POLICIES_INFO" />
      </ptr>
    </typedef>
    <struct name="_CERT_POLICY_QUALIFIER_NOTICE_REFERENCE">
      <field offset="0" name="pszOrganization">
        <type>LPSTR</type>
      </field>
      <field offset="4" name="cNoticeNumbers">
        <type>DWORD</type>
      </field>
      <field offset="8" name="rgNoticeNumbers">
        <ptr>
          <prim domain="SignedInt" size="4" />
        </ptr>
      </field>
    </struct>
    <typedef name="CERT_POLICY_QUALIFIER_NOTICE_REFERENCE">
      <struct name="_CERT_POLICY_QUALIFIER_NOTICE_REFERENCE" />
    </typedef>
    <typedef name="PCERT_POLICY_QUALIFIER_NOTICE_REFERENCE">
      <ptr>
        <struct name="_CERT_POLICY_QUALIFIER_NOTICE_REFERENCE" />
      </ptr>
    </typedef>
    <struct name="_CERT_POLICY_QUALIFIER_USER_NOTICE">
      <field offset="0" name="pNoticeReference">
        <ptr>
          <type>CERT_POLICY_QUALIFIER_NOTICE_REFERENCE</type>
        </ptr>
      </field>
      <field offset="4" name="pszDisplayText">
        <type>LPWSTR</type>
      </field>
    </struct>
    <typedef name="CERT_POLICY_QUALIFIER_USER_NOTICE">
      <struct name="_CERT_POLICY_QUALIFIER_USER_NOTICE" />
    </typedef>
    <typedef name="PCERT_POLICY_QUALIFIER_USER_NOTICE">
      <ptr>
        <struct name="_CERT_POLICY_QUALIFIER_USER_NOTICE" />
      </ptr>
    </typedef>
    <struct name="_CPS_URLS">
      <field offset="0" name="pszURL">
        <type>LPWSTR</type>
      </field>
      <field offset="4" name="pAlgorithm">
        <ptr>
          <type>CRYPT_ALGORITHM_IDENTIFIER</type>
        </ptr>
      </field>
      <field offset="8" name="pDigest">
        <ptr>
          <type>CRYPT_DATA_BLOB</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CPS_URLS">
      <struct name="_CPS_URLS" />
    </typedef>
    <typedef name="PCPS_URLS">
      <ptr>
        <struct name="_CPS_URLS" />
      </ptr>
    </typedef>
    <struct name="_CERT_POLICY95_QUALIFIER1">
      <field offset="0" name="pszPracticesReference">
        <type>LPWSTR</type>
      </field>
      <field offset="4" name="pszNoticeIdentifier">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="pszNSINoticeIdentifier">
        <type>LPSTR</type>
      </field>
      <field offset="12" name="cCPSURLs">
        <type>DWORD</type>
      </field>
      <field offset="16" name="rgCPSURLs">
        <ptr>
          <type>CPS_URLS</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CERT_POLICY95_QUALIFIER1">
      <struct name="_CERT_POLICY95_QUALIFIER1" />
    </typedef>
    <typedef name="PCERT_POLICY95_QUALIFIER1">
      <ptr>
        <struct name="_CERT_POLICY95_QUALIFIER1" />
      </ptr>
    </typedef>
    <struct name="_CERT_POLICY_MAPPING">
      <field offset="0" name="pszIssuerDomainPolicy">
        <type>LPSTR</type>
      </field>
      <field offset="4" name="pszSubjectDomainPolicy">
        <type>LPSTR</type>
      </field>
    </struct>
    <typedef name="CERT_POLICY_MAPPING">
      <struct name="_CERT_POLICY_MAPPING" />
    </typedef>
    <typedef name="PCERT_POLICY_MAPPING">
      <ptr>
        <struct name="_CERT_POLICY_MAPPING" />
      </ptr>
    </typedef>
    <struct name="_CERT_POLICY_MAPPINGS_INFO">
      <field offset="0" name="cPolicyMapping">
        <type>DWORD</type>
      </field>
      <field offset="4" name="rgPolicyMapping">
        <type>PCERT_POLICY_MAPPING</type>
      </field>
    </struct>
    <typedef name="CERT_POLICY_MAPPINGS_INFO">
      <struct name="_CERT_POLICY_MAPPINGS_INFO" />
    </typedef>
    <typedef name="PCERT_POLICY_MAPPINGS_INFO">
      <ptr>
        <struct name="_CERT_POLICY_MAPPINGS_INFO" />
      </ptr>
    </typedef>
    <struct name="_CERT_POLICY_CONSTRAINTS_INFO">
      <field offset="0" name="fRequireExplicitPolicy">
        <type>BOOL</type>
      </field>
      <field offset="4" name="dwRequireExplicitPolicySkipCerts">
        <type>DWORD</type>
      </field>
      <field offset="8" name="fInhibitPolicyMapping">
        <type>BOOL</type>
      </field>
      <field offset="12" name="dwInhibitPolicyMappingSkipCerts">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CERT_POLICY_CONSTRAINTS_INFO">
      <struct name="_CERT_POLICY_CONSTRAINTS_INFO" />
    </typedef>
    <typedef name="PCERT_POLICY_CONSTRAINTS_INFO">
      <ptr>
        <struct name="_CERT_POLICY_CONSTRAINTS_INFO" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY">
      <field offset="0" name="pszObjId">
        <type>LPSTR</type>
      </field>
      <field offset="4" name="cValue">
        <type>DWORD</type>
      </field>
      <field offset="8" name="rgValue">
        <type>PCRYPT_DER_BLOB</type>
      </field>
    </struct>
    <typedef name="CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY">
      <struct name="_CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY" />
    </typedef>
    <typedef name="PCRYPT_CONTENT_INFO_SEQUENCE_OF_ANY">
      <ptr>
        <struct name="_CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_CONTENT_INFO">
      <field offset="0" name="pszObjId">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="Content">
        <type>CRYPT_DER_BLOB</type>
      </field>
    </struct>
    <typedef name="CRYPT_CONTENT_INFO">
      <struct name="_CRYPT_CONTENT_INFO" />
    </typedef>
    <typedef name="PCRYPT_CONTENT_INFO">
      <ptr>
        <struct name="_CRYPT_CONTENT_INFO" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_SEQUENCE_OF_ANY">
      <field offset="0" name="cValue">
        <type>DWORD</type>
      </field>
      <field offset="4" name="rgValue">
        <type>PCRYPT_DER_BLOB</type>
      </field>
    </struct>
    <typedef name="CRYPT_SEQUENCE_OF_ANY">
      <struct name="_CRYPT_SEQUENCE_OF_ANY" />
    </typedef>
    <typedef name="PCRYPT_SEQUENCE_OF_ANY">
      <ptr>
        <struct name="_CRYPT_SEQUENCE_OF_ANY" />
      </ptr>
    </typedef>
    <struct name="_CERT_AUTHORITY_KEY_ID2_INFO">
      <field offset="0" name="KeyId">
        <type>CRYPT_DATA_BLOB</type>
      </field>
      <field offset="8" name="AuthorityCertIssuer">
        <type>CERT_ALT_NAME_INFO</type>
      </field>
      <field offset="16" name="AuthorityCertSerialNumber">
        <type>CRYPT_INTEGER_BLOB</type>
      </field>
    </struct>
    <typedef name="CERT_AUTHORITY_KEY_ID2_INFO">
      <struct name="_CERT_AUTHORITY_KEY_ID2_INFO" />
    </typedef>
    <typedef name="PCERT_AUTHORITY_KEY_ID2_INFO">
      <ptr>
        <struct name="_CERT_AUTHORITY_KEY_ID2_INFO" />
      </ptr>
    </typedef>
    <struct name="_CERT_ACCESS_DESCRIPTION">
      <field offset="0" name="pszAccessMethod">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="AccessLocation">
        <type>CERT_ALT_NAME_ENTRY</type>
      </field>
    </struct>
    <typedef name="CERT_ACCESS_DESCRIPTION">
      <struct name="_CERT_ACCESS_DESCRIPTION" />
    </typedef>
    <typedef name="PCERT_ACCESS_DESCRIPTION">
      <ptr>
        <struct name="_CERT_ACCESS_DESCRIPTION" />
      </ptr>
    </typedef>
    <struct name="_CERT_AUTHORITY_INFO_ACCESS">
      <field offset="0" name="cAccDescr">
        <type>DWORD</type>
      </field>
      <field offset="4" name="rgAccDescr">
        <type>PCERT_ACCESS_DESCRIPTION</type>
      </field>
    </struct>
    <typedef name="CERT_AUTHORITY_INFO_ACCESS">
      <struct name="_CERT_AUTHORITY_INFO_ACCESS" />
    </typedef>
    <typedef name="PCERT_AUTHORITY_INFO_ACCESS">
      <ptr>
        <struct name="_CERT_AUTHORITY_INFO_ACCESS" />
      </ptr>
    </typedef>
    <typedef name="CERT_SUBJECT_INFO_ACCESS">
      <struct name="_CERT_AUTHORITY_INFO_ACCESS" />
    </typedef>
    <typedef name="PCERT_SUBJECT_INFO_ACCESS">
      <ptr>
        <struct name="_CERT_AUTHORITY_INFO_ACCESS" />
      </ptr>
    </typedef>
    <struct name="_CRL_DIST_POINT_NAME">
      <field offset="0" name="dwDistPointNameChoice">
        <type>DWORD</type>
      </field>
      <field offset="8">
        <union>
          <alt name="FullName">
            <type>CERT_ALT_NAME_INFO</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="CRL_DIST_POINT_NAME">
      <struct name="_CRL_DIST_POINT_NAME" />
    </typedef>
    <typedef name="PCRL_DIST_POINT_NAME">
      <ptr>
        <struct name="_CRL_DIST_POINT_NAME" />
      </ptr>
    </typedef>
    <struct name="_CRL_DIST_POINT">
      <field offset="0" name="DistPointName">
        <type>CRL_DIST_POINT_NAME</type>
      </field>
      <field offset="16" name="ReasonFlags">
        <type>CRYPT_BIT_BLOB</type>
      </field>
      <field offset="32" name="CRLIssuer">
        <type>CERT_ALT_NAME_INFO</type>
      </field>
    </struct>
    <typedef name="CRL_DIST_POINT">
      <struct name="_CRL_DIST_POINT" />
    </typedef>
    <typedef name="PCRL_DIST_POINT">
      <ptr>
        <struct name="_CRL_DIST_POINT" />
      </ptr>
    </typedef>
    <struct name="_CRL_DIST_POINTS_INFO">
      <field offset="0" name="cDistPoint">
        <type>DWORD</type>
      </field>
      <field offset="4" name="rgDistPoint">
        <type>PCRL_DIST_POINT</type>
      </field>
    </struct>
    <typedef name="CRL_DIST_POINTS_INFO">
      <struct name="_CRL_DIST_POINTS_INFO" />
    </typedef>
    <typedef name="PCRL_DIST_POINTS_INFO">
      <ptr>
        <struct name="_CRL_DIST_POINTS_INFO" />
      </ptr>
    </typedef>
    <struct name="_CROSS_CERT_DIST_POINTS_INFO">
      <field offset="0" name="dwSyncDeltaTime">
        <type>DWORD</type>
      </field>
      <field offset="4" name="cDistPoint">
        <type>DWORD</type>
      </field>
      <field offset="8" name="rgDistPoint">
        <type>PCERT_ALT_NAME_INFO</type>
      </field>
    </struct>
    <typedef name="CROSS_CERT_DIST_POINTS_INFO">
      <struct name="_CROSS_CERT_DIST_POINTS_INFO" />
    </typedef>
    <typedef name="PCROSS_CERT_DIST_POINTS_INFO">
      <ptr>
        <struct name="_CROSS_CERT_DIST_POINTS_INFO" />
      </ptr>
    </typedef>
    <struct name="_CERT_PAIR">
      <field offset="0" name="Forward">
        <type>CERT_BLOB</type>
      </field>
      <field offset="8" name="Reverse">
        <type>CERT_BLOB</type>
      </field>
    </struct>
    <typedef name="CERT_PAIR">
      <struct name="_CERT_PAIR" />
    </typedef>
    <typedef name="PCERT_PAIR">
      <ptr>
        <struct name="_CERT_PAIR" />
      </ptr>
    </typedef>
    <struct name="_CRL_ISSUING_DIST_POINT">
      <field offset="0" name="DistPointName">
        <type>CRL_DIST_POINT_NAME</type>
      </field>
      <field offset="12" name="fOnlyContainsUserCerts">
        <type>BOOL</type>
      </field>
      <field offset="16" name="fOnlyContainsCACerts">
        <type>BOOL</type>
      </field>
      <field offset="24" name="OnlySomeReasonFlags">
        <type>CRYPT_BIT_BLOB</type>
      </field>
      <field offset="36" name="fIndirectCRL">
        <type>BOOL</type>
      </field>
    </struct>
    <typedef name="CRL_ISSUING_DIST_POINT">
      <struct name="_CRL_ISSUING_DIST_POINT" />
    </typedef>
    <typedef name="PCRL_ISSUING_DIST_POINT">
      <ptr>
        <struct name="_CRL_ISSUING_DIST_POINT" />
      </ptr>
    </typedef>
    <struct name="_CERT_GENERAL_SUBTREE">
      <field offset="0" name="Base">
        <type>CERT_ALT_NAME_ENTRY</type>
      </field>
      <field offset="12" name="dwMinimum">
        <type>DWORD</type>
      </field>
      <field offset="16" name="fMaximum">
        <type>BOOL</type>
      </field>
      <field offset="20" name="dwMaximum">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CERT_GENERAL_SUBTREE">
      <struct name="_CERT_GENERAL_SUBTREE" />
    </typedef>
    <typedef name="PCERT_GENERAL_SUBTREE">
      <ptr>
        <struct name="_CERT_GENERAL_SUBTREE" />
      </ptr>
    </typedef>
    <struct name="_CERT_NAME_CONSTRAINTS_INFO">
      <field offset="0" name="cPermittedSubtree">
        <type>DWORD</type>
      </field>
      <field offset="4" name="rgPermittedSubtree">
        <type>PCERT_GENERAL_SUBTREE</type>
      </field>
      <field offset="8" name="cExcludedSubtree">
        <type>DWORD</type>
      </field>
      <field offset="12" name="rgExcludedSubtree">
        <type>PCERT_GENERAL_SUBTREE</type>
      </field>
    </struct>
    <typedef name="CERT_NAME_CONSTRAINTS_INFO">
      <struct name="_CERT_NAME_CONSTRAINTS_INFO" />
    </typedef>
    <typedef name="PCERT_NAME_CONSTRAINTS_INFO">
      <ptr>
        <struct name="_CERT_NAME_CONSTRAINTS_INFO" />
      </ptr>
    </typedef>
    <struct name="_CERT_DSS_PARAMETERS">
      <field offset="0" name="p">
        <type>CRYPT_UINT_BLOB</type>
      </field>
      <field offset="8" name="q">
        <type>CRYPT_UINT_BLOB</type>
      </field>
      <field offset="16" name="g">
        <type>CRYPT_UINT_BLOB</type>
      </field>
    </struct>
    <typedef name="CERT_DSS_PARAMETERS">
      <struct name="_CERT_DSS_PARAMETERS" />
    </typedef>
    <typedef name="PCERT_DSS_PARAMETERS">
      <ptr>
        <struct name="_CERT_DSS_PARAMETERS" />
      </ptr>
    </typedef>
    <struct name="_CERT_DH_PARAMETERS">
      <field offset="0" name="p">
        <type>CRYPT_UINT_BLOB</type>
      </field>
      <field offset="8" name="g">
        <type>CRYPT_UINT_BLOB</type>
      </field>
    </struct>
    <typedef name="CERT_DH_PARAMETERS">
      <struct name="_CERT_DH_PARAMETERS" />
    </typedef>
    <typedef name="PCERT_DH_PARAMETERS">
      <ptr>
        <struct name="_CERT_DH_PARAMETERS" />
      </ptr>
    </typedef>
    <struct name="_CERT_ECC_SIGNATURE">
      <field offset="0" name="r">
        <type>CRYPT_UINT_BLOB</type>
      </field>
      <field offset="8" name="s">
        <type>CRYPT_UINT_BLOB</type>
      </field>
    </struct>
    <typedef name="CERT_ECC_SIGNATURE">
      <struct name="_CERT_ECC_SIGNATURE" />
    </typedef>
    <typedef name="PCERT_ECC_SIGNATURE">
      <ptr>
        <struct name="_CERT_ECC_SIGNATURE" />
      </ptr>
    </typedef>
    <struct name="_CERT_X942_DH_VALIDATION_PARAMS">
      <field offset="0" name="seed">
        <type>CRYPT_BIT_BLOB</type>
      </field>
      <field offset="12" name="pgenCounter">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CERT_X942_DH_VALIDATION_PARAMS">
      <struct name="_CERT_X942_DH_VALIDATION_PARAMS" />
    </typedef>
    <typedef name="PCERT_X942_DH_VALIDATION_PARAMS">
      <ptr>
        <struct name="_CERT_X942_DH_VALIDATION_PARAMS" />
      </ptr>
    </typedef>
    <struct name="_CERT_X942_DH_PARAMETERS">
      <field offset="0" name="p">
        <type>CRYPT_UINT_BLOB</type>
      </field>
      <field offset="8" name="g">
        <type>CRYPT_UINT_BLOB</type>
      </field>
      <field offset="16" name="q">
        <type>CRYPT_UINT_BLOB</type>
      </field>
      <field offset="24" name="j">
        <type>CRYPT_UINT_BLOB</type>
      </field>
      <field offset="32" name="pValidationParams">
        <type>PCERT_X942_DH_VALIDATION_PARAMS</type>
      </field>
    </struct>
    <typedef name="CERT_X942_DH_PARAMETERS">
      <struct name="_CERT_X942_DH_PARAMETERS" />
    </typedef>
    <typedef name="PCERT_X942_DH_PARAMETERS">
      <ptr>
        <struct name="_CERT_X942_DH_PARAMETERS" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_X942_OTHER_INFO">
      <field offset="0" name="pszContentEncryptionObjId">
        <type>LPSTR</type>
      </field>
      <field offset="4" name="rgbCounter">
        <arr length="4">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="8" name="rgbKeyLength">
        <arr length="4">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="16" name="PubInfo">
        <type>CRYPT_DATA_BLOB</type>
      </field>
    </struct>
    <typedef name="CRYPT_X942_OTHER_INFO">
      <struct name="_CRYPT_X942_OTHER_INFO" />
    </typedef>
    <typedef name="PCRYPT_X942_OTHER_INFO">
      <ptr>
        <struct name="_CRYPT_X942_OTHER_INFO" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_ECC_CMS_SHARED_INFO">
      <field offset="0" name="Algorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="16" name="EntityUInfo">
        <type>CRYPT_DATA_BLOB</type>
      </field>
      <field offset="24" name="rgbSuppPubInfo">
        <arr length="4">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="CRYPT_ECC_CMS_SHARED_INFO">
      <struct name="_CRYPT_ECC_CMS_SHARED_INFO" />
    </typedef>
    <typedef name="PCRYPT_ECC_CMS_SHARED_INFO">
      <ptr>
        <struct name="_CRYPT_ECC_CMS_SHARED_INFO" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_RC2_CBC_PARAMETERS">
      <field offset="0" name="dwVersion">
        <type>DWORD</type>
      </field>
      <field offset="4" name="fIV">
        <type>BOOL</type>
      </field>
      <field offset="8" name="rgbIV">
        <arr length="8">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="CRYPT_RC2_CBC_PARAMETERS">
      <struct name="_CRYPT_RC2_CBC_PARAMETERS" />
    </typedef>
    <typedef name="PCRYPT_RC2_CBC_PARAMETERS">
      <ptr>
        <struct name="_CRYPT_RC2_CBC_PARAMETERS" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_SMIME_CAPABILITY">
      <field offset="0" name="pszObjId">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="Parameters">
        <type>CRYPT_OBJID_BLOB</type>
      </field>
    </struct>
    <typedef name="CRYPT_SMIME_CAPABILITY">
      <struct name="_CRYPT_SMIME_CAPABILITY" />
    </typedef>
    <typedef name="PCRYPT_SMIME_CAPABILITY">
      <ptr>
        <struct name="_CRYPT_SMIME_CAPABILITY" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_SMIME_CAPABILITIES">
      <field offset="0" name="cCapability">
        <type>DWORD</type>
      </field>
      <field offset="4" name="rgCapability">
        <type>PCRYPT_SMIME_CAPABILITY</type>
      </field>
    </struct>
    <typedef name="CRYPT_SMIME_CAPABILITIES">
      <struct name="_CRYPT_SMIME_CAPABILITIES" />
    </typedef>
    <typedef name="PCRYPT_SMIME_CAPABILITIES">
      <ptr>
        <struct name="_CRYPT_SMIME_CAPABILITIES" />
      </ptr>
    </typedef>
    <struct name="_CERT_QC_STATEMENT">
      <field offset="0" name="pszStatementId">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="StatementInfo">
        <type>CRYPT_OBJID_BLOB</type>
      </field>
    </struct>
    <typedef name="CERT_QC_STATEMENT">
      <struct name="_CERT_QC_STATEMENT" />
    </typedef>
    <typedef name="PCERT_QC_STATEMENT">
      <ptr>
        <struct name="_CERT_QC_STATEMENT" />
      </ptr>
    </typedef>
    <struct name="_CERT_QC_STATEMENTS_EXT_INFO">
      <field offset="0" name="cStatement">
        <type>DWORD</type>
      </field>
      <field offset="4" name="rgStatement">
        <type>PCERT_QC_STATEMENT</type>
      </field>
    </struct>
    <typedef name="CERT_QC_STATEMENTS_EXT_INFO">
      <struct name="_CERT_QC_STATEMENTS_EXT_INFO" />
    </typedef>
    <typedef name="PCERT_QC_STATEMENTS_EXT_INFO">
      <ptr>
        <struct name="_CERT_QC_STATEMENTS_EXT_INFO" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_MASK_GEN_ALGORITHM">
      <field offset="0" name="pszObjId">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="HashAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
    </struct>
    <typedef name="CRYPT_MASK_GEN_ALGORITHM">
      <struct name="_CRYPT_MASK_GEN_ALGORITHM" />
    </typedef>
    <typedef name="PCRYPT_MASK_GEN_ALGORITHM">
      <ptr>
        <struct name="_CRYPT_MASK_GEN_ALGORITHM" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_RSA_SSA_PSS_PARAMETERS">
      <field offset="0" name="HashAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="16" name="MaskGenAlgorithm">
        <type>CRYPT_MASK_GEN_ALGORITHM</type>
      </field>
      <field offset="32" name="dwSaltLength">
        <type>DWORD</type>
      </field>
      <field offset="36" name="dwTrailerField">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CRYPT_RSA_SSA_PSS_PARAMETERS">
      <struct name="_CRYPT_RSA_SSA_PSS_PARAMETERS" />
    </typedef>
    <typedef name="PCRYPT_RSA_SSA_PSS_PARAMETERS">
      <ptr>
        <struct name="_CRYPT_RSA_SSA_PSS_PARAMETERS" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_PSOURCE_ALGORITHM">
      <field offset="0" name="pszObjId">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="EncodingParameters">
        <type>CRYPT_DATA_BLOB</type>
      </field>
    </struct>
    <typedef name="CRYPT_PSOURCE_ALGORITHM">
      <struct name="_CRYPT_PSOURCE_ALGORITHM" />
    </typedef>
    <typedef name="PCRYPT_PSOURCE_ALGORITHM">
      <ptr>
        <struct name="_CRYPT_PSOURCE_ALGORITHM" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_RSAES_OAEP_PARAMETERS">
      <field offset="0" name="HashAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="16" name="MaskGenAlgorithm">
        <type>CRYPT_MASK_GEN_ALGORITHM</type>
      </field>
      <field offset="32" name="PSourceAlgorithm">
        <type>CRYPT_PSOURCE_ALGORITHM</type>
      </field>
    </struct>
    <typedef name="CRYPT_RSAES_OAEP_PARAMETERS">
      <struct name="_CRYPT_RSAES_OAEP_PARAMETERS" />
    </typedef>
    <typedef name="PCRYPT_RSAES_OAEP_PARAMETERS">
      <ptr>
        <struct name="_CRYPT_RSAES_OAEP_PARAMETERS" />
      </ptr>
    </typedef>
    <struct name="_CMC_TAGGED_ATTRIBUTE">
      <field offset="0" name="dwBodyPartID">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Attribute">
        <type>CRYPT_ATTRIBUTE</type>
      </field>
    </struct>
    <typedef name="CMC_TAGGED_ATTRIBUTE">
      <struct name="_CMC_TAGGED_ATTRIBUTE" />
    </typedef>
    <typedef name="PCMC_TAGGED_ATTRIBUTE">
      <ptr>
        <struct name="_CMC_TAGGED_ATTRIBUTE" />
      </ptr>
    </typedef>
    <struct name="_CMC_TAGGED_CERT_REQUEST">
      <field offset="0" name="dwBodyPartID">
        <type>DWORD</type>
      </field>
      <field offset="8" name="SignedCertRequest">
        <type>CRYPT_DER_BLOB</type>
      </field>
    </struct>
    <typedef name="CMC_TAGGED_CERT_REQUEST">
      <struct name="_CMC_TAGGED_CERT_REQUEST" />
    </typedef>
    <typedef name="PCMC_TAGGED_CERT_REQUEST">
      <ptr>
        <struct name="_CMC_TAGGED_CERT_REQUEST" />
      </ptr>
    </typedef>
    <struct name="_CMC_TAGGED_REQUEST">
      <field offset="0" name="dwTaggedRequestChoice">
        <type>DWORD</type>
      </field>
      <field offset="4">
        <union>
          <alt name="pTaggedCertRequest">
            <type>PCMC_TAGGED_CERT_REQUEST</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="CMC_TAGGED_REQUEST">
      <struct name="_CMC_TAGGED_REQUEST" />
    </typedef>
    <typedef name="PCMC_TAGGED_REQUEST">
      <ptr>
        <struct name="_CMC_TAGGED_REQUEST" />
      </ptr>
    </typedef>
    <struct name="_CMC_TAGGED_CONTENT_INFO">
      <field offset="0" name="dwBodyPartID">
        <type>DWORD</type>
      </field>
      <field offset="8" name="EncodedContentInfo">
        <type>CRYPT_DER_BLOB</type>
      </field>
    </struct>
    <typedef name="CMC_TAGGED_CONTENT_INFO">
      <struct name="_CMC_TAGGED_CONTENT_INFO" />
    </typedef>
    <typedef name="PCMC_TAGGED_CONTENT_INFO">
      <ptr>
        <struct name="_CMC_TAGGED_CONTENT_INFO" />
      </ptr>
    </typedef>
    <struct name="_CMC_TAGGED_OTHER_MSG">
      <field offset="0" name="dwBodyPartID">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pszObjId">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="Value">
        <type>CRYPT_OBJID_BLOB</type>
      </field>
    </struct>
    <typedef name="CMC_TAGGED_OTHER_MSG">
      <struct name="_CMC_TAGGED_OTHER_MSG" />
    </typedef>
    <typedef name="PCMC_TAGGED_OTHER_MSG">
      <ptr>
        <struct name="_CMC_TAGGED_OTHER_MSG" />
      </ptr>
    </typedef>
    <struct name="_CMC_DATA_INFO">
      <field offset="0" name="cTaggedAttribute">
        <type>DWORD</type>
      </field>
      <field offset="4" name="rgTaggedAttribute">
        <type>PCMC_TAGGED_ATTRIBUTE</type>
      </field>
      <field offset="8" name="cTaggedRequest">
        <type>DWORD</type>
      </field>
      <field offset="12" name="rgTaggedRequest">
        <type>PCMC_TAGGED_REQUEST</type>
      </field>
      <field offset="16" name="cTaggedContentInfo">
        <type>DWORD</type>
      </field>
      <field offset="20" name="rgTaggedContentInfo">
        <type>PCMC_TAGGED_CONTENT_INFO</type>
      </field>
      <field offset="24" name="cTaggedOtherMsg">
        <type>DWORD</type>
      </field>
      <field offset="28" name="rgTaggedOtherMsg">
        <type>PCMC_TAGGED_OTHER_MSG</type>
      </field>
    </struct>
    <typedef name="CMC_DATA_INFO">
      <struct name="_CMC_DATA_INFO" />
    </typedef>
    <typedef name="PCMC_DATA_INFO">
      <ptr>
        <struct name="_CMC_DATA_INFO" />
      </ptr>
    </typedef>
    <struct name="_CMC_RESPONSE_INFO">
      <field offset="0" name="cTaggedAttribute">
        <type>DWORD</type>
      </field>
      <field offset="4" name="rgTaggedAttribute">
        <type>PCMC_TAGGED_ATTRIBUTE</type>
      </field>
      <field offset="8" name="cTaggedContentInfo">
        <type>DWORD</type>
      </field>
      <field offset="12" name="rgTaggedContentInfo">
        <type>PCMC_TAGGED_CONTENT_INFO</type>
      </field>
      <field offset="16" name="cTaggedOtherMsg">
        <type>DWORD</type>
      </field>
      <field offset="20" name="rgTaggedOtherMsg">
        <type>PCMC_TAGGED_OTHER_MSG</type>
      </field>
    </struct>
    <typedef name="CMC_RESPONSE_INFO">
      <struct name="_CMC_RESPONSE_INFO" />
    </typedef>
    <typedef name="PCMC_RESPONSE_INFO">
      <ptr>
        <struct name="_CMC_RESPONSE_INFO" />
      </ptr>
    </typedef>
    <struct name="_CMC_PEND_INFO">
      <field offset="0" name="PendToken">
        <type>CRYPT_DATA_BLOB</type>
      </field>
      <field offset="8" name="PendTime">
        <type>FILETIME</type>
      </field>
    </struct>
    <typedef name="CMC_PEND_INFO">
      <struct name="_CMC_PEND_INFO" />
    </typedef>
    <typedef name="PCMC_PEND_INFO">
      <ptr>
        <struct name="_CMC_PEND_INFO" />
      </ptr>
    </typedef>
    <struct name="_CMC_STATUS_INFO">
      <field offset="0" name="dwStatus">
        <type>DWORD</type>
      </field>
      <field offset="4" name="cBodyList">
        <type>DWORD</type>
      </field>
      <field offset="8" name="rgdwBodyList">
        <ptr>
          <type>DWORD</type>
        </ptr>
      </field>
      <field offset="12" name="pwszStatusString">
        <type>LPWSTR</type>
      </field>
      <field offset="16" name="dwOtherInfoChoice">
        <type>DWORD</type>
      </field>
      <field offset="20">
        <union>
          <alt name="dwFailInfo">
            <type>DWORD</type>
          </alt>
          <alt name="pPendInfo">
            <type>PCMC_PEND_INFO</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="CMC_STATUS_INFO">
      <struct name="_CMC_STATUS_INFO" />
    </typedef>
    <typedef name="PCMC_STATUS_INFO">
      <ptr>
        <struct name="_CMC_STATUS_INFO" />
      </ptr>
    </typedef>
    <struct name="_CMC_ADD_EXTENSIONS_INFO">
      <field offset="0" name="dwCmcDataReference">
        <type>DWORD</type>
      </field>
      <field offset="4" name="cCertReference">
        <type>DWORD</type>
      </field>
      <field offset="8" name="rgdwCertReference">
        <ptr>
          <type>DWORD</type>
        </ptr>
      </field>
      <field offset="12" name="cExtension">
        <type>DWORD</type>
      </field>
      <field offset="16" name="rgExtension">
        <type>PCERT_EXTENSION</type>
      </field>
    </struct>
    <typedef name="CMC_ADD_EXTENSIONS_INFO">
      <struct name="_CMC_ADD_EXTENSIONS_INFO" />
    </typedef>
    <typedef name="PCMC_ADD_EXTENSIONS_INFO">
      <ptr>
        <struct name="_CMC_ADD_EXTENSIONS_INFO" />
      </ptr>
    </typedef>
    <struct name="_CMC_ADD_ATTRIBUTES_INFO">
      <field offset="0" name="dwCmcDataReference">
        <type>DWORD</type>
      </field>
      <field offset="4" name="cCertReference">
        <type>DWORD</type>
      </field>
      <field offset="8" name="rgdwCertReference">
        <ptr>
          <type>DWORD</type>
        </ptr>
      </field>
      <field offset="12" name="cAttribute">
        <type>DWORD</type>
      </field>
      <field offset="16" name="rgAttribute">
        <type>PCRYPT_ATTRIBUTE</type>
      </field>
    </struct>
    <typedef name="CMC_ADD_ATTRIBUTES_INFO">
      <struct name="_CMC_ADD_ATTRIBUTES_INFO" />
    </typedef>
    <typedef name="PCMC_ADD_ATTRIBUTES_INFO">
      <ptr>
        <struct name="_CMC_ADD_ATTRIBUTES_INFO" />
      </ptr>
    </typedef>
    <struct name="_CERT_TEMPLATE_EXT">
      <field offset="0" name="pszObjId">
        <type>LPSTR</type>
      </field>
      <field offset="4" name="dwMajorVersion">
        <type>DWORD</type>
      </field>
      <field offset="8" name="fMinorVersion">
        <type>BOOL</type>
      </field>
      <field offset="12" name="dwMinorVersion">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CERT_TEMPLATE_EXT">
      <struct name="_CERT_TEMPLATE_EXT" />
    </typedef>
    <typedef name="PCERT_TEMPLATE_EXT">
      <ptr>
        <struct name="_CERT_TEMPLATE_EXT" />
      </ptr>
    </typedef>
    <struct name="_CERT_HASHED_URL">
      <field offset="0" name="HashAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="16" name="Hash">
        <type>CRYPT_HASH_BLOB</type>
      </field>
      <field offset="24" name="pwszUrl">
        <type>LPWSTR</type>
      </field>
    </struct>
    <typedef name="CERT_HASHED_URL">
      <struct name="_CERT_HASHED_URL" />
    </typedef>
    <typedef name="PCERT_HASHED_URL">
      <ptr>
        <struct name="_CERT_HASHED_URL" />
      </ptr>
    </typedef>
    <struct name="_CERT_LOGOTYPE_DETAILS">
      <field offset="0" name="pwszMimeType">
        <type>LPWSTR</type>
      </field>
      <field offset="4" name="cHashedUrl">
        <type>DWORD</type>
      </field>
      <field offset="8" name="rgHashedUrl">
        <type>PCERT_HASHED_URL</type>
      </field>
    </struct>
    <typedef name="CERT_LOGOTYPE_DETAILS">
      <struct name="_CERT_LOGOTYPE_DETAILS" />
    </typedef>
    <typedef name="PCERT_LOGOTYPE_DETAILS">
      <ptr>
        <struct name="_CERT_LOGOTYPE_DETAILS" />
      </ptr>
    </typedef>
    <struct name="_CERT_LOGOTYPE_REFERENCE">
      <field offset="0" name="cHashedUrl">
        <type>DWORD</type>
      </field>
      <field offset="4" name="rgHashedUrl">
        <type>PCERT_HASHED_URL</type>
      </field>
    </struct>
    <typedef name="CERT_LOGOTYPE_REFERENCE">
      <struct name="_CERT_LOGOTYPE_REFERENCE" />
    </typedef>
    <typedef name="PCERT_LOGOTYPE_REFERENCE">
      <ptr>
        <struct name="_CERT_LOGOTYPE_REFERENCE" />
      </ptr>
    </typedef>
    <struct name="_CERT_LOGOTYPE_IMAGE_INFO">
      <field offset="0" name="dwLogotypeImageInfoChoice">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwFileSize">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwXSize">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwYSize">
        <type>DWORD</type>
      </field>
      <field offset="16" name="dwLogotypeImageResolutionChoice">
        <type>DWORD</type>
      </field>
      <field offset="20">
        <union>
          <alt name="dwNumBits">
            <type>DWORD</type>
          </alt>
          <alt name="dwTableSize">
            <type>DWORD</type>
          </alt>
        </union>
      </field>
      <field offset="24" name="pwszLanguage">
        <type>LPWSTR</type>
      </field>
    </struct>
    <typedef name="CERT_LOGOTYPE_IMAGE_INFO">
      <struct name="_CERT_LOGOTYPE_IMAGE_INFO" />
    </typedef>
    <typedef name="PCERT_LOGOTYPE_IMAGE_INFO">
      <ptr>
        <struct name="_CERT_LOGOTYPE_IMAGE_INFO" />
      </ptr>
    </typedef>
    <struct name="_CERT_LOGOTYPE_IMAGE">
      <field offset="0" name="LogotypeDetails">
        <type>CERT_LOGOTYPE_DETAILS</type>
      </field>
      <field offset="12" name="pLogotypeImageInfo">
        <type>PCERT_LOGOTYPE_IMAGE_INFO</type>
      </field>
    </struct>
    <typedef name="CERT_LOGOTYPE_IMAGE">
      <struct name="_CERT_LOGOTYPE_IMAGE" />
    </typedef>
    <typedef name="PCERT_LOGOTYPE_IMAGE">
      <ptr>
        <struct name="_CERT_LOGOTYPE_IMAGE" />
      </ptr>
    </typedef>
    <struct name="_CERT_LOGOTYPE_AUDIO_INFO">
      <field offset="0" name="dwFileSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwPlayTime">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwChannels">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwSampleRate">
        <type>DWORD</type>
      </field>
      <field offset="16" name="pwszLanguage">
        <type>LPWSTR</type>
      </field>
    </struct>
    <typedef name="CERT_LOGOTYPE_AUDIO_INFO">
      <struct name="_CERT_LOGOTYPE_AUDIO_INFO" />
    </typedef>
    <typedef name="PCERT_LOGOTYPE_AUDIO_INFO">
      <ptr>
        <struct name="_CERT_LOGOTYPE_AUDIO_INFO" />
      </ptr>
    </typedef>
    <struct name="_CERT_LOGOTYPE_AUDIO">
      <field offset="0" name="LogotypeDetails">
        <type>CERT_LOGOTYPE_DETAILS</type>
      </field>
      <field offset="12" name="pLogotypeAudioInfo">
        <type>PCERT_LOGOTYPE_AUDIO_INFO</type>
      </field>
    </struct>
    <typedef name="CERT_LOGOTYPE_AUDIO">
      <struct name="_CERT_LOGOTYPE_AUDIO" />
    </typedef>
    <typedef name="PCERT_LOGOTYPE_AUDIO">
      <ptr>
        <struct name="_CERT_LOGOTYPE_AUDIO" />
      </ptr>
    </typedef>
    <struct name="_CERT_LOGOTYPE_DATA">
      <field offset="0" name="cLogotypeImage">
        <type>DWORD</type>
      </field>
      <field offset="4" name="rgLogotypeImage">
        <type>PCERT_LOGOTYPE_IMAGE</type>
      </field>
      <field offset="8" name="cLogotypeAudio">
        <type>DWORD</type>
      </field>
      <field offset="12" name="rgLogotypeAudio">
        <type>PCERT_LOGOTYPE_AUDIO</type>
      </field>
    </struct>
    <typedef name="CERT_LOGOTYPE_DATA">
      <struct name="_CERT_LOGOTYPE_DATA" />
    </typedef>
    <typedef name="PCERT_LOGOTYPE_DATA">
      <ptr>
        <struct name="_CERT_LOGOTYPE_DATA" />
      </ptr>
    </typedef>
    <struct name="_CERT_LOGOTYPE_INFO">
      <field offset="0" name="dwLogotypeInfoChoice">
        <type>DWORD</type>
      </field>
      <field offset="4">
        <union>
          <alt name="pLogotypeDirectInfo">
            <type>PCERT_LOGOTYPE_DATA</type>
          </alt>
          <alt name="pLogotypeIndirectInfo">
            <type>PCERT_LOGOTYPE_REFERENCE</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="CERT_LOGOTYPE_INFO">
      <struct name="_CERT_LOGOTYPE_INFO" />
    </typedef>
    <typedef name="PCERT_LOGOTYPE_INFO">
      <ptr>
        <struct name="_CERT_LOGOTYPE_INFO" />
      </ptr>
    </typedef>
    <struct name="_CERT_OTHER_LOGOTYPE_INFO">
      <field offset="0" name="pszObjId">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="LogotypeInfo">
        <type>CERT_LOGOTYPE_INFO</type>
      </field>
    </struct>
    <typedef name="CERT_OTHER_LOGOTYPE_INFO">
      <struct name="_CERT_OTHER_LOGOTYPE_INFO" />
    </typedef>
    <typedef name="PCERT_OTHER_LOGOTYPE_INFO">
      <ptr>
        <struct name="_CERT_OTHER_LOGOTYPE_INFO" />
      </ptr>
    </typedef>
    <struct name="_CERT_LOGOTYPE_EXT_INFO">
      <field offset="0" name="cCommunityLogo">
        <type>DWORD</type>
      </field>
      <field offset="4" name="rgCommunityLogo">
        <type>PCERT_LOGOTYPE_INFO</type>
      </field>
      <field offset="8" name="pIssuerLogo">
        <type>PCERT_LOGOTYPE_INFO</type>
      </field>
      <field offset="12" name="pSubjectLogo">
        <type>PCERT_LOGOTYPE_INFO</type>
      </field>
      <field offset="16" name="cOtherLogo">
        <type>DWORD</type>
      </field>
      <field offset="20" name="rgOtherLogo">
        <type>PCERT_OTHER_LOGOTYPE_INFO</type>
      </field>
    </struct>
    <typedef name="CERT_LOGOTYPE_EXT_INFO">
      <struct name="_CERT_LOGOTYPE_EXT_INFO" />
    </typedef>
    <typedef name="PCERT_LOGOTYPE_EXT_INFO">
      <ptr>
        <struct name="_CERT_LOGOTYPE_EXT_INFO" />
      </ptr>
    </typedef>
    <struct name="_CERT_BIOMETRIC_DATA">
      <field offset="0" name="dwTypeOfBiometricDataChoice">
        <type>DWORD</type>
      </field>
      <field offset="4">
        <union>
          <alt name="dwPredefined">
            <type>DWORD</type>
          </alt>
          <alt name="pszObjId">
            <type>LPSTR</type>
          </alt>
        </union>
      </field>
      <field offset="8" name="HashedUrl">
        <type>CERT_HASHED_URL</type>
      </field>
    </struct>
    <typedef name="CERT_BIOMETRIC_DATA">
      <struct name="_CERT_BIOMETRIC_DATA" />
    </typedef>
    <typedef name="PCERT_BIOMETRIC_DATA">
      <ptr>
        <struct name="_CERT_BIOMETRIC_DATA" />
      </ptr>
    </typedef>
    <struct name="_CERT_BIOMETRIC_EXT_INFO">
      <field offset="0" name="cBiometricData">
        <type>DWORD</type>
      </field>
      <field offset="4" name="rgBiometricData">
        <type>PCERT_BIOMETRIC_DATA</type>
      </field>
    </struct>
    <typedef name="CERT_BIOMETRIC_EXT_INFO">
      <struct name="_CERT_BIOMETRIC_EXT_INFO" />
    </typedef>
    <typedef name="PCERT_BIOMETRIC_EXT_INFO">
      <ptr>
        <struct name="_CERT_BIOMETRIC_EXT_INFO" />
      </ptr>
    </typedef>
    <struct name="_OCSP_SIGNATURE_INFO">
      <field offset="0" name="SignatureAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="16" name="Signature">
        <type>CRYPT_BIT_BLOB</type>
      </field>
      <field offset="28" name="cCertEncoded">
        <type>DWORD</type>
      </field>
      <field offset="32" name="rgCertEncoded">
        <type>PCERT_BLOB</type>
      </field>
    </struct>
    <typedef name="OCSP_SIGNATURE_INFO">
      <struct name="_OCSP_SIGNATURE_INFO" />
    </typedef>
    <typedef name="POCSP_SIGNATURE_INFO">
      <ptr>
        <struct name="_OCSP_SIGNATURE_INFO" />
      </ptr>
    </typedef>
    <struct name="_OCSP_SIGNED_REQUEST_INFO">
      <field offset="0" name="ToBeSigned">
        <type>CRYPT_DER_BLOB</type>
      </field>
      <field offset="8" name="pOptionalSignatureInfo">
        <type>POCSP_SIGNATURE_INFO</type>
      </field>
    </struct>
    <typedef name="OCSP_SIGNED_REQUEST_INFO">
      <struct name="_OCSP_SIGNED_REQUEST_INFO" />
    </typedef>
    <typedef name="POCSP_SIGNED_REQUEST_INFO">
      <ptr>
        <struct name="_OCSP_SIGNED_REQUEST_INFO" />
      </ptr>
    </typedef>
    <struct name="_OCSP_CERT_ID">
      <field offset="0" name="HashAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="16" name="IssuerNameHash">
        <type>CRYPT_HASH_BLOB</type>
      </field>
      <field offset="24" name="IssuerKeyHash">
        <type>CRYPT_HASH_BLOB</type>
      </field>
      <field offset="32" name="SerialNumber">
        <type>CRYPT_INTEGER_BLOB</type>
      </field>
    </struct>
    <typedef name="OCSP_CERT_ID">
      <struct name="_OCSP_CERT_ID" />
    </typedef>
    <typedef name="POCSP_CERT_ID">
      <ptr>
        <struct name="_OCSP_CERT_ID" />
      </ptr>
    </typedef>
    <struct name="_OCSP_REQUEST_ENTRY">
      <field offset="0" name="CertId">
        <type>OCSP_CERT_ID</type>
      </field>
      <field offset="36" name="cExtension">
        <type>DWORD</type>
      </field>
      <field offset="40" name="rgExtension">
        <type>PCERT_EXTENSION</type>
      </field>
    </struct>
    <typedef name="OCSP_REQUEST_ENTRY">
      <struct name="_OCSP_REQUEST_ENTRY" />
    </typedef>
    <typedef name="POCSP_REQUEST_ENTRY">
      <ptr>
        <struct name="_OCSP_REQUEST_ENTRY" />
      </ptr>
    </typedef>
    <struct name="_OCSP_REQUEST_INFO">
      <field offset="0" name="dwVersion">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pRequestorName">
        <type>PCERT_ALT_NAME_ENTRY</type>
      </field>
      <field offset="8" name="cRequestEntry">
        <type>DWORD</type>
      </field>
      <field offset="12" name="rgRequestEntry">
        <type>POCSP_REQUEST_ENTRY</type>
      </field>
      <field offset="16" name="cExtension">
        <type>DWORD</type>
      </field>
      <field offset="20" name="rgExtension">
        <type>PCERT_EXTENSION</type>
      </field>
    </struct>
    <typedef name="OCSP_REQUEST_INFO">
      <struct name="_OCSP_REQUEST_INFO" />
    </typedef>
    <typedef name="POCSP_REQUEST_INFO">
      <ptr>
        <struct name="_OCSP_REQUEST_INFO" />
      </ptr>
    </typedef>
    <struct name="_OCSP_RESPONSE_INFO">
      <field offset="0" name="dwStatus">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pszObjId">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="Value">
        <type>CRYPT_OBJID_BLOB</type>
      </field>
    </struct>
    <typedef name="OCSP_RESPONSE_INFO">
      <struct name="_OCSP_RESPONSE_INFO" />
    </typedef>
    <typedef name="POCSP_RESPONSE_INFO">
      <ptr>
        <struct name="_OCSP_RESPONSE_INFO" />
      </ptr>
    </typedef>
    <struct name="_OCSP_BASIC_SIGNED_RESPONSE_INFO">
      <field offset="0" name="ToBeSigned">
        <type>CRYPT_DER_BLOB</type>
      </field>
      <field offset="8" name="SignatureInfo">
        <type>OCSP_SIGNATURE_INFO</type>
      </field>
    </struct>
    <typedef name="OCSP_BASIC_SIGNED_RESPONSE_INFO">
      <struct name="_OCSP_BASIC_SIGNED_RESPONSE_INFO" />
    </typedef>
    <typedef name="POCSP_BASIC_SIGNED_RESPONSE_INFO">
      <ptr>
        <struct name="_OCSP_BASIC_SIGNED_RESPONSE_INFO" />
      </ptr>
    </typedef>
    <struct name="_OCSP_BASIC_REVOKED_INFO">
      <field offset="0" name="RevocationDate">
        <type>FILETIME</type>
      </field>
      <field offset="8" name="dwCrlReasonCode">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="OCSP_BASIC_REVOKED_INFO">
      <struct name="_OCSP_BASIC_REVOKED_INFO" />
    </typedef>
    <typedef name="POCSP_BASIC_REVOKED_INFO">
      <ptr>
        <struct name="_OCSP_BASIC_REVOKED_INFO" />
      </ptr>
    </typedef>
    <struct name="_OCSP_BASIC_RESPONSE_ENTRY">
      <field offset="0" name="CertId">
        <type>OCSP_CERT_ID</type>
      </field>
      <field offset="36" name="dwCertStatus">
        <type>DWORD</type>
      </field>
      <field offset="40">
        <union>
          <alt name="pRevokedInfo">
            <type>POCSP_BASIC_REVOKED_INFO</type>
          </alt>
        </union>
      </field>
      <field offset="48" name="ThisUpdate">
        <type>FILETIME</type>
      </field>
      <field offset="56" name="NextUpdate">
        <type>FILETIME</type>
      </field>
      <field offset="64" name="cExtension">
        <type>DWORD</type>
      </field>
      <field offset="68" name="rgExtension">
        <type>PCERT_EXTENSION</type>
      </field>
    </struct>
    <typedef name="OCSP_BASIC_RESPONSE_ENTRY">
      <struct name="_OCSP_BASIC_RESPONSE_ENTRY" />
    </typedef>
    <typedef name="POCSP_BASIC_RESPONSE_ENTRY">
      <ptr>
        <struct name="_OCSP_BASIC_RESPONSE_ENTRY" />
      </ptr>
    </typedef>
    <struct name="_OCSP_BASIC_RESPONSE_INFO">
      <field offset="0" name="dwVersion">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwResponderIdChoice">
        <type>DWORD</type>
      </field>
      <field offset="8">
        <union>
          <alt name="ByNameResponderId">
            <type>CERT_NAME_BLOB</type>
          </alt>
          <alt name="ByKeyResponderId">
            <type>CRYPT_HASH_BLOB</type>
          </alt>
        </union>
      </field>
      <field offset="16" name="ProducedAt">
        <type>FILETIME</type>
      </field>
      <field offset="24" name="cResponseEntry">
        <type>DWORD</type>
      </field>
      <field offset="28" name="rgResponseEntry">
        <type>POCSP_BASIC_RESPONSE_ENTRY</type>
      </field>
      <field offset="32" name="cExtension">
        <type>DWORD</type>
      </field>
      <field offset="36" name="rgExtension">
        <type>PCERT_EXTENSION</type>
      </field>
    </struct>
    <typedef name="OCSP_BASIC_RESPONSE_INFO">
      <struct name="_OCSP_BASIC_RESPONSE_INFO" />
    </typedef>
    <typedef name="POCSP_BASIC_RESPONSE_INFO">
      <ptr>
        <struct name="_OCSP_BASIC_RESPONSE_INFO" />
      </ptr>
    </typedef>
    <typedef name="HCRYPTOIDFUNCSET">
      <ptr>
        <void />
      </ptr>
    </typedef>
    <typedef name="HCRYPTOIDFUNCADDR">
      <ptr>
        <void />
      </ptr>
    </typedef>
    <struct name="_CRYPT_OID_FUNC_ENTRY">
      <field offset="0" name="pszOID">
        <type>LPCSTR</type>
      </field>
      <field offset="4" name="pvFuncAddr">
        <ptr>
          <void />
        </ptr>
      </field>
    </struct>
    <typedef name="CRYPT_OID_FUNC_ENTRY">
      <struct name="_CRYPT_OID_FUNC_ENTRY" />
    </typedef>
    <typedef name="PCRYPT_OID_FUNC_ENTRY">
      <ptr>
        <struct name="_CRYPT_OID_FUNC_ENTRY" />
      </ptr>
    </typedef>
    <typedef name="PFN_CRYPT_ENUM_OID_FUNC">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="dwEncodingType">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pszFuncName">
            <type>LPCSTR</type>
            <stack size="4" />
          </arg>
          <arg name="pszOID">
            <type>LPCSTR</type>
            <stack size="4" />
          </arg>
          <arg name="cValue">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="rgdwValueType">
            <ptr>
              <type>DWORD</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="rgpwszValueName">
            <ptr>
              <type>LPCWSTR</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="rgpbValueData">
            <ptr>
              <ptr>
                <type>BYTE</type>
              </ptr>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="rgcbValueData">
            <ptr>
              <type>DWORD</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pvArg">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="_CRYPT_OID_INFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pszOID">
        <type>LPCSTR</type>
      </field>
      <field offset="8" name="pwszName">
        <type>LPCWSTR</type>
      </field>
      <field offset="12" name="dwGroupId">
        <type>DWORD</type>
      </field>
      <field offset="16">
        <union>
          <alt name="dwValue">
            <type>DWORD</type>
          </alt>
          <alt name="Algid">
            <type>ALG_ID</type>
          </alt>
          <alt name="dwLength">
            <type>DWORD</type>
          </alt>
        </union>
      </field>
      <field offset="24" name="ExtraInfo">
        <type>CRYPT_DATA_BLOB</type>
      </field>
    </struct>
    <typedef name="CRYPT_OID_INFO">
      <struct name="_CRYPT_OID_INFO" />
    </typedef>
    <typedef name="PCRYPT_OID_INFO">
      <ptr>
        <struct name="_CRYPT_OID_INFO" />
      </ptr>
    </typedef>
    <typedef name="CCRYPT_OID_INFO">
      <type>CRYPT_OID_INFO</type>
    </typedef>
    <typedef name="PCCRYPT_OID_INFO">
      <ptr>
        <type>CRYPT_OID_INFO</type>
      </ptr>
    </typedef>
    <typedef name="PFN_CRYPT_ENUM_OID_INFO">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="pInfo">
            <type>PCCRYPT_OID_INFO</type>
            <stack size="4" />
          </arg>
          <arg name="pvArg">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="HCRYPTMSG">
      <ptr>
        <void />
      </ptr>
    </typedef>
    <struct name="_CERT_ISSUER_SERIAL_NUMBER">
      <field offset="0" name="Issuer">
        <type>CERT_NAME_BLOB</type>
      </field>
      <field offset="8" name="SerialNumber">
        <type>CRYPT_INTEGER_BLOB</type>
      </field>
    </struct>
    <typedef name="CERT_ISSUER_SERIAL_NUMBER">
      <struct name="_CERT_ISSUER_SERIAL_NUMBER" />
    </typedef>
    <typedef name="PCERT_ISSUER_SERIAL_NUMBER">
      <ptr>
        <struct name="_CERT_ISSUER_SERIAL_NUMBER" />
      </ptr>
    </typedef>
    <struct name="_CERT_ID">
      <field offset="0" name="dwIdChoice">
        <type>DWORD</type>
      </field>
      <field offset="8">
        <union>
          <alt name="IssuerSerialNumber">
            <type>CERT_ISSUER_SERIAL_NUMBER</type>
          </alt>
          <alt name="KeyId">
            <type>CRYPT_HASH_BLOB</type>
          </alt>
          <alt name="HashId">
            <type>CRYPT_HASH_BLOB</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="CERT_ID">
      <struct name="_CERT_ID" />
    </typedef>
    <typedef name="PCERT_ID">
      <ptr>
        <struct name="_CERT_ID" />
      </ptr>
    </typedef>
    <struct name="_CMSG_SIGNER_ENCODE_INFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pCertInfo">
        <type>PCERT_INFO</type>
      </field>
      <field offset="8">
        <union>
          <alt name="hCryptProv">
            <type>HCRYPTPROV</type>
          </alt>
          <alt name="hNCryptKey">
            <type>NCRYPT_KEY_HANDLE</type>
          </alt>
        </union>
      </field>
      <field offset="12" name="dwKeySpec">
        <type>DWORD</type>
      </field>
      <field offset="16" name="HashAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="28" name="pvHashAuxInfo">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="32" name="cAuthAttr">
        <type>DWORD</type>
      </field>
      <field offset="36" name="rgAuthAttr">
        <type>PCRYPT_ATTRIBUTE</type>
      </field>
      <field offset="40" name="cUnauthAttr">
        <type>DWORD</type>
      </field>
      <field offset="44" name="rgUnauthAttr">
        <type>PCRYPT_ATTRIBUTE</type>
      </field>
    </struct>
    <typedef name="CMSG_SIGNER_ENCODE_INFO">
      <struct name="_CMSG_SIGNER_ENCODE_INFO" />
    </typedef>
    <typedef name="PCMSG_SIGNER_ENCODE_INFO">
      <ptr>
        <struct name="_CMSG_SIGNER_ENCODE_INFO" />
      </ptr>
    </typedef>
    <struct name="_CMSG_SIGNED_ENCODE_INFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="cSigners">
        <type>DWORD</type>
      </field>
      <field offset="8" name="rgSigners">
        <type>PCMSG_SIGNER_ENCODE_INFO</type>
      </field>
      <field offset="12" name="cCertEncoded">
        <type>DWORD</type>
      </field>
      <field offset="16" name="rgCertEncoded">
        <type>PCERT_BLOB</type>
      </field>
      <field offset="20" name="cCrlEncoded">
        <type>DWORD</type>
      </field>
      <field offset="24" name="rgCrlEncoded">
        <type>PCRL_BLOB</type>
      </field>
    </struct>
    <typedef name="CMSG_SIGNED_ENCODE_INFO">
      <struct name="_CMSG_SIGNED_ENCODE_INFO" />
    </typedef>
    <typedef name="PCMSG_SIGNED_ENCODE_INFO">
      <ptr>
        <struct name="_CMSG_SIGNED_ENCODE_INFO" />
      </ptr>
    </typedef>
    <typedef name="CMSG_RECIPIENT_ENCODE_INFO">
      <struct name="_CMSG_RECIPIENT_ENCODE_INFO" />
    </typedef>
    <typedef name="PCMSG_RECIPIENT_ENCODE_INFO">
      <ptr>
        <struct name="_CMSG_RECIPIENT_ENCODE_INFO" />
      </ptr>
    </typedef>
    <struct name="_CMSG_ENVELOPED_ENCODE_INFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="hCryptProv">
        <type>HCRYPTPROV_LEGACY</type>
      </field>
      <field offset="8" name="ContentEncryptionAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="20" name="pvEncryptionAuxInfo">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="24" name="cRecipients">
        <type>DWORD</type>
      </field>
      <field offset="28" name="rgpRecipients">
        <ptr>
          <type>PCERT_INFO</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CMSG_ENVELOPED_ENCODE_INFO">
      <struct name="_CMSG_ENVELOPED_ENCODE_INFO" />
    </typedef>
    <typedef name="PCMSG_ENVELOPED_ENCODE_INFO">
      <ptr>
        <struct name="_CMSG_ENVELOPED_ENCODE_INFO" />
      </ptr>
    </typedef>
    <struct name="_CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="8" name="KeyEncryptionAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="20" name="pvKeyEncryptionAuxInfo">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="24" name="hCryptProv">
        <type>HCRYPTPROV_LEGACY</type>
      </field>
      <field offset="32" name="RecipientPublicKey">
        <type>CRYPT_BIT_BLOB</type>
      </field>
      <field offset="48" name="RecipientId">
        <type>CERT_ID</type>
      </field>
    </struct>
    <typedef name="CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO">
      <struct name="_CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO" />
    </typedef>
    <typedef name="PCMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO">
      <ptr>
        <struct name="_CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO" />
      </ptr>
    </typedef>
    <struct name="_CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="8" name="RecipientPublicKey">
        <type>CRYPT_BIT_BLOB</type>
      </field>
      <field offset="24" name="RecipientId">
        <type>CERT_ID</type>
      </field>
      <field offset="48" name="Date">
        <type>FILETIME</type>
      </field>
      <field offset="56" name="pOtherAttr">
        <type>PCRYPT_ATTRIBUTE_TYPE_VALUE</type>
      </field>
    </struct>
    <typedef name="CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO">
      <struct name="_CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO" />
    </typedef>
    <typedef name="PCMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO">
      <ptr>
        <struct name="_CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO" />
      </ptr>
    </typedef>
    <struct name="_CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="8" name="KeyEncryptionAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="20" name="pvKeyEncryptionAuxInfo">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="24" name="KeyWrapAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="36" name="pvKeyWrapAuxInfo">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="40" name="hCryptProv">
        <type>HCRYPTPROV_LEGACY</type>
      </field>
      <field offset="44" name="dwKeySpec">
        <type>DWORD</type>
      </field>
      <field offset="48" name="dwKeyChoice">
        <type>DWORD</type>
      </field>
      <field offset="52">
        <union>
          <alt name="pEphemeralAlgorithm">
            <type>PCRYPT_ALGORITHM_IDENTIFIER</type>
          </alt>
          <alt name="pSenderId">
            <type>PCERT_ID</type>
          </alt>
        </union>
      </field>
      <field offset="56" name="UserKeyingMaterial">
        <type>CRYPT_DATA_BLOB</type>
      </field>
      <field offset="64" name="cRecipientEncryptedKeys">
        <type>DWORD</type>
      </field>
      <field offset="68" name="rgpRecipientEncryptedKeys">
        <ptr>
          <type>PCMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO">
      <struct name="_CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO" />
    </typedef>
    <typedef name="PCMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO">
      <ptr>
        <struct name="_CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO" />
      </ptr>
    </typedef>
    <struct name="_CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="8" name="KeyEncryptionAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="20" name="pvKeyEncryptionAuxInfo">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="24" name="hCryptProv">
        <type>HCRYPTPROV</type>
      </field>
      <field offset="28" name="dwKeyChoice">
        <type>DWORD</type>
      </field>
      <field offset="32">
        <union>
          <alt name="hKeyEncryptionKey">
            <type>HCRYPTKEY</type>
          </alt>
          <alt name="pvKeyEncryptionKey">
            <ptr>
              <void />
            </ptr>
          </alt>
        </union>
      </field>
      <field offset="40" name="KeyId">
        <type>CRYPT_DATA_BLOB</type>
      </field>
      <field offset="48" name="Date">
        <type>FILETIME</type>
      </field>
      <field offset="56" name="pOtherAttr">
        <type>PCRYPT_ATTRIBUTE_TYPE_VALUE</type>
      </field>
    </struct>
    <typedef name="CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO">
      <struct name="_CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO" />
    </typedef>
    <typedef name="PCMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO">
      <ptr>
        <struct name="_CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO" />
      </ptr>
    </typedef>
    <struct name="_CMSG_RECIPIENT_ENCODE_INFO">
      <field offset="0" name="dwRecipientChoice">
        <type>DWORD</type>
      </field>
      <field offset="4">
        <union>
          <alt name="pKeyTrans">
            <type>PCMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO</type>
          </alt>
          <alt name="pKeyAgree">
            <type>PCMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO</type>
          </alt>
          <alt name="pMailList">
            <type>PCMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO</type>
          </alt>
        </union>
      </field>
    </struct>
    <struct name="_CMSG_RC2_AUX_INFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwBitLen">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CMSG_RC2_AUX_INFO">
      <struct name="_CMSG_RC2_AUX_INFO" />
    </typedef>
    <typedef name="PCMSG_RC2_AUX_INFO">
      <ptr>
        <struct name="_CMSG_RC2_AUX_INFO" />
      </ptr>
    </typedef>
    <struct name="_CMSG_SP3_COMPATIBLE_AUX_INFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CMSG_SP3_COMPATIBLE_AUX_INFO">
      <struct name="_CMSG_SP3_COMPATIBLE_AUX_INFO" />
    </typedef>
    <typedef name="PCMSG_SP3_COMPATIBLE_AUX_INFO">
      <ptr>
        <struct name="_CMSG_SP3_COMPATIBLE_AUX_INFO" />
      </ptr>
    </typedef>
    <struct name="_CMSG_RC4_AUX_INFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwBitLen">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CMSG_RC4_AUX_INFO">
      <struct name="_CMSG_RC4_AUX_INFO" />
    </typedef>
    <typedef name="PCMSG_RC4_AUX_INFO">
      <ptr>
        <struct name="_CMSG_RC4_AUX_INFO" />
      </ptr>
    </typedef>
    <struct name="_CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="8" name="SignedInfo">
        <type>CMSG_SIGNED_ENCODE_INFO</type>
      </field>
      <field offset="40" name="EnvelopedInfo">
        <type>CMSG_ENVELOPED_ENCODE_INFO</type>
      </field>
    </struct>
    <typedef name="CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO">
      <struct name="_CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO" />
    </typedef>
    <typedef name="PCMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO">
      <ptr>
        <struct name="_CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO" />
      </ptr>
    </typedef>
    <struct name="_CMSG_HASHED_ENCODE_INFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="hCryptProv">
        <type>HCRYPTPROV_LEGACY</type>
      </field>
      <field offset="8" name="HashAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="20" name="pvHashAuxInfo">
        <ptr>
          <void />
        </ptr>
      </field>
    </struct>
    <typedef name="CMSG_HASHED_ENCODE_INFO">
      <struct name="_CMSG_HASHED_ENCODE_INFO" />
    </typedef>
    <typedef name="PCMSG_HASHED_ENCODE_INFO">
      <ptr>
        <struct name="_CMSG_HASHED_ENCODE_INFO" />
      </ptr>
    </typedef>
    <struct name="_CMSG_ENCRYPTED_ENCODE_INFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="8" name="ContentEncryptionAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="20" name="pvEncryptionAuxInfo">
        <ptr>
          <void />
        </ptr>
      </field>
    </struct>
    <typedef name="CMSG_ENCRYPTED_ENCODE_INFO">
      <struct name="_CMSG_ENCRYPTED_ENCODE_INFO" />
    </typedef>
    <typedef name="PCMSG_ENCRYPTED_ENCODE_INFO">
      <ptr>
        <struct name="_CMSG_ENCRYPTED_ENCODE_INFO" />
      </ptr>
    </typedef>
    <typedef name="PFN_CMSG_STREAM_OUTPUT">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="pvArg">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pbData">
            <ptr>
              <type>BYTE</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="cbData">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="fFinal">
            <type>BOOL</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="_CMSG_STREAM_INFO">
      <field offset="0" name="cbContent">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pfnStreamOutput">
        <type>PFN_CMSG_STREAM_OUTPUT</type>
      </field>
      <field offset="8" name="pvArg">
        <ptr>
          <void />
        </ptr>
      </field>
    </struct>
    <typedef name="CMSG_STREAM_INFO">
      <struct name="_CMSG_STREAM_INFO" />
    </typedef>
    <typedef name="PCMSG_STREAM_INFO">
      <ptr>
        <struct name="_CMSG_STREAM_INFO" />
      </ptr>
    </typedef>
    <struct name="_CMSG_SIGNER_INFO">
      <field offset="0" name="dwVersion">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Issuer">
        <type>CERT_NAME_BLOB</type>
      </field>
      <field offset="16" name="SerialNumber">
        <type>CRYPT_INTEGER_BLOB</type>
      </field>
      <field offset="24" name="HashAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="40" name="HashEncryptionAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="56" name="EncryptedHash">
        <type>CRYPT_DATA_BLOB</type>
      </field>
      <field offset="64" name="AuthAttrs">
        <type>CRYPT_ATTRIBUTES</type>
      </field>
      <field offset="72" name="UnauthAttrs">
        <type>CRYPT_ATTRIBUTES</type>
      </field>
    </struct>
    <typedef name="CMSG_SIGNER_INFO">
      <struct name="_CMSG_SIGNER_INFO" />
    </typedef>
    <typedef name="PCMSG_SIGNER_INFO">
      <ptr>
        <struct name="_CMSG_SIGNER_INFO" />
      </ptr>
    </typedef>
    <struct name="_CMSG_CMS_SIGNER_INFO">
      <field offset="0" name="dwVersion">
        <type>DWORD</type>
      </field>
      <field offset="8" name="SignerId">
        <type>CERT_ID</type>
      </field>
      <field offset="32" name="HashAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="48" name="HashEncryptionAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="64" name="EncryptedHash">
        <type>CRYPT_DATA_BLOB</type>
      </field>
      <field offset="72" name="AuthAttrs">
        <type>CRYPT_ATTRIBUTES</type>
      </field>
      <field offset="80" name="UnauthAttrs">
        <type>CRYPT_ATTRIBUTES</type>
      </field>
    </struct>
    <typedef name="CMSG_CMS_SIGNER_INFO">
      <struct name="_CMSG_CMS_SIGNER_INFO" />
    </typedef>
    <typedef name="PCMSG_CMS_SIGNER_INFO">
      <ptr>
        <struct name="_CMSG_CMS_SIGNER_INFO" />
      </ptr>
    </typedef>
    <typedef name="CMSG_ATTR">
      <type>CRYPT_ATTRIBUTES</type>
    </typedef>
    <typedef name="PCMSG_ATTR">
      <ptr>
        <type>CRYPT_ATTRIBUTES</type>
      </ptr>
    </typedef>
    <struct name="_CMSG_KEY_TRANS_RECIPIENT_INFO">
      <field offset="0" name="dwVersion">
        <type>DWORD</type>
      </field>
      <field offset="8" name="RecipientId">
        <type>CERT_ID</type>
      </field>
      <field offset="32" name="KeyEncryptionAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="48" name="EncryptedKey">
        <type>CRYPT_DATA_BLOB</type>
      </field>
    </struct>
    <typedef name="CMSG_KEY_TRANS_RECIPIENT_INFO">
      <struct name="_CMSG_KEY_TRANS_RECIPIENT_INFO" />
    </typedef>
    <typedef name="PCMSG_KEY_TRANS_RECIPIENT_INFO">
      <ptr>
        <struct name="_CMSG_KEY_TRANS_RECIPIENT_INFO" />
      </ptr>
    </typedef>
    <struct name="_CMSG_RECIPIENT_ENCRYPTED_KEY_INFO">
      <field offset="0" name="RecipientId">
        <type>CERT_ID</type>
      </field>
      <field offset="24" name="EncryptedKey">
        <type>CRYPT_DATA_BLOB</type>
      </field>
      <field offset="32" name="Date">
        <type>FILETIME</type>
      </field>
      <field offset="40" name="pOtherAttr">
        <type>PCRYPT_ATTRIBUTE_TYPE_VALUE</type>
      </field>
    </struct>
    <typedef name="CMSG_RECIPIENT_ENCRYPTED_KEY_INFO">
      <struct name="_CMSG_RECIPIENT_ENCRYPTED_KEY_INFO" />
    </typedef>
    <typedef name="PCMSG_RECIPIENT_ENCRYPTED_KEY_INFO">
      <ptr>
        <struct name="_CMSG_RECIPIENT_ENCRYPTED_KEY_INFO" />
      </ptr>
    </typedef>
    <struct name="_CMSG_KEY_AGREE_RECIPIENT_INFO">
      <field offset="0" name="dwVersion">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwOriginatorChoice">
        <type>DWORD</type>
      </field>
      <field offset="8">
        <union>
          <alt name="OriginatorCertId">
            <type>CERT_ID</type>
          </alt>
          <alt name="OriginatorPublicKeyInfo">
            <type>CERT_PUBLIC_KEY_INFO</type>
          </alt>
        </union>
      </field>
      <field offset="32" name="UserKeyingMaterial">
        <type>CRYPT_DATA_BLOB</type>
      </field>
      <field offset="40" name="KeyEncryptionAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="52" name="cRecipientEncryptedKeys">
        <type>DWORD</type>
      </field>
      <field offset="56" name="rgpRecipientEncryptedKeys">
        <ptr>
          <type>PCMSG_RECIPIENT_ENCRYPTED_KEY_INFO</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CMSG_KEY_AGREE_RECIPIENT_INFO">
      <struct name="_CMSG_KEY_AGREE_RECIPIENT_INFO" />
    </typedef>
    <typedef name="PCMSG_KEY_AGREE_RECIPIENT_INFO">
      <ptr>
        <struct name="_CMSG_KEY_AGREE_RECIPIENT_INFO" />
      </ptr>
    </typedef>
    <struct name="_CMSG_MAIL_LIST_RECIPIENT_INFO">
      <field offset="0" name="dwVersion">
        <type>DWORD</type>
      </field>
      <field offset="8" name="KeyId">
        <type>CRYPT_DATA_BLOB</type>
      </field>
      <field offset="16" name="KeyEncryptionAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="32" name="EncryptedKey">
        <type>CRYPT_DATA_BLOB</type>
      </field>
      <field offset="40" name="Date">
        <type>FILETIME</type>
      </field>
      <field offset="48" name="pOtherAttr">
        <type>PCRYPT_ATTRIBUTE_TYPE_VALUE</type>
      </field>
    </struct>
    <typedef name="CMSG_MAIL_LIST_RECIPIENT_INFO">
      <struct name="_CMSG_MAIL_LIST_RECIPIENT_INFO" />
    </typedef>
    <typedef name="PCMSG_MAIL_LIST_RECIPIENT_INFO">
      <ptr>
        <struct name="_CMSG_MAIL_LIST_RECIPIENT_INFO" />
      </ptr>
    </typedef>
    <struct name="_CMSG_CMS_RECIPIENT_INFO">
      <field offset="0" name="dwRecipientChoice">
        <type>DWORD</type>
      </field>
      <field offset="4">
        <union>
          <alt name="pKeyTrans">
            <type>PCMSG_KEY_TRANS_RECIPIENT_INFO</type>
          </alt>
          <alt name="pKeyAgree">
            <type>PCMSG_KEY_AGREE_RECIPIENT_INFO</type>
          </alt>
          <alt name="pMailList">
            <type>PCMSG_MAIL_LIST_RECIPIENT_INFO</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="CMSG_CMS_RECIPIENT_INFO">
      <struct name="_CMSG_CMS_RECIPIENT_INFO" />
    </typedef>
    <typedef name="PCMSG_CMS_RECIPIENT_INFO">
      <ptr>
        <struct name="_CMSG_CMS_RECIPIENT_INFO" />
      </ptr>
    </typedef>
    <struct name="_CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="hCryptProv">
        <type>HCRYPTPROV_LEGACY</type>
      </field>
      <field offset="8" name="dwSignerIndex">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwSignerType">
        <type>DWORD</type>
      </field>
      <field offset="16" name="pvSigner">
        <ptr>
          <void />
        </ptr>
      </field>
    </struct>
    <typedef name="CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA">
      <struct name="_CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA" />
    </typedef>
    <typedef name="PCMSG_CTRL_VERIFY_SIGNATURE_EX_PARA">
      <ptr>
        <struct name="_CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA" />
      </ptr>
    </typedef>
    <struct name="_CMSG_CTRL_DECRYPT_PARA">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4">
        <union>
          <alt name="hCryptProv">
            <type>HCRYPTPROV</type>
          </alt>
          <alt name="hNCryptKey">
            <type>NCRYPT_KEY_HANDLE</type>
          </alt>
        </union>
      </field>
      <field offset="8" name="dwKeySpec">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwRecipientIndex">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CMSG_CTRL_DECRYPT_PARA">
      <struct name="_CMSG_CTRL_DECRYPT_PARA" />
    </typedef>
    <typedef name="PCMSG_CTRL_DECRYPT_PARA">
      <ptr>
        <struct name="_CMSG_CTRL_DECRYPT_PARA" />
      </ptr>
    </typedef>
    <struct name="_CMSG_CTRL_KEY_TRANS_DECRYPT_PARA">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4">
        <union>
          <alt name="hCryptProv">
            <type>HCRYPTPROV</type>
          </alt>
          <alt name="hNCryptKey">
            <type>NCRYPT_KEY_HANDLE</type>
          </alt>
        </union>
      </field>
      <field offset="8" name="dwKeySpec">
        <type>DWORD</type>
      </field>
      <field offset="12" name="pKeyTrans">
        <type>PCMSG_KEY_TRANS_RECIPIENT_INFO</type>
      </field>
      <field offset="16" name="dwRecipientIndex">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CMSG_CTRL_KEY_TRANS_DECRYPT_PARA">
      <struct name="_CMSG_CTRL_KEY_TRANS_DECRYPT_PARA" />
    </typedef>
    <typedef name="PCMSG_CTRL_KEY_TRANS_DECRYPT_PARA">
      <ptr>
        <struct name="_CMSG_CTRL_KEY_TRANS_DECRYPT_PARA" />
      </ptr>
    </typedef>
    <struct name="_CMSG_CTRL_KEY_AGREE_DECRYPT_PARA">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4">
        <union>
          <alt name="hCryptProv">
            <type>HCRYPTPROV</type>
          </alt>
          <alt name="hNCryptKey">
            <type>NCRYPT_KEY_HANDLE</type>
          </alt>
        </union>
      </field>
      <field offset="8" name="dwKeySpec">
        <type>DWORD</type>
      </field>
      <field offset="12" name="pKeyAgree">
        <type>PCMSG_KEY_AGREE_RECIPIENT_INFO</type>
      </field>
      <field offset="16" name="dwRecipientIndex">
        <type>DWORD</type>
      </field>
      <field offset="20" name="dwRecipientEncryptedKeyIndex">
        <type>DWORD</type>
      </field>
      <field offset="24" name="OriginatorPublicKey">
        <type>CRYPT_BIT_BLOB</type>
      </field>
    </struct>
    <typedef name="CMSG_CTRL_KEY_AGREE_DECRYPT_PARA">
      <struct name="_CMSG_CTRL_KEY_AGREE_DECRYPT_PARA" />
    </typedef>
    <typedef name="PCMSG_CTRL_KEY_AGREE_DECRYPT_PARA">
      <ptr>
        <struct name="_CMSG_CTRL_KEY_AGREE_DECRYPT_PARA" />
      </ptr>
    </typedef>
    <struct name="_CMSG_CTRL_MAIL_LIST_DECRYPT_PARA">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="hCryptProv">
        <type>HCRYPTPROV</type>
      </field>
      <field offset="8" name="pMailList">
        <type>PCMSG_MAIL_LIST_RECIPIENT_INFO</type>
      </field>
      <field offset="12" name="dwRecipientIndex">
        <type>DWORD</type>
      </field>
      <field offset="16" name="dwKeyChoice">
        <type>DWORD</type>
      </field>
      <field offset="20">
        <union>
          <alt name="hKeyEncryptionKey">
            <type>HCRYPTKEY</type>
          </alt>
          <alt name="pvKeyEncryptionKey">
            <ptr>
              <void />
            </ptr>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="CMSG_CTRL_MAIL_LIST_DECRYPT_PARA">
      <struct name="_CMSG_CTRL_MAIL_LIST_DECRYPT_PARA" />
    </typedef>
    <typedef name="PCMSG_CTRL_MAIL_LIST_DECRYPT_PARA">
      <ptr>
        <struct name="_CMSG_CTRL_MAIL_LIST_DECRYPT_PARA" />
      </ptr>
    </typedef>
    <struct name="_CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwSignerIndex">
        <type>DWORD</type>
      </field>
      <field offset="8" name="blob">
        <type>CRYPT_DATA_BLOB</type>
      </field>
    </struct>
    <typedef name="CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA">
      <struct name="_CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA" />
    </typedef>
    <typedef name="PCMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA">
      <ptr>
        <struct name="_CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA" />
      </ptr>
    </typedef>
    <struct name="_CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwSignerIndex">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwUnauthAttrIndex">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA">
      <struct name="_CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA" />
    </typedef>
    <typedef name="PCMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA">
      <ptr>
        <struct name="_CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA" />
      </ptr>
    </typedef>
    <typedef name="PFN_CMSG_ALLOC">
      <ptr>
        <fn>
          <return>
            <ptr>
              <void />
            </ptr>
            <reg>eax</reg>
          </return>
          <arg name="cb">
            <type>size_t</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_CMSG_FREE">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="pv">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_CMSG_GEN_ENCRYPT_KEY">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="phCryptProv">
            <ptr>
              <type>HCRYPTPROV</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="paiEncrypt">
            <type>PCRYPT_ALGORITHM_IDENTIFIER</type>
            <stack size="4" />
          </arg>
          <arg name="pvEncryptAuxInfo">
            <type>PVOID</type>
            <stack size="4" />
          </arg>
          <arg name="pPublicKeyInfo">
            <type>PCERT_PUBLIC_KEY_INFO</type>
            <stack size="4" />
          </arg>
          <arg name="pfnAlloc">
            <type>PFN_CMSG_ALLOC</type>
            <stack size="4" />
          </arg>
          <arg name="phEncryptKey">
            <ptr>
              <type>HCRYPTKEY</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="ppbEncryptParameters">
            <ptr>
              <type>PBYTE</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pcbEncryptParameters">
            <type>PDWORD</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_CMSG_EXPORT_ENCRYPT_KEY">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="hCryptProv">
            <type>HCRYPTPROV</type>
            <stack size="4" />
          </arg>
          <arg name="hEncryptKey">
            <type>HCRYPTKEY</type>
            <stack size="4" />
          </arg>
          <arg name="pPublicKeyInfo">
            <type>PCERT_PUBLIC_KEY_INFO</type>
            <stack size="4" />
          </arg>
          <arg name="pbData">
            <type>PBYTE</type>
            <stack size="4" />
          </arg>
          <arg name="pcbData">
            <type>PDWORD</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_CMSG_IMPORT_ENCRYPT_KEY">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="hCryptProv">
            <type>HCRYPTPROV</type>
            <stack size="4" />
          </arg>
          <arg name="dwKeySpec">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="paiEncrypt">
            <type>PCRYPT_ALGORITHM_IDENTIFIER</type>
            <stack size="4" />
          </arg>
          <arg name="paiPubKey">
            <type>PCRYPT_ALGORITHM_IDENTIFIER</type>
            <stack size="4" />
          </arg>
          <arg name="pbEncodedKey">
            <type>PBYTE</type>
            <stack size="4" />
          </arg>
          <arg name="cbEncodedKey">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="phEncryptKey">
            <ptr>
              <type>HCRYPTKEY</type>
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="_CMSG_CONTENT_ENCRYPT_INFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="hCryptProv">
        <type>HCRYPTPROV_LEGACY</type>
      </field>
      <field offset="8" name="ContentEncryptionAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="20" name="pvEncryptionAuxInfo">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="24" name="cRecipients">
        <type>DWORD</type>
      </field>
      <field offset="28" name="rgCmsRecipients">
        <type>PCMSG_RECIPIENT_ENCODE_INFO</type>
      </field>
      <field offset="32" name="pfnAlloc">
        <type>PFN_CMSG_ALLOC</type>
      </field>
      <field offset="36" name="pfnFree">
        <type>PFN_CMSG_FREE</type>
      </field>
      <field offset="40" name="dwEncryptFlags">
        <type>DWORD</type>
      </field>
      <field offset="44">
        <union>
          <alt name="hContentEncryptKey">
            <type>HCRYPTKEY</type>
          </alt>
          <alt name="hCNGContentEncryptKey">
            <type>BCRYPT_KEY_HANDLE</type>
          </alt>
        </union>
      </field>
      <field offset="48" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="52" name="fCNG">
        <type>BOOL</type>
      </field>
      <field offset="56" name="pbCNGContentEncryptKeyObject">
        <ptr>
          <type>BYTE</type>
        </ptr>
      </field>
      <field offset="60" name="pbContentEncryptKey">
        <ptr>
          <type>BYTE</type>
        </ptr>
      </field>
      <field offset="64" name="cbContentEncryptKey">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CMSG_CONTENT_ENCRYPT_INFO">
      <struct name="_CMSG_CONTENT_ENCRYPT_INFO" />
    </typedef>
    <typedef name="PCMSG_CONTENT_ENCRYPT_INFO">
      <ptr>
        <struct name="_CMSG_CONTENT_ENCRYPT_INFO" />
      </ptr>
    </typedef>
    <typedef name="PFN_CMSG_GEN_CONTENT_ENCRYPT_KEY">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="pContentEncryptInfo">
            <type>PCMSG_CONTENT_ENCRYPT_INFO</type>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pvReserved">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="_CMSG_KEY_TRANS_ENCRYPT_INFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwRecipientIndex">
        <type>DWORD</type>
      </field>
      <field offset="8" name="KeyEncryptionAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="24" name="EncryptedKey">
        <type>CRYPT_DATA_BLOB</type>
      </field>
      <field offset="32" name="dwFlags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CMSG_KEY_TRANS_ENCRYPT_INFO">
      <struct name="_CMSG_KEY_TRANS_ENCRYPT_INFO" />
    </typedef>
    <typedef name="PCMSG_KEY_TRANS_ENCRYPT_INFO">
      <ptr>
        <struct name="_CMSG_KEY_TRANS_ENCRYPT_INFO" />
      </ptr>
    </typedef>
    <typedef name="PFN_CMSG_EXPORT_KEY_TRANS">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="pContentEncryptInfo">
            <type>PCMSG_CONTENT_ENCRYPT_INFO</type>
            <stack size="4" />
          </arg>
          <arg name="pKeyTransEncodeInfo">
            <type>PCMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO</type>
            <stack size="4" />
          </arg>
          <arg name="pKeyTransEncryptInfo">
            <type>PCMSG_KEY_TRANS_ENCRYPT_INFO</type>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pvReserved">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="_CMSG_KEY_AGREE_KEY_ENCRYPT_INFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="8" name="EncryptedKey">
        <type>CRYPT_DATA_BLOB</type>
      </field>
    </struct>
    <typedef name="CMSG_KEY_AGREE_KEY_ENCRYPT_INFO">
      <struct name="_CMSG_KEY_AGREE_KEY_ENCRYPT_INFO" />
    </typedef>
    <typedef name="PCMSG_KEY_AGREE_KEY_ENCRYPT_INFO">
      <ptr>
        <struct name="_CMSG_KEY_AGREE_KEY_ENCRYPT_INFO" />
      </ptr>
    </typedef>
    <struct name="_CMSG_KEY_AGREE_ENCRYPT_INFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwRecipientIndex">
        <type>DWORD</type>
      </field>
      <field offset="8" name="KeyEncryptionAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="24" name="UserKeyingMaterial">
        <type>CRYPT_DATA_BLOB</type>
      </field>
      <field offset="32" name="dwOriginatorChoice">
        <type>DWORD</type>
      </field>
      <field offset="40">
        <union>
          <alt name="OriginatorCertId">
            <type>CERT_ID</type>
          </alt>
          <alt name="OriginatorPublicKeyInfo">
            <type>CERT_PUBLIC_KEY_INFO</type>
          </alt>
        </union>
      </field>
      <field offset="64" name="cKeyAgreeKeyEncryptInfo">
        <type>DWORD</type>
      </field>
      <field offset="68" name="rgpKeyAgreeKeyEncryptInfo">
        <ptr>
          <type>PCMSG_KEY_AGREE_KEY_ENCRYPT_INFO</type>
        </ptr>
      </field>
      <field offset="72" name="dwFlags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CMSG_KEY_AGREE_ENCRYPT_INFO">
      <struct name="_CMSG_KEY_AGREE_ENCRYPT_INFO" />
    </typedef>
    <typedef name="PCMSG_KEY_AGREE_ENCRYPT_INFO">
      <ptr>
        <struct name="_CMSG_KEY_AGREE_ENCRYPT_INFO" />
      </ptr>
    </typedef>
    <typedef name="PFN_CMSG_EXPORT_KEY_AGREE">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="pContentEncryptInfo">
            <type>PCMSG_CONTENT_ENCRYPT_INFO</type>
            <stack size="4" />
          </arg>
          <arg name="pKeyAgreeEncodeInfo">
            <type>PCMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO</type>
            <stack size="4" />
          </arg>
          <arg name="pKeyAgreeEncryptInfo">
            <type>PCMSG_KEY_AGREE_ENCRYPT_INFO</type>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pvReserved">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="_CMSG_MAIL_LIST_ENCRYPT_INFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwRecipientIndex">
        <type>DWORD</type>
      </field>
      <field offset="8" name="KeyEncryptionAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="24" name="EncryptedKey">
        <type>CRYPT_DATA_BLOB</type>
      </field>
      <field offset="32" name="dwFlags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CMSG_MAIL_LIST_ENCRYPT_INFO">
      <struct name="_CMSG_MAIL_LIST_ENCRYPT_INFO" />
    </typedef>
    <typedef name="PCMSG_MAIL_LIST_ENCRYPT_INFO">
      <ptr>
        <struct name="_CMSG_MAIL_LIST_ENCRYPT_INFO" />
      </ptr>
    </typedef>
    <typedef name="PFN_CMSG_EXPORT_MAIL_LIST">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="pContentEncryptInfo">
            <type>PCMSG_CONTENT_ENCRYPT_INFO</type>
            <stack size="4" />
          </arg>
          <arg name="pMailListEncodeInfo">
            <type>PCMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO</type>
            <stack size="4" />
          </arg>
          <arg name="pMailListEncryptInfo">
            <type>PCMSG_MAIL_LIST_ENCRYPT_INFO</type>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pvReserved">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_CMSG_IMPORT_KEY_TRANS">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="pContentEncryptionAlgorithm">
            <type>PCRYPT_ALGORITHM_IDENTIFIER</type>
            <stack size="4" />
          </arg>
          <arg name="pKeyTransDecryptPara">
            <type>PCMSG_CTRL_KEY_TRANS_DECRYPT_PARA</type>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pvReserved">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="phContentEncryptKey">
            <ptr>
              <type>HCRYPTKEY</type>
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_CMSG_IMPORT_KEY_AGREE">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="pContentEncryptionAlgorithm">
            <type>PCRYPT_ALGORITHM_IDENTIFIER</type>
            <stack size="4" />
          </arg>
          <arg name="pKeyAgreeDecryptPara">
            <type>PCMSG_CTRL_KEY_AGREE_DECRYPT_PARA</type>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pvReserved">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="phContentEncryptKey">
            <ptr>
              <type>HCRYPTKEY</type>
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_CMSG_IMPORT_MAIL_LIST">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="pContentEncryptionAlgorithm">
            <type>PCRYPT_ALGORITHM_IDENTIFIER</type>
            <stack size="4" />
          </arg>
          <arg name="pMailListDecryptPara">
            <type>PCMSG_CTRL_MAIL_LIST_DECRYPT_PARA</type>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pvReserved">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="phContentEncryptKey">
            <ptr>
              <type>HCRYPTKEY</type>
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="_CMSG_CNG_CONTENT_DECRYPT_INFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="8" name="ContentEncryptionAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="20" name="pfnAlloc">
        <type>PFN_CMSG_ALLOC</type>
      </field>
      <field offset="24" name="pfnFree">
        <type>PFN_CMSG_FREE</type>
      </field>
      <field offset="28" name="hNCryptKey">
        <type>NCRYPT_KEY_HANDLE</type>
      </field>
      <field offset="32" name="pbContentEncryptKey">
        <ptr>
          <type>BYTE</type>
        </ptr>
      </field>
      <field offset="36" name="cbContentEncryptKey">
        <type>DWORD</type>
      </field>
      <field offset="40" name="hCNGContentEncryptKey">
        <type>BCRYPT_KEY_HANDLE</type>
      </field>
      <field offset="44" name="pbCNGContentEncryptKeyObject">
        <ptr>
          <type>BYTE</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CMSG_CNG_CONTENT_DECRYPT_INFO">
      <struct name="_CMSG_CNG_CONTENT_DECRYPT_INFO" />
    </typedef>
    <typedef name="PCMSG_CNG_CONTENT_DECRYPT_INFO">
      <ptr>
        <struct name="_CMSG_CNG_CONTENT_DECRYPT_INFO" />
      </ptr>
    </typedef>
    <typedef name="PFN_CMSG_CNG_IMPORT_KEY_TRANS">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="pCNGContentDecryptInfo">
            <type>PCMSG_CNG_CONTENT_DECRYPT_INFO</type>
            <stack size="4" />
          </arg>
          <arg name="pKeyTransDecryptPara">
            <type>PCMSG_CTRL_KEY_TRANS_DECRYPT_PARA</type>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pvReserved">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_CMSG_CNG_IMPORT_KEY_AGREE">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="pCNGContentDecryptInfo">
            <type>PCMSG_CNG_CONTENT_DECRYPT_INFO</type>
            <stack size="4" />
          </arg>
          <arg name="pKeyAgreeDecryptPara">
            <type>PCMSG_CTRL_KEY_AGREE_DECRYPT_PARA</type>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pvReserved">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_CMSG_CNG_IMPORT_CONTENT_ENCRYPT_KEY">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="pCNGContentDecryptInfo">
            <type>PCMSG_CNG_CONTENT_DECRYPT_INFO</type>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pvReserved">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="HCERTSTORE">
      <ptr>
        <void />
      </ptr>
    </typedef>
    <struct name="_CERT_CONTEXT">
      <field offset="0" name="dwCertEncodingType">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pbCertEncoded">
        <ptr>
          <type>BYTE</type>
        </ptr>
      </field>
      <field offset="8" name="cbCertEncoded">
        <type>DWORD</type>
      </field>
      <field offset="12" name="pCertInfo">
        <type>PCERT_INFO</type>
      </field>
      <field offset="16" name="hCertStore">
        <type>HCERTSTORE</type>
      </field>
    </struct>
    <typedef name="CERT_CONTEXT">
      <struct name="_CERT_CONTEXT" />
    </typedef>
    <typedef name="PCERT_CONTEXT">
      <ptr>
        <struct name="_CERT_CONTEXT" />
      </ptr>
    </typedef>
    <typedef name="PCCERT_CONTEXT">
      <ptr>
        <type>CERT_CONTEXT</type>
      </ptr>
    </typedef>
    <struct name="_CRL_CONTEXT">
      <field offset="0" name="dwCertEncodingType">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pbCrlEncoded">
        <ptr>
          <type>BYTE</type>
        </ptr>
      </field>
      <field offset="8" name="cbCrlEncoded">
        <type>DWORD</type>
      </field>
      <field offset="12" name="pCrlInfo">
        <type>PCRL_INFO</type>
      </field>
      <field offset="16" name="hCertStore">
        <type>HCERTSTORE</type>
      </field>
    </struct>
    <typedef name="CRL_CONTEXT">
      <struct name="_CRL_CONTEXT" />
    </typedef>
    <typedef name="PCRL_CONTEXT">
      <ptr>
        <struct name="_CRL_CONTEXT" />
      </ptr>
    </typedef>
    <typedef name="PCCRL_CONTEXT">
      <ptr>
        <type>CRL_CONTEXT</type>
      </ptr>
    </typedef>
    <struct name="_CTL_CONTEXT">
      <field offset="0" name="dwMsgAndCertEncodingType">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pbCtlEncoded">
        <ptr>
          <type>BYTE</type>
        </ptr>
      </field>
      <field offset="8" name="cbCtlEncoded">
        <type>DWORD</type>
      </field>
      <field offset="12" name="pCtlInfo">
        <type>PCTL_INFO</type>
      </field>
      <field offset="16" name="hCertStore">
        <type>HCERTSTORE</type>
      </field>
      <field offset="20" name="hCryptMsg">
        <type>HCRYPTMSG</type>
      </field>
      <field offset="24" name="pbCtlContent">
        <ptr>
          <type>BYTE</type>
        </ptr>
      </field>
      <field offset="28" name="cbCtlContent">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CTL_CONTEXT">
      <struct name="_CTL_CONTEXT" />
    </typedef>
    <typedef name="PCTL_CONTEXT">
      <ptr>
        <struct name="_CTL_CONTEXT" />
      </ptr>
    </typedef>
    <typedef name="PCCTL_CONTEXT">
      <ptr>
        <type>CTL_CONTEXT</type>
      </ptr>
    </typedef>
    <struct name="_CRYPT_KEY_PROV_PARAM">
      <field offset="0" name="dwParam">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pbData">
        <ptr>
          <type>BYTE</type>
        </ptr>
      </field>
      <field offset="8" name="cbData">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwFlags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CRYPT_KEY_PROV_PARAM">
      <struct name="_CRYPT_KEY_PROV_PARAM" />
    </typedef>
    <typedef name="PCRYPT_KEY_PROV_PARAM">
      <ptr>
        <struct name="_CRYPT_KEY_PROV_PARAM" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_KEY_PROV_INFO">
      <field offset="0" name="pwszContainerName">
        <type>LPWSTR</type>
      </field>
      <field offset="4" name="pwszProvName">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="dwProvType">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="16" name="cProvParam">
        <type>DWORD</type>
      </field>
      <field offset="20" name="rgProvParam">
        <type>PCRYPT_KEY_PROV_PARAM</type>
      </field>
      <field offset="24" name="dwKeySpec">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CRYPT_KEY_PROV_INFO">
      <struct name="_CRYPT_KEY_PROV_INFO" />
    </typedef>
    <typedef name="PCRYPT_KEY_PROV_INFO">
      <ptr>
        <struct name="_CRYPT_KEY_PROV_INFO" />
      </ptr>
    </typedef>
    <struct name="_CERT_KEY_CONTEXT">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4">
        <union>
          <alt name="hCryptProv">
            <type>HCRYPTPROV</type>
          </alt>
          <alt name="hNCryptKey">
            <type>NCRYPT_KEY_HANDLE</type>
          </alt>
        </union>
      </field>
      <field offset="8" name="dwKeySpec">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CERT_KEY_CONTEXT">
      <struct name="_CERT_KEY_CONTEXT" />
    </typedef>
    <typedef name="PCERT_KEY_CONTEXT">
      <ptr>
        <struct name="_CERT_KEY_CONTEXT" />
      </ptr>
    </typedef>
    <struct name="_ROOT_INFO_LUID">
      <field offset="0" name="LowPart">
        <type>DWORD</type>
      </field>
      <field offset="4" name="HighPart">
        <type>LONG</type>
      </field>
    </struct>
    <typedef name="ROOT_INFO_LUID">
      <struct name="_ROOT_INFO_LUID" />
    </typedef>
    <typedef name="PROOT_INFO_LUID">
      <ptr>
        <struct name="_ROOT_INFO_LUID" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_SMART_CARD_ROOT_INFO">
      <field offset="0" name="rgbCardID">
        <arr length="16">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="16" name="luid">
        <type>ROOT_INFO_LUID</type>
      </field>
    </struct>
    <typedef name="CRYPT_SMART_CARD_ROOT_INFO">
      <struct name="_CRYPT_SMART_CARD_ROOT_INFO" />
    </typedef>
    <typedef name="PCRYPT_SMART_CARD_ROOT_INFO">
      <ptr>
        <struct name="_CRYPT_SMART_CARD_ROOT_INFO" />
      </ptr>
    </typedef>
    <struct name="_CERT_SYSTEM_STORE_RELOCATE_PARA">
      <field offset="0">
        <union>
          <alt name="hKeyBase">
            <type>HKEY</type>
          </alt>
          <alt name="pvBase">
            <ptr>
              <void />
            </ptr>
          </alt>
        </union>
      </field>
      <field offset="4">
        <union>
          <alt name="pvSystemStore">
            <ptr>
              <void />
            </ptr>
          </alt>
          <alt name="pszSystemStore">
            <type>LPCSTR</type>
          </alt>
          <alt name="pwszSystemStore">
            <type>LPCWSTR</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="CERT_SYSTEM_STORE_RELOCATE_PARA">
      <struct name="_CERT_SYSTEM_STORE_RELOCATE_PARA" />
    </typedef>
    <typedef name="PCERT_SYSTEM_STORE_RELOCATE_PARA">
      <ptr>
        <struct name="_CERT_SYSTEM_STORE_RELOCATE_PARA" />
      </ptr>
    </typedef>
    <struct name="_CERT_REGISTRY_STORE_CLIENT_GPT_PARA">
      <field offset="0" name="hKeyBase">
        <type>HKEY</type>
      </field>
      <field offset="4" name="pwszRegPath">
        <type>LPWSTR</type>
      </field>
    </struct>
    <typedef name="CERT_REGISTRY_STORE_CLIENT_GPT_PARA">
      <struct name="_CERT_REGISTRY_STORE_CLIENT_GPT_PARA" />
    </typedef>
    <typedef name="PCERT_REGISTRY_STORE_CLIENT_GPT_PARA">
      <ptr>
        <struct name="_CERT_REGISTRY_STORE_CLIENT_GPT_PARA" />
      </ptr>
    </typedef>
    <struct name="_CERT_REGISTRY_STORE_ROAMING_PARA">
      <field offset="0" name="hKey">
        <type>HKEY</type>
      </field>
      <field offset="4" name="pwszStoreDirectory">
        <type>LPWSTR</type>
      </field>
    </struct>
    <typedef name="CERT_REGISTRY_STORE_ROAMING_PARA">
      <struct name="_CERT_REGISTRY_STORE_ROAMING_PARA" />
    </typedef>
    <typedef name="PCERT_REGISTRY_STORE_ROAMING_PARA">
      <ptr>
        <struct name="_CERT_REGISTRY_STORE_ROAMING_PARA" />
      </ptr>
    </typedef>
    <struct name="_CERT_LDAP_STORE_OPENED_PARA">
      <field offset="0" name="pvLdapSessionHandle">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="4" name="pwszLdapUrl">
        <type>LPCWSTR</type>
      </field>
    </struct>
    <typedef name="CERT_LDAP_STORE_OPENED_PARA">
      <struct name="_CERT_LDAP_STORE_OPENED_PARA" />
    </typedef>
    <typedef name="PCERT_LDAP_STORE_OPENED_PARA">
      <ptr>
        <struct name="_CERT_LDAP_STORE_OPENED_PARA" />
      </ptr>
    </typedef>
    <typedef name="HCERTSTOREPROV">
      <ptr>
        <void />
      </ptr>
    </typedef>
    <struct name="_CERT_STORE_PROV_INFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="cStoreProvFunc">
        <type>DWORD</type>
      </field>
      <field offset="8" name="rgpvStoreProvFunc">
        <ptr>
          <ptr>
            <void />
          </ptr>
        </ptr>
      </field>
      <field offset="12" name="hStoreProv">
        <type>HCERTSTOREPROV</type>
      </field>
      <field offset="16" name="dwStoreProvFlags">
        <type>DWORD</type>
      </field>
      <field offset="20" name="hStoreProvFuncAddr2">
        <type>HCRYPTOIDFUNCADDR</type>
      </field>
    </struct>
    <typedef name="CERT_STORE_PROV_INFO">
      <struct name="_CERT_STORE_PROV_INFO" />
    </typedef>
    <typedef name="PCERT_STORE_PROV_INFO">
      <ptr>
        <struct name="_CERT_STORE_PROV_INFO" />
      </ptr>
    </typedef>
    <typedef name="PFN_CERT_DLL_OPEN_STORE_PROV_FUNC">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="lpszStoreProvider">
            <type>LPCSTR</type>
            <stack size="4" />
          </arg>
          <arg name="dwEncodingType">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="hCryptProv">
            <type>HCRYPTPROV_LEGACY</type>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pvPara">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="hCertStore">
            <type>HCERTSTORE</type>
            <stack size="4" />
          </arg>
          <arg name="pStoreProvInfo">
            <type>PCERT_STORE_PROV_INFO</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_CERT_STORE_PROV_CLOSE">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="hStoreProv">
            <type>HCERTSTOREPROV</type>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_CERT_STORE_PROV_READ_CERT">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="hStoreProv">
            <type>HCERTSTOREPROV</type>
            <stack size="4" />
          </arg>
          <arg name="pStoreCertContext">
            <type>PCCERT_CONTEXT</type>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="ppProvCertContext">
            <ptr>
              <type>PCCERT_CONTEXT</type>
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_CERT_STORE_PROV_WRITE_CERT">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="hStoreProv">
            <type>HCERTSTOREPROV</type>
            <stack size="4" />
          </arg>
          <arg name="pCertContext">
            <type>PCCERT_CONTEXT</type>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_CERT_STORE_PROV_DELETE_CERT">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="hStoreProv">
            <type>HCERTSTOREPROV</type>
            <stack size="4" />
          </arg>
          <arg name="pCertContext">
            <type>PCCERT_CONTEXT</type>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_CERT_STORE_PROV_SET_CERT_PROPERTY">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="hStoreProv">
            <type>HCERTSTOREPROV</type>
            <stack size="4" />
          </arg>
          <arg name="pCertContext">
            <type>PCCERT_CONTEXT</type>
            <stack size="4" />
          </arg>
          <arg name="dwPropId">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pvData">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_CERT_STORE_PROV_READ_CRL">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="hStoreProv">
            <type>HCERTSTOREPROV</type>
            <stack size="4" />
          </arg>
          <arg name="pStoreCrlContext">
            <type>PCCRL_CONTEXT</type>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="ppProvCrlContext">
            <ptr>
              <type>PCCRL_CONTEXT</type>
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_CERT_STORE_PROV_WRITE_CRL">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="hStoreProv">
            <type>HCERTSTOREPROV</type>
            <stack size="4" />
          </arg>
          <arg name="pCrlContext">
            <type>PCCRL_CONTEXT</type>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_CERT_STORE_PROV_DELETE_CRL">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="hStoreProv">
            <type>HCERTSTOREPROV</type>
            <stack size="4" />
          </arg>
          <arg name="pCrlContext">
            <type>PCCRL_CONTEXT</type>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_CERT_STORE_PROV_SET_CRL_PROPERTY">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="hStoreProv">
            <type>HCERTSTOREPROV</type>
            <stack size="4" />
          </arg>
          <arg name="pCrlContext">
            <type>PCCRL_CONTEXT</type>
            <stack size="4" />
          </arg>
          <arg name="dwPropId">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pvData">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_CERT_STORE_PROV_READ_CTL">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="hStoreProv">
            <type>HCERTSTOREPROV</type>
            <stack size="4" />
          </arg>
          <arg name="pStoreCtlContext">
            <type>PCCTL_CONTEXT</type>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="ppProvCtlContext">
            <ptr>
              <type>PCCTL_CONTEXT</type>
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_CERT_STORE_PROV_WRITE_CTL">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="hStoreProv">
            <type>HCERTSTOREPROV</type>
            <stack size="4" />
          </arg>
          <arg name="pCtlContext">
            <type>PCCTL_CONTEXT</type>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_CERT_STORE_PROV_DELETE_CTL">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="hStoreProv">
            <type>HCERTSTOREPROV</type>
            <stack size="4" />
          </arg>
          <arg name="pCtlContext">
            <type>PCCTL_CONTEXT</type>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_CERT_STORE_PROV_SET_CTL_PROPERTY">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="hStoreProv">
            <type>HCERTSTOREPROV</type>
            <stack size="4" />
          </arg>
          <arg name="pCtlContext">
            <type>PCCTL_CONTEXT</type>
            <stack size="4" />
          </arg>
          <arg name="dwPropId">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pvData">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_CERT_STORE_PROV_CONTROL">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="hStoreProv">
            <type>HCERTSTOREPROV</type>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="dwCtrlType">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pvCtrlPara">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="_CERT_STORE_PROV_FIND_INFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwMsgAndCertEncodingType">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwFindFlags">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwFindType">
        <type>DWORD</type>
      </field>
      <field offset="16" name="pvFindPara">
        <ptr>
          <void />
        </ptr>
      </field>
    </struct>
    <typedef name="CERT_STORE_PROV_FIND_INFO">
      <struct name="_CERT_STORE_PROV_FIND_INFO" />
    </typedef>
    <typedef name="PCERT_STORE_PROV_FIND_INFO">
      <ptr>
        <struct name="_CERT_STORE_PROV_FIND_INFO" />
      </ptr>
    </typedef>
    <typedef name="CCERT_STORE_PROV_FIND_INFO">
      <type>CERT_STORE_PROV_FIND_INFO</type>
    </typedef>
    <typedef name="PCCERT_STORE_PROV_FIND_INFO">
      <ptr>
        <type>CERT_STORE_PROV_FIND_INFO</type>
      </ptr>
    </typedef>
    <typedef name="PFN_CERT_STORE_PROV_FIND_CERT">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="hStoreProv">
            <type>HCERTSTOREPROV</type>
            <stack size="4" />
          </arg>
          <arg name="pFindInfo">
            <type>PCCERT_STORE_PROV_FIND_INFO</type>
            <stack size="4" />
          </arg>
          <arg name="pPrevCertContext">
            <type>PCCERT_CONTEXT</type>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="ppvStoreProvFindInfo">
            <ptr>
              <ptr>
                <void />
              </ptr>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="ppProvCertContext">
            <ptr>
              <type>PCCERT_CONTEXT</type>
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_CERT_STORE_PROV_FREE_FIND_CERT">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="hStoreProv">
            <type>HCERTSTOREPROV</type>
            <stack size="4" />
          </arg>
          <arg name="pCertContext">
            <type>PCCERT_CONTEXT</type>
            <stack size="4" />
          </arg>
          <arg name="pvStoreProvFindInfo">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_CERT_STORE_PROV_GET_CERT_PROPERTY">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="hStoreProv">
            <type>HCERTSTOREPROV</type>
            <stack size="4" />
          </arg>
          <arg name="pCertContext">
            <type>PCCERT_CONTEXT</type>
            <stack size="4" />
          </arg>
          <arg name="dwPropId">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pvData">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pcbData">
            <ptr>
              <type>DWORD</type>
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_CERT_STORE_PROV_FIND_CRL">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="hStoreProv">
            <type>HCERTSTOREPROV</type>
            <stack size="4" />
          </arg>
          <arg name="pFindInfo">
            <type>PCCERT_STORE_PROV_FIND_INFO</type>
            <stack size="4" />
          </arg>
          <arg name="pPrevCrlContext">
            <type>PCCRL_CONTEXT</type>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="ppvStoreProvFindInfo">
            <ptr>
              <ptr>
                <void />
              </ptr>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="ppProvCrlContext">
            <ptr>
              <type>PCCRL_CONTEXT</type>
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_CERT_STORE_PROV_FREE_FIND_CRL">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="hStoreProv">
            <type>HCERTSTOREPROV</type>
            <stack size="4" />
          </arg>
          <arg name="pCrlContext">
            <type>PCCRL_CONTEXT</type>
            <stack size="4" />
          </arg>
          <arg name="pvStoreProvFindInfo">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_CERT_STORE_PROV_GET_CRL_PROPERTY">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="hStoreProv">
            <type>HCERTSTOREPROV</type>
            <stack size="4" />
          </arg>
          <arg name="pCrlContext">
            <type>PCCRL_CONTEXT</type>
            <stack size="4" />
          </arg>
          <arg name="dwPropId">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pvData">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pcbData">
            <ptr>
              <type>DWORD</type>
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_CERT_STORE_PROV_FIND_CTL">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="hStoreProv">
            <type>HCERTSTOREPROV</type>
            <stack size="4" />
          </arg>
          <arg name="pFindInfo">
            <type>PCCERT_STORE_PROV_FIND_INFO</type>
            <stack size="4" />
          </arg>
          <arg name="pPrevCtlContext">
            <type>PCCTL_CONTEXT</type>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="ppvStoreProvFindInfo">
            <ptr>
              <ptr>
                <void />
              </ptr>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="ppProvCtlContext">
            <ptr>
              <type>PCCTL_CONTEXT</type>
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_CERT_STORE_PROV_FREE_FIND_CTL">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="hStoreProv">
            <type>HCERTSTOREPROV</type>
            <stack size="4" />
          </arg>
          <arg name="pCtlContext">
            <type>PCCTL_CONTEXT</type>
            <stack size="4" />
          </arg>
          <arg name="pvStoreProvFindInfo">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_CERT_STORE_PROV_GET_CTL_PROPERTY">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="hStoreProv">
            <type>HCERTSTOREPROV</type>
            <stack size="4" />
          </arg>
          <arg name="pCtlContext">
            <type>PCCTL_CONTEXT</type>
            <stack size="4" />
          </arg>
          <arg name="dwPropId">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pvData">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pcbData">
            <ptr>
              <type>DWORD</type>
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="_CRL_FIND_ISSUED_FOR_PARA">
      <field offset="0" name="pSubjectCert">
        <type>PCCERT_CONTEXT</type>
      </field>
      <field offset="4" name="pIssuerCert">
        <type>PCCERT_CONTEXT</type>
      </field>
    </struct>
    <typedef name="CRL_FIND_ISSUED_FOR_PARA">
      <struct name="_CRL_FIND_ISSUED_FOR_PARA" />
    </typedef>
    <typedef name="PCRL_FIND_ISSUED_FOR_PARA">
      <ptr>
        <struct name="_CRL_FIND_ISSUED_FOR_PARA" />
      </ptr>
    </typedef>
    <struct name="_CTL_ANY_SUBJECT_INFO">
      <field offset="0" name="SubjectAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="16" name="SubjectIdentifier">
        <type>CRYPT_DATA_BLOB</type>
      </field>
    </struct>
    <typedef name="CTL_ANY_SUBJECT_INFO">
      <struct name="_CTL_ANY_SUBJECT_INFO" />
    </typedef>
    <typedef name="PCTL_ANY_SUBJECT_INFO">
      <ptr>
        <struct name="_CTL_ANY_SUBJECT_INFO" />
      </ptr>
    </typedef>
    <struct name="_CTL_FIND_USAGE_PARA">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="8" name="SubjectUsage">
        <type>CTL_USAGE</type>
      </field>
      <field offset="16" name="ListIdentifier">
        <type>CRYPT_DATA_BLOB</type>
      </field>
      <field offset="24" name="pSigner">
        <type>PCERT_INFO</type>
      </field>
    </struct>
    <typedef name="CTL_FIND_USAGE_PARA">
      <struct name="_CTL_FIND_USAGE_PARA" />
    </typedef>
    <typedef name="PCTL_FIND_USAGE_PARA">
      <ptr>
        <struct name="_CTL_FIND_USAGE_PARA" />
      </ptr>
    </typedef>
    <struct name="_CTL_FIND_SUBJECT_PARA">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pUsagePara">
        <type>PCTL_FIND_USAGE_PARA</type>
      </field>
      <field offset="8" name="dwSubjectType">
        <type>DWORD</type>
      </field>
      <field offset="12" name="pvSubject">
        <ptr>
          <void />
        </ptr>
      </field>
    </struct>
    <typedef name="CTL_FIND_SUBJECT_PARA">
      <struct name="_CTL_FIND_SUBJECT_PARA" />
    </typedef>
    <typedef name="PCTL_FIND_SUBJECT_PARA">
      <ptr>
        <struct name="_CTL_FIND_SUBJECT_PARA" />
      </ptr>
    </typedef>
    <typedef name="PFN_CERT_CREATE_CONTEXT_SORT_FUNC">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="cbTotalEncoded">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="cbRemainEncoded">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="cEntry">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pvSort">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="_CERT_CREATE_CONTEXT_PARA">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pfnFree">
        <type>PFN_CRYPT_FREE</type>
      </field>
      <field offset="8" name="pvFree">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="12" name="pfnSort">
        <type>PFN_CERT_CREATE_CONTEXT_SORT_FUNC</type>
      </field>
      <field offset="16" name="pvSort">
        <ptr>
          <void />
        </ptr>
      </field>
    </struct>
    <typedef name="CERT_CREATE_CONTEXT_PARA">
      <struct name="_CERT_CREATE_CONTEXT_PARA" />
    </typedef>
    <typedef name="PCERT_CREATE_CONTEXT_PARA">
      <ptr>
        <struct name="_CERT_CREATE_CONTEXT_PARA" />
      </ptr>
    </typedef>
    <struct name="_CERT_SYSTEM_STORE_INFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CERT_SYSTEM_STORE_INFO">
      <struct name="_CERT_SYSTEM_STORE_INFO" />
    </typedef>
    <typedef name="PCERT_SYSTEM_STORE_INFO">
      <ptr>
        <struct name="_CERT_SYSTEM_STORE_INFO" />
      </ptr>
    </typedef>
    <struct name="_CERT_PHYSICAL_STORE_INFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pszOpenStoreProvider">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="dwOpenEncodingType">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwOpenFlags">
        <type>DWORD</type>
      </field>
      <field offset="16" name="OpenParameters">
        <type>CRYPT_DATA_BLOB</type>
      </field>
      <field offset="24" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="28" name="dwPriority">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CERT_PHYSICAL_STORE_INFO">
      <struct name="_CERT_PHYSICAL_STORE_INFO" />
    </typedef>
    <typedef name="PCERT_PHYSICAL_STORE_INFO">
      <ptr>
        <struct name="_CERT_PHYSICAL_STORE_INFO" />
      </ptr>
    </typedef>
    <typedef name="PFN_CERT_ENUM_SYSTEM_STORE_LOCATION">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="pwszStoreLocation">
            <type>LPCWSTR</type>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pvReserved">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pvArg">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_CERT_ENUM_SYSTEM_STORE">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="pvSystemStore">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pStoreInfo">
            <type>PCERT_SYSTEM_STORE_INFO</type>
            <stack size="4" />
          </arg>
          <arg name="pvReserved">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pvArg">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_CERT_ENUM_PHYSICAL_STORE">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="pvSystemStore">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pwszStoreName">
            <type>LPCWSTR</type>
            <stack size="4" />
          </arg>
          <arg name="pStoreInfo">
            <type>PCERT_PHYSICAL_STORE_INFO</type>
            <stack size="4" />
          </arg>
          <arg name="pvReserved">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pvArg">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="_CTL_VERIFY_USAGE_PARA">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="8" name="ListIdentifier">
        <type>CRYPT_DATA_BLOB</type>
      </field>
      <field offset="16" name="cCtlStore">
        <type>DWORD</type>
      </field>
      <field offset="20" name="rghCtlStore">
        <ptr>
          <type>HCERTSTORE</type>
        </ptr>
      </field>
      <field offset="24" name="cSignerStore">
        <type>DWORD</type>
      </field>
      <field offset="28" name="rghSignerStore">
        <ptr>
          <type>HCERTSTORE</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CTL_VERIFY_USAGE_PARA">
      <struct name="_CTL_VERIFY_USAGE_PARA" />
    </typedef>
    <typedef name="PCTL_VERIFY_USAGE_PARA">
      <ptr>
        <struct name="_CTL_VERIFY_USAGE_PARA" />
      </ptr>
    </typedef>
    <struct name="_CTL_VERIFY_USAGE_STATUS">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwError">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="12" name="ppCtl">
        <ptr>
          <type>PCCTL_CONTEXT</type>
        </ptr>
      </field>
      <field offset="16" name="dwCtlEntryIndex">
        <type>DWORD</type>
      </field>
      <field offset="20" name="ppSigner">
        <ptr>
          <type>PCCERT_CONTEXT</type>
        </ptr>
      </field>
      <field offset="24" name="dwSignerIndex">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CTL_VERIFY_USAGE_STATUS">
      <struct name="_CTL_VERIFY_USAGE_STATUS" />
    </typedef>
    <typedef name="PCTL_VERIFY_USAGE_STATUS">
      <ptr>
        <struct name="_CTL_VERIFY_USAGE_STATUS" />
      </ptr>
    </typedef>
    <struct name="_CERT_REVOCATION_CRL_INFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pBaseCrlContext">
        <type>PCCRL_CONTEXT</type>
      </field>
      <field offset="8" name="pDeltaCrlContext">
        <type>PCCRL_CONTEXT</type>
      </field>
      <field offset="12" name="pCrlEntry">
        <type>PCRL_ENTRY</type>
      </field>
      <field offset="16" name="fDeltaCrlEntry">
        <type>BOOL</type>
      </field>
    </struct>
    <typedef name="CERT_REVOCATION_CRL_INFO">
      <struct name="_CERT_REVOCATION_CRL_INFO" />
    </typedef>
    <typedef name="PCERT_REVOCATION_CRL_INFO">
      <ptr>
        <struct name="_CERT_REVOCATION_CRL_INFO" />
      </ptr>
    </typedef>
    <typedef name="CERT_REVOCATION_CHAIN_PARA">
      <struct name="_CERT_REVOCATION_CHAIN_PARA" />
    </typedef>
    <typedef name="PCERT_REVOCATION_CHAIN_PARA">
      <ptr>
        <struct name="_CERT_REVOCATION_CHAIN_PARA" />
      </ptr>
    </typedef>
    <struct name="_CERT_REVOCATION_PARA">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pIssuerCert">
        <type>PCCERT_CONTEXT</type>
      </field>
      <field offset="8" name="cCertStore">
        <type>DWORD</type>
      </field>
      <field offset="12" name="rgCertStore">
        <ptr>
          <type>HCERTSTORE</type>
        </ptr>
      </field>
      <field offset="16" name="hCrlStore">
        <type>HCERTSTORE</type>
      </field>
      <field offset="20" name="pftTimeToUse">
        <type>LPFILETIME</type>
      </field>
    </struct>
    <typedef name="CERT_REVOCATION_PARA">
      <struct name="_CERT_REVOCATION_PARA" />
    </typedef>
    <typedef name="PCERT_REVOCATION_PARA">
      <ptr>
        <struct name="_CERT_REVOCATION_PARA" />
      </ptr>
    </typedef>
    <struct name="_CERT_REVOCATION_STATUS">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwIndex">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwError">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwReason">
        <type>DWORD</type>
      </field>
      <field offset="16" name="fHasFreshnessTime">
        <type>BOOL</type>
      </field>
      <field offset="20" name="dwFreshnessTime">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CERT_REVOCATION_STATUS">
      <struct name="_CERT_REVOCATION_STATUS" />
    </typedef>
    <typedef name="PCERT_REVOCATION_STATUS">
      <ptr>
        <struct name="_CERT_REVOCATION_STATUS" />
      </ptr>
    </typedef>
    <typedef name="PFN_CRYPT_EXTRACT_ENCODED_SIGNATURE_PARAMETERS_FUNC">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="dwCertEncodingType">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pSignatureAlgorithm">
            <type>PCRYPT_ALGORITHM_IDENTIFIER</type>
            <stack size="4" />
          </arg>
          <arg name="ppvDecodedSignPara">
            <ptr>
              <ptr>
                <void />
              </ptr>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="ppwszCNGHashAlgid">
            <ptr>
              <type>LPWSTR</type>
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_CRYPT_SIGN_AND_ENCODE_HASH_FUNC">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="hKey">
            <type>NCRYPT_KEY_HANDLE</type>
            <stack size="4" />
          </arg>
          <arg name="dwCertEncodingType">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pSignatureAlgorithm">
            <type>PCRYPT_ALGORITHM_IDENTIFIER</type>
            <stack size="4" />
          </arg>
          <arg name="pvDecodedSignPara">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pwszCNGPubKeyAlgid">
            <type>LPCWSTR</type>
            <stack size="4" />
          </arg>
          <arg name="pwszCNGHashAlgid">
            <type>LPCWSTR</type>
            <stack size="4" />
          </arg>
          <arg name="pbComputedHash">
            <ptr>
              <type>BYTE</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="cbComputedHash">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pbSignature">
            <ptr>
              <type>BYTE</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pcbSignature">
            <ptr>
              <type>DWORD</type>
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_CRYPT_VERIFY_ENCODED_SIGNATURE_FUNC">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="dwCertEncodingType">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pPubKeyInfo">
            <type>PCERT_PUBLIC_KEY_INFO</type>
            <stack size="4" />
          </arg>
          <arg name="pSignatureAlgorithm">
            <type>PCRYPT_ALGORITHM_IDENTIFIER</type>
            <stack size="4" />
          </arg>
          <arg name="pvDecodedSignPara">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pwszCNGPubKeyAlgid">
            <type>LPCWSTR</type>
            <stack size="4" />
          </arg>
          <arg name="pwszCNGHashAlgid">
            <type>LPCWSTR</type>
            <stack size="4" />
          </arg>
          <arg name="pbComputedHash">
            <ptr>
              <type>BYTE</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="cbComputedHash">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pbSignature">
            <ptr>
              <type>BYTE</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="cbSignature">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="HCRYPTDEFAULTCONTEXT">
      <ptr>
        <void />
      </ptr>
    </typedef>
    <struct name="_CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA">
      <field offset="0" name="cOID">
        <type>DWORD</type>
      </field>
      <field offset="4" name="rgpszOID">
        <ptr>
          <type>LPSTR</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA">
      <struct name="_CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA" />
    </typedef>
    <typedef name="PCRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA">
      <ptr>
        <struct name="_CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA" />
      </ptr>
    </typedef>
    <typedef name="PFN_CRYPT_EXPORT_PUBLIC_KEY_INFO_EX2_FUNC">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="hNCryptKey">
            <type>NCRYPT_KEY_HANDLE</type>
            <stack size="4" />
          </arg>
          <arg name="dwCertEncodingType">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pszPublicKeyObjId">
            <type>LPSTR</type>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pvAuxInfo">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pInfo">
            <type>PCERT_PUBLIC_KEY_INFO</type>
            <stack size="4" />
          </arg>
          <arg name="pcbInfo">
            <ptr>
              <type>DWORD</type>
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_CRYPT_EXPORT_PUBLIC_KEY_INFO_FROM_BCRYPT_HANDLE_FUNC">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="hBCryptKey">
            <type>BCRYPT_KEY_HANDLE</type>
            <stack size="4" />
          </arg>
          <arg name="dwCertEncodingType">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pszPublicKeyObjId">
            <type>LPSTR</type>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pvAuxInfo">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pInfo">
            <type>PCERT_PUBLIC_KEY_INFO</type>
            <stack size="4" />
          </arg>
          <arg name="pcbInfo">
            <ptr>
              <type>DWORD</type>
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_IMPORT_PUBLIC_KEY_INFO_EX2_FUNC">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="dwCertEncodingType">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pInfo">
            <type>PCERT_PUBLIC_KEY_INFO</type>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pvAuxInfo">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="phKey">
            <ptr>
              <type>BCRYPT_KEY_HANDLE</type>
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_IMPORT_PRIV_KEY_FUNC">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="hCryptProv">
            <type>HCRYPTPROV</type>
            <stack size="4" />
          </arg>
          <arg name="pPrivateKeyInfo">
            <ptr>
              <type>CRYPT_PRIVATE_KEY_INFO</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pvAuxInfo">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_EXPORT_PRIV_KEY_FUNC">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="hCryptProv">
            <type>HCRYPTPROV</type>
            <stack size="4" />
          </arg>
          <arg name="dwKeySpec">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pszPrivateKeyObjId">
            <type>LPSTR</type>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pvAuxInfo">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pPrivateKeyInfo">
            <ptr>
              <type>CRYPT_PRIVATE_KEY_INFO</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pcbPrivateKeyInfo">
            <ptr>
              <type>DWORD</type>
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_CRYPT_GET_SIGNER_CERTIFICATE">
      <ptr>
        <fn>
          <return>
            <type>PCCERT_CONTEXT</type>
            <reg>eax</reg>
          </return>
          <arg name="pvGetArg">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="dwCertEncodingType">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pSignerId">
            <type>PCERT_INFO</type>
            <stack size="4" />
          </arg>
          <arg name="hMsgCertStore">
            <type>HCERTSTORE</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="_CRYPT_SIGN_MESSAGE_PARA">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwMsgEncodingType">
        <type>DWORD</type>
      </field>
      <field offset="8" name="pSigningCert">
        <type>PCCERT_CONTEXT</type>
      </field>
      <field offset="16" name="HashAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="28" name="pvHashAuxInfo">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="32" name="cMsgCert">
        <type>DWORD</type>
      </field>
      <field offset="36" name="rgpMsgCert">
        <ptr>
          <type>PCCERT_CONTEXT</type>
        </ptr>
      </field>
      <field offset="40" name="cMsgCrl">
        <type>DWORD</type>
      </field>
      <field offset="44" name="rgpMsgCrl">
        <ptr>
          <type>PCCRL_CONTEXT</type>
        </ptr>
      </field>
      <field offset="48" name="cAuthAttr">
        <type>DWORD</type>
      </field>
      <field offset="52" name="rgAuthAttr">
        <type>PCRYPT_ATTRIBUTE</type>
      </field>
      <field offset="56" name="cUnauthAttr">
        <type>DWORD</type>
      </field>
      <field offset="60" name="rgUnauthAttr">
        <type>PCRYPT_ATTRIBUTE</type>
      </field>
      <field offset="64" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="68" name="dwInnerContentType">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CRYPT_SIGN_MESSAGE_PARA">
      <struct name="_CRYPT_SIGN_MESSAGE_PARA" />
    </typedef>
    <typedef name="PCRYPT_SIGN_MESSAGE_PARA">
      <ptr>
        <struct name="_CRYPT_SIGN_MESSAGE_PARA" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_VERIFY_MESSAGE_PARA">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwMsgAndCertEncodingType">
        <type>DWORD</type>
      </field>
      <field offset="8" name="hCryptProv">
        <type>HCRYPTPROV_LEGACY</type>
      </field>
      <field offset="12" name="pfnGetSignerCertificate">
        <type>PFN_CRYPT_GET_SIGNER_CERTIFICATE</type>
      </field>
      <field offset="16" name="pvGetArg">
        <ptr>
          <void />
        </ptr>
      </field>
    </struct>
    <typedef name="CRYPT_VERIFY_MESSAGE_PARA">
      <struct name="_CRYPT_VERIFY_MESSAGE_PARA" />
    </typedef>
    <typedef name="PCRYPT_VERIFY_MESSAGE_PARA">
      <ptr>
        <struct name="_CRYPT_VERIFY_MESSAGE_PARA" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_ENCRYPT_MESSAGE_PARA">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwMsgEncodingType">
        <type>DWORD</type>
      </field>
      <field offset="8" name="hCryptProv">
        <type>HCRYPTPROV_LEGACY</type>
      </field>
      <field offset="16" name="ContentEncryptionAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="28" name="pvEncryptionAuxInfo">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="32" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="36" name="dwInnerContentType">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CRYPT_ENCRYPT_MESSAGE_PARA">
      <struct name="_CRYPT_ENCRYPT_MESSAGE_PARA" />
    </typedef>
    <typedef name="PCRYPT_ENCRYPT_MESSAGE_PARA">
      <ptr>
        <struct name="_CRYPT_ENCRYPT_MESSAGE_PARA" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_DECRYPT_MESSAGE_PARA">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwMsgAndCertEncodingType">
        <type>DWORD</type>
      </field>
      <field offset="8" name="cCertStore">
        <type>DWORD</type>
      </field>
      <field offset="12" name="rghCertStore">
        <ptr>
          <type>HCERTSTORE</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CRYPT_DECRYPT_MESSAGE_PARA">
      <struct name="_CRYPT_DECRYPT_MESSAGE_PARA" />
    </typedef>
    <typedef name="PCRYPT_DECRYPT_MESSAGE_PARA">
      <ptr>
        <struct name="_CRYPT_DECRYPT_MESSAGE_PARA" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_HASH_MESSAGE_PARA">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwMsgEncodingType">
        <type>DWORD</type>
      </field>
      <field offset="8" name="hCryptProv">
        <type>HCRYPTPROV_LEGACY</type>
      </field>
      <field offset="16" name="HashAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="28" name="pvHashAuxInfo">
        <ptr>
          <void />
        </ptr>
      </field>
    </struct>
    <typedef name="CRYPT_HASH_MESSAGE_PARA">
      <struct name="_CRYPT_HASH_MESSAGE_PARA" />
    </typedef>
    <typedef name="PCRYPT_HASH_MESSAGE_PARA">
      <ptr>
        <struct name="_CRYPT_HASH_MESSAGE_PARA" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_KEY_SIGN_MESSAGE_PARA">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwMsgAndCertEncodingType">
        <type>DWORD</type>
      </field>
      <field offset="8">
        <union>
          <alt name="hCryptProv">
            <type>HCRYPTPROV</type>
          </alt>
          <alt name="hNCryptKey">
            <type>NCRYPT_KEY_HANDLE</type>
          </alt>
        </union>
      </field>
      <field offset="12" name="dwKeySpec">
        <type>DWORD</type>
      </field>
      <field offset="16" name="HashAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="28" name="pvHashAuxInfo">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="32" name="PubKeyAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
    </struct>
    <typedef name="CRYPT_KEY_SIGN_MESSAGE_PARA">
      <struct name="_CRYPT_KEY_SIGN_MESSAGE_PARA" />
    </typedef>
    <typedef name="PCRYPT_KEY_SIGN_MESSAGE_PARA">
      <ptr>
        <struct name="_CRYPT_KEY_SIGN_MESSAGE_PARA" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_KEY_VERIFY_MESSAGE_PARA">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwMsgEncodingType">
        <type>DWORD</type>
      </field>
      <field offset="8" name="hCryptProv">
        <type>HCRYPTPROV_LEGACY</type>
      </field>
    </struct>
    <typedef name="CRYPT_KEY_VERIFY_MESSAGE_PARA">
      <struct name="_CRYPT_KEY_VERIFY_MESSAGE_PARA" />
    </typedef>
    <typedef name="PCRYPT_KEY_VERIFY_MESSAGE_PARA">
      <ptr>
        <struct name="_CRYPT_KEY_VERIFY_MESSAGE_PARA" />
      </ptr>
    </typedef>
    <struct name="_CERT_CHAIN">
      <field offset="0" name="cCerts">
        <type>DWORD</type>
      </field>
      <field offset="4" name="certs">
        <type>PCERT_BLOB</type>
      </field>
      <field offset="8" name="keyLocatorInfo">
        <type>CRYPT_KEY_PROV_INFO</type>
      </field>
    </struct>
    <typedef name="CERT_CHAIN">
      <struct name="_CERT_CHAIN" />
    </typedef>
    <typedef name="PCERT_CHAIN">
      <ptr>
        <struct name="_CERT_CHAIN" />
      </ptr>
    </typedef>
    <typedef name="HCRYPTASYNC">
      <type>HANDLE</type>
    </typedef>
    <typedef name="PHCRYPTASYNC">
      <ptr>
        <type>HANDLE</type>
      </ptr>
    </typedef>
    <typedef name="PFN_CRYPT_ASYNC_PARAM_FREE_FUNC">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="pszParamOid">
            <type>LPSTR</type>
            <stack size="4" />
          </arg>
          <arg name="pvParam">
            <type>LPVOID</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="_CRYPT_BLOB_ARRAY">
      <field offset="0" name="cBlob">
        <type>DWORD</type>
      </field>
      <field offset="4" name="rgBlob">
        <type>PCRYPT_DATA_BLOB</type>
      </field>
    </struct>
    <typedef name="CRYPT_BLOB_ARRAY">
      <struct name="_CRYPT_BLOB_ARRAY" />
    </typedef>
    <typedef name="PCRYPT_BLOB_ARRAY">
      <ptr>
        <struct name="_CRYPT_BLOB_ARRAY" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_CREDENTIALS">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pszCredentialsOid">
        <type>LPCSTR</type>
      </field>
      <field offset="8" name="pvCredentials">
        <type>LPVOID</type>
      </field>
    </struct>
    <typedef name="CRYPT_CREDENTIALS">
      <struct name="_CRYPT_CREDENTIALS" />
    </typedef>
    <typedef name="PCRYPT_CREDENTIALS">
      <ptr>
        <struct name="_CRYPT_CREDENTIALS" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_PASSWORD_CREDENTIALSA">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pszUsername">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="pszPassword">
        <type>LPSTR</type>
      </field>
    </struct>
    <typedef name="CRYPT_PASSWORD_CREDENTIALSA">
      <struct name="_CRYPT_PASSWORD_CREDENTIALSA" />
    </typedef>
    <typedef name="PCRYPT_PASSWORD_CREDENTIALSA">
      <ptr>
        <struct name="_CRYPT_PASSWORD_CREDENTIALSA" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_PASSWORD_CREDENTIALSW">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pszUsername">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="pszPassword">
        <type>LPWSTR</type>
      </field>
    </struct>
    <typedef name="CRYPT_PASSWORD_CREDENTIALSW">
      <struct name="_CRYPT_PASSWORD_CREDENTIALSW" />
    </typedef>
    <typedef name="PCRYPT_PASSWORD_CREDENTIALSW">
      <ptr>
        <struct name="_CRYPT_PASSWORD_CREDENTIALSW" />
      </ptr>
    </typedef>
    <typedef name="CRYPT_PASSWORD_CREDENTIALS">
      <type>CRYPT_PASSWORD_CREDENTIALSA</type>
    </typedef>
    <typedef name="PCRYPT_PASSWORD_CREDENTIALS">
      <type>PCRYPT_PASSWORD_CREDENTIALSA</type>
    </typedef>
    <typedef name="PFN_FREE_ENCODED_OBJECT_FUNC">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="pszObjectOid">
            <type>LPCSTR</type>
            <stack size="4" />
          </arg>
          <arg name="pObject">
            <type>PCRYPT_BLOB_ARRAY</type>
            <stack size="4" />
          </arg>
          <arg name="pvFreeContext">
            <type>LPVOID</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="_CRYPTNET_URL_CACHE_PRE_FETCH_INFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwObjectType">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwError">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwReserved">
        <type>DWORD</type>
      </field>
      <field offset="16" name="ThisUpdateTime">
        <type>FILETIME</type>
      </field>
      <field offset="24" name="NextUpdateTime">
        <type>FILETIME</type>
      </field>
      <field offset="32" name="PublishTime">
        <type>FILETIME</type>
      </field>
    </struct>
    <typedef name="CRYPTNET_URL_CACHE_PRE_FETCH_INFO">
      <struct name="_CRYPTNET_URL_CACHE_PRE_FETCH_INFO" />
    </typedef>
    <typedef name="PCRYPTNET_URL_CACHE_PRE_FETCH_INFO">
      <ptr>
        <struct name="_CRYPTNET_URL_CACHE_PRE_FETCH_INFO" />
      </ptr>
    </typedef>
    <struct name="_CRYPTNET_URL_CACHE_FLUSH_INFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwExemptSeconds">
        <type>DWORD</type>
      </field>
      <field offset="8" name="ExpireTime">
        <type>FILETIME</type>
      </field>
    </struct>
    <typedef name="CRYPTNET_URL_CACHE_FLUSH_INFO">
      <struct name="_CRYPTNET_URL_CACHE_FLUSH_INFO" />
    </typedef>
    <typedef name="PCRYPTNET_URL_CACHE_FLUSH_INFO">
      <ptr>
        <struct name="_CRYPTNET_URL_CACHE_FLUSH_INFO" />
      </ptr>
    </typedef>
    <struct name="_CRYPTNET_URL_CACHE_RESPONSE_INFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="wResponseType">
        <type>WORD</type>
      </field>
      <field offset="6" name="wResponseFlags">
        <type>WORD</type>
      </field>
      <field offset="8" name="LastModifiedTime">
        <type>FILETIME</type>
      </field>
      <field offset="16" name="dwMaxAge">
        <type>DWORD</type>
      </field>
      <field offset="20" name="pwszETag">
        <type>LPCWSTR</type>
      </field>
      <field offset="24" name="dwProxyId">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CRYPTNET_URL_CACHE_RESPONSE_INFO">
      <struct name="_CRYPTNET_URL_CACHE_RESPONSE_INFO" />
    </typedef>
    <typedef name="PCRYPTNET_URL_CACHE_RESPONSE_INFO">
      <ptr>
        <struct name="_CRYPTNET_URL_CACHE_RESPONSE_INFO" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_RETRIEVE_AUX_INFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pLastSyncTime">
        <ptr>
          <type>FILETIME</type>
        </ptr>
      </field>
      <field offset="8" name="dwMaxUrlRetrievalByteCount">
        <type>DWORD</type>
      </field>
      <field offset="12" name="pPreFetchInfo">
        <type>PCRYPTNET_URL_CACHE_PRE_FETCH_INFO</type>
      </field>
      <field offset="16" name="pFlushInfo">
        <type>PCRYPTNET_URL_CACHE_FLUSH_INFO</type>
      </field>
      <field offset="20" name="ppResponseInfo">
        <ptr>
          <type>PCRYPTNET_URL_CACHE_RESPONSE_INFO</type>
        </ptr>
      </field>
      <field offset="24" name="pwszCacheFileNamePrefix">
        <type>LPWSTR</type>
      </field>
      <field offset="28" name="pftCacheResync">
        <type>LPFILETIME</type>
      </field>
      <field offset="32" name="fProxyCacheRetrieval">
        <type>BOOL</type>
      </field>
      <field offset="36" name="dwHttpStatusCode">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CRYPT_RETRIEVE_AUX_INFO">
      <struct name="_CRYPT_RETRIEVE_AUX_INFO" />
    </typedef>
    <typedef name="PCRYPT_RETRIEVE_AUX_INFO">
      <ptr>
        <struct name="_CRYPT_RETRIEVE_AUX_INFO" />
      </ptr>
    </typedef>
    <typedef name="PFN_CRYPT_CANCEL_RETRIEVAL">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pvArg">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_CRYPT_ASYNC_RETRIEVAL_COMPLETION_FUNC">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="pvCompletion">
            <type>LPVOID</type>
            <stack size="4" />
          </arg>
          <arg name="dwCompletionCode">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pszUrl">
            <type>LPCSTR</type>
            <stack size="4" />
          </arg>
          <arg name="pszObjectOid">
            <type>LPSTR</type>
            <stack size="4" />
          </arg>
          <arg name="pvObject">
            <type>LPVOID</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="_CRYPT_ASYNC_RETRIEVAL_COMPLETION">
      <field offset="0" name="pfnCompletion">
        <type>PFN_CRYPT_ASYNC_RETRIEVAL_COMPLETION_FUNC</type>
      </field>
      <field offset="4" name="pvCompletion">
        <type>LPVOID</type>
      </field>
    </struct>
    <typedef name="CRYPT_ASYNC_RETRIEVAL_COMPLETION">
      <struct name="_CRYPT_ASYNC_RETRIEVAL_COMPLETION" />
    </typedef>
    <typedef name="PCRYPT_ASYNC_RETRIEVAL_COMPLETION">
      <ptr>
        <struct name="_CRYPT_ASYNC_RETRIEVAL_COMPLETION" />
      </ptr>
    </typedef>
    <typedef name="PFN_CANCEL_ASYNC_RETRIEVAL_FUNC">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="hAsyncRetrieve">
            <type>HCRYPTASYNC</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="_CRYPT_URL_ARRAY">
      <field offset="0" name="cUrl">
        <type>DWORD</type>
      </field>
      <field offset="4" name="rgwszUrl">
        <ptr>
          <type>LPWSTR</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CRYPT_URL_ARRAY">
      <struct name="_CRYPT_URL_ARRAY" />
    </typedef>
    <typedef name="PCRYPT_URL_ARRAY">
      <ptr>
        <struct name="_CRYPT_URL_ARRAY" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_URL_INFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwSyncDeltaTime">
        <type>DWORD</type>
      </field>
      <field offset="8" name="cGroup">
        <type>DWORD</type>
      </field>
      <field offset="12" name="rgcGroupEntry">
        <ptr>
          <type>DWORD</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CRYPT_URL_INFO">
      <struct name="_CRYPT_URL_INFO" />
    </typedef>
    <typedef name="PCRYPT_URL_INFO">
      <ptr>
        <struct name="_CRYPT_URL_INFO" />
      </ptr>
    </typedef>
    <struct name="_CERT_CRL_CONTEXT_PAIR">
      <field offset="0" name="pCertContext">
        <type>PCCERT_CONTEXT</type>
      </field>
      <field offset="4" name="pCrlContext">
        <type>PCCRL_CONTEXT</type>
      </field>
    </struct>
    <typedef name="CERT_CRL_CONTEXT_PAIR">
      <struct name="_CERT_CRL_CONTEXT_PAIR" />
    </typedef>
    <typedef name="PCERT_CRL_CONTEXT_PAIR">
      <ptr>
        <struct name="_CERT_CRL_CONTEXT_PAIR" />
      </ptr>
    </typedef>
    <typedef name="PCCERT_CRL_CONTEXT_PAIR">
      <ptr>
        <type>CERT_CRL_CONTEXT_PAIR</type>
      </ptr>
    </typedef>
    <struct name="_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="iDeltaCrlIndicator">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="pftCacheResync">
        <type>LPFILETIME</type>
      </field>
      <field offset="12" name="pLastSyncTime">
        <type>LPFILETIME</type>
      </field>
      <field offset="16" name="pMaxAgeTime">
        <type>LPFILETIME</type>
      </field>
      <field offset="20" name="pChainPara">
        <type>PCERT_REVOCATION_CHAIN_PARA</type>
      </field>
      <field offset="24" name="pDeltaCrlIndicator">
        <type>PCRYPT_INTEGER_BLOB</type>
      </field>
    </struct>
    <typedef name="CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO">
      <struct name="_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO" />
    </typedef>
    <typedef name="PCRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO">
      <ptr>
        <struct name="_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO" />
      </ptr>
    </typedef>
    <struct name="_CRYPTPROTECT_PROMPTSTRUCT">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwPromptFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="hwndApp">
        <type>HWND</type>
      </field>
      <field offset="12" name="szPrompt">
        <type>LPCWSTR</type>
      </field>
    </struct>
    <typedef name="CRYPTPROTECT_PROMPTSTRUCT">
      <struct name="_CRYPTPROTECT_PROMPTSTRUCT" />
    </typedef>
    <typedef name="PCRYPTPROTECT_PROMPTSTRUCT">
      <ptr>
        <struct name="_CRYPTPROTECT_PROMPTSTRUCT" />
      </ptr>
    </typedef>
    <typedef name="PFN_CRYPT_ENUM_KEYID_PROP">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="pKeyIdentifier">
            <ptr>
              <type>CRYPT_HASH_BLOB</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="dwFlags">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="pvReserved">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pvArg">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="cProp">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="rgdwPropId">
            <ptr>
              <type>DWORD</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="rgpvData">
            <ptr>
              <ptr>
                <void />
              </ptr>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="rgcbData">
            <ptr>
              <type>DWORD</type>
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="HCERTCHAINENGINE">
      <type>HANDLE</type>
    </typedef>
    <struct name="_CERT_CHAIN_ENGINE_CONFIG">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="hRestrictedRoot">
        <type>HCERTSTORE</type>
      </field>
      <field offset="8" name="hRestrictedTrust">
        <type>HCERTSTORE</type>
      </field>
      <field offset="12" name="hRestrictedOther">
        <type>HCERTSTORE</type>
      </field>
      <field offset="16" name="cAdditionalStore">
        <type>DWORD</type>
      </field>
      <field offset="20" name="rghAdditionalStore">
        <ptr>
          <type>HCERTSTORE</type>
        </ptr>
      </field>
      <field offset="24" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="28" name="dwUrlRetrievalTimeout">
        <type>DWORD</type>
      </field>
      <field offset="32" name="MaximumCachedCertificates">
        <type>DWORD</type>
      </field>
      <field offset="36" name="CycleDetectionModulus">
        <type>DWORD</type>
      </field>
      <field offset="40" name="hExclusiveRoot">
        <type>HCERTSTORE</type>
      </field>
      <field offset="44" name="hExclusiveTrustedPeople">
        <type>HCERTSTORE</type>
      </field>
    </struct>
    <typedef name="CERT_CHAIN_ENGINE_CONFIG">
      <struct name="_CERT_CHAIN_ENGINE_CONFIG" />
    </typedef>
    <typedef name="PCERT_CHAIN_ENGINE_CONFIG">
      <ptr>
        <struct name="_CERT_CHAIN_ENGINE_CONFIG" />
      </ptr>
    </typedef>
    <struct name="_CERT_TRUST_STATUS">
      <field offset="0" name="dwErrorStatus">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwInfoStatus">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CERT_TRUST_STATUS">
      <struct name="_CERT_TRUST_STATUS" />
    </typedef>
    <typedef name="PCERT_TRUST_STATUS">
      <ptr>
        <struct name="_CERT_TRUST_STATUS" />
      </ptr>
    </typedef>
    <struct name="_CERT_REVOCATION_INFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwRevocationResult">
        <type>DWORD</type>
      </field>
      <field offset="8" name="pszRevocationOid">
        <type>LPCSTR</type>
      </field>
      <field offset="12" name="pvOidSpecificInfo">
        <type>LPVOID</type>
      </field>
      <field offset="16" name="fHasFreshnessTime">
        <type>BOOL</type>
      </field>
      <field offset="20" name="dwFreshnessTime">
        <type>DWORD</type>
      </field>
      <field offset="24" name="pCrlInfo">
        <type>PCERT_REVOCATION_CRL_INFO</type>
      </field>
    </struct>
    <typedef name="CERT_REVOCATION_INFO">
      <struct name="_CERT_REVOCATION_INFO" />
    </typedef>
    <typedef name="PCERT_REVOCATION_INFO">
      <ptr>
        <struct name="_CERT_REVOCATION_INFO" />
      </ptr>
    </typedef>
    <struct name="_CERT_TRUST_LIST_INFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pCtlEntry">
        <type>PCTL_ENTRY</type>
      </field>
      <field offset="8" name="pCtlContext">
        <type>PCCTL_CONTEXT</type>
      </field>
    </struct>
    <typedef name="CERT_TRUST_LIST_INFO">
      <struct name="_CERT_TRUST_LIST_INFO" />
    </typedef>
    <typedef name="PCERT_TRUST_LIST_INFO">
      <ptr>
        <struct name="_CERT_TRUST_LIST_INFO" />
      </ptr>
    </typedef>
    <struct name="_CERT_CHAIN_ELEMENT">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pCertContext">
        <type>PCCERT_CONTEXT</type>
      </field>
      <field offset="8" name="TrustStatus">
        <type>CERT_TRUST_STATUS</type>
      </field>
      <field offset="16" name="pRevocationInfo">
        <type>PCERT_REVOCATION_INFO</type>
      </field>
      <field offset="20" name="pIssuanceUsage">
        <type>PCERT_ENHKEY_USAGE</type>
      </field>
      <field offset="24" name="pApplicationUsage">
        <type>PCERT_ENHKEY_USAGE</type>
      </field>
      <field offset="28" name="pwszExtendedErrorInfo">
        <type>LPCWSTR</type>
      </field>
    </struct>
    <typedef name="CERT_CHAIN_ELEMENT">
      <struct name="_CERT_CHAIN_ELEMENT" />
    </typedef>
    <typedef name="PCERT_CHAIN_ELEMENT">
      <ptr>
        <struct name="_CERT_CHAIN_ELEMENT" />
      </ptr>
    </typedef>
    <typedef name="PCCERT_CHAIN_ELEMENT">
      <ptr>
        <type>CERT_CHAIN_ELEMENT</type>
      </ptr>
    </typedef>
    <struct name="_CERT_SIMPLE_CHAIN">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="8" name="TrustStatus">
        <type>CERT_TRUST_STATUS</type>
      </field>
      <field offset="16" name="cElement">
        <type>DWORD</type>
      </field>
      <field offset="20" name="rgpElement">
        <ptr>
          <type>PCERT_CHAIN_ELEMENT</type>
        </ptr>
      </field>
      <field offset="24" name="pTrustListInfo">
        <type>PCERT_TRUST_LIST_INFO</type>
      </field>
      <field offset="28" name="fHasRevocationFreshnessTime">
        <type>BOOL</type>
      </field>
      <field offset="32" name="dwRevocationFreshnessTime">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CERT_SIMPLE_CHAIN">
      <struct name="_CERT_SIMPLE_CHAIN" />
    </typedef>
    <typedef name="PCERT_SIMPLE_CHAIN">
      <ptr>
        <struct name="_CERT_SIMPLE_CHAIN" />
      </ptr>
    </typedef>
    <typedef name="PCCERT_SIMPLE_CHAIN">
      <ptr>
        <type>CERT_SIMPLE_CHAIN</type>
      </ptr>
    </typedef>
    <typedef name="CERT_CHAIN_CONTEXT">
      <struct name="_CERT_CHAIN_CONTEXT" />
    </typedef>
    <typedef name="PCERT_CHAIN_CONTEXT">
      <ptr>
        <struct name="_CERT_CHAIN_CONTEXT" />
      </ptr>
    </typedef>
    <typedef name="PCCERT_CHAIN_CONTEXT">
      <ptr>
        <type>CERT_CHAIN_CONTEXT</type>
      </ptr>
    </typedef>
    <struct name="_CERT_CHAIN_CONTEXT">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="8" name="TrustStatus">
        <type>CERT_TRUST_STATUS</type>
      </field>
      <field offset="16" name="cChain">
        <type>DWORD</type>
      </field>
      <field offset="20" name="rgpChain">
        <ptr>
          <type>PCERT_SIMPLE_CHAIN</type>
        </ptr>
      </field>
      <field offset="24" name="cLowerQualityChainContext">
        <type>DWORD</type>
      </field>
      <field offset="28" name="rgpLowerQualityChainContext">
        <ptr>
          <type>PCCERT_CHAIN_CONTEXT</type>
        </ptr>
      </field>
      <field offset="32" name="fHasRevocationFreshnessTime">
        <type>BOOL</type>
      </field>
      <field offset="36" name="dwRevocationFreshnessTime">
        <type>DWORD</type>
      </field>
      <field offset="40" name="dwCreateFlags">
        <type>DWORD</type>
      </field>
      <field offset="48" name="ChainId">
        <type>GUID</type>
      </field>
    </struct>
    <struct name="_CERT_USAGE_MATCH">
      <field offset="0" name="dwType">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Usage">
        <type>CERT_ENHKEY_USAGE</type>
      </field>
    </struct>
    <typedef name="CERT_USAGE_MATCH">
      <struct name="_CERT_USAGE_MATCH" />
    </typedef>
    <typedef name="PCERT_USAGE_MATCH">
      <ptr>
        <struct name="_CERT_USAGE_MATCH" />
      </ptr>
    </typedef>
    <struct name="_CTL_USAGE_MATCH">
      <field offset="0" name="dwType">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Usage">
        <type>CTL_USAGE</type>
      </field>
    </struct>
    <typedef name="CTL_USAGE_MATCH">
      <struct name="_CTL_USAGE_MATCH" />
    </typedef>
    <typedef name="PCTL_USAGE_MATCH">
      <ptr>
        <struct name="_CTL_USAGE_MATCH" />
      </ptr>
    </typedef>
    <struct name="_CERT_CHAIN_PARA">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="8" name="RequestedUsage">
        <type>CERT_USAGE_MATCH</type>
      </field>
    </struct>
    <typedef name="CERT_CHAIN_PARA">
      <struct name="_CERT_CHAIN_PARA" />
    </typedef>
    <typedef name="PCERT_CHAIN_PARA">
      <ptr>
        <struct name="_CERT_CHAIN_PARA" />
      </ptr>
    </typedef>
    <struct name="_CERT_REVOCATION_CHAIN_PARA">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="hChainEngine">
        <type>HCERTCHAINENGINE</type>
      </field>
      <field offset="8" name="hAdditionalStore">
        <type>HCERTSTORE</type>
      </field>
      <field offset="12" name="dwChainFlags">
        <type>DWORD</type>
      </field>
      <field offset="16" name="dwUrlRetrievalTimeout">
        <type>DWORD</type>
      </field>
      <field offset="20" name="pftCurrentTime">
        <type>LPFILETIME</type>
      </field>
      <field offset="24" name="pftCacheResync">
        <type>LPFILETIME</type>
      </field>
      <field offset="28" name="cbMaxUrlRetrievalByteCount">
        <type>DWORD</type>
      </field>
    </struct>
    <struct name="_CRL_REVOCATION_INFO">
      <field offset="0" name="pCrlEntry">
        <type>PCRL_ENTRY</type>
      </field>
      <field offset="4" name="pCrlContext">
        <type>PCCRL_CONTEXT</type>
      </field>
      <field offset="8" name="pCrlIssuerChain">
        <type>PCCERT_CHAIN_CONTEXT</type>
      </field>
    </struct>
    <typedef name="CRL_REVOCATION_INFO">
      <struct name="_CRL_REVOCATION_INFO" />
    </typedef>
    <typedef name="PCRL_REVOCATION_INFO">
      <ptr>
        <struct name="_CRL_REVOCATION_INFO" />
      </ptr>
    </typedef>
    <typedef name="PFN_CERT_CHAIN_FIND_BY_ISSUER_CALLBACK">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg name="pCert">
            <type>PCCERT_CONTEXT</type>
            <stack size="4" />
          </arg>
          <arg name="pvFindArg">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="_CERT_CHAIN_FIND_BY_ISSUER_PARA">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pszUsageIdentifier">
        <type>LPCSTR</type>
      </field>
      <field offset="8" name="dwKeySpec">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwAcquirePrivateKeyFlags">
        <type>DWORD</type>
      </field>
      <field offset="16" name="cIssuer">
        <type>DWORD</type>
      </field>
      <field offset="20" name="rgIssuer">
        <ptr>
          <type>CERT_NAME_BLOB</type>
        </ptr>
      </field>
      <field offset="24" name="pfnFindCallback">
        <type>PFN_CERT_CHAIN_FIND_BY_ISSUER_CALLBACK</type>
      </field>
      <field offset="28" name="pvFindArg">
        <ptr>
          <void />
        </ptr>
      </field>
    </struct>
    <typedef name="CERT_CHAIN_FIND_ISSUER_PARA">
      <struct name="_CERT_CHAIN_FIND_BY_ISSUER_PARA" />
    </typedef>
    <typedef name="PCERT_CHAIN_FIND_ISSUER_PARA">
      <ptr>
        <struct name="_CERT_CHAIN_FIND_BY_ISSUER_PARA" />
      </ptr>
    </typedef>
    <typedef name="CERT_CHAIN_FIND_BY_ISSUER_PARA">
      <struct name="_CERT_CHAIN_FIND_BY_ISSUER_PARA" />
    </typedef>
    <typedef name="PCERT_CHAIN_FIND_BY_ISSUER_PARA">
      <ptr>
        <struct name="_CERT_CHAIN_FIND_BY_ISSUER_PARA" />
      </ptr>
    </typedef>
    <struct name="_CERT_CHAIN_POLICY_PARA">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="pvExtraPolicyPara">
        <ptr>
          <void />
        </ptr>
      </field>
    </struct>
    <typedef name="CERT_CHAIN_POLICY_PARA">
      <struct name="_CERT_CHAIN_POLICY_PARA" />
    </typedef>
    <typedef name="PCERT_CHAIN_POLICY_PARA">
      <ptr>
        <struct name="_CERT_CHAIN_POLICY_PARA" />
      </ptr>
    </typedef>
    <struct name="_CERT_CHAIN_POLICY_STATUS">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwError">
        <type>DWORD</type>
      </field>
      <field offset="8" name="lChainIndex">
        <type>LONG</type>
      </field>
      <field offset="12" name="lElementIndex">
        <type>LONG</type>
      </field>
      <field offset="16" name="pvExtraPolicyStatus">
        <ptr>
          <void />
        </ptr>
      </field>
    </struct>
    <typedef name="CERT_CHAIN_POLICY_STATUS">
      <struct name="_CERT_CHAIN_POLICY_STATUS" />
    </typedef>
    <typedef name="PCERT_CHAIN_POLICY_STATUS">
      <ptr>
        <struct name="_CERT_CHAIN_POLICY_STATUS" />
      </ptr>
    </typedef>
    <struct name="_AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwRegPolicySettings">
        <type>DWORD</type>
      </field>
      <field offset="8" name="pSignerInfo">
        <type>PCMSG_SIGNER_INFO</type>
      </field>
    </struct>
    <typedef name="AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA">
      <struct name="_AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA" />
    </typedef>
    <typedef name="PAUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA">
      <ptr>
        <struct name="_AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA" />
      </ptr>
    </typedef>
    <struct name="_AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="fCommercial">
        <type>BOOL</type>
      </field>
    </struct>
    <typedef name="AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS">
      <struct name="_AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS" />
    </typedef>
    <typedef name="PAUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS">
      <ptr>
        <struct name="_AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS" />
      </ptr>
    </typedef>
    <struct name="_AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwRegPolicySettings">
        <type>DWORD</type>
      </field>
      <field offset="8" name="fCommercial">
        <type>BOOL</type>
      </field>
    </struct>
    <typedef name="AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA">
      <struct name="_AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA" />
    </typedef>
    <typedef name="PAUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA">
      <ptr>
        <struct name="_AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA" />
      </ptr>
    </typedef>
    <struct name="_HTTPSPolicyCallbackData">
      <field offset="0">
        <union>
          <alt name="cbStruct">
            <type>DWORD</type>
          </alt>
          <alt name="cbSize">
            <type>DWORD</type>
          </alt>
        </union>
      </field>
      <field offset="4" name="dwAuthType">
        <type>DWORD</type>
      </field>
      <field offset="8" name="fdwChecks">
        <type>DWORD</type>
      </field>
      <field offset="12" name="pwszServerName">
        <ptr>
          <type>WCHAR</type>
        </ptr>
      </field>
    </struct>
    <typedef name="HTTPSPolicyCallbackData">
      <struct name="_HTTPSPolicyCallbackData" />
    </typedef>
    <typedef name="PHTTPSPolicyCallbackData">
      <ptr>
        <struct name="_HTTPSPolicyCallbackData" />
      </ptr>
    </typedef>
    <typedef name="SSL_EXTRA_CERT_CHAIN_POLICY_PARA">
      <struct name="_HTTPSPolicyCallbackData" />
    </typedef>
    <typedef name="PSSL_EXTRA_CERT_CHAIN_POLICY_PARA">
      <ptr>
        <struct name="_HTTPSPolicyCallbackData" />
      </ptr>
    </typedef>
    <struct name="_EV_EXTRA_CERT_CHAIN_POLICY_PARA">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwRootProgramQualifierFlags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="EV_EXTRA_CERT_CHAIN_POLICY_PARA">
      <struct name="_EV_EXTRA_CERT_CHAIN_POLICY_PARA" />
    </typedef>
    <typedef name="PEV_EXTRA_CERT_CHAIN_POLICY_PARA">
      <ptr>
        <struct name="_EV_EXTRA_CERT_CHAIN_POLICY_PARA" />
      </ptr>
    </typedef>
    <struct name="_EV_EXTRA_CERT_CHAIN_POLICY_STATUS">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwQualifiers">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwIssuanceUsageIndex">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="EV_EXTRA_CERT_CHAIN_POLICY_STATUS">
      <struct name="_EV_EXTRA_CERT_CHAIN_POLICY_STATUS" />
    </typedef>
    <typedef name="PEV_EXTRA_CERT_CHAIN_POLICY_STATUS">
      <ptr>
        <struct name="_EV_EXTRA_CERT_CHAIN_POLICY_STATUS" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_PKCS12_PBE_PARAMS">
      <field offset="0" name="iIterations">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="4" name="cbSalt">
        <type>ULONG</type>
      </field>
    </struct>
    <typedef name="CRYPT_PKCS12_PBE_PARAMS">
      <struct name="_CRYPT_PKCS12_PBE_PARAMS" />
    </typedef>
    <typedef name="HCERT_SERVER_OCSP_RESPONSE">
      <ptr>
        <void />
      </ptr>
    </typedef>
    <typedef name="CERT_SERVER_OCSP_RESPONSE_CONTEXT">
      <struct name="_CERT_SERVER_OCSP_RESPONSE_CONTEXT" />
    </typedef>
    <typedef name="PCERT_SERVER_OCSP_RESPONSE_CONTEXT">
      <ptr>
        <struct name="_CERT_SERVER_OCSP_RESPONSE_CONTEXT" />
      </ptr>
    </typedef>
    <typedef name="PCCERT_SERVER_OCSP_RESPONSE_CONTEXT">
      <ptr>
        <type>CERT_SERVER_OCSP_RESPONSE_CONTEXT</type>
      </ptr>
    </typedef>
    <struct name="_CERT_SERVER_OCSP_RESPONSE_CONTEXT">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pbEncodedOcspResponse">
        <ptr>
          <type>BYTE</type>
        </ptr>
      </field>
      <field offset="8" name="cbEncodedOcspResponse">
        <type>DWORD</type>
      </field>
    </struct>
    <struct name="_CERT_SELECT_CHAIN_PARA">
      <field offset="0" name="hChainEngine">
        <type>HCERTCHAINENGINE</type>
      </field>
      <field offset="4" name="pTime">
        <type>PFILETIME</type>
      </field>
      <field offset="8" name="hAdditionalStore">
        <type>HCERTSTORE</type>
      </field>
      <field offset="12" name="pChainPara">
        <type>PCERT_CHAIN_PARA</type>
      </field>
      <field offset="16" name="dwFlags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CERT_SELECT_CHAIN_PARA">
      <struct name="_CERT_SELECT_CHAIN_PARA" />
    </typedef>
    <typedef name="PCERT_SELECT_CHAIN_PARA">
      <ptr>
        <struct name="_CERT_SELECT_CHAIN_PARA" />
      </ptr>
    </typedef>
    <typedef name="PCCERT_SELECT_CHAIN_PARA">
      <ptr>
        <type>CERT_SELECT_CHAIN_PARA</type>
      </ptr>
    </typedef>
    <struct name="_CERT_SELECT_CRITERIA">
      <field offset="0" name="dwType">
        <type>DWORD</type>
      </field>
      <field offset="4" name="cPara">
        <type>DWORD</type>
      </field>
      <field offset="8" name="ppPara">
        <ptr>
          <ptr>
            <void />
          </ptr>
        </ptr>
      </field>
    </struct>
    <typedef name="CERT_SELECT_CRITERIA">
      <struct name="_CERT_SELECT_CRITERIA" />
    </typedef>
    <typedef name="PCERT_SELECT_CRITERIA">
      <ptr>
        <struct name="_CERT_SELECT_CRITERIA" />
      </ptr>
    </typedef>
    <typedef name="PCCERT_SELECT_CRITERIA">
      <ptr>
        <type>CERT_SELECT_CRITERIA</type>
      </ptr>
    </typedef>
    <struct name="_CRYPT_TIMESTAMP_REQUEST">
      <field offset="0" name="dwVersion">
        <type>DWORD</type>
      </field>
      <field offset="8" name="HashAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="24" name="HashedMessage">
        <type>CRYPT_DER_BLOB</type>
      </field>
      <field offset="32" name="pszTSAPolicyId">
        <type>LPSTR</type>
      </field>
      <field offset="40" name="Nonce">
        <type>CRYPT_INTEGER_BLOB</type>
      </field>
      <field offset="48" name="fCertReq">
        <type>BOOL</type>
      </field>
      <field offset="52" name="cExtension">
        <type>DWORD</type>
      </field>
      <field offset="56" name="rgExtension">
        <type>PCERT_EXTENSION</type>
      </field>
    </struct>
    <typedef name="CRYPT_TIMESTAMP_REQUEST">
      <struct name="_CRYPT_TIMESTAMP_REQUEST" />
    </typedef>
    <typedef name="PCRYPT_TIMESTAMP_REQUEST">
      <ptr>
        <struct name="_CRYPT_TIMESTAMP_REQUEST" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_TIMESTAMP_RESPONSE">
      <field offset="0" name="dwStatus">
        <type>DWORD</type>
      </field>
      <field offset="4" name="cFreeText">
        <type>DWORD</type>
      </field>
      <field offset="8" name="rgFreeText">
        <ptr>
          <type>LPWSTR</type>
        </ptr>
      </field>
      <field offset="16" name="FailureInfo">
        <type>CRYPT_BIT_BLOB</type>
      </field>
      <field offset="32" name="ContentInfo">
        <type>CRYPT_DER_BLOB</type>
      </field>
    </struct>
    <typedef name="CRYPT_TIMESTAMP_RESPONSE">
      <struct name="_CRYPT_TIMESTAMP_RESPONSE" />
    </typedef>
    <typedef name="PCRYPT_TIMESTAMP_RESPONSE">
      <ptr>
        <struct name="_CRYPT_TIMESTAMP_RESPONSE" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_TIMESTAMP_ACCURACY">
      <field offset="0" name="dwSeconds">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwMillis">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwMicros">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CRYPT_TIMESTAMP_ACCURACY">
      <struct name="_CRYPT_TIMESTAMP_ACCURACY" />
    </typedef>
    <typedef name="PCRYPT_TIMESTAMP_ACCURACY">
      <ptr>
        <struct name="_CRYPT_TIMESTAMP_ACCURACY" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_TIMESTAMP_INFO">
      <field offset="0" name="dwVersion">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pszTSAPolicyId">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="HashAlgorithm">
        <type>CRYPT_ALGORITHM_IDENTIFIER</type>
      </field>
      <field offset="24" name="HashedMessage">
        <type>CRYPT_DER_BLOB</type>
      </field>
      <field offset="32" name="SerialNumber">
        <type>CRYPT_INTEGER_BLOB</type>
      </field>
      <field offset="40" name="ftTime">
        <type>FILETIME</type>
      </field>
      <field offset="48" name="pvAccuracy">
        <type>PCRYPT_TIMESTAMP_ACCURACY</type>
      </field>
      <field offset="52" name="fOrdering">
        <type>BOOL</type>
      </field>
      <field offset="56" name="Nonce">
        <type>CRYPT_DER_BLOB</type>
      </field>
      <field offset="64" name="Tsa">
        <type>CRYPT_DER_BLOB</type>
      </field>
      <field offset="72" name="cExtension">
        <type>DWORD</type>
      </field>
      <field offset="76" name="rgExtension">
        <type>PCERT_EXTENSION</type>
      </field>
    </struct>
    <typedef name="CRYPT_TIMESTAMP_INFO">
      <struct name="_CRYPT_TIMESTAMP_INFO" />
    </typedef>
    <typedef name="PCRYPT_TIMESTAMP_INFO">
      <ptr>
        <struct name="_CRYPT_TIMESTAMP_INFO" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_TIMESTAMP_CONTEXT">
      <field offset="0" name="cbEncoded">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pbEncoded">
        <ptr>
          <type>BYTE</type>
        </ptr>
      </field>
      <field offset="8" name="pTimeStamp">
        <type>PCRYPT_TIMESTAMP_INFO</type>
      </field>
    </struct>
    <typedef name="CRYPT_TIMESTAMP_CONTEXT">
      <struct name="_CRYPT_TIMESTAMP_CONTEXT" />
    </typedef>
    <typedef name="PCRYPT_TIMESTAMP_CONTEXT">
      <ptr>
        <struct name="_CRYPT_TIMESTAMP_CONTEXT" />
      </ptr>
    </typedef>
    <struct name="_CRYPT_TIMESTAMP_PARA">
      <field offset="0" name="pszTSAPolicyId">
        <type>LPCSTR</type>
      </field>
      <field offset="4" name="fRequestCerts">
        <type>BOOL</type>
      </field>
      <field offset="8" name="Nonce">
        <type>CRYPT_INTEGER_BLOB</type>
      </field>
      <field offset="16" name="cExtension">
        <type>DWORD</type>
      </field>
      <field offset="20" name="rgExtension">
        <type>PCERT_EXTENSION</type>
      </field>
    </struct>
    <typedef name="CRYPT_TIMESTAMP_PARA">
      <struct name="_CRYPT_TIMESTAMP_PARA" />
    </typedef>
    <typedef name="PCRYPT_TIMESTAMP_PARA">
      <ptr>
        <struct name="_CRYPT_TIMESTAMP_PARA" />
      </ptr>
    </typedef>
    <struct name="_CERTIFICATE_BLOB">
      <field offset="0" name="dwCertEncodingType">
        <type>DWORD</type>
      </field>
      <field offset="4" name="cbData">
        <type>DWORD</type>
      </field>
      <field offset="8" name="pbData">
        <type>PBYTE</type>
      </field>
    </struct>
    <typedef name="EFS_CERTIFICATE_BLOB">
      <struct name="_CERTIFICATE_BLOB" />
    </typedef>
    <typedef name="PEFS_CERTIFICATE_BLOB">
      <ptr>
        <struct name="_CERTIFICATE_BLOB" />
      </ptr>
    </typedef>
    <struct name="_EFS_HASH_BLOB">
      <field offset="0" name="cbData">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pbData">
        <type>PBYTE</type>
      </field>
    </struct>
    <typedef name="EFS_HASH_BLOB">
      <struct name="_EFS_HASH_BLOB" />
    </typedef>
    <typedef name="PEFS_HASH_BLOB">
      <ptr>
        <struct name="_EFS_HASH_BLOB" />
      </ptr>
    </typedef>
    <struct name="_EFS_RPC_BLOB">
      <field offset="0" name="cbData">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pbData">
        <type>PBYTE</type>
      </field>
    </struct>
    <typedef name="EFS_RPC_BLOB">
      <struct name="_EFS_RPC_BLOB" />
    </typedef>
    <typedef name="PEFS_RPC_BLOB">
      <ptr>
        <struct name="_EFS_RPC_BLOB" />
      </ptr>
    </typedef>
    <struct name="_EFS_PIN_BLOB">
      <field offset="0" name="cbPadding">
        <type>DWORD</type>
      </field>
      <field offset="4" name="cbData">
        <type>DWORD</type>
      </field>
      <field offset="8" name="pbData">
        <type>PBYTE</type>
      </field>
    </struct>
    <typedef name="EFS_PIN_BLOB">
      <struct name="_EFS_PIN_BLOB" />
    </typedef>
    <typedef name="PEFS_PIN_BLOB">
      <ptr>
        <struct name="_EFS_PIN_BLOB" />
      </ptr>
    </typedef>
    <struct name="_EFS_KEY_INFO">
      <field offset="0" name="dwVersion">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Entropy">
        <type>ULONG</type>
      </field>
      <field offset="8" name="Algorithm">
        <type>ALG_ID</type>
      </field>
      <field offset="12" name="KeyLength">
        <type>ULONG</type>
      </field>
    </struct>
    <typedef name="EFS_KEY_INFO">
      <struct name="_EFS_KEY_INFO" />
    </typedef>
    <typedef name="PEFS_KEY_INFO">
      <ptr>
        <struct name="_EFS_KEY_INFO" />
      </ptr>
    </typedef>
    <struct name="_EFS_COMPATIBILITY_INFO">
      <field offset="0" name="EfsVersion">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="EFS_COMPATIBILITY_INFO">
      <struct name="_EFS_COMPATIBILITY_INFO" />
    </typedef>
    <typedef name="PEFS_COMPATIBILITY_INFO">
      <ptr>
        <struct name="_EFS_COMPATIBILITY_INFO" />
      </ptr>
    </typedef>
    <struct name="_EFS_DECRYPTION_STATUS_INFO">
      <field offset="0" name="dwDecryptionError">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwHashOffset">
        <type>DWORD</type>
      </field>
      <field offset="8" name="cbHash">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="EFS_DECRYPTION_STATUS_INFO">
      <struct name="_EFS_DECRYPTION_STATUS_INFO" />
    </typedef>
    <typedef name="PEFS_DECRYPTION_STATUS_INFO">
      <ptr>
        <struct name="_EFS_DECRYPTION_STATUS_INFO" />
      </ptr>
    </typedef>
    <struct name="_EFS_ENCRYPTION_STATUS_INFO">
      <field offset="0" name="bHasCurrentKey">
        <type>BOOL</type>
      </field>
      <field offset="4" name="dwEncryptionError">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="EFS_ENCRYPTION_STATUS_INFO">
      <struct name="_EFS_ENCRYPTION_STATUS_INFO" />
    </typedef>
    <typedef name="PEFS_ENCRYPTION_STATUS_INFO">
      <ptr>
        <struct name="_EFS_ENCRYPTION_STATUS_INFO" />
      </ptr>
    </typedef>
    <struct name="_ENCRYPTION_CERTIFICATE">
      <field offset="0" name="cbTotalLength">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pUserSid">
        <ptr>
          <type>SID</type>
        </ptr>
      </field>
      <field offset="8" name="pCertBlob">
        <type>PEFS_CERTIFICATE_BLOB</type>
      </field>
    </struct>
    <typedef name="ENCRYPTION_CERTIFICATE">
      <struct name="_ENCRYPTION_CERTIFICATE" />
    </typedef>
    <typedef name="PENCRYPTION_CERTIFICATE">
      <ptr>
        <struct name="_ENCRYPTION_CERTIFICATE" />
      </ptr>
    </typedef>
    <struct name="_ENCRYPTION_CERTIFICATE_HASH">
      <field offset="0" name="cbTotalLength">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pUserSid">
        <ptr>
          <type>SID</type>
        </ptr>
      </field>
      <field offset="8" name="pHash">
        <type>PEFS_HASH_BLOB</type>
      </field>
      <field offset="12" name="lpDisplayInformation">
        <type>LPWSTR</type>
      </field>
    </struct>
    <typedef name="ENCRYPTION_CERTIFICATE_HASH">
      <struct name="_ENCRYPTION_CERTIFICATE_HASH" />
    </typedef>
    <typedef name="PENCRYPTION_CERTIFICATE_HASH">
      <ptr>
        <struct name="_ENCRYPTION_CERTIFICATE_HASH" />
      </ptr>
    </typedef>
    <struct name="_ENCRYPTION_CERTIFICATE_HASH_LIST">
      <field offset="0" name="nCert_Hash">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pUsers">
        <ptr>
          <type>PENCRYPTION_CERTIFICATE_HASH</type>
        </ptr>
      </field>
    </struct>
    <typedef name="ENCRYPTION_CERTIFICATE_HASH_LIST">
      <struct name="_ENCRYPTION_CERTIFICATE_HASH_LIST" />
    </typedef>
    <typedef name="PENCRYPTION_CERTIFICATE_HASH_LIST">
      <ptr>
        <struct name="_ENCRYPTION_CERTIFICATE_HASH_LIST" />
      </ptr>
    </typedef>
    <struct name="_ENCRYPTION_CERTIFICATE_LIST">
      <field offset="0" name="nUsers">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pUsers">
        <ptr>
          <type>PENCRYPTION_CERTIFICATE</type>
        </ptr>
      </field>
    </struct>
    <typedef name="ENCRYPTION_CERTIFICATE_LIST">
      <struct name="_ENCRYPTION_CERTIFICATE_LIST" />
    </typedef>
    <typedef name="PENCRYPTION_CERTIFICATE_LIST">
      <ptr>
        <struct name="_ENCRYPTION_CERTIFICATE_LIST" />
      </ptr>
    </typedef>
    <struct name="_ENCRYPTED_FILE_METADATA_SIGNATURE">
      <field offset="0" name="dwEfsAccessType">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pCertificatesAdded">
        <type>PENCRYPTION_CERTIFICATE_HASH_LIST</type>
      </field>
      <field offset="8" name="pEncryptionCertificate">
        <type>PENCRYPTION_CERTIFICATE</type>
      </field>
      <field offset="12" name="pEfsStreamSignature">
        <type>PEFS_RPC_BLOB</type>
      </field>
    </struct>
    <typedef name="ENCRYPTED_FILE_METADATA_SIGNATURE">
      <struct name="_ENCRYPTED_FILE_METADATA_SIGNATURE" />
    </typedef>
    <typedef name="PENCRYPTED_FILE_METADATA_SIGNATURE">
      <ptr>
        <struct name="_ENCRYPTED_FILE_METADATA_SIGNATURE" />
      </ptr>
    </typedef>
    <struct name="struct_108">
      <field offset="0" name="LookupContext">
        <type>RPC_NS_HANDLE</type>
      </field>
      <field offset="4" name="ProposedHandle">
        <type>RPC_BINDING_HANDLE</type>
      </field>
      <field offset="8" name="Bindings">
        <ptr>
          <type>RPC_BINDING_VECTOR</type>
        </ptr>
      </field>
    </struct>
    <typedef name="RPC_IMPORT_CONTEXT_P">
      <struct name="struct_108" />
    </typedef>
    <typedef name="PRPC_IMPORT_CONTEXT_P">
      <ptr>
        <struct name="struct_108" />
      </ptr>
    </typedef>
    <typedef name="byte">
      <prim domain="UnsignedInt" size="1" />
    </typedef>
    <typedef name="cs_byte">
      <type>byte</type>
    </typedef>
    <typedef name="boolean">
      <prim domain="UnsignedInt" size="1" />
    </typedef>
    <typedef name="NDR_CCONTEXT">
      <ptr>
        <void />
      </ptr>
    </typedef>
    <struct name="struct_109">
      <field offset="0" name="pad">
        <arr length="2">
          <ptr>
            <void />
          </ptr>
        </arr>
      </field>
      <field offset="8" name="userContext">
        <ptr>
          <void />
        </ptr>
      </field>
    </struct>
    <typedef name="NDR_SCONTEXT">
      <ptr>
        <struct name="struct_109" />
      </ptr>
    </typedef>
    <typedef name="NDR_RUNDOWN">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="context">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="NDR_NOTIFY_ROUTINE">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
        </fn>
      </ptr>
    </typedef>
    <typedef name="NDR_NOTIFY2_ROUTINE">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="flag">
            <type>boolean</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="_SCONTEXT_QUEUE">
      <field offset="0" name="NumberOfObjects">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="ArrayOfObjects">
        <ptr>
          <type>NDR_SCONTEXT</type>
        </ptr>
      </field>
    </struct>
    <typedef name="SCONTEXT_QUEUE">
      <struct name="_SCONTEXT_QUEUE" />
    </typedef>
    <typedef name="PSCONTEXT_QUEUE">
      <ptr>
        <struct name="_SCONTEXT_QUEUE" />
      </ptr>
    </typedef>
    <typedef name="error_status_t">
      <prim domain="UnsignedInt" size="4" />
    </typedef>
    <typedef name="RPC_BUFPTR">
      <ptr>
        <prim domain="UnsignedInt" size="1" />
      </ptr>
    </typedef>
    <typedef name="RPC_LENGTH">
      <prim domain="UnsignedInt" size="4" />
    </typedef>
    <typedef name="EXPR_EVAL">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg>
            <ptr>
              <struct name="_MIDL_STUB_MESSAGE" />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFORMAT_STRING">
      <ptr>
        <prim domain="UnsignedInt" size="1" />
      </ptr>
    </typedef>
    <struct name="struct_110">
      <field offset="0" name="Dimension">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="4" name="BufferConformanceMark">
        <ptr>
          <prim domain="UnsignedInt" size="4" />
        </ptr>
      </field>
      <field offset="8" name="BufferVarianceMark">
        <ptr>
          <prim domain="UnsignedInt" size="4" />
        </ptr>
      </field>
      <field offset="12" name="MaxCountArray">
        <ptr>
          <prim domain="UnsignedInt" size="4" />
        </ptr>
      </field>
      <field offset="16" name="OffsetArray">
        <ptr>
          <prim domain="UnsignedInt" size="4" />
        </ptr>
      </field>
      <field offset="20" name="ActualCountArray">
        <ptr>
          <prim domain="UnsignedInt" size="4" />
        </ptr>
      </field>
    </struct>
    <typedef name="ARRAY_INFO">
      <struct name="struct_110" />
    </typedef>
    <typedef name="PARRAY_INFO">
      <ptr>
        <struct name="struct_110" />
      </ptr>
    </typedef>
    <typedef name="PNDR_ASYNC_MESSAGE">
      <ptr>
        <struct name="_NDR_ASYNC_MESSAGE" />
      </ptr>
    </typedef>
    <typedef name="PNDR_CORRELATION_INFO">
      <ptr>
        <struct name="_NDR_CORRELATION_INFO" />
      </ptr>
    </typedef>
    <typedef name="PFORMAT_STRING">
      <ptr>
        <prim domain="UnsignedInt" size="1" />
      </ptr>
    </typedef>
    <typedef name="MIDL_SYNTAX_INFO">
      <struct name="_MIDL_SYNTAX_INFO" />
    </typedef>
    <typedef name="PMIDL_SYNTAX_INFO">
      <ptr>
        <struct name="_MIDL_SYNTAX_INFO" />
      </ptr>
    </typedef>
    <struct name="_MIDL_STUB_MESSAGE">
      <field offset="0" name="RpcMsg">
        <type>PRPC_MESSAGE</type>
      </field>
      <field offset="4" name="Buffer">
        <ptr>
          <prim domain="UnsignedInt" size="1" />
        </ptr>
      </field>
      <field offset="8" name="BufferStart">
        <ptr>
          <prim domain="UnsignedInt" size="1" />
        </ptr>
      </field>
      <field offset="12" name="BufferEnd">
        <ptr>
          <prim domain="UnsignedInt" size="1" />
        </ptr>
      </field>
      <field offset="16" name="BufferMark">
        <ptr>
          <prim domain="UnsignedInt" size="1" />
        </ptr>
      </field>
      <field offset="20" name="BufferLength">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="24" name="MemorySize">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="28" name="Memory">
        <ptr>
          <prim domain="UnsignedInt" size="1" />
        </ptr>
      </field>
      <field offset="32" name="IsClient">
        <prim domain="UnsignedInt" size="1" />
      </field>
      <field offset="33" name="Pad">
        <prim domain="UnsignedInt" size="1" />
      </field>
      <field offset="34" name="uFlags2">
        <prim domain="UnsignedInt" size="2" />
      </field>
      <field offset="36" name="ReuseBuffer">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="40" name="pAllocAllNodesContext">
        <ptr>
          <struct name="NDR_ALLOC_ALL_NODES_CONTEXT" />
        </ptr>
      </field>
      <field offset="44" name="pPointerQueueState">
        <ptr>
          <struct name="NDR_POINTER_QUEUE_STATE" />
        </ptr>
      </field>
      <field offset="48" name="IgnoreEmbeddedPointers">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="52" name="PointerBufferMark">
        <ptr>
          <prim domain="UnsignedInt" size="1" />
        </ptr>
      </field>
      <field offset="56" name="CorrDespIncrement">
        <prim domain="UnsignedInt" size="1" />
      </field>
      <field offset="57" name="uFlags">
        <prim domain="UnsignedInt" size="1" />
      </field>
      <field offset="58" name="UniquePtrCount">
        <prim domain="UnsignedInt" size="2" />
      </field>
      <field offset="60" name="MaxCount">
        <type>ULONG_PTR</type>
      </field>
      <field offset="64" name="Offset">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="68" name="ActualCount">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="72" name="pfnAllocate">
        <ptr>
          <fn>
            <return>
              <ptr>
                <void />
              </ptr>
              <reg>eax</reg>
            </return>
            <arg>
              <type>size_t</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="76" name="pfnFree">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg>
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="80" name="StackTop">
        <ptr>
          <prim domain="UnsignedInt" size="1" />
        </ptr>
      </field>
      <field offset="84" name="pPresentedType">
        <ptr>
          <prim domain="UnsignedInt" size="1" />
        </ptr>
      </field>
      <field offset="88" name="pTransmitType">
        <ptr>
          <prim domain="UnsignedInt" size="1" />
        </ptr>
      </field>
      <field offset="92" name="SavedHandle">
        <type>handle_t</type>
      </field>
      <field offset="96" name="StubDesc">
        <ptr>
          <struct name="_MIDL_STUB_DESC" />
        </ptr>
      </field>
      <field offset="100" name="FullPtrXlatTables">
        <ptr>
          <struct name="_FULL_PTR_XLAT_TABLES" />
        </ptr>
      </field>
      <field offset="104" name="FullPtrRefId">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="108" name="PointerLength">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="112" name="fInDontFree">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="116" name="fDontCallFreeInst">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="120" name="fInOnlyParam">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="124" name="fHasReturn">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="128" name="fHasExtensions">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="132" name="fHasNewCorrDesc">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="136" name="fIsIn">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="140" name="fIsOut">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="144" name="fIsOicf">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="148" name="fBufferValid">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="152" name="fHasMemoryValidateCallback">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="156" name="fInFree">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="160" name="fNeedMCCP">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="164" name="fUnused">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="168" name="fUnused2">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="172" name="dwDestContext">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="176" name="pvDestContext">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="180" name="SavedContextHandles">
        <ptr>
          <type>NDR_SCONTEXT</type>
        </ptr>
      </field>
      <field offset="184" name="ParamNumber">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="188" name="pRpcChannelBuffer">
        <ptr>
          <struct name="IRpcChannelBuffer" />
        </ptr>
      </field>
      <field offset="192" name="pArrayInfo">
        <type>PARRAY_INFO</type>
      </field>
      <field offset="196" name="SizePtrCountArray">
        <ptr>
          <prim domain="UnsignedInt" size="4" />
        </ptr>
      </field>
      <field offset="200" name="SizePtrOffsetArray">
        <ptr>
          <prim domain="UnsignedInt" size="4" />
        </ptr>
      </field>
      <field offset="204" name="SizePtrLengthArray">
        <ptr>
          <prim domain="UnsignedInt" size="4" />
        </ptr>
      </field>
      <field offset="208" name="pArgQueue">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="212" name="dwStubPhase">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="216" name="LowStackMark">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="220" name="pAsyncMsg">
        <type>PNDR_ASYNC_MESSAGE</type>
      </field>
      <field offset="224" name="pCorrInfo">
        <type>PNDR_CORRELATION_INFO</type>
      </field>
      <field offset="228" name="pCorrMemory">
        <ptr>
          <prim domain="UnsignedInt" size="1" />
        </ptr>
      </field>
      <field offset="232" name="pMemoryList">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="236" name="pCSInfo">
        <type>INT_PTR</type>
      </field>
      <field offset="240" name="ConformanceMark">
        <ptr>
          <prim domain="UnsignedInt" size="1" />
        </ptr>
      </field>
      <field offset="244" name="VarianceMark">
        <ptr>
          <prim domain="UnsignedInt" size="1" />
        </ptr>
      </field>
      <field offset="248" name="Unused">
        <type>INT_PTR</type>
      </field>
      <field offset="252" name="pContext">
        <ptr>
          <struct name="_NDR_PROC_CONTEXT" />
        </ptr>
      </field>
      <field offset="256" name="ContextHandleHash">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="260" name="pUserMarshalList">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="264" name="Reserved51_3">
        <type>INT_PTR</type>
      </field>
      <field offset="268" name="Reserved51_4">
        <type>INT_PTR</type>
      </field>
      <field offset="272" name="Reserved51_5">
        <type>INT_PTR</type>
      </field>
    </struct>
    <typedef name="MIDL_STUB_MESSAGE">
      <struct name="_MIDL_STUB_MESSAGE" />
    </typedef>
    <typedef name="PMIDL_STUB_MESSAGE">
      <ptr>
        <struct name="_MIDL_STUB_MESSAGE" />
      </ptr>
    </typedef>
    <typedef name="MIDL_STUB_MESSAGE">
      <struct name="_MIDL_STUB_MESSAGE" />
    </typedef>
    <typedef name="PMIDL_STUB_MESSAGE">
      <ptr>
        <struct name="_MIDL_STUB_MESSAGE" />
      </ptr>
    </typedef>
    <typedef name="GENERIC_BINDING_ROUTINE">
      <ptr>
        <fn>
          <return>
            <ptr>
              <void />
            </ptr>
            <reg>eax</reg>
          </return>
          <arg>
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="GENERIC_UNBIND_ROUTINE">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg>
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg>
            <ptr>
              <prim domain="UnsignedInt" size="1" />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="_GENERIC_BINDING_ROUTINE_PAIR">
      <field offset="0" name="pfnBind">
        <type>GENERIC_BINDING_ROUTINE</type>
      </field>
      <field offset="4" name="pfnUnbind">
        <type>GENERIC_UNBIND_ROUTINE</type>
      </field>
    </struct>
    <typedef name="GENERIC_BINDING_ROUTINE_PAIR">
      <struct name="_GENERIC_BINDING_ROUTINE_PAIR" />
    </typedef>
    <typedef name="PGENERIC_BINDING_ROUTINE_PAIR">
      <ptr>
        <struct name="_GENERIC_BINDING_ROUTINE_PAIR" />
      </ptr>
    </typedef>
    <struct name="__GENERIC_BINDING_INFO">
      <field offset="0" name="pObj">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="4" name="Size">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="8" name="pfnBind">
        <type>GENERIC_BINDING_ROUTINE</type>
      </field>
      <field offset="12" name="pfnUnbind">
        <type>GENERIC_UNBIND_ROUTINE</type>
      </field>
    </struct>
    <typedef name="GENERIC_BINDING_INFO">
      <struct name="__GENERIC_BINDING_INFO" />
    </typedef>
    <typedef name="PGENERIC_BINDING_INFO">
      <ptr>
        <struct name="__GENERIC_BINDING_INFO" />
      </ptr>
    </typedef>
    <typedef name="XMIT_HELPER_ROUTINE">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg>
            <type>PMIDL_STUB_MESSAGE</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="_XMIT_ROUTINE_QUINTUPLE">
      <field offset="0" name="pfnTranslateToXmit">
        <type>XMIT_HELPER_ROUTINE</type>
      </field>
      <field offset="4" name="pfnTranslateFromXmit">
        <type>XMIT_HELPER_ROUTINE</type>
      </field>
      <field offset="8" name="pfnFreeXmit">
        <type>XMIT_HELPER_ROUTINE</type>
      </field>
      <field offset="12" name="pfnFreeInst">
        <type>XMIT_HELPER_ROUTINE</type>
      </field>
    </struct>
    <typedef name="XMIT_ROUTINE_QUINTUPLE">
      <struct name="_XMIT_ROUTINE_QUINTUPLE" />
    </typedef>
    <typedef name="PXMIT_ROUTINE_QUINTUPLE">
      <ptr>
        <struct name="_XMIT_ROUTINE_QUINTUPLE" />
      </ptr>
    </typedef>
    <typedef name="USER_MARSHAL_SIZING_ROUTINE">
      <ptr>
        <fn>
          <return>
            <prim domain="UnsignedInt" size="4" />
            <reg>eax</reg>
          </return>
          <arg>
            <ptr>
              <prim domain="UnsignedInt" size="4" />
            </ptr>
            <stack size="4" />
          </arg>
          <arg>
            <prim domain="UnsignedInt" size="4" />
            <stack size="4" />
          </arg>
          <arg>
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="USER_MARSHAL_MARSHALLING_ROUTINE">
      <ptr>
        <fn>
          <return>
            <ptr>
              <prim domain="UnsignedInt" size="1" />
            </ptr>
            <reg>eax</reg>
          </return>
          <arg>
            <ptr>
              <prim domain="UnsignedInt" size="4" />
            </ptr>
            <stack size="4" />
          </arg>
          <arg>
            <ptr>
              <prim domain="UnsignedInt" size="1" />
            </ptr>
            <stack size="4" />
          </arg>
          <arg>
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="USER_MARSHAL_UNMARSHALLING_ROUTINE">
      <ptr>
        <fn>
          <return>
            <ptr>
              <prim domain="UnsignedInt" size="1" />
            </ptr>
            <reg>eax</reg>
          </return>
          <arg>
            <ptr>
              <prim domain="UnsignedInt" size="4" />
            </ptr>
            <stack size="4" />
          </arg>
          <arg>
            <ptr>
              <prim domain="UnsignedInt" size="1" />
            </ptr>
            <stack size="4" />
          </arg>
          <arg>
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="USER_MARSHAL_FREEING_ROUTINE">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg>
            <ptr>
              <prim domain="UnsignedInt" size="4" />
            </ptr>
            <stack size="4" />
          </arg>
          <arg>
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="_USER_MARSHAL_ROUTINE_QUADRUPLE">
      <field offset="0" name="pfnBufferSize">
        <type>USER_MARSHAL_SIZING_ROUTINE</type>
      </field>
      <field offset="4" name="pfnMarshall">
        <type>USER_MARSHAL_MARSHALLING_ROUTINE</type>
      </field>
      <field offset="8" name="pfnUnmarshall">
        <type>USER_MARSHAL_UNMARSHALLING_ROUTINE</type>
      </field>
      <field offset="12" name="pfnFree">
        <type>USER_MARSHAL_FREEING_ROUTINE</type>
      </field>
    </struct>
    <typedef name="USER_MARSHAL_ROUTINE_QUADRUPLE">
      <struct name="_USER_MARSHAL_ROUTINE_QUADRUPLE" />
    </typedef>
    <enum name="_USER_MARSHAL_CB_TYPE">
      <member name="USER_MARSHAL_CB_BUFFER_SIZE" value="0" />
      <member name="USER_MARSHAL_CB_MARSHALL" value="1" />
      <member name="USER_MARSHAL_CB_UNMARSHALL" value="2" />
      <member name="USER_MARSHAL_CB_FREE" value="3" />
    </enum>
    <typedef name="USER_MARSHAL_CB_TYPE">
      <enum name="_USER_MARSHAL_CB_TYPE" />
    </typedef>
    <struct name="_USER_MARSHAL_CB">
      <field offset="0" name="Flags">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="pStubMsg">
        <type>PMIDL_STUB_MESSAGE</type>
      </field>
      <field offset="8" name="pReserve">
        <type>PFORMAT_STRING</type>
      </field>
      <field offset="12" name="Signature">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="16" name="CBType">
        <type>USER_MARSHAL_CB_TYPE</type>
      </field>
      <field offset="20" name="pFormat">
        <type>PFORMAT_STRING</type>
      </field>
      <field offset="24" name="pTypeFormat">
        <type>PFORMAT_STRING</type>
      </field>
    </struct>
    <typedef name="USER_MARSHAL_CB">
      <struct name="_USER_MARSHAL_CB" />
    </typedef>
    <struct name="_MALLOC_FREE_STRUCT">
      <field offset="0" name="pfnAllocate">
        <ptr>
          <fn>
            <return>
              <ptr>
                <void />
              </ptr>
              <reg>eax</reg>
            </return>
            <arg>
              <type>size_t</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="pfnFree">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg>
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="MALLOC_FREE_STRUCT">
      <struct name="_MALLOC_FREE_STRUCT" />
    </typedef>
    <struct name="_COMM_FAULT_OFFSETS">
      <field offset="0" name="CommOffset">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="2" name="FaultOffset">
        <prim domain="SignedInt" size="2" />
      </field>
    </struct>
    <typedef name="COMM_FAULT_OFFSETS">
      <struct name="_COMM_FAULT_OFFSETS" />
    </typedef>
    <enum name="_IDL_CS_CONVERT">
      <member name="IDL_CS_NO_CONVERT" value="0" />
      <member name="IDL_CS_IN_PLACE_CONVERT" value="1" />
      <member name="IDL_CS_NEW_BUFFER_CONVERT" value="2" />
    </enum>
    <typedef name="IDL_CS_CONVERT">
      <enum name="_IDL_CS_CONVERT" />
    </typedef>
    <typedef name="CS_TYPE_NET_SIZE_ROUTINE">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="hBinding">
            <type>RPC_BINDING_HANDLE</type>
            <stack size="4" />
          </arg>
          <arg name="ulNetworkCodeSet">
            <prim domain="UnsignedInt" size="4" />
            <stack size="4" />
          </arg>
          <arg name="ulLocalBufferSize">
            <prim domain="UnsignedInt" size="4" />
            <stack size="4" />
          </arg>
          <arg name="conversionType">
            <ptr>
              <type>IDL_CS_CONVERT</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pulNetworkBufferSize">
            <ptr>
              <prim domain="UnsignedInt" size="4" />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pStatus">
            <ptr>
              <type>error_status_t</type>
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="CS_TYPE_LOCAL_SIZE_ROUTINE">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="hBinding">
            <type>RPC_BINDING_HANDLE</type>
            <stack size="4" />
          </arg>
          <arg name="ulNetworkCodeSet">
            <prim domain="UnsignedInt" size="4" />
            <stack size="4" />
          </arg>
          <arg name="ulNetworkBufferSize">
            <prim domain="UnsignedInt" size="4" />
            <stack size="4" />
          </arg>
          <arg name="conversionType">
            <ptr>
              <type>IDL_CS_CONVERT</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pulLocalBufferSize">
            <ptr>
              <prim domain="UnsignedInt" size="4" />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pStatus">
            <ptr>
              <type>error_status_t</type>
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="CS_TYPE_TO_NETCS_ROUTINE">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="hBinding">
            <type>RPC_BINDING_HANDLE</type>
            <stack size="4" />
          </arg>
          <arg name="ulNetworkCodeSet">
            <prim domain="UnsignedInt" size="4" />
            <stack size="4" />
          </arg>
          <arg name="pLocalData">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="ulLocalDataLength">
            <prim domain="UnsignedInt" size="4" />
            <stack size="4" />
          </arg>
          <arg name="pNetworkData">
            <ptr>
              <type>byte</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pulNetworkDataLength">
            <ptr>
              <prim domain="UnsignedInt" size="4" />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pStatus">
            <ptr>
              <type>error_status_t</type>
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="CS_TYPE_FROM_NETCS_ROUTINE">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="hBinding">
            <type>RPC_BINDING_HANDLE</type>
            <stack size="4" />
          </arg>
          <arg name="ulNetworkCodeSet">
            <prim domain="UnsignedInt" size="4" />
            <stack size="4" />
          </arg>
          <arg name="pNetworkData">
            <ptr>
              <type>byte</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="ulNetworkDataLength">
            <prim domain="UnsignedInt" size="4" />
            <stack size="4" />
          </arg>
          <arg name="ulLocalBufferSize">
            <prim domain="UnsignedInt" size="4" />
            <stack size="4" />
          </arg>
          <arg name="pLocalData">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pulLocalDataLength">
            <ptr>
              <prim domain="UnsignedInt" size="4" />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pStatus">
            <ptr>
              <type>error_status_t</type>
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="CS_TAG_GETTING_ROUTINE">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="hBinding">
            <type>RPC_BINDING_HANDLE</type>
            <stack size="4" />
          </arg>
          <arg name="fServerSide">
            <prim domain="SignedInt" size="4" />
            <stack size="4" />
          </arg>
          <arg name="pulSendingTag">
            <ptr>
              <prim domain="UnsignedInt" size="4" />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pulDesiredReceivingTag">
            <ptr>
              <prim domain="UnsignedInt" size="4" />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pulReceivingTag">
            <ptr>
              <prim domain="UnsignedInt" size="4" />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pStatus">
            <ptr>
              <type>error_status_t</type>
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="_NDR_CS_SIZE_CONVERT_ROUTINES">
      <field offset="0" name="pfnNetSize">
        <type>CS_TYPE_NET_SIZE_ROUTINE</type>
      </field>
      <field offset="4" name="pfnToNetCs">
        <type>CS_TYPE_TO_NETCS_ROUTINE</type>
      </field>
      <field offset="8" name="pfnLocalSize">
        <type>CS_TYPE_LOCAL_SIZE_ROUTINE</type>
      </field>
      <field offset="12" name="pfnFromNetCs">
        <type>CS_TYPE_FROM_NETCS_ROUTINE</type>
      </field>
    </struct>
    <typedef name="NDR_CS_SIZE_CONVERT_ROUTINES">
      <struct name="_NDR_CS_SIZE_CONVERT_ROUTINES" />
    </typedef>
    <struct name="_NDR_CS_ROUTINES">
      <field offset="0" name="pSizeConvertRoutines">
        <ptr>
          <type>NDR_CS_SIZE_CONVERT_ROUTINES</type>
        </ptr>
      </field>
      <field offset="4" name="pTagGettingRoutines">
        <ptr>
          <type>CS_TAG_GETTING_ROUTINE</type>
        </ptr>
      </field>
    </struct>
    <typedef name="NDR_CS_ROUTINES">
      <struct name="_NDR_CS_ROUTINES" />
    </typedef>
    <struct name="_NDR_EXPR_DESC">
      <field offset="0" name="pOffset">
        <ptr>
          <prim domain="UnsignedInt" size="2" />
        </ptr>
      </field>
      <field offset="4" name="pFormatExpr">
        <type>PFORMAT_STRING</type>
      </field>
    </struct>
    <typedef name="NDR_EXPR_DESC">
      <struct name="_NDR_EXPR_DESC" />
    </typedef>
    <struct name="_MIDL_STUB_DESC">
      <field offset="0" name="RpcInterfaceInformation">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="4" name="pfnAllocate">
        <ptr>
          <fn>
            <return>
              <ptr>
                <void />
              </ptr>
              <reg>eax</reg>
            </return>
            <arg>
              <type>size_t</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="pfnFree">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg>
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="IMPLICIT_HANDLE_INFO">
        <union>
          <alt name="pAutoHandle">
            <ptr>
              <type>handle_t</type>
            </ptr>
          </alt>
          <alt name="pPrimitiveHandle">
            <ptr>
              <type>handle_t</type>
            </ptr>
          </alt>
          <alt name="pGenericBindingInfo">
            <type>PGENERIC_BINDING_INFO</type>
          </alt>
        </union>
      </field>
      <field offset="16" name="apfnNdrRundownRoutines">
        <ptr>
          <type>NDR_RUNDOWN</type>
        </ptr>
      </field>
      <field offset="20" name="aGenericBindingRoutinePairs">
        <ptr>
          <type>GENERIC_BINDING_ROUTINE_PAIR</type>
        </ptr>
      </field>
      <field offset="24" name="apfnExprEval">
        <ptr>
          <type>EXPR_EVAL</type>
        </ptr>
      </field>
      <field offset="28" name="aXmitQuintuple">
        <ptr>
          <type>XMIT_ROUTINE_QUINTUPLE</type>
        </ptr>
      </field>
      <field offset="32" name="pFormatTypes">
        <ptr>
          <prim domain="UnsignedInt" size="1" />
        </ptr>
      </field>
      <field offset="36" name="fCheckBounds">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="40" name="Version">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="44" name="pMallocFreeStruct">
        <ptr>
          <type>MALLOC_FREE_STRUCT</type>
        </ptr>
      </field>
      <field offset="48" name="MIDLVersion">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="52" name="CommFaultOffsets">
        <ptr>
          <type>COMM_FAULT_OFFSETS</type>
        </ptr>
      </field>
      <field offset="56" name="aUserMarshalQuadruple">
        <ptr>
          <type>USER_MARSHAL_ROUTINE_QUADRUPLE</type>
        </ptr>
      </field>
      <field offset="60" name="NotifyRoutineTable">
        <ptr>
          <type>NDR_NOTIFY_ROUTINE</type>
        </ptr>
      </field>
      <field offset="64" name="mFlags">
        <type>ULONG_PTR</type>
      </field>
      <field offset="68" name="CsRoutineTables">
        <ptr>
          <type>NDR_CS_ROUTINES</type>
        </ptr>
      </field>
      <field offset="72" name="ProxyServerInfo">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="76" name="pExprInfo">
        <ptr>
          <type>NDR_EXPR_DESC</type>
        </ptr>
      </field>
    </struct>
    <typedef name="MIDL_STUB_DESC">
      <struct name="_MIDL_STUB_DESC" />
    </typedef>
    <typedef name="PMIDL_STUB_DESC">
      <ptr>
        <type>MIDL_STUB_DESC</type>
      </ptr>
    </typedef>
    <typedef name="PMIDL_XMIT_TYPE">
      <ptr>
        <void />
      </ptr>
    </typedef>
    <struct name="_MIDL_FORMAT_STRING">
      <field offset="0" name="Pad">
        <prim domain="SignedInt" size="2" />
      </field>
      <field offset="8" name="Format">
        <arr length="0">
          <prim domain="UnsignedInt" size="1" />
        </arr>
      </field>
    </struct>
    <typedef name="MIDL_FORMAT_STRING">
      <struct name="_MIDL_FORMAT_STRING" />
    </typedef>
    <typedef name="STUB_THUNK">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg>
            <type>PMIDL_STUB_MESSAGE</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="SERVER_ROUTINE">
      <ptr>
        <fn>
          <return>
            <prim domain="SignedInt" size="4" />
            <reg>eax</reg>
          </return>
        </fn>
      </ptr>
    </typedef>
    <struct name="_MIDL_SERVER_INFO_">
      <field offset="0" name="pStubDesc">
        <type>PMIDL_STUB_DESC</type>
      </field>
      <field offset="4" name="DispatchTable">
        <ptr>
          <type>SERVER_ROUTINE</type>
        </ptr>
      </field>
      <field offset="8" name="ProcString">
        <type>PFORMAT_STRING</type>
      </field>
      <field offset="12" name="FmtStringOffset">
        <ptr>
          <prim domain="UnsignedInt" size="2" />
        </ptr>
      </field>
      <field offset="16" name="ThunkTable">
        <ptr>
          <type>STUB_THUNK</type>
        </ptr>
      </field>
      <field offset="20" name="pTransferSyntax">
        <type>PRPC_SYNTAX_IDENTIFIER</type>
      </field>
      <field offset="24" name="nCount">
        <type>ULONG_PTR</type>
      </field>
      <field offset="28" name="pSyntaxInfo">
        <type>PMIDL_SYNTAX_INFO</type>
      </field>
    </struct>
    <typedef name="MIDL_SERVER_INFO">
      <struct name="_MIDL_SERVER_INFO_" />
    </typedef>
    <typedef name="PMIDL_SERVER_INFO">
      <ptr>
        <struct name="_MIDL_SERVER_INFO_" />
      </ptr>
    </typedef>
    <struct name="_MIDL_STUBLESS_PROXY_INFO">
      <field offset="0" name="pStubDesc">
        <type>PMIDL_STUB_DESC</type>
      </field>
      <field offset="4" name="ProcFormatString">
        <type>PFORMAT_STRING</type>
      </field>
      <field offset="8" name="FormatStringOffset">
        <ptr>
          <prim domain="UnsignedInt" size="2" />
        </ptr>
      </field>
      <field offset="12" name="pTransferSyntax">
        <type>PRPC_SYNTAX_IDENTIFIER</type>
      </field>
      <field offset="16" name="nCount">
        <type>ULONG_PTR</type>
      </field>
      <field offset="20" name="pSyntaxInfo">
        <type>PMIDL_SYNTAX_INFO</type>
      </field>
    </struct>
    <typedef name="MIDL_STUBLESS_PROXY_INFO">
      <struct name="_MIDL_STUBLESS_PROXY_INFO" />
    </typedef>
    <typedef name="PMIDL_STUBLESS_PROXY_INFO">
      <ptr>
        <type>MIDL_STUBLESS_PROXY_INFO</type>
      </ptr>
    </typedef>
    <struct name="_MIDL_SYNTAX_INFO">
      <field offset="0" name="TransferSyntax">
        <type>RPC_SYNTAX_IDENTIFIER</type>
      </field>
      <field offset="20" name="DispatchTable">
        <ptr>
          <type>RPC_DISPATCH_TABLE</type>
        </ptr>
      </field>
      <field offset="24" name="ProcString">
        <type>PFORMAT_STRING</type>
      </field>
      <field offset="28" name="FmtStringOffset">
        <ptr>
          <prim domain="UnsignedInt" size="2" />
        </ptr>
      </field>
      <field offset="32" name="TypeString">
        <type>PFORMAT_STRING</type>
      </field>
      <field offset="36" name="aUserMarshalQuadruple">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="40" name="pReserved1">
        <type>ULONG_PTR</type>
      </field>
      <field offset="44" name="pReserved2">
        <type>ULONG_PTR</type>
      </field>
    </struct>
    <typedef name="MIDL_SYNTAX_INFO">
      <struct name="_MIDL_SYNTAX_INFO" />
    </typedef>
    <typedef name="PMIDL_SYNTAX_INFO">
      <ptr>
        <struct name="_MIDL_SYNTAX_INFO" />
      </ptr>
    </typedef>
    <typedef name="PARAM_OFFSETTABLE">
      <ptr>
        <prim domain="UnsignedInt" size="2" />
      </ptr>
    </typedef>
    <typedef name="PPARAM_OFFSETTABLE">
      <ptr>
        <prim domain="UnsignedInt" size="2" />
      </ptr>
    </typedef>
    <union name="_CLIENT_CALL_RETURN">
      <alt name="Pointer">
        <ptr>
          <void />
        </ptr>
      </alt>
      <alt name="Simple">
        <type>LONG_PTR</type>
      </alt>
    </union>
    <typedef name="CLIENT_CALL_RETURN">
      <union name="_CLIENT_CALL_RETURN" />
    </typedef>
    <enum name="enum_85">
      <member name="XLAT_SERVER" value="1" />
      <member name="XLAT_CLIENT" value="2" />
    </enum>
    <typedef name="XLAT_SIDE">
      <enum name="enum_85" />
    </typedef>
    <struct name="_FULL_PTR_XLAT_TABLES">
      <field offset="0" name="RefIdToPointer">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="4" name="PointerToRefId">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="8" name="NextRefId">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="12" name="XlatSide">
        <type>XLAT_SIDE</type>
      </field>
    </struct>
    <typedef name="FULL_PTR_XLAT_TABLES">
      <struct name="_FULL_PTR_XLAT_TABLES" />
    </typedef>
    <typedef name="PFULL_PTR_XLAT_TABLES">
      <ptr>
        <struct name="_FULL_PTR_XLAT_TABLES" />
      </ptr>
    </typedef>
    <enum name="enum_86">
      <member name="STUB_UNMARSHAL" value="0" />
      <member name="STUB_CALL_SERVER" value="1" />
      <member name="STUB_MARSHAL" value="2" />
      <member name="STUB_CALL_SERVER_NO_HRESULT" value="3" />
    </enum>
    <typedef name="STUB_PHASE">
      <enum name="enum_86" />
    </typedef>
    <enum name="enum_87">
      <member name="PROXY_CALCSIZE" value="0" />
      <member name="PROXY_GETBUFFER" value="1" />
      <member name="PROXY_MARSHAL" value="2" />
      <member name="PROXY_SENDRECEIVE" value="3" />
      <member name="PROXY_UNMARSHAL" value="4" />
    </enum>
    <typedef name="PROXY_PHASE">
      <enum name="enum_87" />
    </typedef>
    <typedef name="RPC_SS_THREAD_HANDLE">
      <ptr>
        <void />
      </ptr>
    </typedef>
    <typedef name="RPC_CLIENT_ALLOC">
      <fn>
        <return>
          <ptr>
            <void />
          </ptr>
          <reg>eax</reg>
        </return>
        <arg name="Size">
          <type>size_t</type>
          <stack size="4" />
        </arg>
      </fn>
    </typedef>
    <typedef name="RPC_CLIENT_FREE">
      <fn convention="__stdcall">
        <return>
          <void />
        </return>
        <arg name="Ptr">
          <ptr>
            <void />
          </ptr>
          <stack size="4" />
        </arg>
      </fn>
    </typedef>
    <struct name="_NDR_USER_MARSHAL_INFO_LEVEL1">
      <field offset="0" name="Buffer">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="4" name="BufferSize">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="8" name="pfnAllocate">
        <ptr>
          <fn>
            <return>
              <ptr>
                <void />
              </ptr>
              <reg>eax</reg>
            </return>
            <arg>
              <type>size_t</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="pfnFree">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg>
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="pRpcChannelBuffer">
        <ptr>
          <struct name="IRpcChannelBuffer" />
        </ptr>
      </field>
      <field offset="24" name="Reserved">
        <arr length="5">
          <type>ULONG_PTR</type>
        </arr>
      </field>
    </struct>
    <typedef name="NDR_USER_MARSHAL_INFO_LEVEL1">
      <struct name="_NDR_USER_MARSHAL_INFO_LEVEL1" />
    </typedef>
    <struct name="_NDR_USER_MARSHAL_INFO">
      <field offset="0" name="InformationLevel">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="8">
        <union>
          <alt name="Level1">
            <type>NDR_USER_MARSHAL_INFO_LEVEL1</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="NDR_USER_MARSHAL_INFO">
      <struct name="_NDR_USER_MARSHAL_INFO" />
    </typedef>
    <struct name="tagRemHGLOBAL">
      <field offset="0" name="fNullHGlobal">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="4" name="cbData">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="8" name="data">
        <arr length="1">
          <type>byte</type>
        </arr>
      </field>
    </struct>
    <typedef name="RemHGLOBAL">
      <struct name="tagRemHGLOBAL" />
    </typedef>
    <struct name="tagRemHMETAFILEPICT">
      <field offset="0" name="mm">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="4" name="xExt">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="yExt">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="12" name="cbData">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="16" name="data">
        <arr length="1">
          <type>byte</type>
        </arr>
      </field>
    </struct>
    <typedef name="RemHMETAFILEPICT">
      <struct name="tagRemHMETAFILEPICT" />
    </typedef>
    <struct name="tagRemHENHMETAFILE">
      <field offset="0" name="cbData">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="data">
        <arr length="1">
          <type>byte</type>
        </arr>
      </field>
    </struct>
    <typedef name="RemHENHMETAFILE">
      <struct name="tagRemHENHMETAFILE" />
    </typedef>
    <struct name="tagRemHBITMAP">
      <field offset="0" name="cbData">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="data">
        <arr length="1">
          <type>byte</type>
        </arr>
      </field>
    </struct>
    <typedef name="RemHBITMAP">
      <struct name="tagRemHBITMAP" />
    </typedef>
    <struct name="tagRemHPALETTE">
      <field offset="0" name="cbData">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="data">
        <arr length="1">
          <type>byte</type>
        </arr>
      </field>
    </struct>
    <typedef name="RemHPALETTE">
      <struct name="tagRemHPALETTE" />
    </typedef>
    <struct name="tagRemBRUSH">
      <field offset="0" name="cbData">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="data">
        <arr length="1">
          <type>byte</type>
        </arr>
      </field>
    </struct>
    <typedef name="RemHBRUSH">
      <struct name="tagRemBRUSH" />
    </typedef>
    <typedef name="OLECHAR">
      <type>WCHAR</type>
    </typedef>
    <typedef name="LPOLESTR">
      <ptr>
        <type>OLECHAR</type>
      </ptr>
    </typedef>
    <typedef name="LPCOLESTR">
      <ptr>
        <type>OLECHAR</type>
      </ptr>
    </typedef>
    <typedef name="UCHAR">
      <prim domain="UnsignedInt" size="1" />
    </typedef>
    <typedef name="SHORT">
      <prim domain="SignedInt" size="2" />
    </typedef>
    <typedef name="USHORT">
      <prim domain="UnsignedInt" size="2" />
    </typedef>
    <typedef name="ULONG">
      <type>DWORD</type>
    </typedef>
    <typedef name="DOUBLE">
      <prim domain="Real" size="8" />
    </typedef>
    <struct name="_COAUTHIDENTITY">
      <field offset="0" name="User">
        <ptr>
          <type>USHORT</type>
        </ptr>
      </field>
      <field offset="4" name="UserLength">
        <type>ULONG</type>
      </field>
      <field offset="8" name="Domain">
        <ptr>
          <type>USHORT</type>
        </ptr>
      </field>
      <field offset="12" name="DomainLength">
        <type>ULONG</type>
      </field>
      <field offset="16" name="Password">
        <ptr>
          <type>USHORT</type>
        </ptr>
      </field>
      <field offset="20" name="PasswordLength">
        <type>ULONG</type>
      </field>
      <field offset="24" name="Flags">
        <type>ULONG</type>
      </field>
    </struct>
    <typedef name="COAUTHIDENTITY">
      <struct name="_COAUTHIDENTITY" />
    </typedef>
    <struct name="_COAUTHINFO">
      <field offset="0" name="dwAuthnSvc">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwAuthzSvc">
        <type>DWORD</type>
      </field>
      <field offset="8" name="pwszServerPrincName">
        <type>LPWSTR</type>
      </field>
      <field offset="12" name="dwAuthnLevel">
        <type>DWORD</type>
      </field>
      <field offset="16" name="dwImpersonationLevel">
        <type>DWORD</type>
      </field>
      <field offset="20" name="pAuthIdentityData">
        <ptr>
          <type>COAUTHIDENTITY</type>
        </ptr>
      </field>
      <field offset="24" name="dwCapabilities">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="COAUTHINFO">
      <struct name="_COAUTHINFO" />
    </typedef>
    <typedef name="SCODE">
      <type>LONG</type>
    </typedef>
    <typedef name="PSCODE">
      <ptr>
        <type>SCODE</type>
      </ptr>
    </typedef>
    <enum name="tagMEMCTX">
      <member name="MEMCTX_TASK" value="1" />
      <member name="MEMCTX_SHARED" value="2" />
      <member name="MEMCTX_MACSYSTEM" value="3" />
      <member name="MEMCTX_UNKNOWN" value="-1" />
      <member name="MEMCTX_SAME" value="-2" />
    </enum>
    <typedef name="MEMCTX">
      <enum name="tagMEMCTX" />
    </typedef>
    <enum name="tagCLSCTX">
      <member name="CLSCTX_INPROC_SERVER" value="1" />
      <member name="CLSCTX_INPROC_HANDLER" value="2" />
      <member name="CLSCTX_LOCAL_SERVER" value="4" />
      <member name="CLSCTX_INPROC_SERVER16" value="8" />
      <member name="CLSCTX_REMOTE_SERVER" value="16" />
      <member name="CLSCTX_INPROC_HANDLER16" value="32" />
      <member name="CLSCTX_RESERVED1" value="64" />
      <member name="CLSCTX_RESERVED2" value="128" />
      <member name="CLSCTX_RESERVED3" value="256" />
      <member name="CLSCTX_RESERVED4" value="512" />
      <member name="CLSCTX_NO_CODE_DOWNLOAD" value="1024" />
      <member name="CLSCTX_RESERVED5" value="2048" />
      <member name="CLSCTX_NO_CUSTOM_MARSHAL" value="4096" />
      <member name="CLSCTX_ENABLE_CODE_DOWNLOAD" value="8192" />
      <member name="CLSCTX_NO_FAILURE_LOG" value="16384" />
      <member name="CLSCTX_DISABLE_AAA" value="32768" />
      <member name="CLSCTX_ENABLE_AAA" value="65536" />
      <member name="CLSCTX_FROM_DEFAULT_CONTEXT" value="131072" />
      <member name="CLSCTX_ACTIVATE_32_BIT_SERVER" value="262144" />
      <member name="CLSCTX_ACTIVATE_64_BIT_SERVER" value="524288" />
      <member name="CLSCTX_ENABLE_CLOAKING" value="1048576" />
      <member name="CLSCTX_PS_DLL" value="-2147483648" />
    </enum>
    <typedef name="CLSCTX">
      <enum name="tagCLSCTX" />
    </typedef>
    <enum name="tagMSHLFLAGS">
      <member name="MSHLFLAGS_NORMAL" value="0" />
      <member name="MSHLFLAGS_TABLESTRONG" value="1" />
      <member name="MSHLFLAGS_TABLEWEAK" value="2" />
      <member name="MSHLFLAGS_NOPING" value="4" />
      <member name="MSHLFLAGS_RESERVED1" value="8" />
      <member name="MSHLFLAGS_RESERVED2" value="16" />
      <member name="MSHLFLAGS_RESERVED3" value="32" />
      <member name="MSHLFLAGS_RESERVED4" value="64" />
    </enum>
    <typedef name="MSHLFLAGS">
      <enum name="tagMSHLFLAGS" />
    </typedef>
    <enum name="tagMSHCTX">
      <member name="MSHCTX_LOCAL" value="0" />
      <member name="MSHCTX_NOSHAREDMEM" value="1" />
      <member name="MSHCTX_DIFFERENTMACHINE" value="2" />
      <member name="MSHCTX_INPROC" value="3" />
      <member name="MSHCTX_CROSSCTX" value="4" />
    </enum>
    <typedef name="MSHCTX">
      <enum name="tagMSHCTX" />
    </typedef>
    <enum name="tagDVASPECT">
      <member name="DVASPECT_CONTENT" value="1" />
      <member name="DVASPECT_THUMBNAIL" value="2" />
      <member name="DVASPECT_ICON" value="4" />
      <member name="DVASPECT_DOCPRINT" value="8" />
    </enum>
    <typedef name="DVASPECT">
      <enum name="tagDVASPECT" />
    </typedef>
    <enum name="tagSTGC">
      <member name="STGC_DEFAULT" value="0" />
      <member name="STGC_OVERWRITE" value="1" />
      <member name="STGC_ONLYIFCURRENT" value="2" />
      <member name="STGC_DANGEROUSLYCOMMITMERELYTODISKCACHE" value="4" />
      <member name="STGC_CONSOLIDATE" value="8" />
    </enum>
    <typedef name="STGC">
      <enum name="tagSTGC" />
    </typedef>
    <enum name="tagSTGMOVE">
      <member name="STGMOVE_MOVE" value="0" />
      <member name="STGMOVE_COPY" value="1" />
      <member name="STGMOVE_SHALLOWCOPY" value="2" />
    </enum>
    <typedef name="STGMOVE">
      <enum name="tagSTGMOVE" />
    </typedef>
    <enum name="tagSTATFLAG">
      <member name="STATFLAG_DEFAULT" value="0" />
      <member name="STATFLAG_NONAME" value="1" />
      <member name="STATFLAG_NOOPEN" value="2" />
    </enum>
    <typedef name="STATFLAG">
      <enum name="tagSTATFLAG" />
    </typedef>
    <typedef name="HCONTEXT">
      <ptr>
        <void />
      </ptr>
    </typedef>
    <typedef name="LCID">
      <type>DWORD</type>
    </typedef>
    <typedef name="LANGID">
      <type>USHORT</type>
    </typedef>
    <struct name="_BYTE_BLOB">
      <field offset="0" name="clSize">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="abData">
        <arr length="1">
          <type>byte</type>
        </arr>
      </field>
    </struct>
    <typedef name="BYTE_BLOB">
      <struct name="_BYTE_BLOB" />
    </typedef>
    <typedef name="UP_BYTE_BLOB">
      <ptr>
        <type>BYTE_BLOB</type>
      </ptr>
    </typedef>
    <struct name="_WORD_BLOB">
      <field offset="0" name="clSize">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="asData">
        <arr length="1">
          <prim domain="UnsignedInt" size="2" />
        </arr>
      </field>
    </struct>
    <typedef name="WORD_BLOB">
      <struct name="_WORD_BLOB" />
    </typedef>
    <typedef name="UP_WORD_BLOB">
      <ptr>
        <type>WORD_BLOB</type>
      </ptr>
    </typedef>
    <struct name="_DWORD_BLOB">
      <field offset="0" name="clSize">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="alData">
        <arr length="1">
          <prim domain="UnsignedInt" size="4" />
        </arr>
      </field>
    </struct>
    <typedef name="DWORD_BLOB">
      <struct name="_DWORD_BLOB" />
    </typedef>
    <typedef name="UP_DWORD_BLOB">
      <ptr>
        <type>DWORD_BLOB</type>
      </ptr>
    </typedef>
    <struct name="_FLAGGED_BYTE_BLOB">
      <field offset="0" name="fFlags">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="clSize">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="8" name="abData">
        <arr length="1">
          <type>byte</type>
        </arr>
      </field>
    </struct>
    <typedef name="FLAGGED_BYTE_BLOB">
      <struct name="_FLAGGED_BYTE_BLOB" />
    </typedef>
    <typedef name="UP_FLAGGED_BYTE_BLOB">
      <ptr>
        <type>FLAGGED_BYTE_BLOB</type>
      </ptr>
    </typedef>
    <struct name="_FLAGGED_WORD_BLOB">
      <field offset="0" name="fFlags">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="clSize">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="8" name="asData">
        <arr length="1">
          <prim domain="UnsignedInt" size="2" />
        </arr>
      </field>
    </struct>
    <typedef name="FLAGGED_WORD_BLOB">
      <struct name="_FLAGGED_WORD_BLOB" />
    </typedef>
    <typedef name="UP_FLAGGED_WORD_BLOB">
      <ptr>
        <type>FLAGGED_WORD_BLOB</type>
      </ptr>
    </typedef>
    <struct name="_BYTE_SIZEDARR">
      <field offset="0" name="clSize">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="pData">
        <ptr>
          <type>byte</type>
        </ptr>
      </field>
    </struct>
    <typedef name="BYTE_SIZEDARR">
      <struct name="_BYTE_SIZEDARR" />
    </typedef>
    <struct name="_SHORT_SIZEDARR">
      <field offset="0" name="clSize">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="pData">
        <ptr>
          <prim domain="UnsignedInt" size="2" />
        </ptr>
      </field>
    </struct>
    <typedef name="WORD_SIZEDARR">
      <struct name="_SHORT_SIZEDARR" />
    </typedef>
    <struct name="_LONG_SIZEDARR">
      <field offset="0" name="clSize">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="pData">
        <ptr>
          <prim domain="UnsignedInt" size="4" />
        </ptr>
      </field>
    </struct>
    <typedef name="DWORD_SIZEDARR">
      <struct name="_LONG_SIZEDARR" />
    </typedef>
    <struct name="_HYPER_SIZEDARR">
      <field offset="0" name="clSize">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="pData">
        <ptr>
          <prim domain="SignedInt" size="8" />
        </ptr>
      </field>
    </struct>
    <typedef name="HYPER_SIZEDARR">
      <struct name="_HYPER_SIZEDARR" />
    </typedef>
    <union name="__MIDL_IWinTypes_0001">
      <alt name="dwValue">
        <type>DWORD</type>
      </alt>
      <alt name="pwszName">
        <ptr>
          <prim domain="Character" size="2" />
        </ptr>
      </alt>
    </union>
    <struct name="_userCLIPFORMAT">
      <field offset="0" name="fContext">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="4" name="u">
        <union name="__MIDL_IWinTypes_0001" />
      </field>
    </struct>
    <typedef name="userCLIPFORMAT">
      <struct name="_userCLIPFORMAT" />
    </typedef>
    <typedef name="wireCLIPFORMAT">
      <ptr>
        <type>userCLIPFORMAT</type>
      </ptr>
    </typedef>
    <typedef name="CLIPFORMAT">
      <type>WORD</type>
    </typedef>
    <union name="__MIDL_IWinTypes_0002">
      <alt name="hInproc">
        <prim domain="SignedInt" size="4" />
      </alt>
      <alt name="hRemote">
        <ptr>
          <type>DWORD_BLOB</type>
        </ptr>
      </alt>
    </union>
    <struct name="_GDI_NONREMOTE">
      <field offset="0" name="fContext">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="4" name="u">
        <union name="__MIDL_IWinTypes_0002" />
      </field>
    </struct>
    <typedef name="GDI_NONREMOTE">
      <struct name="_GDI_NONREMOTE" />
    </typedef>
    <union name="__MIDL_IWinTypes_0003">
      <alt name="hInproc">
        <prim domain="SignedInt" size="4" />
      </alt>
      <alt name="hRemote">
        <ptr>
          <type>FLAGGED_BYTE_BLOB</type>
        </ptr>
      </alt>
      <alt name="hInproc64">
        <prim domain="SignedInt" size="8" />
      </alt>
    </union>
    <struct name="_userHGLOBAL">
      <field offset="0" name="fContext">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="u">
        <union name="__MIDL_IWinTypes_0003" />
      </field>
    </struct>
    <typedef name="userHGLOBAL">
      <struct name="_userHGLOBAL" />
    </typedef>
    <typedef name="wireHGLOBAL">
      <ptr>
        <type>userHGLOBAL</type>
      </ptr>
    </typedef>
    <union name="__MIDL_IWinTypes_0004">
      <alt name="hInproc">
        <prim domain="SignedInt" size="4" />
      </alt>
      <alt name="hRemote">
        <ptr>
          <type>BYTE_BLOB</type>
        </ptr>
      </alt>
      <alt name="hInproc64">
        <prim domain="SignedInt" size="8" />
      </alt>
    </union>
    <struct name="_userHMETAFILE">
      <field offset="0" name="fContext">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="u">
        <union name="__MIDL_IWinTypes_0004" />
      </field>
    </struct>
    <typedef name="userHMETAFILE">
      <struct name="_userHMETAFILE" />
    </typedef>
    <struct name="_remoteMETAFILEPICT">
      <field offset="0" name="mm">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="4" name="xExt">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="yExt">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="12" name="hMF">
        <ptr>
          <type>userHMETAFILE</type>
        </ptr>
      </field>
    </struct>
    <typedef name="remoteMETAFILEPICT">
      <struct name="_remoteMETAFILEPICT" />
    </typedef>
    <union name="__MIDL_IWinTypes_0005">
      <alt name="hInproc">
        <prim domain="SignedInt" size="4" />
      </alt>
      <alt name="hRemote">
        <ptr>
          <type>remoteMETAFILEPICT</type>
        </ptr>
      </alt>
      <alt name="hInproc64">
        <prim domain="SignedInt" size="8" />
      </alt>
    </union>
    <struct name="_userHMETAFILEPICT">
      <field offset="0" name="fContext">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="u">
        <union name="__MIDL_IWinTypes_0005" />
      </field>
    </struct>
    <typedef name="userHMETAFILEPICT">
      <struct name="_userHMETAFILEPICT" />
    </typedef>
    <union name="__MIDL_IWinTypes_0006">
      <alt name="hInproc">
        <prim domain="SignedInt" size="4" />
      </alt>
      <alt name="hRemote">
        <ptr>
          <type>BYTE_BLOB</type>
        </ptr>
      </alt>
      <alt name="hInproc64">
        <prim domain="SignedInt" size="8" />
      </alt>
    </union>
    <struct name="_userHENHMETAFILE">
      <field offset="0" name="fContext">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="u">
        <union name="__MIDL_IWinTypes_0006" />
      </field>
    </struct>
    <typedef name="userHENHMETAFILE">
      <struct name="_userHENHMETAFILE" />
    </typedef>
    <struct name="_userBITMAP">
      <field offset="0" name="bmType">
        <type>LONG</type>
      </field>
      <field offset="4" name="bmWidth">
        <type>LONG</type>
      </field>
      <field offset="8" name="bmHeight">
        <type>LONG</type>
      </field>
      <field offset="12" name="bmWidthBytes">
        <type>LONG</type>
      </field>
      <field offset="16" name="bmPlanes">
        <type>WORD</type>
      </field>
      <field offset="18" name="bmBitsPixel">
        <type>WORD</type>
      </field>
      <field offset="20" name="cbSize">
        <type>ULONG</type>
      </field>
      <field offset="24" name="pBuffer">
        <arr length="1">
          <type>byte</type>
        </arr>
      </field>
    </struct>
    <typedef name="userBITMAP">
      <struct name="_userBITMAP" />
    </typedef>
    <union name="__MIDL_IWinTypes_0007">
      <alt name="hInproc">
        <prim domain="SignedInt" size="4" />
      </alt>
      <alt name="hRemote">
        <ptr>
          <type>userBITMAP</type>
        </ptr>
      </alt>
      <alt name="hInproc64">
        <prim domain="SignedInt" size="8" />
      </alt>
    </union>
    <struct name="_userHBITMAP">
      <field offset="0" name="fContext">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="u">
        <union name="__MIDL_IWinTypes_0007" />
      </field>
    </struct>
    <typedef name="userHBITMAP">
      <struct name="_userHBITMAP" />
    </typedef>
    <union name="__MIDL_IWinTypes_0008">
      <alt name="hInproc">
        <prim domain="SignedInt" size="4" />
      </alt>
      <alt name="hRemote">
        <ptr>
          <type>LOGPALETTE</type>
        </ptr>
      </alt>
      <alt name="hInproc64">
        <prim domain="SignedInt" size="8" />
      </alt>
    </union>
    <struct name="_userHPALETTE">
      <field offset="0" name="fContext">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="u">
        <union name="__MIDL_IWinTypes_0008" />
      </field>
    </struct>
    <typedef name="userHPALETTE">
      <struct name="_userHPALETTE" />
    </typedef>
    <union name="__MIDL_IWinTypes_0009">
      <alt name="hInproc">
        <prim domain="SignedInt" size="4" />
      </alt>
      <alt name="hRemote">
        <prim domain="SignedInt" size="4" />
      </alt>
    </union>
    <struct name="_RemotableHandle">
      <field offset="0" name="fContext">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="4" name="u">
        <union name="__MIDL_IWinTypes_0009" />
      </field>
    </struct>
    <typedef name="RemotableHandle">
      <struct name="_RemotableHandle" />
    </typedef>
    <typedef name="wireHWND">
      <ptr>
        <type>RemotableHandle</type>
      </ptr>
    </typedef>
    <typedef name="wireHMENU">
      <ptr>
        <type>RemotableHandle</type>
      </ptr>
    </typedef>
    <typedef name="wireHACCEL">
      <ptr>
        <type>RemotableHandle</type>
      </ptr>
    </typedef>
    <typedef name="wireHBRUSH">
      <ptr>
        <type>RemotableHandle</type>
      </ptr>
    </typedef>
    <typedef name="wireHFONT">
      <ptr>
        <type>RemotableHandle</type>
      </ptr>
    </typedef>
    <typedef name="wireHDC">
      <ptr>
        <type>RemotableHandle</type>
      </ptr>
    </typedef>
    <typedef name="wireHICON">
      <ptr>
        <type>RemotableHandle</type>
      </ptr>
    </typedef>
    <typedef name="wireHRGN">
      <ptr>
        <type>RemotableHandle</type>
      </ptr>
    </typedef>
    <typedef name="wireHBITMAP">
      <ptr>
        <type>userHBITMAP</type>
      </ptr>
    </typedef>
    <typedef name="wireHPALETTE">
      <ptr>
        <type>userHPALETTE</type>
      </ptr>
    </typedef>
    <typedef name="wireHENHMETAFILE">
      <ptr>
        <type>userHENHMETAFILE</type>
      </ptr>
    </typedef>
    <typedef name="wireHMETAFILE">
      <ptr>
        <type>userHMETAFILE</type>
      </ptr>
    </typedef>
    <typedef name="wireHMETAFILEPICT">
      <ptr>
        <type>userHMETAFILEPICT</type>
      </ptr>
    </typedef>
    <typedef name="HMETAFILEPICT">
      <ptr>
        <void />
      </ptr>
    </typedef>
    <typedef name="DATE">
      <prim domain="Real" size="8" />
    </typedef>
    <struct name="struct_111">
      <field offset="0" name="Lo">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="Hi">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <union name="tagCY">
      <alt>
        <struct name="struct_111" />
      </alt>
      <alt name="int64">
        <type>LONGLONG</type>
      </alt>
    </union>
    <typedef name="CY">
      <union name="tagCY" />
    </typedef>
    <typedef name="LPCY">
      <ptr>
        <type>CY</type>
      </ptr>
    </typedef>
    <struct name="struct_112">
      <field offset="0" name="scale">
        <type>BYTE</type>
      </field>
      <field offset="1" name="sign">
        <type>BYTE</type>
      </field>
    </struct>
    <struct name="struct_113">
      <field offset="0" name="Lo32">
        <type>ULONG</type>
      </field>
      <field offset="4" name="Mid32">
        <type>ULONG</type>
      </field>
    </struct>
    <struct name="tagDEC">
      <field offset="0" name="wReserved">
        <type>USHORT</type>
      </field>
      <field offset="2">
        <union>
          <alt>
            <struct name="struct_112" />
          </alt>
          <alt name="signscale">
            <type>USHORT</type>
          </alt>
        </union>
      </field>
      <field offset="4" name="Hi32">
        <type>ULONG</type>
      </field>
      <field offset="8">
        <union>
          <alt>
            <struct name="struct_113" />
          </alt>
          <alt name="Lo64">
            <type>ULONGLONG</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="DECIMAL">
      <struct name="tagDEC" />
    </typedef>
    <typedef name="LPDECIMAL">
      <ptr>
        <type>DECIMAL</type>
      </ptr>
    </typedef>
    <typedef name="wireBSTR">
      <ptr>
        <type>FLAGGED_WORD_BLOB</type>
      </ptr>
    </typedef>
    <typedef name="BSTR">
      <ptr>
        <type>OLECHAR</type>
      </ptr>
    </typedef>
    <typedef name="LPBSTR">
      <ptr>
        <type>BSTR</type>
      </ptr>
    </typedef>
    <typedef name="VARIANT_BOOL">
      <prim domain="SignedInt" size="2" />
    </typedef>
    <typedef name="BOOLEAN">
      <type>boolean</type>
    </typedef>
    <struct name="tagBSTRBLOB">
      <field offset="0" name="cbSize">
        <type>ULONG</type>
      </field>
      <field offset="4" name="pData">
        <ptr>
          <type>BYTE</type>
        </ptr>
      </field>
    </struct>
    <typedef name="BSTRBLOB">
      <struct name="tagBSTRBLOB" />
    </typedef>
    <typedef name="LPBSTRBLOB">
      <ptr>
        <struct name="tagBSTRBLOB" />
      </ptr>
    </typedef>
    <struct name="tagBLOB">
      <field offset="0" name="cbSize">
        <type>ULONG</type>
      </field>
      <field offset="4" name="pBlobData">
        <ptr>
          <type>BYTE</type>
        </ptr>
      </field>
    </struct>
    <typedef name="BLOB">
      <struct name="tagBLOB" />
    </typedef>
    <typedef name="LPBLOB">
      <ptr>
        <struct name="tagBLOB" />
      </ptr>
    </typedef>
    <struct name="tagCLIPDATA">
      <field offset="0" name="cbSize">
        <type>ULONG</type>
      </field>
      <field offset="4" name="ulClipFmt">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="pClipData">
        <ptr>
          <type>BYTE</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CLIPDATA">
      <struct name="tagCLIPDATA" />
    </typedef>
    <typedef name="VARTYPE">
      <prim domain="UnsignedInt" size="2" />
    </typedef>
    <enum name="VARENUM">
      <member name="VT_EMPTY" value="0" />
      <member name="VT_NULL" value="1" />
      <member name="VT_I2" value="2" />
      <member name="VT_I4" value="3" />
      <member name="VT_R4" value="4" />
      <member name="VT_R8" value="5" />
      <member name="VT_CY" value="6" />
      <member name="VT_DATE" value="7" />
      <member name="VT_BSTR" value="8" />
      <member name="VT_DISPATCH" value="9" />
      <member name="VT_ERROR" value="10" />
      <member name="VT_BOOL" value="11" />
      <member name="VT_VARIANT" value="12" />
      <member name="VT_UNKNOWN" value="13" />
      <member name="VT_DECIMAL" value="14" />
      <member name="VT_I1" value="16" />
      <member name="VT_UI1" value="17" />
      <member name="VT_UI2" value="18" />
      <member name="VT_UI4" value="19" />
      <member name="VT_I8" value="20" />
      <member name="VT_UI8" value="21" />
      <member name="VT_INT" value="22" />
      <member name="VT_UINT" value="23" />
      <member name="VT_VOID" value="24" />
      <member name="VT_HRESULT" value="25" />
      <member name="VT_PTR" value="26" />
      <member name="VT_SAFEARRAY" value="27" />
      <member name="VT_CARRAY" value="28" />
      <member name="VT_USERDEFINED" value="29" />
      <member name="VT_LPSTR" value="30" />
      <member name="VT_LPWSTR" value="31" />
      <member name="VT_RECORD" value="36" />
      <member name="VT_INT_PTR" value="37" />
      <member name="VT_UINT_PTR" value="38" />
      <member name="VT_FILETIME" value="64" />
      <member name="VT_BLOB" value="65" />
      <member name="VT_STREAM" value="66" />
      <member name="VT_STORAGE" value="67" />
      <member name="VT_STREAMED_OBJECT" value="68" />
      <member name="VT_STORED_OBJECT" value="69" />
      <member name="VT_BLOB_OBJECT" value="70" />
      <member name="VT_CF" value="71" />
      <member name="VT_CLSID" value="72" />
      <member name="VT_VERSIONED_STREAM" value="73" />
      <member name="VT_BSTR_BLOB" value="4095" />
      <member name="VT_VECTOR" value="4096" />
      <member name="VT_ARRAY" value="8192" />
      <member name="VT_BYREF" value="16384" />
      <member name="VT_RESERVED" value="32768" />
      <member name="VT_ILLEGAL" value="65535" />
      <member name="VT_ILLEGALMASKED" value="4095" />
      <member name="VT_TYPEMASK" value="4095" />
    </enum>
    <typedef name="PROPID">
      <type>ULONG</type>
    </typedef>
    <struct name="_tagpropertykey">
      <field offset="0" name="fmtid">
        <type>GUID</type>
      </field>
      <field offset="16" name="pid">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PROPERTYKEY">
      <struct name="_tagpropertykey" />
    </typedef>
    <struct name="tagCSPLATFORM">
      <field offset="0" name="dwPlatformId">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwVersionHi">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwVersionLo">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwProcessorArch">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CSPLATFORM">
      <struct name="tagCSPLATFORM" />
    </typedef>
    <struct name="tagQUERYCONTEXT">
      <field offset="0" name="dwContext">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Platform">
        <type>CSPLATFORM</type>
      </field>
      <field offset="24" name="Locale">
        <type>LCID</type>
      </field>
      <field offset="28" name="dwVersionHi">
        <type>DWORD</type>
      </field>
      <field offset="32" name="dwVersionLo">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="QUERYCONTEXT">
      <struct name="tagQUERYCONTEXT" />
    </typedef>
    <enum name="tagTYSPEC">
      <member name="TYSPEC_CLSID" value="0" />
      <member name="TYSPEC_FILEEXT" value="1" />
      <member name="TYSPEC_MIMETYPE" value="2" />
      <member name="TYSPEC_FILENAME" value="3" />
      <member name="TYSPEC_PROGID" value="4" />
      <member name="TYSPEC_PACKAGENAME" value="5" />
      <member name="TYSPEC_OBJECTID" value="6" />
    </enum>
    <typedef name="TYSPEC">
      <enum name="tagTYSPEC" />
    </typedef>
    <struct name="struct_114">
      <field offset="0" name="pPackageName">
        <type>LPOLESTR</type>
      </field>
      <field offset="8" name="PolicyId">
        <type>GUID</type>
      </field>
    </struct>
    <struct name="struct_115">
      <field offset="0" name="ObjectId">
        <type>GUID</type>
      </field>
      <field offset="16" name="PolicyId">
        <type>GUID</type>
      </field>
    </struct>
    <union name="__MIDL___MIDL_itf_wtypes_0000_0001_0005">
      <alt name="clsid">
        <type>CLSID</type>
      </alt>
      <alt name="pFileExt">
        <type>LPOLESTR</type>
      </alt>
      <alt name="pMimeType">
        <type>LPOLESTR</type>
      </alt>
      <alt name="pProgId">
        <type>LPOLESTR</type>
      </alt>
      <alt name="pFileName">
        <type>LPOLESTR</type>
      </alt>
      <alt name="ByName">
        <struct name="struct_114" />
      </alt>
      <alt name="ByObjectId">
        <struct name="struct_115" />
      </alt>
    </union>
    <struct name="__MIDL___MIDL_itf_wtypes_0000_0001_0001">
      <field offset="0" name="tyspec">
        <type>DWORD</type>
      </field>
      <field offset="8" name="tagged_union">
        <union name="__MIDL___MIDL_itf_wtypes_0000_0001_0005" />
      </field>
    </struct>
    <typedef name="uCLSSPEC">
      <struct name="__MIDL___MIDL_itf_wtypes_0000_0001_0001" />
    </typedef>
    <struct name="_STORAGE_HOTPLUG_INFO">
      <field offset="0" name="Size">
        <type>DWORD</type>
      </field>
      <field offset="4" name="MediaRemovable">
        <type>BOOLEAN</type>
      </field>
      <field offset="5" name="MediaHotplug">
        <type>BOOLEAN</type>
      </field>
      <field offset="6" name="DeviceHotplug">
        <type>BOOLEAN</type>
      </field>
      <field offset="7" name="WriteCacheEnableOverride">
        <type>BOOLEAN</type>
      </field>
    </struct>
    <typedef name="STORAGE_HOTPLUG_INFO">
      <struct name="_STORAGE_HOTPLUG_INFO" />
    </typedef>
    <typedef name="PSTORAGE_HOTPLUG_INFO">
      <ptr>
        <struct name="_STORAGE_HOTPLUG_INFO" />
      </ptr>
    </typedef>
    <struct name="_STORAGE_DEVICE_NUMBER">
      <field offset="0" name="DeviceType">
        <type>DWORD</type>
      </field>
      <field offset="4" name="DeviceNumber">
        <type>DWORD</type>
      </field>
      <field offset="8" name="PartitionNumber">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="STORAGE_DEVICE_NUMBER">
      <struct name="_STORAGE_DEVICE_NUMBER" />
    </typedef>
    <typedef name="PSTORAGE_DEVICE_NUMBER">
      <ptr>
        <struct name="_STORAGE_DEVICE_NUMBER" />
      </ptr>
    </typedef>
    <struct name="_STORAGE_BUS_RESET_REQUEST">
      <field offset="0" name="PathId">
        <type>BYTE</type>
      </field>
    </struct>
    <typedef name="STORAGE_BUS_RESET_REQUEST">
      <struct name="_STORAGE_BUS_RESET_REQUEST" />
    </typedef>
    <typedef name="PSTORAGE_BUS_RESET_REQUEST">
      <ptr>
        <struct name="_STORAGE_BUS_RESET_REQUEST" />
      </ptr>
    </typedef>
    <struct name="STORAGE_BREAK_RESERVATION_REQUEST">
      <field offset="0" name="Length">
        <type>DWORD</type>
      </field>
      <field offset="4" name="_unused">
        <type>BYTE</type>
      </field>
      <field offset="5" name="PathId">
        <type>BYTE</type>
      </field>
      <field offset="6" name="TargetId">
        <type>BYTE</type>
      </field>
      <field offset="7" name="Lun">
        <type>BYTE</type>
      </field>
    </struct>
    <typedef name="STORAGE_BREAK_RESERVATION_REQUEST">
      <struct name="STORAGE_BREAK_RESERVATION_REQUEST" />
    </typedef>
    <typedef name="PSTORAGE_BREAK_RESERVATION_REQUEST">
      <ptr>
        <struct name="STORAGE_BREAK_RESERVATION_REQUEST" />
      </ptr>
    </typedef>
    <struct name="_PREVENT_MEDIA_REMOVAL">
      <field offset="0" name="PreventMediaRemoval">
        <type>BOOLEAN</type>
      </field>
    </struct>
    <typedef name="PREVENT_MEDIA_REMOVAL">
      <struct name="_PREVENT_MEDIA_REMOVAL" />
    </typedef>
    <typedef name="PPREVENT_MEDIA_REMOVAL">
      <ptr>
        <struct name="_PREVENT_MEDIA_REMOVAL" />
      </ptr>
    </typedef>
    <struct name="_CLASS_MEDIA_CHANGE_CONTEXT">
      <field offset="0" name="MediaChangeCount">
        <type>DWORD</type>
      </field>
      <field offset="4" name="NewState">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CLASS_MEDIA_CHANGE_CONTEXT">
      <struct name="_CLASS_MEDIA_CHANGE_CONTEXT" />
    </typedef>
    <typedef name="PCLASS_MEDIA_CHANGE_CONTEXT">
      <ptr>
        <struct name="_CLASS_MEDIA_CHANGE_CONTEXT" />
      </ptr>
    </typedef>
    <struct name="_TAPE_STATISTICS">
      <field offset="0" name="Version">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="RecoveredWrites">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="16" name="UnrecoveredWrites">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="24" name="RecoveredReads">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="32" name="UnrecoveredReads">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="40" name="CompressionRatioReads">
        <type>BYTE</type>
      </field>
      <field offset="41" name="CompressionRatioWrites">
        <type>BYTE</type>
      </field>
    </struct>
    <typedef name="TAPE_STATISTICS">
      <struct name="_TAPE_STATISTICS" />
    </typedef>
    <typedef name="PTAPE_STATISTICS">
      <ptr>
        <struct name="_TAPE_STATISTICS" />
      </ptr>
    </typedef>
    <struct name="_TAPE_GET_STATISTICS">
      <field offset="0" name="Operation">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="TAPE_GET_STATISTICS">
      <struct name="_TAPE_GET_STATISTICS" />
    </typedef>
    <typedef name="PTAPE_GET_STATISTICS">
      <ptr>
        <struct name="_TAPE_GET_STATISTICS" />
      </ptr>
    </typedef>
    <enum name="_STORAGE_MEDIA_TYPE">
      <member name="DDS_4mm" value="32" />
      <member name="MiniQic" value="33" />
      <member name="Travan" value="34" />
      <member name="QIC" value="35" />
      <member name="MP_8mm" value="36" />
      <member name="AME_8mm" value="37" />
      <member name="AIT1_8mm" value="38" />
      <member name="DLT" value="39" />
      <member name="NCTP" value="40" />
      <member name="IBM_3480" value="41" />
      <member name="IBM_3490E" value="42" />
      <member name="IBM_Magstar_3590" value="43" />
      <member name="IBM_Magstar_MP" value="44" />
      <member name="STK_DATA_D3" value="45" />
      <member name="SONY_DTF" value="46" />
      <member name="DV_6mm" value="47" />
      <member name="DMI" value="48" />
      <member name="SONY_D2" value="49" />
      <member name="CLEANER_CARTRIDGE" value="50" />
      <member name="CD_ROM" value="51" />
      <member name="CD_R" value="52" />
      <member name="CD_RW" value="53" />
      <member name="DVD_ROM" value="54" />
      <member name="DVD_R" value="55" />
      <member name="DVD_RW" value="56" />
      <member name="MO_3_RW" value="57" />
      <member name="MO_5_WO" value="58" />
      <member name="MO_5_RW" value="59" />
      <member name="MO_5_LIMDOW" value="60" />
      <member name="PC_5_WO" value="61" />
      <member name="PC_5_RW" value="62" />
      <member name="PD_5_RW" value="63" />
      <member name="ABL_5_WO" value="64" />
      <member name="PINNACLE_APEX_5_RW" value="65" />
      <member name="SONY_12_WO" value="66" />
      <member name="PHILIPS_12_WO" value="67" />
      <member name="HITACHI_12_WO" value="68" />
      <member name="CYGNET_12_WO" value="69" />
      <member name="KODAK_14_WO" value="70" />
      <member name="MO_NFR_525" value="71" />
      <member name="NIKON_12_RW" value="72" />
      <member name="IOMEGA_ZIP" value="73" />
      <member name="IOMEGA_JAZ" value="74" />
      <member name="SYQUEST_EZ135" value="75" />
      <member name="SYQUEST_EZFLYER" value="76" />
      <member name="SYQUEST_SYJET" value="77" />
      <member name="AVATAR_F2" value="78" />
      <member name="MP2_8mm" value="79" />
      <member name="DST_S" value="80" />
      <member name="DST_M" value="81" />
      <member name="DST_L" value="82" />
      <member name="VXATape_1" value="83" />
      <member name="VXATape_2" value="84" />
      <member name="STK_9840" value="85" />
      <member name="LTO_Ultrium" value="86" />
      <member name="LTO_Accelis" value="87" />
      <member name="DVD_RAM" value="88" />
      <member name="AIT_8mm" value="89" />
      <member name="ADR_1" value="90" />
      <member name="ADR_2" value="91" />
      <member name="STK_9940" value="92" />
      <member name="SAIT" value="93" />
      <member name="VXATape" value="94" />
    </enum>
    <typedef name="STORAGE_MEDIA_TYPE">
      <enum name="_STORAGE_MEDIA_TYPE" />
    </typedef>
    <typedef name="PSTORAGE_MEDIA_TYPE">
      <ptr>
        <enum name="_STORAGE_MEDIA_TYPE" />
      </ptr>
    </typedef>
    <enum name="_STORAGE_BUS_TYPE">
      <member name="BusTypeUnknown" value="0" />
      <member name="BusTypeScsi" value="1" />
      <member name="BusTypeAtapi" value="2" />
      <member name="BusTypeAta" value="3" />
      <member name="BusType1394" value="4" />
      <member name="BusTypeSsa" value="5" />
      <member name="BusTypeFibre" value="6" />
      <member name="BusTypeUsb" value="7" />
      <member name="BusTypeRAID" value="8" />
      <member name="BusTypeiScsi" value="9" />
      <member name="BusTypeSas" value="10" />
      <member name="BusTypeSata" value="11" />
      <member name="BusTypeSd" value="12" />
      <member name="BusTypeMmc" value="13" />
      <member name="BusTypeVirtual" value="14" />
      <member name="BusTypeFileBackedVirtual" value="15" />
      <member name="BusTypeMax" value="16" />
      <member name="BusTypeMaxReserved" value="127" />
    </enum>
    <typedef name="STORAGE_BUS_TYPE">
      <enum name="_STORAGE_BUS_TYPE" />
    </typedef>
    <typedef name="PSTORAGE_BUS_TYPE">
      <ptr>
        <enum name="_STORAGE_BUS_TYPE" />
      </ptr>
    </typedef>
    <struct name="struct_116">
      <field offset="0" name="Cylinders">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="8" name="MediaType">
        <type>STORAGE_MEDIA_TYPE</type>
      </field>
      <field offset="12" name="TracksPerCylinder">
        <type>DWORD</type>
      </field>
      <field offset="16" name="SectorsPerTrack">
        <type>DWORD</type>
      </field>
      <field offset="20" name="BytesPerSector">
        <type>DWORD</type>
      </field>
      <field offset="24" name="NumberMediaSides">
        <type>DWORD</type>
      </field>
      <field offset="28" name="MediaCharacteristics">
        <type>DWORD</type>
      </field>
    </struct>
    <struct name="struct_117">
      <field offset="0" name="Cylinders">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="8" name="MediaType">
        <type>STORAGE_MEDIA_TYPE</type>
      </field>
      <field offset="12" name="TracksPerCylinder">
        <type>DWORD</type>
      </field>
      <field offset="16" name="SectorsPerTrack">
        <type>DWORD</type>
      </field>
      <field offset="20" name="BytesPerSector">
        <type>DWORD</type>
      </field>
      <field offset="24" name="NumberMediaSides">
        <type>DWORD</type>
      </field>
      <field offset="28" name="MediaCharacteristics">
        <type>DWORD</type>
      </field>
    </struct>
    <struct name="struct_119">
      <field offset="0" name="MediumType">
        <type>BYTE</type>
      </field>
      <field offset="1" name="DensityCode">
        <type>BYTE</type>
      </field>
    </struct>
    <struct name="struct_118">
      <field offset="0" name="MediaType">
        <type>STORAGE_MEDIA_TYPE</type>
      </field>
      <field offset="4" name="MediaCharacteristics">
        <type>DWORD</type>
      </field>
      <field offset="8" name="CurrentBlockSize">
        <type>DWORD</type>
      </field>
      <field offset="12" name="BusType">
        <type>STORAGE_BUS_TYPE</type>
      </field>
      <field offset="16" name="BusSpecificData">
        <union>
          <alt name="ScsiInformation">
            <struct name="struct_119" />
          </alt>
        </union>
      </field>
    </struct>
    <struct name="_DEVICE_MEDIA_INFO">
      <field offset="0" name="DeviceSpecific">
        <union>
          <alt name="DiskInfo">
            <struct name="struct_116" />
          </alt>
          <alt name="RemovableDiskInfo">
            <struct name="struct_117" />
          </alt>
          <alt name="TapeInfo">
            <struct name="struct_118" />
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="DEVICE_MEDIA_INFO">
      <struct name="_DEVICE_MEDIA_INFO" />
    </typedef>
    <typedef name="PDEVICE_MEDIA_INFO">
      <ptr>
        <struct name="_DEVICE_MEDIA_INFO" />
      </ptr>
    </typedef>
    <struct name="_GET_MEDIA_TYPES">
      <field offset="0" name="DeviceType">
        <type>DWORD</type>
      </field>
      <field offset="4" name="MediaInfoCount">
        <type>DWORD</type>
      </field>
      <field offset="8" name="MediaInfo">
        <arr length="1">
          <type>DEVICE_MEDIA_INFO</type>
        </arr>
      </field>
    </struct>
    <typedef name="GET_MEDIA_TYPES">
      <struct name="_GET_MEDIA_TYPES" />
    </typedef>
    <typedef name="PGET_MEDIA_TYPES">
      <ptr>
        <struct name="_GET_MEDIA_TYPES" />
      </ptr>
    </typedef>
    <struct name="_STORAGE_PREDICT_FAILURE">
      <field offset="0" name="PredictFailure">
        <type>DWORD</type>
      </field>
      <field offset="8" name="VendorSpecific">
        <arr length="512">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="STORAGE_PREDICT_FAILURE">
      <struct name="_STORAGE_PREDICT_FAILURE" />
    </typedef>
    <typedef name="PSTORAGE_PREDICT_FAILURE">
      <ptr>
        <struct name="_STORAGE_PREDICT_FAILURE" />
      </ptr>
    </typedef>
    <enum name="_STORAGE_QUERY_TYPE">
      <member name="PropertyStandardQuery" value="0" />
      <member name="PropertyExistsQuery" value="1" />
      <member name="PropertyMaskQuery" value="2" />
      <member name="PropertyQueryMaxDefined" value="3" />
    </enum>
    <typedef name="STORAGE_QUERY_TYPE">
      <enum name="_STORAGE_QUERY_TYPE" />
    </typedef>
    <typedef name="PSTORAGE_QUERY_TYPE">
      <ptr>
        <enum name="_STORAGE_QUERY_TYPE" />
      </ptr>
    </typedef>
    <enum name="_STORAGE_PROPERTY_ID">
      <member name="StorageDeviceProperty" value="0" />
      <member name="StorageAdapterProperty" value="1" />
      <member name="StorageDeviceIdProperty" value="2" />
      <member name="StorageDeviceUniqueIdProperty" value="3" />
      <member name="StorageDeviceWriteCacheProperty" value="4" />
      <member name="StorageMiniportProperty" value="5" />
      <member name="StorageAccessAlignmentProperty" value="6" />
      <member name="StorageDeviceSeekPenaltyProperty" value="7" />
      <member name="StorageDeviceTrimProperty" value="8" />
      <member name="StorageDeviceWriteAggregationProperty" value="9" />
    </enum>
    <typedef name="STORAGE_PROPERTY_ID">
      <enum name="_STORAGE_PROPERTY_ID" />
    </typedef>
    <typedef name="PSTORAGE_PROPERTY_ID">
      <ptr>
        <enum name="_STORAGE_PROPERTY_ID" />
      </ptr>
    </typedef>
    <struct name="_STORAGE_PROPERTY_QUERY">
      <field offset="0" name="PropertyId">
        <type>STORAGE_PROPERTY_ID</type>
      </field>
      <field offset="4" name="QueryType">
        <type>STORAGE_QUERY_TYPE</type>
      </field>
      <field offset="8" name="AdditionalParameters">
        <arr length="1">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="STORAGE_PROPERTY_QUERY">
      <struct name="_STORAGE_PROPERTY_QUERY" />
    </typedef>
    <typedef name="PSTORAGE_PROPERTY_QUERY">
      <ptr>
        <struct name="_STORAGE_PROPERTY_QUERY" />
      </ptr>
    </typedef>
    <struct name="_STORAGE_DESCRIPTOR_HEADER">
      <field offset="0" name="Version">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Size">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="STORAGE_DESCRIPTOR_HEADER">
      <struct name="_STORAGE_DESCRIPTOR_HEADER" />
    </typedef>
    <typedef name="PSTORAGE_DESCRIPTOR_HEADER">
      <ptr>
        <struct name="_STORAGE_DESCRIPTOR_HEADER" />
      </ptr>
    </typedef>
    <struct name="_STORAGE_DEVICE_DESCRIPTOR">
      <field offset="0" name="Version">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Size">
        <type>DWORD</type>
      </field>
      <field offset="8" name="DeviceType">
        <type>BYTE</type>
      </field>
      <field offset="9" name="DeviceTypeModifier">
        <type>BYTE</type>
      </field>
      <field offset="10" name="RemovableMedia">
        <type>BOOLEAN</type>
      </field>
      <field offset="11" name="CommandQueueing">
        <type>BOOLEAN</type>
      </field>
      <field offset="12" name="VendorIdOffset">
        <type>DWORD</type>
      </field>
      <field offset="16" name="ProductIdOffset">
        <type>DWORD</type>
      </field>
      <field offset="20" name="ProductRevisionOffset">
        <type>DWORD</type>
      </field>
      <field offset="24" name="SerialNumberOffset">
        <type>DWORD</type>
      </field>
      <field offset="28" name="BusType">
        <type>STORAGE_BUS_TYPE</type>
      </field>
      <field offset="32" name="RawPropertiesLength">
        <type>DWORD</type>
      </field>
      <field offset="36" name="RawDeviceProperties">
        <arr length="1">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="STORAGE_DEVICE_DESCRIPTOR">
      <struct name="_STORAGE_DEVICE_DESCRIPTOR" />
    </typedef>
    <typedef name="PSTORAGE_DEVICE_DESCRIPTOR">
      <ptr>
        <struct name="_STORAGE_DEVICE_DESCRIPTOR" />
      </ptr>
    </typedef>
    <struct name="_STORAGE_ADAPTER_DESCRIPTOR">
      <field offset="0" name="Version">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Size">
        <type>DWORD</type>
      </field>
      <field offset="8" name="MaximumTransferLength">
        <type>DWORD</type>
      </field>
      <field offset="12" name="MaximumPhysicalPages">
        <type>DWORD</type>
      </field>
      <field offset="16" name="AlignmentMask">
        <type>DWORD</type>
      </field>
      <field offset="20" name="AdapterUsesPio">
        <type>BOOLEAN</type>
      </field>
      <field offset="21" name="AdapterScansDown">
        <type>BOOLEAN</type>
      </field>
      <field offset="22" name="CommandQueueing">
        <type>BOOLEAN</type>
      </field>
      <field offset="23" name="AcceleratedTransfer">
        <type>BOOLEAN</type>
      </field>
      <field offset="24" name="BusType">
        <type>BYTE</type>
      </field>
      <field offset="26" name="BusMajorVersion">
        <type>WORD</type>
      </field>
      <field offset="28" name="BusMinorVersion">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="STORAGE_ADAPTER_DESCRIPTOR">
      <struct name="_STORAGE_ADAPTER_DESCRIPTOR" />
    </typedef>
    <typedef name="PSTORAGE_ADAPTER_DESCRIPTOR">
      <ptr>
        <struct name="_STORAGE_ADAPTER_DESCRIPTOR" />
      </ptr>
    </typedef>
    <struct name="_STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR">
      <field offset="0" name="Version">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Size">
        <type>DWORD</type>
      </field>
      <field offset="8" name="BytesPerCacheLine">
        <type>DWORD</type>
      </field>
      <field offset="12" name="BytesOffsetForCacheAlignment">
        <type>DWORD</type>
      </field>
      <field offset="16" name="BytesPerLogicalSector">
        <type>DWORD</type>
      </field>
      <field offset="20" name="BytesPerPhysicalSector">
        <type>DWORD</type>
      </field>
      <field offset="24" name="BytesOffsetForSectorAlignment">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR">
      <struct name="_STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR" />
    </typedef>
    <typedef name="PSTORAGE_ACCESS_ALIGNMENT_DESCRIPTOR">
      <ptr>
        <struct name="_STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR" />
      </ptr>
    </typedef>
    <enum name="_STORAGE_PORT_CODE_SET">
      <member name="StoragePortCodeSetReserved" value="0" />
      <member name="StoragePortCodeSetStorport" value="1" />
      <member name="StoragePortCodeSetSCSIport" value="2" />
    </enum>
    <typedef name="STORAGE_PORT_CODE_SET">
      <enum name="_STORAGE_PORT_CODE_SET" />
    </typedef>
    <typedef name="PSTORAGE_PORT_CODE_SET">
      <ptr>
        <enum name="_STORAGE_PORT_CODE_SET" />
      </ptr>
    </typedef>
    <struct name="_STORAGE_MINIPORT_DESCRIPTOR">
      <field offset="0" name="Version">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Size">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Portdriver">
        <type>STORAGE_PORT_CODE_SET</type>
      </field>
      <field offset="12" name="LUNResetSupported">
        <type>BOOLEAN</type>
      </field>
      <field offset="13" name="TargetResetSupported">
        <type>BOOLEAN</type>
      </field>
    </struct>
    <typedef name="STORAGE_MINIPORT_DESCRIPTOR">
      <struct name="_STORAGE_MINIPORT_DESCRIPTOR" />
    </typedef>
    <typedef name="PSTORAGE_MINIPORT_DESCRIPTOR">
      <ptr>
        <struct name="_STORAGE_MINIPORT_DESCRIPTOR" />
      </ptr>
    </typedef>
    <enum name="_STORAGE_IDENTIFIER_CODE_SET">
      <member name="StorageIdCodeSetReserved" value="0" />
      <member name="StorageIdCodeSetBinary" value="1" />
      <member name="StorageIdCodeSetAscii" value="2" />
      <member name="StorageIdCodeSetUtf8" value="3" />
    </enum>
    <typedef name="STORAGE_IDENTIFIER_CODE_SET">
      <enum name="_STORAGE_IDENTIFIER_CODE_SET" />
    </typedef>
    <typedef name="PSTORAGE_IDENTIFIER_CODE_SET">
      <ptr>
        <enum name="_STORAGE_IDENTIFIER_CODE_SET" />
      </ptr>
    </typedef>
    <enum name="_STORAGE_IDENTIFIER_TYPE">
      <member name="StorageIdTypeVendorSpecific" value="0" />
      <member name="StorageIdTypeVendorId" value="1" />
      <member name="StorageIdTypeEUI64" value="2" />
      <member name="StorageIdTypeFCPHName" value="3" />
      <member name="StorageIdTypePortRelative" value="4" />
      <member name="StorageIdTypeTargetPortGroup" value="5" />
      <member name="StorageIdTypeLogicalUnitGroup" value="6" />
      <member name="StorageIdTypeMD5LogicalUnitIdentifier" value="7" />
      <member name="StorageIdTypeScsiNameString" value="8" />
    </enum>
    <typedef name="STORAGE_IDENTIFIER_TYPE">
      <enum name="_STORAGE_IDENTIFIER_TYPE" />
    </typedef>
    <typedef name="PSTORAGE_IDENTIFIER_TYPE">
      <ptr>
        <enum name="_STORAGE_IDENTIFIER_TYPE" />
      </ptr>
    </typedef>
    <enum name="_STORAGE_ID_NAA_FORMAT">
      <member name="StorageIdNAAFormatIEEEExtended" value="2" />
      <member name="StorageIdNAAFormatIEEERegistered" value="3" />
      <member name="StorageIdNAAFormatIEEEERegisteredExtended" value="5" />
    </enum>
    <typedef name="STORAGE_ID_NAA_FORMAT">
      <enum name="_STORAGE_ID_NAA_FORMAT" />
    </typedef>
    <typedef name="PSTORAGE_ID_NAA_FORMAT">
      <ptr>
        <enum name="_STORAGE_ID_NAA_FORMAT" />
      </ptr>
    </typedef>
    <enum name="_STORAGE_ASSOCIATION_TYPE">
      <member name="StorageIdAssocDevice" value="0" />
      <member name="StorageIdAssocPort" value="1" />
      <member name="StorageIdAssocTarget" value="2" />
    </enum>
    <typedef name="STORAGE_ASSOCIATION_TYPE">
      <enum name="_STORAGE_ASSOCIATION_TYPE" />
    </typedef>
    <typedef name="PSTORAGE_ASSOCIATION_TYPE">
      <ptr>
        <enum name="_STORAGE_ASSOCIATION_TYPE" />
      </ptr>
    </typedef>
    <struct name="_STORAGE_IDENTIFIER">
      <field offset="0" name="CodeSet">
        <type>STORAGE_IDENTIFIER_CODE_SET</type>
      </field>
      <field offset="4" name="Type">
        <type>STORAGE_IDENTIFIER_TYPE</type>
      </field>
      <field offset="8" name="IdentifierSize">
        <type>WORD</type>
      </field>
      <field offset="10" name="NextOffset">
        <type>WORD</type>
      </field>
      <field offset="12" name="Association">
        <type>STORAGE_ASSOCIATION_TYPE</type>
      </field>
      <field offset="16" name="Identifier">
        <arr length="1">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="STORAGE_IDENTIFIER">
      <struct name="_STORAGE_IDENTIFIER" />
    </typedef>
    <typedef name="PSTORAGE_IDENTIFIER">
      <ptr>
        <struct name="_STORAGE_IDENTIFIER" />
      </ptr>
    </typedef>
    <struct name="_STORAGE_DEVICE_ID_DESCRIPTOR">
      <field offset="0" name="Version">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Size">
        <type>DWORD</type>
      </field>
      <field offset="8" name="NumberOfIdentifiers">
        <type>DWORD</type>
      </field>
      <field offset="12" name="Identifiers">
        <arr length="1">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="STORAGE_DEVICE_ID_DESCRIPTOR">
      <struct name="_STORAGE_DEVICE_ID_DESCRIPTOR" />
    </typedef>
    <typedef name="PSTORAGE_DEVICE_ID_DESCRIPTOR">
      <ptr>
        <struct name="_STORAGE_DEVICE_ID_DESCRIPTOR" />
      </ptr>
    </typedef>
    <struct name="_DEVICE_SEEK_PENALTY_DESCRIPTOR">
      <field offset="0" name="Version">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Size">
        <type>DWORD</type>
      </field>
      <field offset="8" name="IncursSeekPenalty">
        <type>BOOLEAN</type>
      </field>
    </struct>
    <typedef name="DEVICE_SEEK_PENALTY_DESCRIPTOR">
      <struct name="_DEVICE_SEEK_PENALTY_DESCRIPTOR" />
    </typedef>
    <typedef name="PDEVICE_SEEK_PENALTY_DESCRIPTOR">
      <ptr>
        <struct name="_DEVICE_SEEK_PENALTY_DESCRIPTOR" />
      </ptr>
    </typedef>
    <struct name="_DEVICE_WRITE_AGGREGATION_DESCRIPTOR">
      <field offset="0" name="Version">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Size">
        <type>DWORD</type>
      </field>
      <field offset="8" name="BenefitsFromWriteAggregation">
        <type>BOOLEAN</type>
      </field>
    </struct>
    <typedef name="DEVICE_WRITE_AGGREGATION_DESCRIPTOR">
      <struct name="_DEVICE_WRITE_AGGREGATION_DESCRIPTOR" />
    </typedef>
    <typedef name="PDEVICE_WRITE_AGGREGATION_DESCRIPTOR">
      <ptr>
        <struct name="_DEVICE_WRITE_AGGREGATION_DESCRIPTOR" />
      </ptr>
    </typedef>
    <struct name="_DEVICE_TRIM_DESCRIPTOR">
      <field offset="0" name="Version">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Size">
        <type>DWORD</type>
      </field>
      <field offset="8" name="TrimEnabled">
        <type>BOOLEAN</type>
      </field>
    </struct>
    <typedef name="DEVICE_TRIM_DESCRIPTOR">
      <struct name="_DEVICE_TRIM_DESCRIPTOR" />
    </typedef>
    <typedef name="PDEVICE_TRIM_DESCRIPTOR">
      <ptr>
        <struct name="_DEVICE_TRIM_DESCRIPTOR" />
      </ptr>
    </typedef>
    <typedef name="DEVICE_DATA_MANAGEMENT_SET_ACTION">
      <type>DWORD</type>
    </typedef>
    <struct name="_DEVICE_DATA_SET_RANGE">
      <field offset="0" name="StartingOffset">
        <type>LONGLONG</type>
      </field>
      <field offset="8" name="LengthInBytes">
        <type>DWORDLONG</type>
      </field>
    </struct>
    <typedef name="DEVICE_DATA_SET_RANGE">
      <struct name="_DEVICE_DATA_SET_RANGE" />
    </typedef>
    <typedef name="PDEVICE_DATA_SET_RANGE">
      <ptr>
        <struct name="_DEVICE_DATA_SET_RANGE" />
      </ptr>
    </typedef>
    <struct name="_DEVICE_MANAGE_DATA_SET_ATTRIBUTES">
      <field offset="0" name="Size">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Action">
        <type>DEVICE_DATA_MANAGEMENT_SET_ACTION</type>
      </field>
      <field offset="8" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="12" name="ParameterBlockOffset">
        <type>DWORD</type>
      </field>
      <field offset="16" name="ParameterBlockLength">
        <type>DWORD</type>
      </field>
      <field offset="20" name="DataSetRangesOffset">
        <type>DWORD</type>
      </field>
      <field offset="24" name="DataSetRangesLength">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="DEVICE_MANAGE_DATA_SET_ATTRIBUTES">
      <struct name="_DEVICE_MANAGE_DATA_SET_ATTRIBUTES" />
    </typedef>
    <typedef name="PDEVICE_MANAGE_DATA_SET_ATTRIBUTES">
      <ptr>
        <struct name="_DEVICE_MANAGE_DATA_SET_ATTRIBUTES" />
      </ptr>
    </typedef>
    <struct name="_DEVICE_DSM_NOTIFICATION_PARAMETERS">
      <field offset="0" name="Size">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="NumFileTypeIDs">
        <type>DWORD</type>
      </field>
      <field offset="16" name="FileTypeID">
        <arr length="1">
          <type>GUID</type>
        </arr>
      </field>
    </struct>
    <typedef name="DEVICE_DSM_NOTIFICATION_PARAMETERS">
      <struct name="_DEVICE_DSM_NOTIFICATION_PARAMETERS" />
    </typedef>
    <typedef name="PDEVICE_DSM_NOTIFICATION_PARAMETERS">
      <ptr>
        <struct name="_DEVICE_DSM_NOTIFICATION_PARAMETERS" />
      </ptr>
    </typedef>
    <struct name="_STORAGE_GET_BC_PROPERTIES_OUTPUT">
      <field offset="0" name="MaximumRequestsPerPeriod">
        <type>DWORD</type>
      </field>
      <field offset="4" name="MinimumPeriod">
        <type>DWORD</type>
      </field>
      <field offset="8" name="MaximumRequestSize">
        <type>DWORDLONG</type>
      </field>
      <field offset="16" name="EstimatedTimePerRequest">
        <type>DWORD</type>
      </field>
      <field offset="20" name="NumOutStandingRequests">
        <type>DWORD</type>
      </field>
      <field offset="24" name="RequestSize">
        <type>DWORDLONG</type>
      </field>
    </struct>
    <typedef name="STORAGE_GET_BC_PROPERTIES_OUTPUT">
      <struct name="_STORAGE_GET_BC_PROPERTIES_OUTPUT" />
    </typedef>
    <typedef name="PSTORAGE_GET_BC_PROPERTIES_OUTPUT">
      <ptr>
        <struct name="_STORAGE_GET_BC_PROPERTIES_OUTPUT" />
      </ptr>
    </typedef>
    <struct name="_STORAGE_ALLOCATE_BC_STREAM_INPUT">
      <field offset="0" name="Version">
        <type>DWORD</type>
      </field>
      <field offset="4" name="RequestsPerPeriod">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Period">
        <type>DWORD</type>
      </field>
      <field offset="12" name="RetryFailures">
        <type>BOOLEAN</type>
      </field>
      <field offset="13" name="Discardable">
        <type>BOOLEAN</type>
      </field>
      <field offset="14" name="Reserved1">
        <arr length="2">
          <type>BOOLEAN</type>
        </arr>
      </field>
      <field offset="16" name="AccessType">
        <type>DWORD</type>
      </field>
      <field offset="20" name="AccessMode">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="STORAGE_ALLOCATE_BC_STREAM_INPUT">
      <struct name="_STORAGE_ALLOCATE_BC_STREAM_INPUT" />
    </typedef>
    <typedef name="PSTORAGE_ALLOCATE_BC_STREAM_INPUT">
      <ptr>
        <struct name="_STORAGE_ALLOCATE_BC_STREAM_INPUT" />
      </ptr>
    </typedef>
    <struct name="_STORAGE_ALLOCATE_BC_STREAM_OUTPUT">
      <field offset="0" name="RequestSize">
        <type>DWORDLONG</type>
      </field>
      <field offset="8" name="NumOutStandingRequests">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="STORAGE_ALLOCATE_BC_STREAM_OUTPUT">
      <struct name="_STORAGE_ALLOCATE_BC_STREAM_OUTPUT" />
    </typedef>
    <typedef name="PSTORAGE_ALLOCATE_BC_STREAM_OUTPUT">
      <ptr>
        <struct name="_STORAGE_ALLOCATE_BC_STREAM_OUTPUT" />
      </ptr>
    </typedef>
    <struct name="_STORAGE_PRIORITY_HINT_SUPPORT">
      <field offset="0" name="SupportFlags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="STORAGE_PRIORITY_HINT_SUPPORT">
      <struct name="_STORAGE_PRIORITY_HINT_SUPPORT" />
    </typedef>
    <typedef name="PSTORAGE_PRIORITY_HINT_SUPPORT">
      <ptr>
        <struct name="_STORAGE_PRIORITY_HINT_SUPPORT" />
      </ptr>
    </typedef>
    <struct name="_STORAGE_MEDIA_SERIAL_NUMBER_DATA">
      <field offset="0" name="Reserved">
        <type>WORD</type>
      </field>
      <field offset="2" name="SerialNumberLength">
        <type>WORD</type>
      </field>
      <field offset="8" name="SerialNumber">
        <arr length="0">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="STORAGE_MEDIA_SERIAL_NUMBER_DATA">
      <struct name="_STORAGE_MEDIA_SERIAL_NUMBER_DATA" />
    </typedef>
    <typedef name="PSTORAGE_MEDIA_SERIAL_NUMBER_DATA">
      <ptr>
        <struct name="_STORAGE_MEDIA_SERIAL_NUMBER_DATA" />
      </ptr>
    </typedef>
    <struct name="_STORAGE_READ_CAPACITY">
      <field offset="0" name="Version">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Size">
        <type>DWORD</type>
      </field>
      <field offset="8" name="BlockLength">
        <type>DWORD</type>
      </field>
      <field offset="16" name="NumberOfBlocks">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="24" name="DiskLength">
        <type>LARGE_INTEGER</type>
      </field>
    </struct>
    <typedef name="STORAGE_READ_CAPACITY">
      <struct name="_STORAGE_READ_CAPACITY" />
    </typedef>
    <typedef name="PSTORAGE_READ_CAPACITY">
      <ptr>
        <struct name="_STORAGE_READ_CAPACITY" />
      </ptr>
    </typedef>
    <enum name="_WRITE_CACHE_TYPE">
      <member name="WriteCacheTypeUnknown" value="0" />
      <member name="WriteCacheTypeNone" value="1" />
      <member name="WriteCacheTypeWriteBack" value="2" />
      <member name="WriteCacheTypeWriteThrough" value="3" />
    </enum>
    <typedef name="WRITE_CACHE_TYPE">
      <enum name="_WRITE_CACHE_TYPE" />
    </typedef>
    <enum name="_WRITE_CACHE_ENABLE">
      <member name="WriteCacheEnableUnknown" value="0" />
      <member name="WriteCacheDisabled" value="1" />
      <member name="WriteCacheEnabled" value="2" />
    </enum>
    <typedef name="WRITE_CACHE_ENABLE">
      <enum name="_WRITE_CACHE_ENABLE" />
    </typedef>
    <enum name="_WRITE_CACHE_CHANGE">
      <member name="WriteCacheChangeUnknown" value="0" />
      <member name="WriteCacheNotChangeable" value="1" />
      <member name="WriteCacheChangeable" value="2" />
    </enum>
    <typedef name="WRITE_CACHE_CHANGE">
      <enum name="_WRITE_CACHE_CHANGE" />
    </typedef>
    <enum name="_WRITE_THROUGH">
      <member name="WriteThroughUnknown" value="0" />
      <member name="WriteThroughNotSupported" value="1" />
      <member name="WriteThroughSupported" value="2" />
    </enum>
    <typedef name="WRITE_THROUGH">
      <enum name="_WRITE_THROUGH" />
    </typedef>
    <struct name="_STORAGE_WRITE_CACHE_PROPERTY">
      <field offset="0" name="Version">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Size">
        <type>DWORD</type>
      </field>
      <field offset="8" name="WriteCacheType">
        <type>WRITE_CACHE_TYPE</type>
      </field>
      <field offset="12" name="WriteCacheEnabled">
        <type>WRITE_CACHE_ENABLE</type>
      </field>
      <field offset="16" name="WriteCacheChangeable">
        <type>WRITE_CACHE_CHANGE</type>
      </field>
      <field offset="20" name="WriteThroughSupported">
        <type>WRITE_THROUGH</type>
      </field>
      <field offset="24" name="FlushCacheSupported">
        <type>BOOLEAN</type>
      </field>
      <field offset="25" name="UserDefinedPowerProtection">
        <type>BOOLEAN</type>
      </field>
      <field offset="26" name="NVCacheEnabled">
        <type>BOOLEAN</type>
      </field>
    </struct>
    <typedef name="STORAGE_WRITE_CACHE_PROPERTY">
      <struct name="_STORAGE_WRITE_CACHE_PROPERTY" />
    </typedef>
    <typedef name="PSTORAGE_WRITE_CACHE_PROPERTY">
      <ptr>
        <struct name="_STORAGE_WRITE_CACHE_PROPERTY" />
      </ptr>
    </typedef>
    <struct name="struct_120">
      <field offset="0" name="ServiceAction">
        <type>BYTE</type>
      </field>
      <field offset="1" name="Reserved1">
        <type>BYTE</type>
      </field>
      <field offset="2" name="AllocationLength">
        <type>WORD</type>
      </field>
    </struct>
    <struct name="struct_121">
      <field offset="0" name="ServiceAction">
        <type>BYTE</type>
      </field>
      <field offset="1" name="Reserved1">
        <type>BYTE</type>
      </field>
      <field offset="2" name="Type">
        <type>BYTE</type>
      </field>
      <field offset="3" name="Scope">
        <type>BYTE</type>
      </field>
      <field offset="8" name="ParameterList">
        <arr length="0">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <struct name="_PERSISTENT_RESERVE_COMMAND">
      <field offset="0" name="Version">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Size">
        <type>DWORD</type>
      </field>
      <field offset="8">
        <union>
          <alt name="PR_IN">
            <struct name="struct_120" />
          </alt>
          <alt name="PR_OUT">
            <struct name="struct_121" />
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="PERSISTENT_RESERVE_COMMAND">
      <struct name="_PERSISTENT_RESERVE_COMMAND" />
    </typedef>
    <typedef name="PPERSISTENT_RESERVE_COMMAND">
      <ptr>
        <struct name="_PERSISTENT_RESERVE_COMMAND" />
      </ptr>
    </typedef>
    <enum name="_MEDIA_TYPE">
      <member name="Unknown" value="0" />
      <member name="F5_1Pt2_512" value="1" />
      <member name="F3_1Pt44_512" value="2" />
      <member name="F3_2Pt88_512" value="3" />
      <member name="F3_20Pt8_512" value="4" />
      <member name="F3_720_512" value="5" />
      <member name="F5_360_512" value="6" />
      <member name="F5_320_512" value="7" />
      <member name="F5_320_1024" value="8" />
      <member name="F5_180_512" value="9" />
      <member name="F5_160_512" value="10" />
      <member name="RemovableMedia" value="11" />
      <member name="FixedMedia" value="12" />
      <member name="F3_120M_512" value="13" />
      <member name="F3_640_512" value="14" />
      <member name="F5_640_512" value="15" />
      <member name="F5_720_512" value="16" />
      <member name="F3_1Pt2_512" value="17" />
      <member name="F3_1Pt23_1024" value="18" />
      <member name="F5_1Pt23_1024" value="19" />
      <member name="F3_128Mb_512" value="20" />
      <member name="F3_230Mb_512" value="21" />
      <member name="F8_256_128" value="22" />
      <member name="F3_200Mb_512" value="23" />
      <member name="F3_240M_512" value="24" />
      <member name="F3_32M_512" value="25" />
    </enum>
    <typedef name="MEDIA_TYPE">
      <enum name="_MEDIA_TYPE" />
    </typedef>
    <typedef name="PMEDIA_TYPE">
      <ptr>
        <enum name="_MEDIA_TYPE" />
      </ptr>
    </typedef>
    <struct name="_FORMAT_PARAMETERS">
      <field offset="0" name="MediaType">
        <type>MEDIA_TYPE</type>
      </field>
      <field offset="4" name="StartCylinderNumber">
        <type>DWORD</type>
      </field>
      <field offset="8" name="EndCylinderNumber">
        <type>DWORD</type>
      </field>
      <field offset="12" name="StartHeadNumber">
        <type>DWORD</type>
      </field>
      <field offset="16" name="EndHeadNumber">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="FORMAT_PARAMETERS">
      <struct name="_FORMAT_PARAMETERS" />
    </typedef>
    <typedef name="PFORMAT_PARAMETERS">
      <ptr>
        <struct name="_FORMAT_PARAMETERS" />
      </ptr>
    </typedef>
    <typedef name="BAD_TRACK_NUMBER">
      <type>WORD</type>
    </typedef>
    <typedef name="PBAD_TRACK_NUMBER">
      <ptr>
        <type>WORD</type>
      </ptr>
    </typedef>
    <struct name="_FORMAT_EX_PARAMETERS">
      <field offset="0" name="MediaType">
        <type>MEDIA_TYPE</type>
      </field>
      <field offset="4" name="StartCylinderNumber">
        <type>DWORD</type>
      </field>
      <field offset="8" name="EndCylinderNumber">
        <type>DWORD</type>
      </field>
      <field offset="12" name="StartHeadNumber">
        <type>DWORD</type>
      </field>
      <field offset="16" name="EndHeadNumber">
        <type>DWORD</type>
      </field>
      <field offset="20" name="FormatGapLength">
        <type>WORD</type>
      </field>
      <field offset="22" name="SectorsPerTrack">
        <type>WORD</type>
      </field>
      <field offset="24" name="SectorNumber">
        <arr length="1">
          <type>WORD</type>
        </arr>
      </field>
    </struct>
    <typedef name="FORMAT_EX_PARAMETERS">
      <struct name="_FORMAT_EX_PARAMETERS" />
    </typedef>
    <typedef name="PFORMAT_EX_PARAMETERS">
      <ptr>
        <struct name="_FORMAT_EX_PARAMETERS" />
      </ptr>
    </typedef>
    <struct name="_DISK_GEOMETRY">
      <field offset="0" name="Cylinders">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="8" name="MediaType">
        <type>MEDIA_TYPE</type>
      </field>
      <field offset="12" name="TracksPerCylinder">
        <type>DWORD</type>
      </field>
      <field offset="16" name="SectorsPerTrack">
        <type>DWORD</type>
      </field>
      <field offset="20" name="BytesPerSector">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="DISK_GEOMETRY">
      <struct name="_DISK_GEOMETRY" />
    </typedef>
    <typedef name="PDISK_GEOMETRY">
      <ptr>
        <struct name="_DISK_GEOMETRY" />
      </ptr>
    </typedef>
    <struct name="_PARTITION_INFORMATION">
      <field offset="0" name="StartingOffset">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="8" name="PartitionLength">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="16" name="HiddenSectors">
        <type>DWORD</type>
      </field>
      <field offset="20" name="PartitionNumber">
        <type>DWORD</type>
      </field>
      <field offset="24" name="PartitionType">
        <type>BYTE</type>
      </field>
      <field offset="25" name="BootIndicator">
        <type>BOOLEAN</type>
      </field>
      <field offset="26" name="RecognizedPartition">
        <type>BOOLEAN</type>
      </field>
      <field offset="27" name="RewritePartition">
        <type>BOOLEAN</type>
      </field>
    </struct>
    <typedef name="PARTITION_INFORMATION">
      <struct name="_PARTITION_INFORMATION" />
    </typedef>
    <typedef name="PPARTITION_INFORMATION">
      <ptr>
        <struct name="_PARTITION_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_SET_PARTITION_INFORMATION">
      <field offset="0" name="PartitionType">
        <type>BYTE</type>
      </field>
    </struct>
    <typedef name="SET_PARTITION_INFORMATION">
      <struct name="_SET_PARTITION_INFORMATION" />
    </typedef>
    <typedef name="PSET_PARTITION_INFORMATION">
      <ptr>
        <struct name="_SET_PARTITION_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_DRIVE_LAYOUT_INFORMATION">
      <field offset="0" name="PartitionCount">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Signature">
        <type>DWORD</type>
      </field>
      <field offset="8" name="PartitionEntry">
        <arr length="1">
          <type>PARTITION_INFORMATION</type>
        </arr>
      </field>
    </struct>
    <typedef name="DRIVE_LAYOUT_INFORMATION">
      <struct name="_DRIVE_LAYOUT_INFORMATION" />
    </typedef>
    <typedef name="PDRIVE_LAYOUT_INFORMATION">
      <ptr>
        <struct name="_DRIVE_LAYOUT_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_VERIFY_INFORMATION">
      <field offset="0" name="StartingOffset">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="8" name="Length">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="VERIFY_INFORMATION">
      <struct name="_VERIFY_INFORMATION" />
    </typedef>
    <typedef name="PVERIFY_INFORMATION">
      <ptr>
        <struct name="_VERIFY_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_REASSIGN_BLOCKS">
      <field offset="0" name="Reserved">
        <type>WORD</type>
      </field>
      <field offset="2" name="Count">
        <type>WORD</type>
      </field>
      <field offset="4" name="BlockNumber">
        <arr length="1">
          <type>DWORD</type>
        </arr>
      </field>
    </struct>
    <typedef name="REASSIGN_BLOCKS">
      <struct name="_REASSIGN_BLOCKS" />
    </typedef>
    <typedef name="PREASSIGN_BLOCKS">
      <ptr>
        <struct name="_REASSIGN_BLOCKS" />
      </ptr>
    </typedef>
    <struct name="_REASSIGN_BLOCKS_EX">
      <field offset="0" name="Reserved">
        <type>WORD</type>
      </field>
      <field offset="2" name="Count">
        <type>WORD</type>
      </field>
      <field offset="8" name="BlockNumber">
        <arr length="1">
          <type>LARGE_INTEGER</type>
        </arr>
      </field>
    </struct>
    <typedef name="REASSIGN_BLOCKS_EX">
      <struct name="_REASSIGN_BLOCKS_EX" />
    </typedef>
    <typedef name="PREASSIGN_BLOCKS_EX">
      <ptr>
        <struct name="_REASSIGN_BLOCKS_EX" />
      </ptr>
    </typedef>
    <enum name="_PARTITION_STYLE">
      <member name="PARTITION_STYLE_MBR" value="0" />
      <member name="PARTITION_STYLE_GPT" value="1" />
      <member name="PARTITION_STYLE_RAW" value="2" />
    </enum>
    <typedef name="PARTITION_STYLE">
      <enum name="_PARTITION_STYLE" />
    </typedef>
    <struct name="_PARTITION_INFORMATION_GPT">
      <field offset="0" name="PartitionType">
        <type>GUID</type>
      </field>
      <field offset="16" name="PartitionId">
        <type>GUID</type>
      </field>
      <field offset="32" name="Attributes">
        <type>DWORD64</type>
      </field>
      <field offset="40" name="Name">
        <arr length="36">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="PARTITION_INFORMATION_GPT">
      <struct name="_PARTITION_INFORMATION_GPT" />
    </typedef>
    <typedef name="PPARTITION_INFORMATION_GPT">
      <ptr>
        <struct name="_PARTITION_INFORMATION_GPT" />
      </ptr>
    </typedef>
    <struct name="_PARTITION_INFORMATION_MBR">
      <field offset="0" name="PartitionType">
        <type>BYTE</type>
      </field>
      <field offset="1" name="BootIndicator">
        <type>BOOLEAN</type>
      </field>
      <field offset="2" name="RecognizedPartition">
        <type>BOOLEAN</type>
      </field>
      <field offset="4" name="HiddenSectors">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PARTITION_INFORMATION_MBR">
      <struct name="_PARTITION_INFORMATION_MBR" />
    </typedef>
    <typedef name="PPARTITION_INFORMATION_MBR">
      <ptr>
        <struct name="_PARTITION_INFORMATION_MBR" />
      </ptr>
    </typedef>
    <typedef name="SET_PARTITION_INFORMATION_MBR">
      <type>SET_PARTITION_INFORMATION</type>
    </typedef>
    <typedef name="SET_PARTITION_INFORMATION_GPT">
      <type>PARTITION_INFORMATION_GPT</type>
    </typedef>
    <struct name="_SET_PARTITION_INFORMATION_EX">
      <field offset="0" name="PartitionStyle">
        <type>PARTITION_STYLE</type>
      </field>
      <field offset="8">
        <union>
          <alt name="Mbr">
            <type>SET_PARTITION_INFORMATION_MBR</type>
          </alt>
          <alt name="Gpt">
            <type>SET_PARTITION_INFORMATION_GPT</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="SET_PARTITION_INFORMATION_EX">
      <struct name="_SET_PARTITION_INFORMATION_EX" />
    </typedef>
    <typedef name="PSET_PARTITION_INFORMATION_EX">
      <ptr>
        <struct name="_SET_PARTITION_INFORMATION_EX" />
      </ptr>
    </typedef>
    <struct name="_CREATE_DISK_GPT">
      <field offset="0" name="DiskId">
        <type>GUID</type>
      </field>
      <field offset="16" name="MaxPartitionCount">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CREATE_DISK_GPT">
      <struct name="_CREATE_DISK_GPT" />
    </typedef>
    <typedef name="PCREATE_DISK_GPT">
      <ptr>
        <struct name="_CREATE_DISK_GPT" />
      </ptr>
    </typedef>
    <struct name="_CREATE_DISK_MBR">
      <field offset="0" name="Signature">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CREATE_DISK_MBR">
      <struct name="_CREATE_DISK_MBR" />
    </typedef>
    <typedef name="PCREATE_DISK_MBR">
      <ptr>
        <struct name="_CREATE_DISK_MBR" />
      </ptr>
    </typedef>
    <struct name="_CREATE_DISK">
      <field offset="0" name="PartitionStyle">
        <type>PARTITION_STYLE</type>
      </field>
      <field offset="8">
        <union>
          <alt name="Mbr">
            <type>CREATE_DISK_MBR</type>
          </alt>
          <alt name="Gpt">
            <type>CREATE_DISK_GPT</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="CREATE_DISK">
      <struct name="_CREATE_DISK" />
    </typedef>
    <typedef name="PCREATE_DISK">
      <ptr>
        <struct name="_CREATE_DISK" />
      </ptr>
    </typedef>
    <struct name="_GET_LENGTH_INFORMATION">
      <field offset="0" name="Length">
        <type>LARGE_INTEGER</type>
      </field>
    </struct>
    <typedef name="GET_LENGTH_INFORMATION">
      <struct name="_GET_LENGTH_INFORMATION" />
    </typedef>
    <typedef name="PGET_LENGTH_INFORMATION">
      <ptr>
        <struct name="_GET_LENGTH_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_PARTITION_INFORMATION_EX">
      <field offset="0" name="PartitionStyle">
        <type>PARTITION_STYLE</type>
      </field>
      <field offset="8" name="StartingOffset">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="16" name="PartitionLength">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="24" name="PartitionNumber">
        <type>DWORD</type>
      </field>
      <field offset="28" name="RewritePartition">
        <type>BOOLEAN</type>
      </field>
      <field offset="32">
        <union>
          <alt name="Mbr">
            <type>PARTITION_INFORMATION_MBR</type>
          </alt>
          <alt name="Gpt">
            <type>PARTITION_INFORMATION_GPT</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="PARTITION_INFORMATION_EX">
      <struct name="_PARTITION_INFORMATION_EX" />
    </typedef>
    <typedef name="PPARTITION_INFORMATION_EX">
      <ptr>
        <struct name="_PARTITION_INFORMATION_EX" />
      </ptr>
    </typedef>
    <struct name="_DRIVE_LAYOUT_INFORMATION_GPT">
      <field offset="0" name="DiskId">
        <type>GUID</type>
      </field>
      <field offset="16" name="StartingUsableOffset">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="24" name="UsableLength">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="32" name="MaxPartitionCount">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="DRIVE_LAYOUT_INFORMATION_GPT">
      <struct name="_DRIVE_LAYOUT_INFORMATION_GPT" />
    </typedef>
    <typedef name="PDRIVE_LAYOUT_INFORMATION_GPT">
      <ptr>
        <struct name="_DRIVE_LAYOUT_INFORMATION_GPT" />
      </ptr>
    </typedef>
    <struct name="_DRIVE_LAYOUT_INFORMATION_MBR">
      <field offset="0" name="Signature">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="DRIVE_LAYOUT_INFORMATION_MBR">
      <struct name="_DRIVE_LAYOUT_INFORMATION_MBR" />
    </typedef>
    <typedef name="PDRIVE_LAYOUT_INFORMATION_MBR">
      <ptr>
        <struct name="_DRIVE_LAYOUT_INFORMATION_MBR" />
      </ptr>
    </typedef>
    <struct name="_DRIVE_LAYOUT_INFORMATION_EX">
      <field offset="0" name="PartitionStyle">
        <type>DWORD</type>
      </field>
      <field offset="4" name="PartitionCount">
        <type>DWORD</type>
      </field>
      <field offset="8">
        <union>
          <alt name="Mbr">
            <type>DRIVE_LAYOUT_INFORMATION_MBR</type>
          </alt>
          <alt name="Gpt">
            <type>DRIVE_LAYOUT_INFORMATION_GPT</type>
          </alt>
        </union>
      </field>
      <field offset="48" name="PartitionEntry">
        <arr length="1">
          <type>PARTITION_INFORMATION_EX</type>
        </arr>
      </field>
    </struct>
    <typedef name="DRIVE_LAYOUT_INFORMATION_EX">
      <struct name="_DRIVE_LAYOUT_INFORMATION_EX" />
    </typedef>
    <typedef name="PDRIVE_LAYOUT_INFORMATION_EX">
      <ptr>
        <struct name="_DRIVE_LAYOUT_INFORMATION_EX" />
      </ptr>
    </typedef>
    <enum name="_DETECTION_TYPE">
      <member name="DetectNone" value="0" />
      <member name="DetectInt13" value="1" />
      <member name="DetectExInt13" value="2" />
    </enum>
    <typedef name="DETECTION_TYPE">
      <enum name="_DETECTION_TYPE" />
    </typedef>
    <struct name="_DISK_INT13_INFO">
      <field offset="0" name="DriveSelect">
        <type>WORD</type>
      </field>
      <field offset="4" name="MaxCylinders">
        <type>DWORD</type>
      </field>
      <field offset="8" name="SectorsPerTrack">
        <type>WORD</type>
      </field>
      <field offset="10" name="MaxHeads">
        <type>WORD</type>
      </field>
      <field offset="12" name="NumberDrives">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="DISK_INT13_INFO">
      <struct name="_DISK_INT13_INFO" />
    </typedef>
    <typedef name="PDISK_INT13_INFO">
      <ptr>
        <struct name="_DISK_INT13_INFO" />
      </ptr>
    </typedef>
    <struct name="_DISK_EX_INT13_INFO">
      <field offset="0" name="ExBufferSize">
        <type>WORD</type>
      </field>
      <field offset="2" name="ExFlags">
        <type>WORD</type>
      </field>
      <field offset="4" name="ExCylinders">
        <type>DWORD</type>
      </field>
      <field offset="8" name="ExHeads">
        <type>DWORD</type>
      </field>
      <field offset="12" name="ExSectorsPerTrack">
        <type>DWORD</type>
      </field>
      <field offset="16" name="ExSectorsPerDrive">
        <type>DWORD64</type>
      </field>
      <field offset="24" name="ExSectorSize">
        <type>WORD</type>
      </field>
      <field offset="26" name="ExReserved">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="DISK_EX_INT13_INFO">
      <struct name="_DISK_EX_INT13_INFO" />
    </typedef>
    <typedef name="PDISK_EX_INT13_INFO">
      <ptr>
        <struct name="_DISK_EX_INT13_INFO" />
      </ptr>
    </typedef>
    <struct name="struct_122">
      <field offset="0" name="Int13">
        <type>DISK_INT13_INFO</type>
      </field>
      <field offset="16" name="ExInt13">
        <type>DISK_EX_INT13_INFO</type>
      </field>
    </struct>
    <struct name="_DISK_DETECTION_INFO">
      <field offset="0" name="SizeOfDetectInfo">
        <type>DWORD</type>
      </field>
      <field offset="4" name="DetectionType">
        <type>DETECTION_TYPE</type>
      </field>
      <field offset="8">
        <union>
          <alt>
            <struct name="struct_122" />
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="DISK_DETECTION_INFO">
      <struct name="_DISK_DETECTION_INFO" />
    </typedef>
    <typedef name="PDISK_DETECTION_INFO">
      <ptr>
        <struct name="_DISK_DETECTION_INFO" />
      </ptr>
    </typedef>
    <struct name="struct_123">
      <field offset="0" name="Signature">
        <type>DWORD</type>
      </field>
      <field offset="4" name="CheckSum">
        <type>DWORD</type>
      </field>
    </struct>
    <struct name="struct_124">
      <field offset="0" name="DiskId">
        <type>GUID</type>
      </field>
    </struct>
    <struct name="_DISK_PARTITION_INFO">
      <field offset="0" name="SizeOfPartitionInfo">
        <type>DWORD</type>
      </field>
      <field offset="4" name="PartitionStyle">
        <type>PARTITION_STYLE</type>
      </field>
      <field offset="8">
        <union>
          <alt name="Mbr">
            <struct name="struct_123" />
          </alt>
          <alt name="Gpt">
            <struct name="struct_124" />
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="DISK_PARTITION_INFO">
      <struct name="_DISK_PARTITION_INFO" />
    </typedef>
    <typedef name="PDISK_PARTITION_INFO">
      <ptr>
        <struct name="_DISK_PARTITION_INFO" />
      </ptr>
    </typedef>
    <struct name="_DISK_GEOMETRY_EX">
      <field offset="0" name="Geometry">
        <type>DISK_GEOMETRY</type>
      </field>
      <field offset="24" name="DiskSize">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="32" name="Data">
        <arr length="1">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="DISK_GEOMETRY_EX">
      <struct name="_DISK_GEOMETRY_EX" />
    </typedef>
    <typedef name="PDISK_GEOMETRY_EX">
      <ptr>
        <struct name="_DISK_GEOMETRY_EX" />
      </ptr>
    </typedef>
    <struct name="_DISK_CONTROLLER_NUMBER">
      <field offset="0" name="ControllerNumber">
        <type>DWORD</type>
      </field>
      <field offset="4" name="DiskNumber">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="DISK_CONTROLLER_NUMBER">
      <struct name="_DISK_CONTROLLER_NUMBER" />
    </typedef>
    <typedef name="PDISK_CONTROLLER_NUMBER">
      <ptr>
        <struct name="_DISK_CONTROLLER_NUMBER" />
      </ptr>
    </typedef>
    <enum name="enum_114">
      <member name="EqualPriority" value="0" />
      <member name="KeepPrefetchedData" value="1" />
      <member name="KeepReadData" value="2" />
    </enum>
    <typedef name="DISK_CACHE_RETENTION_PRIORITY">
      <enum name="enum_114" />
    </typedef>
    <struct name="struct_125">
      <field offset="0" name="Minimum">
        <type>WORD</type>
      </field>
      <field offset="2" name="Maximum">
        <type>WORD</type>
      </field>
      <field offset="4" name="MaximumBlocks">
        <type>WORD</type>
      </field>
    </struct>
    <struct name="struct_126">
      <field offset="0" name="Minimum">
        <type>WORD</type>
      </field>
      <field offset="2" name="Maximum">
        <type>WORD</type>
      </field>
    </struct>
    <struct name="_DISK_CACHE_INFORMATION">
      <field offset="0" name="ParametersSavable">
        <type>BOOLEAN</type>
      </field>
      <field offset="1" name="ReadCacheEnabled">
        <type>BOOLEAN</type>
      </field>
      <field offset="2" name="WriteCacheEnabled">
        <type>BOOLEAN</type>
      </field>
      <field offset="4" name="ReadRetentionPriority">
        <type>DISK_CACHE_RETENTION_PRIORITY</type>
      </field>
      <field offset="8" name="WriteRetentionPriority">
        <type>DISK_CACHE_RETENTION_PRIORITY</type>
      </field>
      <field offset="12" name="DisablePrefetchTransferLength">
        <type>WORD</type>
      </field>
      <field offset="14" name="PrefetchScalar">
        <type>BOOLEAN</type>
      </field>
      <field offset="18">
        <union>
          <alt name="ScalarPrefetch">
            <struct name="struct_125" />
          </alt>
          <alt name="BlockPrefetch">
            <struct name="struct_126" />
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="DISK_CACHE_INFORMATION">
      <struct name="_DISK_CACHE_INFORMATION" />
    </typedef>
    <typedef name="PDISK_CACHE_INFORMATION">
      <ptr>
        <struct name="_DISK_CACHE_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_DISK_GROW_PARTITION">
      <field offset="0" name="PartitionNumber">
        <type>DWORD</type>
      </field>
      <field offset="8" name="BytesToGrow">
        <type>LARGE_INTEGER</type>
      </field>
    </struct>
    <typedef name="DISK_GROW_PARTITION">
      <struct name="_DISK_GROW_PARTITION" />
    </typedef>
    <typedef name="PDISK_GROW_PARTITION">
      <ptr>
        <struct name="_DISK_GROW_PARTITION" />
      </ptr>
    </typedef>
    <struct name="_HISTOGRAM_BUCKET">
      <field offset="0" name="Reads">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Writes">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="HISTOGRAM_BUCKET">
      <struct name="_HISTOGRAM_BUCKET" />
    </typedef>
    <typedef name="PHISTOGRAM_BUCKET">
      <ptr>
        <struct name="_HISTOGRAM_BUCKET" />
      </ptr>
    </typedef>
    <struct name="_DISK_HISTOGRAM">
      <field offset="0" name="DiskSize">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="8" name="Start">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="16" name="End">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="24" name="Average">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="32" name="AverageRead">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="40" name="AverageWrite">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="48" name="Granularity">
        <type>DWORD</type>
      </field>
      <field offset="52" name="Size">
        <type>DWORD</type>
      </field>
      <field offset="56" name="ReadCount">
        <type>DWORD</type>
      </field>
      <field offset="60" name="WriteCount">
        <type>DWORD</type>
      </field>
      <field offset="64" name="Histogram">
        <type>PHISTOGRAM_BUCKET</type>
      </field>
    </struct>
    <typedef name="DISK_HISTOGRAM">
      <struct name="_DISK_HISTOGRAM" />
    </typedef>
    <typedef name="PDISK_HISTOGRAM">
      <ptr>
        <struct name="_DISK_HISTOGRAM" />
      </ptr>
    </typedef>
    <struct name="_DISK_PERFORMANCE">
      <field offset="0" name="BytesRead">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="8" name="BytesWritten">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="16" name="ReadTime">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="24" name="WriteTime">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="32" name="IdleTime">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="40" name="ReadCount">
        <type>DWORD</type>
      </field>
      <field offset="44" name="WriteCount">
        <type>DWORD</type>
      </field>
      <field offset="48" name="QueueDepth">
        <type>DWORD</type>
      </field>
      <field offset="52" name="SplitCount">
        <type>DWORD</type>
      </field>
      <field offset="56" name="QueryTime">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="64" name="StorageDeviceNumber">
        <type>DWORD</type>
      </field>
      <field offset="72" name="StorageManagerName">
        <arr length="8">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="DISK_PERFORMANCE">
      <struct name="_DISK_PERFORMANCE" />
    </typedef>
    <typedef name="PDISK_PERFORMANCE">
      <ptr>
        <struct name="_DISK_PERFORMANCE" />
      </ptr>
    </typedef>
    <struct name="_DISK_RECORD">
      <field offset="0" name="ByteOffset">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="8" name="StartTime">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="16" name="EndTime">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="24" name="VirtualAddress">
        <type>PVOID</type>
      </field>
      <field offset="28" name="NumberOfBytes">
        <type>DWORD</type>
      </field>
      <field offset="32" name="DeviceNumber">
        <type>BYTE</type>
      </field>
      <field offset="33" name="ReadRequest">
        <type>BOOLEAN</type>
      </field>
    </struct>
    <typedef name="DISK_RECORD">
      <struct name="_DISK_RECORD" />
    </typedef>
    <typedef name="PDISK_RECORD">
      <ptr>
        <struct name="_DISK_RECORD" />
      </ptr>
    </typedef>
    <struct name="_DISK_LOGGING">
      <field offset="0" name="Function">
        <type>BYTE</type>
      </field>
      <field offset="4" name="BufferAddress">
        <type>PVOID</type>
      </field>
      <field offset="8" name="BufferSize">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="DISK_LOGGING">
      <struct name="_DISK_LOGGING" />
    </typedef>
    <typedef name="PDISK_LOGGING">
      <ptr>
        <struct name="_DISK_LOGGING" />
      </ptr>
    </typedef>
    <enum name="_BIN_TYPES">
      <member name="RequestSize" value="0" />
      <member name="RequestLocation" value="1" />
    </enum>
    <typedef name="BIN_TYPES">
      <enum name="_BIN_TYPES" />
    </typedef>
    <struct name="_BIN_RANGE">
      <field offset="0" name="StartValue">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="8" name="Length">
        <type>LARGE_INTEGER</type>
      </field>
    </struct>
    <typedef name="BIN_RANGE">
      <struct name="_BIN_RANGE" />
    </typedef>
    <typedef name="PBIN_RANGE">
      <ptr>
        <struct name="_BIN_RANGE" />
      </ptr>
    </typedef>
    <struct name="_PERF_BIN">
      <field offset="0" name="NumberOfBins">
        <type>DWORD</type>
      </field>
      <field offset="4" name="TypeOfBin">
        <type>DWORD</type>
      </field>
      <field offset="8" name="BinsRanges">
        <arr length="1">
          <type>BIN_RANGE</type>
        </arr>
      </field>
    </struct>
    <typedef name="PERF_BIN">
      <struct name="_PERF_BIN" />
    </typedef>
    <typedef name="PPERF_BIN">
      <ptr>
        <struct name="_PERF_BIN" />
      </ptr>
    </typedef>
    <struct name="_BIN_COUNT">
      <field offset="0" name="BinRange">
        <type>BIN_RANGE</type>
      </field>
      <field offset="16" name="BinCount">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="BIN_COUNT">
      <struct name="_BIN_COUNT" />
    </typedef>
    <typedef name="PBIN_COUNT">
      <ptr>
        <struct name="_BIN_COUNT" />
      </ptr>
    </typedef>
    <struct name="_BIN_RESULTS">
      <field offset="0" name="NumberOfBins">
        <type>DWORD</type>
      </field>
      <field offset="8" name="BinCounts">
        <arr length="1">
          <type>BIN_COUNT</type>
        </arr>
      </field>
    </struct>
    <typedef name="BIN_RESULTS">
      <struct name="_BIN_RESULTS" />
    </typedef>
    <typedef name="PBIN_RESULTS">
      <ptr>
        <struct name="_BIN_RESULTS" />
      </ptr>
    </typedef>
    <struct name="_GETVERSIONINPARAMS">
      <field offset="0" name="bVersion">
        <type>BYTE</type>
      </field>
      <field offset="1" name="bRevision">
        <type>BYTE</type>
      </field>
      <field offset="2" name="bReserved">
        <type>BYTE</type>
      </field>
      <field offset="3" name="bIDEDeviceMap">
        <type>BYTE</type>
      </field>
      <field offset="4" name="fCapabilities">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwReserved">
        <arr length="4">
          <type>DWORD</type>
        </arr>
      </field>
    </struct>
    <typedef name="GETVERSIONINPARAMS">
      <struct name="_GETVERSIONINPARAMS" />
    </typedef>
    <typedef name="PGETVERSIONINPARAMS">
      <ptr>
        <struct name="_GETVERSIONINPARAMS" />
      </ptr>
    </typedef>
    <typedef name="LPGETVERSIONINPARAMS">
      <ptr>
        <struct name="_GETVERSIONINPARAMS" />
      </ptr>
    </typedef>
    <struct name="_IDEREGS">
      <field offset="0" name="bFeaturesReg">
        <type>BYTE</type>
      </field>
      <field offset="1" name="bSectorCountReg">
        <type>BYTE</type>
      </field>
      <field offset="2" name="bSectorNumberReg">
        <type>BYTE</type>
      </field>
      <field offset="3" name="bCylLowReg">
        <type>BYTE</type>
      </field>
      <field offset="4" name="bCylHighReg">
        <type>BYTE</type>
      </field>
      <field offset="5" name="bDriveHeadReg">
        <type>BYTE</type>
      </field>
      <field offset="6" name="bCommandReg">
        <type>BYTE</type>
      </field>
      <field offset="7" name="bReserved">
        <type>BYTE</type>
      </field>
    </struct>
    <typedef name="IDEREGS">
      <struct name="_IDEREGS" />
    </typedef>
    <typedef name="PIDEREGS">
      <ptr>
        <struct name="_IDEREGS" />
      </ptr>
    </typedef>
    <typedef name="LPIDEREGS">
      <ptr>
        <struct name="_IDEREGS" />
      </ptr>
    </typedef>
    <struct name="_SENDCMDINPARAMS">
      <field offset="0" name="cBufferSize">
        <type>DWORD</type>
      </field>
      <field offset="8" name="irDriveRegs">
        <type>IDEREGS</type>
      </field>
      <field offset="16" name="bDriveNumber">
        <type>BYTE</type>
      </field>
      <field offset="18" name="bReserved">
        <arr length="3">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="24" name="dwReserved">
        <arr length="4">
          <type>DWORD</type>
        </arr>
      </field>
      <field offset="40" name="bBuffer">
        <arr length="1">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="SENDCMDINPARAMS">
      <struct name="_SENDCMDINPARAMS" />
    </typedef>
    <typedef name="PSENDCMDINPARAMS">
      <ptr>
        <struct name="_SENDCMDINPARAMS" />
      </ptr>
    </typedef>
    <typedef name="LPSENDCMDINPARAMS">
      <ptr>
        <struct name="_SENDCMDINPARAMS" />
      </ptr>
    </typedef>
    <struct name="_DRIVERSTATUS">
      <field offset="0" name="bDriverError">
        <type>BYTE</type>
      </field>
      <field offset="1" name="bIDEError">
        <type>BYTE</type>
      </field>
      <field offset="2" name="bReserved">
        <arr length="2">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="8" name="dwReserved">
        <arr length="2">
          <type>DWORD</type>
        </arr>
      </field>
    </struct>
    <typedef name="DRIVERSTATUS">
      <struct name="_DRIVERSTATUS" />
    </typedef>
    <typedef name="PDRIVERSTATUS">
      <ptr>
        <struct name="_DRIVERSTATUS" />
      </ptr>
    </typedef>
    <typedef name="LPDRIVERSTATUS">
      <ptr>
        <struct name="_DRIVERSTATUS" />
      </ptr>
    </typedef>
    <struct name="_SENDCMDOUTPARAMS">
      <field offset="0" name="cBufferSize">
        <type>DWORD</type>
      </field>
      <field offset="8" name="DriverStatus">
        <type>DRIVERSTATUS</type>
      </field>
      <field offset="20" name="bBuffer">
        <arr length="1">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="SENDCMDOUTPARAMS">
      <struct name="_SENDCMDOUTPARAMS" />
    </typedef>
    <typedef name="PSENDCMDOUTPARAMS">
      <ptr>
        <struct name="_SENDCMDOUTPARAMS" />
      </ptr>
    </typedef>
    <typedef name="LPSENDCMDOUTPARAMS">
      <ptr>
        <struct name="_SENDCMDOUTPARAMS" />
      </ptr>
    </typedef>
    <enum name="_ELEMENT_TYPE">
      <member name="AllElements" value="0" />
      <member name="ChangerTransport" value="1" />
      <member name="ChangerSlot" value="2" />
      <member name="ChangerIEPort" value="3" />
      <member name="ChangerDrive" value="4" />
      <member name="ChangerDoor" value="5" />
      <member name="ChangerKeypad" value="6" />
      <member name="ChangerMaxElement" value="7" />
    </enum>
    <typedef name="ELEMENT_TYPE">
      <enum name="_ELEMENT_TYPE" />
    </typedef>
    <typedef name="PELEMENT_TYPE">
      <ptr>
        <enum name="_ELEMENT_TYPE" />
      </ptr>
    </typedef>
    <struct name="_CHANGER_ELEMENT">
      <field offset="0" name="ElementType">
        <type>ELEMENT_TYPE</type>
      </field>
      <field offset="4" name="ElementAddress">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CHANGER_ELEMENT">
      <struct name="_CHANGER_ELEMENT" />
    </typedef>
    <typedef name="PCHANGER_ELEMENT">
      <ptr>
        <struct name="_CHANGER_ELEMENT" />
      </ptr>
    </typedef>
    <struct name="_CHANGER_ELEMENT_LIST">
      <field offset="0" name="Element">
        <type>CHANGER_ELEMENT</type>
      </field>
      <field offset="8" name="NumberOfElements">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CHANGER_ELEMENT_LIST">
      <struct name="_CHANGER_ELEMENT_LIST" />
    </typedef>
    <typedef name="PCHANGER_ELEMENT_LIST">
      <ptr>
        <struct name="_CHANGER_ELEMENT_LIST" />
      </ptr>
    </typedef>
    <struct name="_GET_CHANGER_PARAMETERS">
      <field offset="0" name="Size">
        <type>DWORD</type>
      </field>
      <field offset="4" name="NumberTransportElements">
        <type>WORD</type>
      </field>
      <field offset="6" name="NumberStorageElements">
        <type>WORD</type>
      </field>
      <field offset="8" name="NumberCleanerSlots">
        <type>WORD</type>
      </field>
      <field offset="10" name="NumberIEElements">
        <type>WORD</type>
      </field>
      <field offset="12" name="NumberDataTransferElements">
        <type>WORD</type>
      </field>
      <field offset="14" name="NumberOfDoors">
        <type>WORD</type>
      </field>
      <field offset="16" name="FirstSlotNumber">
        <type>WORD</type>
      </field>
      <field offset="18" name="FirstDriveNumber">
        <type>WORD</type>
      </field>
      <field offset="20" name="FirstTransportNumber">
        <type>WORD</type>
      </field>
      <field offset="22" name="FirstIEPortNumber">
        <type>WORD</type>
      </field>
      <field offset="24" name="FirstCleanerSlotAddress">
        <type>WORD</type>
      </field>
      <field offset="26" name="MagazineSize">
        <type>WORD</type>
      </field>
      <field offset="28" name="DriveCleanTimeout">
        <type>DWORD</type>
      </field>
      <field offset="32" name="Features0">
        <type>DWORD</type>
      </field>
      <field offset="36" name="Features1">
        <type>DWORD</type>
      </field>
      <field offset="40" name="MoveFromTransport">
        <type>BYTE</type>
      </field>
      <field offset="41" name="MoveFromSlot">
        <type>BYTE</type>
      </field>
      <field offset="42" name="MoveFromIePort">
        <type>BYTE</type>
      </field>
      <field offset="43" name="MoveFromDrive">
        <type>BYTE</type>
      </field>
      <field offset="44" name="ExchangeFromTransport">
        <type>BYTE</type>
      </field>
      <field offset="45" name="ExchangeFromSlot">
        <type>BYTE</type>
      </field>
      <field offset="46" name="ExchangeFromIePort">
        <type>BYTE</type>
      </field>
      <field offset="47" name="ExchangeFromDrive">
        <type>BYTE</type>
      </field>
      <field offset="48" name="LockUnlockCapabilities">
        <type>BYTE</type>
      </field>
      <field offset="49" name="PositionCapabilities">
        <type>BYTE</type>
      </field>
      <field offset="50" name="Reserved1">
        <arr length="2">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="56" name="Reserved2">
        <arr length="2">
          <type>DWORD</type>
        </arr>
      </field>
    </struct>
    <typedef name="GET_CHANGER_PARAMETERS">
      <struct name="_GET_CHANGER_PARAMETERS" />
    </typedef>
    <typedef name="PGET_CHANGER_PARAMETERS">
      <ptr>
        <struct name="_GET_CHANGER_PARAMETERS" />
      </ptr>
    </typedef>
    <struct name="_CHANGER_PRODUCT_DATA">
      <field offset="0" name="VendorId">
        <arr length="8">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="8" name="ProductId">
        <arr length="16">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="24" name="Revision">
        <arr length="4">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="32" name="SerialNumber">
        <arr length="32">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="64" name="DeviceType">
        <type>BYTE</type>
      </field>
    </struct>
    <typedef name="CHANGER_PRODUCT_DATA">
      <struct name="_CHANGER_PRODUCT_DATA" />
    </typedef>
    <typedef name="PCHANGER_PRODUCT_DATA">
      <ptr>
        <struct name="_CHANGER_PRODUCT_DATA" />
      </ptr>
    </typedef>
    <struct name="_CHANGER_SET_ACCESS">
      <field offset="0" name="Element">
        <type>CHANGER_ELEMENT</type>
      </field>
      <field offset="8" name="Control">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CHANGER_SET_ACCESS">
      <struct name="_CHANGER_SET_ACCESS" />
    </typedef>
    <typedef name="PCHANGER_SET_ACCESS">
      <ptr>
        <struct name="_CHANGER_SET_ACCESS" />
      </ptr>
    </typedef>
    <struct name="_CHANGER_READ_ELEMENT_STATUS">
      <field offset="0" name="ElementList">
        <type>CHANGER_ELEMENT_LIST</type>
      </field>
      <field offset="12" name="VolumeTagInfo">
        <type>BOOLEAN</type>
      </field>
    </struct>
    <typedef name="CHANGER_READ_ELEMENT_STATUS">
      <struct name="_CHANGER_READ_ELEMENT_STATUS" />
    </typedef>
    <typedef name="PCHANGER_READ_ELEMENT_STATUS">
      <ptr>
        <struct name="_CHANGER_READ_ELEMENT_STATUS" />
      </ptr>
    </typedef>
    <struct name="_CHANGER_ELEMENT_STATUS">
      <field offset="0" name="Element">
        <type>CHANGER_ELEMENT</type>
      </field>
      <field offset="8" name="SrcElementAddress">
        <type>CHANGER_ELEMENT</type>
      </field>
      <field offset="16" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="20" name="ExceptionCode">
        <type>DWORD</type>
      </field>
      <field offset="24" name="TargetId">
        <type>BYTE</type>
      </field>
      <field offset="25" name="Lun">
        <type>BYTE</type>
      </field>
      <field offset="26" name="Reserved">
        <type>WORD</type>
      </field>
      <field offset="32" name="PrimaryVolumeID">
        <arr length="36">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="72" name="AlternateVolumeID">
        <arr length="36">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="CHANGER_ELEMENT_STATUS">
      <struct name="_CHANGER_ELEMENT_STATUS" />
    </typedef>
    <typedef name="PCHANGER_ELEMENT_STATUS">
      <ptr>
        <struct name="_CHANGER_ELEMENT_STATUS" />
      </ptr>
    </typedef>
    <struct name="_CHANGER_ELEMENT_STATUS_EX">
      <field offset="0" name="Element">
        <type>CHANGER_ELEMENT</type>
      </field>
      <field offset="8" name="SrcElementAddress">
        <type>CHANGER_ELEMENT</type>
      </field>
      <field offset="16" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="20" name="ExceptionCode">
        <type>DWORD</type>
      </field>
      <field offset="24" name="TargetId">
        <type>BYTE</type>
      </field>
      <field offset="25" name="Lun">
        <type>BYTE</type>
      </field>
      <field offset="26" name="Reserved">
        <type>WORD</type>
      </field>
      <field offset="32" name="PrimaryVolumeID">
        <arr length="36">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="72" name="AlternateVolumeID">
        <arr length="36">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="112" name="VendorIdentification">
        <arr length="8">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="120" name="ProductIdentification">
        <arr length="16">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="136" name="SerialNumber">
        <arr length="32">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="CHANGER_ELEMENT_STATUS_EX">
      <struct name="_CHANGER_ELEMENT_STATUS_EX" />
    </typedef>
    <typedef name="PCHANGER_ELEMENT_STATUS_EX">
      <ptr>
        <struct name="_CHANGER_ELEMENT_STATUS_EX" />
      </ptr>
    </typedef>
    <struct name="_CHANGER_INITIALIZE_ELEMENT_STATUS">
      <field offset="0" name="ElementList">
        <type>CHANGER_ELEMENT_LIST</type>
      </field>
      <field offset="12" name="BarCodeScan">
        <type>BOOLEAN</type>
      </field>
    </struct>
    <typedef name="CHANGER_INITIALIZE_ELEMENT_STATUS">
      <struct name="_CHANGER_INITIALIZE_ELEMENT_STATUS" />
    </typedef>
    <typedef name="PCHANGER_INITIALIZE_ELEMENT_STATUS">
      <ptr>
        <struct name="_CHANGER_INITIALIZE_ELEMENT_STATUS" />
      </ptr>
    </typedef>
    <struct name="_CHANGER_SET_POSITION">
      <field offset="0" name="Transport">
        <type>CHANGER_ELEMENT</type>
      </field>
      <field offset="8" name="Destination">
        <type>CHANGER_ELEMENT</type>
      </field>
      <field offset="16" name="Flip">
        <type>BOOLEAN</type>
      </field>
    </struct>
    <typedef name="CHANGER_SET_POSITION">
      <struct name="_CHANGER_SET_POSITION" />
    </typedef>
    <typedef name="PCHANGER_SET_POSITION">
      <ptr>
        <struct name="_CHANGER_SET_POSITION" />
      </ptr>
    </typedef>
    <struct name="_CHANGER_EXCHANGE_MEDIUM">
      <field offset="0" name="Transport">
        <type>CHANGER_ELEMENT</type>
      </field>
      <field offset="8" name="Source">
        <type>CHANGER_ELEMENT</type>
      </field>
      <field offset="16" name="Destination1">
        <type>CHANGER_ELEMENT</type>
      </field>
      <field offset="24" name="Destination2">
        <type>CHANGER_ELEMENT</type>
      </field>
      <field offset="32" name="Flip1">
        <type>BOOLEAN</type>
      </field>
      <field offset="33" name="Flip2">
        <type>BOOLEAN</type>
      </field>
    </struct>
    <typedef name="CHANGER_EXCHANGE_MEDIUM">
      <struct name="_CHANGER_EXCHANGE_MEDIUM" />
    </typedef>
    <typedef name="PCHANGER_EXCHANGE_MEDIUM">
      <ptr>
        <struct name="_CHANGER_EXCHANGE_MEDIUM" />
      </ptr>
    </typedef>
    <struct name="_CHANGER_MOVE_MEDIUM">
      <field offset="0" name="Transport">
        <type>CHANGER_ELEMENT</type>
      </field>
      <field offset="8" name="Source">
        <type>CHANGER_ELEMENT</type>
      </field>
      <field offset="16" name="Destination">
        <type>CHANGER_ELEMENT</type>
      </field>
      <field offset="24" name="Flip">
        <type>BOOLEAN</type>
      </field>
    </struct>
    <typedef name="CHANGER_MOVE_MEDIUM">
      <struct name="_CHANGER_MOVE_MEDIUM" />
    </typedef>
    <typedef name="PCHANGER_MOVE_MEDIUM">
      <ptr>
        <struct name="_CHANGER_MOVE_MEDIUM" />
      </ptr>
    </typedef>
    <struct name="_CHANGER_SEND_VOLUME_TAG_INFORMATION">
      <field offset="0" name="StartingElement">
        <type>CHANGER_ELEMENT</type>
      </field>
      <field offset="8" name="ActionCode">
        <type>DWORD</type>
      </field>
      <field offset="16" name="VolumeIDTemplate">
        <arr length="40">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="CHANGER_SEND_VOLUME_TAG_INFORMATION">
      <struct name="_CHANGER_SEND_VOLUME_TAG_INFORMATION" />
    </typedef>
    <typedef name="PCHANGER_SEND_VOLUME_TAG_INFORMATION">
      <ptr>
        <struct name="_CHANGER_SEND_VOLUME_TAG_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_READ_ELEMENT_ADDRESS_INFO">
      <field offset="0" name="NumberOfElements">
        <type>DWORD</type>
      </field>
      <field offset="8" name="ElementStatus">
        <arr length="1">
          <type>CHANGER_ELEMENT_STATUS</type>
        </arr>
      </field>
    </struct>
    <typedef name="READ_ELEMENT_ADDRESS_INFO">
      <struct name="_READ_ELEMENT_ADDRESS_INFO" />
    </typedef>
    <typedef name="PREAD_ELEMENT_ADDRESS_INFO">
      <ptr>
        <struct name="_READ_ELEMENT_ADDRESS_INFO" />
      </ptr>
    </typedef>
    <enum name="_CHANGER_DEVICE_PROBLEM_TYPE">
      <member name="DeviceProblemNone" value="0" />
      <member name="DeviceProblemHardware" value="1" />
      <member name="DeviceProblemCHMError" value="2" />
      <member name="DeviceProblemDoorOpen" value="3" />
      <member name="DeviceProblemCalibrationError" value="4" />
      <member name="DeviceProblemTargetFailure" value="5" />
      <member name="DeviceProblemCHMMoveError" value="6" />
      <member name="DeviceProblemCHMZeroError" value="7" />
      <member name="DeviceProblemCartridgeInsertError" value="8" />
      <member name="DeviceProblemPositionError" value="9" />
      <member name="DeviceProblemSensorError" value="10" />
      <member name="DeviceProblemCartridgeEjectError" value="11" />
      <member name="DeviceProblemGripperError" value="12" />
      <member name="DeviceProblemDriveError" value="13" />
    </enum>
    <typedef name="CHANGER_DEVICE_PROBLEM_TYPE">
      <enum name="_CHANGER_DEVICE_PROBLEM_TYPE" />
    </typedef>
    <typedef name="PCHANGER_DEVICE_PROBLEM_TYPE">
      <ptr>
        <enum name="_CHANGER_DEVICE_PROBLEM_TYPE" />
      </ptr>
    </typedef>
    <struct name="_CSV_NAMESPACE_INFO">
      <field offset="0" name="Version">
        <type>DWORD</type>
      </field>
      <field offset="4" name="DeviceNumber">
        <type>DWORD</type>
      </field>
      <field offset="8" name="StartingOffset">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="16" name="SectorSize">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CSV_NAMESPACE_INFO">
      <struct name="_CSV_NAMESPACE_INFO" />
    </typedef>
    <typedef name="PCSV_NAMESPACE_INFO">
      <ptr>
        <struct name="_CSV_NAMESPACE_INFO" />
      </ptr>
    </typedef>
    <struct name="_PATHNAME_BUFFER">
      <field offset="0" name="PathNameLength">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Name">
        <arr length="1">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="PATHNAME_BUFFER">
      <struct name="_PATHNAME_BUFFER" />
    </typedef>
    <typedef name="PPATHNAME_BUFFER">
      <ptr>
        <struct name="_PATHNAME_BUFFER" />
      </ptr>
    </typedef>
    <struct name="_FSCTL_QUERY_FAT_BPB_BUFFER">
      <field offset="0" name="First0x24BytesOfBootSector">
        <arr length="36">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="FSCTL_QUERY_FAT_BPB_BUFFER">
      <struct name="_FSCTL_QUERY_FAT_BPB_BUFFER" />
    </typedef>
    <typedef name="PFSCTL_QUERY_FAT_BPB_BUFFER">
      <ptr>
        <struct name="_FSCTL_QUERY_FAT_BPB_BUFFER" />
      </ptr>
    </typedef>
    <struct name="struct_127">
      <field offset="0" name="VolumeSerialNumber">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="8" name="NumberSectors">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="16" name="TotalClusters">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="24" name="FreeClusters">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="32" name="TotalReserved">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="40" name="BytesPerSector">
        <type>DWORD</type>
      </field>
      <field offset="44" name="BytesPerCluster">
        <type>DWORD</type>
      </field>
      <field offset="48" name="BytesPerFileRecordSegment">
        <type>DWORD</type>
      </field>
      <field offset="52" name="ClustersPerFileRecordSegment">
        <type>DWORD</type>
      </field>
      <field offset="56" name="MftValidDataLength">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="64" name="MftStartLcn">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="72" name="Mft2StartLcn">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="80" name="MftZoneStart">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="88" name="MftZoneEnd">
        <type>LARGE_INTEGER</type>
      </field>
    </struct>
    <typedef name="NTFS_VOLUME_DATA_BUFFER">
      <struct name="struct_127" />
    </typedef>
    <typedef name="PNTFS_VOLUME_DATA_BUFFER">
      <ptr>
        <struct name="struct_127" />
      </ptr>
    </typedef>
    <struct name="struct_128">
      <field offset="0" name="ByteCount">
        <type>DWORD</type>
      </field>
      <field offset="4" name="MajorVersion">
        <type>WORD</type>
      </field>
      <field offset="6" name="MinorVersion">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="NTFS_EXTENDED_VOLUME_DATA">
      <struct name="struct_128" />
    </typedef>
    <typedef name="PNTFS_EXTENDED_VOLUME_DATA">
      <ptr>
        <struct name="struct_128" />
      </ptr>
    </typedef>
    <struct name="struct_129">
      <field offset="0" name="StartingLcn">
        <type>LARGE_INTEGER</type>
      </field>
    </struct>
    <typedef name="STARTING_LCN_INPUT_BUFFER">
      <struct name="struct_129" />
    </typedef>
    <typedef name="PSTARTING_LCN_INPUT_BUFFER">
      <ptr>
        <struct name="struct_129" />
      </ptr>
    </typedef>
    <struct name="struct_130">
      <field offset="0" name="StartingLcn">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="8" name="BitmapSize">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="16" name="Buffer">
        <arr length="1">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="VOLUME_BITMAP_BUFFER">
      <struct name="struct_130" />
    </typedef>
    <typedef name="PVOLUME_BITMAP_BUFFER">
      <ptr>
        <struct name="struct_130" />
      </ptr>
    </typedef>
    <struct name="struct_131">
      <field offset="0" name="StartingVcn">
        <type>LARGE_INTEGER</type>
      </field>
    </struct>
    <typedef name="STARTING_VCN_INPUT_BUFFER">
      <struct name="struct_131" />
    </typedef>
    <typedef name="PSTARTING_VCN_INPUT_BUFFER">
      <ptr>
        <struct name="struct_131" />
      </ptr>
    </typedef>
    <struct name="struct_132">
      <field offset="0" name="NextVcn">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="8" name="Lcn">
        <type>LARGE_INTEGER</type>
      </field>
    </struct>
    <struct name="RETRIEVAL_POINTERS_BUFFER">
      <field offset="0" name="ExtentCount">
        <type>DWORD</type>
      </field>
      <field offset="8" name="StartingVcn">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="16" name="Extents">
        <arr length="1">
          <struct name="struct_132" />
        </arr>
      </field>
    </struct>
    <typedef name="RETRIEVAL_POINTERS_BUFFER">
      <struct name="RETRIEVAL_POINTERS_BUFFER" />
    </typedef>
    <typedef name="PRETRIEVAL_POINTERS_BUFFER">
      <ptr>
        <struct name="RETRIEVAL_POINTERS_BUFFER" />
      </ptr>
    </typedef>
    <struct name="struct_133">
      <field offset="0" name="FileReferenceNumber">
        <type>LARGE_INTEGER</type>
      </field>
    </struct>
    <typedef name="NTFS_FILE_RECORD_INPUT_BUFFER">
      <struct name="struct_133" />
    </typedef>
    <typedef name="PNTFS_FILE_RECORD_INPUT_BUFFER">
      <ptr>
        <struct name="struct_133" />
      </ptr>
    </typedef>
    <struct name="struct_134">
      <field offset="0" name="FileReferenceNumber">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="8" name="FileRecordLength">
        <type>DWORD</type>
      </field>
      <field offset="12" name="FileRecordBuffer">
        <arr length="1">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="NTFS_FILE_RECORD_OUTPUT_BUFFER">
      <struct name="struct_134" />
    </typedef>
    <typedef name="PNTFS_FILE_RECORD_OUTPUT_BUFFER">
      <ptr>
        <struct name="struct_134" />
      </ptr>
    </typedef>
    <struct name="struct_135">
      <field offset="0" name="FileHandle">
        <type>HANDLE</type>
      </field>
      <field offset="8" name="StartingVcn">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="16" name="StartingLcn">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="24" name="ClusterCount">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="MOVE_FILE_DATA">
      <struct name="struct_135" />
    </typedef>
    <typedef name="PMOVE_FILE_DATA">
      <ptr>
        <struct name="struct_135" />
      </ptr>
    </typedef>
    <struct name="struct_136">
      <field offset="0" name="FileHandle">
        <type>HANDLE</type>
      </field>
      <field offset="8" name="SourceFileRecord">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="16" name="TargetFileRecord">
        <type>LARGE_INTEGER</type>
      </field>
    </struct>
    <typedef name="MOVE_FILE_RECORD_DATA">
      <struct name="struct_136" />
    </typedef>
    <typedef name="PMOVE_FILE_RECORD_DATA">
      <ptr>
        <struct name="struct_136" />
      </ptr>
    </typedef>
    <struct name="struct_137">
      <field offset="0" name="Restart">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Sid">
        <type>SID</type>
      </field>
    </struct>
    <typedef name="FIND_BY_SID_DATA">
      <struct name="struct_137" />
    </typedef>
    <typedef name="PFIND_BY_SID_DATA">
      <ptr>
        <struct name="struct_137" />
      </ptr>
    </typedef>
    <struct name="struct_138">
      <field offset="0" name="NextEntryOffset">
        <type>DWORD</type>
      </field>
      <field offset="4" name="FileIndex">
        <type>DWORD</type>
      </field>
      <field offset="8" name="FileNameLength">
        <type>DWORD</type>
      </field>
      <field offset="12" name="FileName">
        <arr length="1">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="FIND_BY_SID_OUTPUT">
      <struct name="struct_138" />
    </typedef>
    <typedef name="PFIND_BY_SID_OUTPUT">
      <ptr>
        <struct name="struct_138" />
      </ptr>
    </typedef>
    <struct name="struct_139">
      <field offset="0" name="StartFileReferenceNumber">
        <type>DWORDLONG</type>
      </field>
      <field offset="8" name="LowUsn">
        <type>USN</type>
      </field>
      <field offset="16" name="HighUsn">
        <type>USN</type>
      </field>
    </struct>
    <typedef name="MFT_ENUM_DATA">
      <struct name="struct_139" />
    </typedef>
    <typedef name="PMFT_ENUM_DATA">
      <ptr>
        <struct name="struct_139" />
      </ptr>
    </typedef>
    <struct name="struct_140">
      <field offset="0" name="MaximumSize">
        <type>DWORDLONG</type>
      </field>
      <field offset="8" name="AllocationDelta">
        <type>DWORDLONG</type>
      </field>
    </struct>
    <typedef name="CREATE_USN_JOURNAL_DATA">
      <struct name="struct_140" />
    </typedef>
    <typedef name="PCREATE_USN_JOURNAL_DATA">
      <ptr>
        <struct name="struct_140" />
      </ptr>
    </typedef>
    <struct name="struct_141">
      <field offset="0" name="StartUsn">
        <type>USN</type>
      </field>
      <field offset="8" name="ReasonMask">
        <type>DWORD</type>
      </field>
      <field offset="12" name="ReturnOnlyOnClose">
        <type>DWORD</type>
      </field>
      <field offset="16" name="Timeout">
        <type>DWORDLONG</type>
      </field>
      <field offset="24" name="BytesToWaitFor">
        <type>DWORDLONG</type>
      </field>
      <field offset="32" name="UsnJournalID">
        <type>DWORDLONG</type>
      </field>
    </struct>
    <typedef name="READ_USN_JOURNAL_DATA">
      <struct name="struct_141" />
    </typedef>
    <typedef name="PREAD_USN_JOURNAL_DATA">
      <ptr>
        <struct name="struct_141" />
      </ptr>
    </typedef>
    <struct name="struct_142">
      <field offset="0" name="RecordLength">
        <type>DWORD</type>
      </field>
      <field offset="4" name="MajorVersion">
        <type>WORD</type>
      </field>
      <field offset="6" name="MinorVersion">
        <type>WORD</type>
      </field>
      <field offset="8" name="FileReferenceNumber">
        <type>DWORDLONG</type>
      </field>
      <field offset="16" name="ParentFileReferenceNumber">
        <type>DWORDLONG</type>
      </field>
      <field offset="24" name="Usn">
        <type>USN</type>
      </field>
      <field offset="32" name="TimeStamp">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="40" name="Reason">
        <type>DWORD</type>
      </field>
      <field offset="44" name="SourceInfo">
        <type>DWORD</type>
      </field>
      <field offset="48" name="SecurityId">
        <type>DWORD</type>
      </field>
      <field offset="52" name="FileAttributes">
        <type>DWORD</type>
      </field>
      <field offset="56" name="FileNameLength">
        <type>WORD</type>
      </field>
      <field offset="58" name="FileNameOffset">
        <type>WORD</type>
      </field>
      <field offset="60" name="FileName">
        <arr length="1">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="USN_RECORD">
      <struct name="struct_142" />
    </typedef>
    <typedef name="PUSN_RECORD">
      <ptr>
        <struct name="struct_142" />
      </ptr>
    </typedef>
    <struct name="struct_143">
      <field offset="0" name="UsnJournalID">
        <type>DWORDLONG</type>
      </field>
      <field offset="8" name="FirstUsn">
        <type>USN</type>
      </field>
      <field offset="16" name="NextUsn">
        <type>USN</type>
      </field>
      <field offset="24" name="LowestValidUsn">
        <type>USN</type>
      </field>
      <field offset="32" name="MaxUsn">
        <type>USN</type>
      </field>
      <field offset="40" name="MaximumSize">
        <type>DWORDLONG</type>
      </field>
      <field offset="48" name="AllocationDelta">
        <type>DWORDLONG</type>
      </field>
    </struct>
    <typedef name="USN_JOURNAL_DATA">
      <struct name="struct_143" />
    </typedef>
    <typedef name="PUSN_JOURNAL_DATA">
      <ptr>
        <struct name="struct_143" />
      </ptr>
    </typedef>
    <struct name="struct_144">
      <field offset="0" name="UsnJournalID">
        <type>DWORDLONG</type>
      </field>
      <field offset="8" name="DeleteFlags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="DELETE_USN_JOURNAL_DATA">
      <struct name="struct_144" />
    </typedef>
    <typedef name="PDELETE_USN_JOURNAL_DATA">
      <ptr>
        <struct name="struct_144" />
      </ptr>
    </typedef>
    <struct name="struct_145">
      <field offset="0" name="UsnSourceInfo">
        <type>DWORD</type>
      </field>
      <field offset="4" name="VolumeHandle">
        <type>HANDLE</type>
      </field>
      <field offset="8" name="HandleInfo">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="MARK_HANDLE_INFO">
      <struct name="struct_145" />
    </typedef>
    <typedef name="PMARK_HANDLE_INFO">
      <ptr>
        <struct name="struct_145" />
      </ptr>
    </typedef>
    <struct name="struct_146">
      <field offset="0" name="DesiredAccess">
        <type>ACCESS_MASK</type>
      </field>
      <field offset="4" name="SecurityIds">
        <arr length="1">
          <type>DWORD</type>
        </arr>
      </field>
    </struct>
    <typedef name="BULK_SECURITY_TEST_DATA">
      <struct name="struct_146" />
    </typedef>
    <typedef name="PBULK_SECURITY_TEST_DATA">
      <ptr>
        <struct name="struct_146" />
      </ptr>
    </typedef>
    <struct name="_FILE_PREFETCH">
      <field offset="0" name="Type">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Count">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Prefetch">
        <arr length="1">
          <type>DWORDLONG</type>
        </arr>
      </field>
    </struct>
    <typedef name="FILE_PREFETCH">
      <struct name="_FILE_PREFETCH" />
    </typedef>
    <typedef name="PFILE_PREFETCH">
      <ptr>
        <struct name="_FILE_PREFETCH" />
      </ptr>
    </typedef>
    <struct name="_FILE_PREFETCH_EX">
      <field offset="0" name="Type">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Count">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Context">
        <type>PVOID</type>
      </field>
      <field offset="16" name="Prefetch">
        <arr length="1">
          <type>DWORDLONG</type>
        </arr>
      </field>
    </struct>
    <typedef name="FILE_PREFETCH_EX">
      <struct name="_FILE_PREFETCH_EX" />
    </typedef>
    <typedef name="PFILE_PREFETCH_EX">
      <ptr>
        <struct name="_FILE_PREFETCH_EX" />
      </ptr>
    </typedef>
    <struct name="_FILESYSTEM_STATISTICS">
      <field offset="0" name="FileSystemType">
        <type>WORD</type>
      </field>
      <field offset="2" name="Version">
        <type>WORD</type>
      </field>
      <field offset="4" name="SizeOfCompleteStructure">
        <type>DWORD</type>
      </field>
      <field offset="8" name="UserFileReads">
        <type>DWORD</type>
      </field>
      <field offset="12" name="UserFileReadBytes">
        <type>DWORD</type>
      </field>
      <field offset="16" name="UserDiskReads">
        <type>DWORD</type>
      </field>
      <field offset="20" name="UserFileWrites">
        <type>DWORD</type>
      </field>
      <field offset="24" name="UserFileWriteBytes">
        <type>DWORD</type>
      </field>
      <field offset="28" name="UserDiskWrites">
        <type>DWORD</type>
      </field>
      <field offset="32" name="MetaDataReads">
        <type>DWORD</type>
      </field>
      <field offset="36" name="MetaDataReadBytes">
        <type>DWORD</type>
      </field>
      <field offset="40" name="MetaDataDiskReads">
        <type>DWORD</type>
      </field>
      <field offset="44" name="MetaDataWrites">
        <type>DWORD</type>
      </field>
      <field offset="48" name="MetaDataWriteBytes">
        <type>DWORD</type>
      </field>
      <field offset="52" name="MetaDataDiskWrites">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="FILESYSTEM_STATISTICS">
      <struct name="_FILESYSTEM_STATISTICS" />
    </typedef>
    <typedef name="PFILESYSTEM_STATISTICS">
      <ptr>
        <struct name="_FILESYSTEM_STATISTICS" />
      </ptr>
    </typedef>
    <struct name="_FAT_STATISTICS">
      <field offset="0" name="CreateHits">
        <type>DWORD</type>
      </field>
      <field offset="4" name="SuccessfulCreates">
        <type>DWORD</type>
      </field>
      <field offset="8" name="FailedCreates">
        <type>DWORD</type>
      </field>
      <field offset="12" name="NonCachedReads">
        <type>DWORD</type>
      </field>
      <field offset="16" name="NonCachedReadBytes">
        <type>DWORD</type>
      </field>
      <field offset="20" name="NonCachedWrites">
        <type>DWORD</type>
      </field>
      <field offset="24" name="NonCachedWriteBytes">
        <type>DWORD</type>
      </field>
      <field offset="28" name="NonCachedDiskReads">
        <type>DWORD</type>
      </field>
      <field offset="32" name="NonCachedDiskWrites">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="FAT_STATISTICS">
      <struct name="_FAT_STATISTICS" />
    </typedef>
    <typedef name="PFAT_STATISTICS">
      <ptr>
        <struct name="_FAT_STATISTICS" />
      </ptr>
    </typedef>
    <struct name="_EXFAT_STATISTICS">
      <field offset="0" name="CreateHits">
        <type>DWORD</type>
      </field>
      <field offset="4" name="SuccessfulCreates">
        <type>DWORD</type>
      </field>
      <field offset="8" name="FailedCreates">
        <type>DWORD</type>
      </field>
      <field offset="12" name="NonCachedReads">
        <type>DWORD</type>
      </field>
      <field offset="16" name="NonCachedReadBytes">
        <type>DWORD</type>
      </field>
      <field offset="20" name="NonCachedWrites">
        <type>DWORD</type>
      </field>
      <field offset="24" name="NonCachedWriteBytes">
        <type>DWORD</type>
      </field>
      <field offset="28" name="NonCachedDiskReads">
        <type>DWORD</type>
      </field>
      <field offset="32" name="NonCachedDiskWrites">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="EXFAT_STATISTICS">
      <struct name="_EXFAT_STATISTICS" />
    </typedef>
    <typedef name="PEXFAT_STATISTICS">
      <ptr>
        <struct name="_EXFAT_STATISTICS" />
      </ptr>
    </typedef>
    <struct name="struct_147">
      <field offset="0" name="Write">
        <type>WORD</type>
      </field>
      <field offset="2" name="Create">
        <type>WORD</type>
      </field>
      <field offset="4" name="SetInfo">
        <type>WORD</type>
      </field>
      <field offset="6" name="Flush">
        <type>WORD</type>
      </field>
    </struct>
    <struct name="struct_148">
      <field offset="0" name="Write">
        <type>WORD</type>
      </field>
      <field offset="2" name="Create">
        <type>WORD</type>
      </field>
      <field offset="4" name="SetInfo">
        <type>WORD</type>
      </field>
      <field offset="6" name="Flush">
        <type>WORD</type>
      </field>
    </struct>
    <struct name="struct_149">
      <field offset="0" name="Write">
        <type>WORD</type>
      </field>
      <field offset="2" name="Create">
        <type>WORD</type>
      </field>
      <field offset="4" name="SetInfo">
        <type>WORD</type>
      </field>
    </struct>
    <struct name="struct_150">
      <field offset="0" name="Write">
        <type>WORD</type>
      </field>
      <field offset="2" name="Create">
        <type>WORD</type>
      </field>
      <field offset="4" name="SetInfo">
        <type>WORD</type>
      </field>
      <field offset="6" name="Flush">
        <type>WORD</type>
      </field>
    </struct>
    <struct name="struct_151">
      <field offset="0" name="Calls">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Clusters">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Hints">
        <type>DWORD</type>
      </field>
      <field offset="12" name="RunsReturned">
        <type>DWORD</type>
      </field>
      <field offset="16" name="HintsHonored">
        <type>DWORD</type>
      </field>
      <field offset="20" name="HintsClusters">
        <type>DWORD</type>
      </field>
      <field offset="24" name="Cache">
        <type>DWORD</type>
      </field>
      <field offset="28" name="CacheClusters">
        <type>DWORD</type>
      </field>
      <field offset="32" name="CacheMiss">
        <type>DWORD</type>
      </field>
      <field offset="36" name="CacheMissClusters">
        <type>DWORD</type>
      </field>
    </struct>
    <struct name="_NTFS_STATISTICS">
      <field offset="0" name="LogFileFullExceptions">
        <type>DWORD</type>
      </field>
      <field offset="4" name="OtherExceptions">
        <type>DWORD</type>
      </field>
      <field offset="8" name="MftReads">
        <type>DWORD</type>
      </field>
      <field offset="12" name="MftReadBytes">
        <type>DWORD</type>
      </field>
      <field offset="16" name="MftWrites">
        <type>DWORD</type>
      </field>
      <field offset="20" name="MftWriteBytes">
        <type>DWORD</type>
      </field>
      <field offset="24" name="MftWritesUserLevel">
        <struct name="struct_147" />
      </field>
      <field offset="32" name="MftWritesFlushForLogFileFull">
        <type>WORD</type>
      </field>
      <field offset="34" name="MftWritesLazyWriter">
        <type>WORD</type>
      </field>
      <field offset="36" name="MftWritesUserRequest">
        <type>WORD</type>
      </field>
      <field offset="40" name="Mft2Writes">
        <type>DWORD</type>
      </field>
      <field offset="44" name="Mft2WriteBytes">
        <type>DWORD</type>
      </field>
      <field offset="48" name="Mft2WritesUserLevel">
        <struct name="struct_148" />
      </field>
      <field offset="56" name="Mft2WritesFlushForLogFileFull">
        <type>WORD</type>
      </field>
      <field offset="58" name="Mft2WritesLazyWriter">
        <type>WORD</type>
      </field>
      <field offset="60" name="Mft2WritesUserRequest">
        <type>WORD</type>
      </field>
      <field offset="64" name="RootIndexReads">
        <type>DWORD</type>
      </field>
      <field offset="68" name="RootIndexReadBytes">
        <type>DWORD</type>
      </field>
      <field offset="72" name="RootIndexWrites">
        <type>DWORD</type>
      </field>
      <field offset="76" name="RootIndexWriteBytes">
        <type>DWORD</type>
      </field>
      <field offset="80" name="BitmapReads">
        <type>DWORD</type>
      </field>
      <field offset="84" name="BitmapReadBytes">
        <type>DWORD</type>
      </field>
      <field offset="88" name="BitmapWrites">
        <type>DWORD</type>
      </field>
      <field offset="92" name="BitmapWriteBytes">
        <type>DWORD</type>
      </field>
      <field offset="96" name="BitmapWritesFlushForLogFileFull">
        <type>WORD</type>
      </field>
      <field offset="98" name="BitmapWritesLazyWriter">
        <type>WORD</type>
      </field>
      <field offset="100" name="BitmapWritesUserRequest">
        <type>WORD</type>
      </field>
      <field offset="102" name="BitmapWritesUserLevel">
        <struct name="struct_149" />
      </field>
      <field offset="108" name="MftBitmapReads">
        <type>DWORD</type>
      </field>
      <field offset="112" name="MftBitmapReadBytes">
        <type>DWORD</type>
      </field>
      <field offset="116" name="MftBitmapWrites">
        <type>DWORD</type>
      </field>
      <field offset="120" name="MftBitmapWriteBytes">
        <type>DWORD</type>
      </field>
      <field offset="124" name="MftBitmapWritesFlushForLogFileFull">
        <type>WORD</type>
      </field>
      <field offset="126" name="MftBitmapWritesLazyWriter">
        <type>WORD</type>
      </field>
      <field offset="128" name="MftBitmapWritesUserRequest">
        <type>WORD</type>
      </field>
      <field offset="136" name="MftBitmapWritesUserLevel">
        <struct name="struct_150" />
      </field>
      <field offset="144" name="UserIndexReads">
        <type>DWORD</type>
      </field>
      <field offset="148" name="UserIndexReadBytes">
        <type>DWORD</type>
      </field>
      <field offset="152" name="UserIndexWrites">
        <type>DWORD</type>
      </field>
      <field offset="156" name="UserIndexWriteBytes">
        <type>DWORD</type>
      </field>
      <field offset="160" name="LogFileReads">
        <type>DWORD</type>
      </field>
      <field offset="164" name="LogFileReadBytes">
        <type>DWORD</type>
      </field>
      <field offset="168" name="LogFileWrites">
        <type>DWORD</type>
      </field>
      <field offset="172" name="LogFileWriteBytes">
        <type>DWORD</type>
      </field>
      <field offset="176" name="Allocate">
        <struct name="struct_151" />
      </field>
    </struct>
    <typedef name="NTFS_STATISTICS">
      <struct name="_NTFS_STATISTICS" />
    </typedef>
    <typedef name="PNTFS_STATISTICS">
      <ptr>
        <struct name="_NTFS_STATISTICS" />
      </ptr>
    </typedef>
    <struct name="struct_152">
      <field offset="0" name="BirthVolumeId">
        <arr length="16">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="16" name="BirthObjectId">
        <arr length="16">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="32" name="DomainId">
        <arr length="16">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <struct name="_FILE_OBJECTID_BUFFER">
      <field offset="0" name="ObjectId">
        <arr length="16">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="16">
        <union>
          <alt>
            <struct name="struct_152" />
          </alt>
          <alt name="ExtendedInfo">
            <arr length="48">
              <type>BYTE</type>
            </arr>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="FILE_OBJECTID_BUFFER">
      <struct name="_FILE_OBJECTID_BUFFER" />
    </typedef>
    <typedef name="PFILE_OBJECTID_BUFFER">
      <ptr>
        <struct name="_FILE_OBJECTID_BUFFER" />
      </ptr>
    </typedef>
    <struct name="_FILE_SET_SPARSE_BUFFER">
      <field offset="0" name="SetSparse">
        <type>BOOLEAN</type>
      </field>
    </struct>
    <typedef name="FILE_SET_SPARSE_BUFFER">
      <struct name="_FILE_SET_SPARSE_BUFFER" />
    </typedef>
    <typedef name="PFILE_SET_SPARSE_BUFFER">
      <ptr>
        <struct name="_FILE_SET_SPARSE_BUFFER" />
      </ptr>
    </typedef>
    <struct name="_FILE_ZERO_DATA_INFORMATION">
      <field offset="0" name="FileOffset">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="8" name="BeyondFinalZero">
        <type>LARGE_INTEGER</type>
      </field>
    </struct>
    <typedef name="FILE_ZERO_DATA_INFORMATION">
      <struct name="_FILE_ZERO_DATA_INFORMATION" />
    </typedef>
    <typedef name="PFILE_ZERO_DATA_INFORMATION">
      <ptr>
        <struct name="_FILE_ZERO_DATA_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_FILE_ALLOCATED_RANGE_BUFFER">
      <field offset="0" name="FileOffset">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="8" name="Length">
        <type>LARGE_INTEGER</type>
      </field>
    </struct>
    <typedef name="FILE_ALLOCATED_RANGE_BUFFER">
      <struct name="_FILE_ALLOCATED_RANGE_BUFFER" />
    </typedef>
    <typedef name="PFILE_ALLOCATED_RANGE_BUFFER">
      <ptr>
        <struct name="_FILE_ALLOCATED_RANGE_BUFFER" />
      </ptr>
    </typedef>
    <struct name="_ENCRYPTION_BUFFER">
      <field offset="0" name="EncryptionOperation">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Private">
        <arr length="1">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="ENCRYPTION_BUFFER">
      <struct name="_ENCRYPTION_BUFFER" />
    </typedef>
    <typedef name="PENCRYPTION_BUFFER">
      <ptr>
        <struct name="_ENCRYPTION_BUFFER" />
      </ptr>
    </typedef>
    <struct name="_DECRYPTION_STATUS_BUFFER">
      <field offset="0" name="NoEncryptedStreams">
        <type>BOOLEAN</type>
      </field>
    </struct>
    <typedef name="DECRYPTION_STATUS_BUFFER">
      <struct name="_DECRYPTION_STATUS_BUFFER" />
    </typedef>
    <typedef name="PDECRYPTION_STATUS_BUFFER">
      <ptr>
        <struct name="_DECRYPTION_STATUS_BUFFER" />
      </ptr>
    </typedef>
    <struct name="_REQUEST_RAW_ENCRYPTED_DATA">
      <field offset="0" name="FileOffset">
        <type>LONGLONG</type>
      </field>
      <field offset="8" name="Length">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="REQUEST_RAW_ENCRYPTED_DATA">
      <struct name="_REQUEST_RAW_ENCRYPTED_DATA" />
    </typedef>
    <typedef name="PREQUEST_RAW_ENCRYPTED_DATA">
      <ptr>
        <struct name="_REQUEST_RAW_ENCRYPTED_DATA" />
      </ptr>
    </typedef>
    <struct name="_ENCRYPTED_DATA_INFO">
      <field offset="0" name="StartingFileOffset">
        <type>DWORDLONG</type>
      </field>
      <field offset="8" name="OutputBufferOffset">
        <type>DWORD</type>
      </field>
      <field offset="12" name="BytesWithinFileSize">
        <type>DWORD</type>
      </field>
      <field offset="16" name="BytesWithinValidDataLength">
        <type>DWORD</type>
      </field>
      <field offset="20" name="CompressionFormat">
        <type>WORD</type>
      </field>
      <field offset="22" name="DataUnitShift">
        <type>BYTE</type>
      </field>
      <field offset="23" name="ChunkShift">
        <type>BYTE</type>
      </field>
      <field offset="24" name="ClusterShift">
        <type>BYTE</type>
      </field>
      <field offset="25" name="EncryptionFormat">
        <type>BYTE</type>
      </field>
      <field offset="26" name="NumberOfDataBlocks">
        <type>WORD</type>
      </field>
      <field offset="28" name="DataBlockSize">
        <arr length="1">
          <type>DWORD</type>
        </arr>
      </field>
    </struct>
    <typedef name="ENCRYPTED_DATA_INFO">
      <struct name="_ENCRYPTED_DATA_INFO" />
    </typedef>
    <typedef name="PENCRYPTED_DATA_INFO">
      <ptr>
        <type>ENCRYPTED_DATA_INFO</type>
      </ptr>
    </typedef>
    <struct name="_PLEX_READ_DATA_REQUEST">
      <field offset="0" name="ByteOffset">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="8" name="ByteLength">
        <type>DWORD</type>
      </field>
      <field offset="12" name="PlexNumber">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PLEX_READ_DATA_REQUEST">
      <struct name="_PLEX_READ_DATA_REQUEST" />
    </typedef>
    <typedef name="PPLEX_READ_DATA_REQUEST">
      <ptr>
        <struct name="_PLEX_READ_DATA_REQUEST" />
      </ptr>
    </typedef>
    <struct name="_SI_COPYFILE">
      <field offset="0" name="SourceFileNameLength">
        <type>DWORD</type>
      </field>
      <field offset="4" name="DestinationFileNameLength">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="12" name="FileNameBuffer">
        <arr length="1">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="SI_COPYFILE">
      <struct name="_SI_COPYFILE" />
    </typedef>
    <typedef name="PSI_COPYFILE">
      <ptr>
        <struct name="_SI_COPYFILE" />
      </ptr>
    </typedef>
    <struct name="_FILE_MAKE_COMPATIBLE_BUFFER">
      <field offset="0" name="CloseDisc">
        <type>BOOLEAN</type>
      </field>
    </struct>
    <typedef name="FILE_MAKE_COMPATIBLE_BUFFER">
      <struct name="_FILE_MAKE_COMPATIBLE_BUFFER" />
    </typedef>
    <typedef name="PFILE_MAKE_COMPATIBLE_BUFFER">
      <ptr>
        <struct name="_FILE_MAKE_COMPATIBLE_BUFFER" />
      </ptr>
    </typedef>
    <struct name="_FILE_SET_DEFECT_MGMT_BUFFER">
      <field offset="0" name="Disable">
        <type>BOOLEAN</type>
      </field>
    </struct>
    <typedef name="FILE_SET_DEFECT_MGMT_BUFFER">
      <struct name="_FILE_SET_DEFECT_MGMT_BUFFER" />
    </typedef>
    <typedef name="PFILE_SET_DEFECT_MGMT_BUFFER">
      <ptr>
        <struct name="_FILE_SET_DEFECT_MGMT_BUFFER" />
      </ptr>
    </typedef>
    <struct name="_FILE_QUERY_SPARING_BUFFER">
      <field offset="0" name="SparingUnitBytes">
        <type>DWORD</type>
      </field>
      <field offset="4" name="SoftwareSparing">
        <type>BOOLEAN</type>
      </field>
      <field offset="8" name="TotalSpareBlocks">
        <type>DWORD</type>
      </field>
      <field offset="12" name="FreeSpareBlocks">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="FILE_QUERY_SPARING_BUFFER">
      <struct name="_FILE_QUERY_SPARING_BUFFER" />
    </typedef>
    <typedef name="PFILE_QUERY_SPARING_BUFFER">
      <ptr>
        <struct name="_FILE_QUERY_SPARING_BUFFER" />
      </ptr>
    </typedef>
    <struct name="_FILE_QUERY_ON_DISK_VOL_INFO_BUFFER">
      <field offset="0" name="DirectoryCount">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="8" name="FileCount">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="16" name="FsFormatMajVersion">
        <type>WORD</type>
      </field>
      <field offset="18" name="FsFormatMinVersion">
        <type>WORD</type>
      </field>
      <field offset="24" name="FsFormatName">
        <arr length="12">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="48" name="FormatTime">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="56" name="LastUpdateTime">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="64" name="CopyrightInfo">
        <arr length="34">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="136" name="AbstractInfo">
        <arr length="34">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="208" name="FormattingImplementationInfo">
        <arr length="34">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="280" name="LastModifyingImplementationInfo">
        <arr length="34">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="FILE_QUERY_ON_DISK_VOL_INFO_BUFFER">
      <struct name="_FILE_QUERY_ON_DISK_VOL_INFO_BUFFER" />
    </typedef>
    <typedef name="PFILE_QUERY_ON_DISK_VOL_INFO_BUFFER">
      <ptr>
        <struct name="_FILE_QUERY_ON_DISK_VOL_INFO_BUFFER" />
      </ptr>
    </typedef>
    <enum name="_SHRINK_VOLUME_REQUEST_TYPES">
      <member name="ShrinkPrepare" value="1" />
      <member name="ShrinkCommit" value="2" />
      <member name="ShrinkAbort" value="3" />
    </enum>
    <typedef name="SHRINK_VOLUME_REQUEST_TYPES">
      <enum name="_SHRINK_VOLUME_REQUEST_TYPES" />
    </typedef>
    <typedef name="PSHRINK_VOLUME_REQUEST_TYPES">
      <ptr>
        <enum name="_SHRINK_VOLUME_REQUEST_TYPES" />
      </ptr>
    </typedef>
    <struct name="_SHRINK_VOLUME_INFORMATION">
      <field offset="0" name="ShrinkRequestType">
        <type>SHRINK_VOLUME_REQUEST_TYPES</type>
      </field>
      <field offset="8" name="Flags">
        <type>DWORDLONG</type>
      </field>
      <field offset="16" name="NewNumberOfSectors">
        <type>LONGLONG</type>
      </field>
    </struct>
    <typedef name="SHRINK_VOLUME_INFORMATION">
      <struct name="_SHRINK_VOLUME_INFORMATION" />
    </typedef>
    <typedef name="PSHRINK_VOLUME_INFORMATION">
      <ptr>
        <struct name="_SHRINK_VOLUME_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_TXFS_MODIFY_RM">
      <field offset="0" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="4" name="LogContainerCountMax">
        <type>DWORD</type>
      </field>
      <field offset="8" name="LogContainerCountMin">
        <type>DWORD</type>
      </field>
      <field offset="12" name="LogContainerCount">
        <type>DWORD</type>
      </field>
      <field offset="16" name="LogGrowthIncrement">
        <type>DWORD</type>
      </field>
      <field offset="20" name="LogAutoShrinkPercentage">
        <type>DWORD</type>
      </field>
      <field offset="24" name="Reserved">
        <type>DWORDLONG</type>
      </field>
      <field offset="32" name="LoggingMode">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="TXFS_MODIFY_RM">
      <struct name="_TXFS_MODIFY_RM" />
    </typedef>
    <typedef name="PTXFS_MODIFY_RM">
      <ptr>
        <struct name="_TXFS_MODIFY_RM" />
      </ptr>
    </typedef>
    <struct name="_TXFS_QUERY_RM_INFORMATION">
      <field offset="0" name="BytesRequired">
        <type>DWORD</type>
      </field>
      <field offset="8" name="TailLsn">
        <type>DWORDLONG</type>
      </field>
      <field offset="16" name="CurrentLsn">
        <type>DWORDLONG</type>
      </field>
      <field offset="24" name="ArchiveTailLsn">
        <type>DWORDLONG</type>
      </field>
      <field offset="32" name="LogContainerSize">
        <type>DWORDLONG</type>
      </field>
      <field offset="40" name="HighestVirtualClock">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="48" name="LogContainerCount">
        <type>DWORD</type>
      </field>
      <field offset="52" name="LogContainerCountMax">
        <type>DWORD</type>
      </field>
      <field offset="56" name="LogContainerCountMin">
        <type>DWORD</type>
      </field>
      <field offset="60" name="LogGrowthIncrement">
        <type>DWORD</type>
      </field>
      <field offset="64" name="LogAutoShrinkPercentage">
        <type>DWORD</type>
      </field>
      <field offset="68" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="72" name="LoggingMode">
        <type>WORD</type>
      </field>
      <field offset="74" name="Reserved">
        <type>WORD</type>
      </field>
      <field offset="76" name="RmState">
        <type>DWORD</type>
      </field>
      <field offset="80" name="LogCapacity">
        <type>DWORDLONG</type>
      </field>
      <field offset="88" name="LogFree">
        <type>DWORDLONG</type>
      </field>
      <field offset="96" name="TopsSize">
        <type>DWORDLONG</type>
      </field>
      <field offset="104" name="TopsUsed">
        <type>DWORDLONG</type>
      </field>
      <field offset="112" name="TransactionCount">
        <type>DWORDLONG</type>
      </field>
      <field offset="120" name="OnePCCount">
        <type>DWORDLONG</type>
      </field>
      <field offset="128" name="TwoPCCount">
        <type>DWORDLONG</type>
      </field>
      <field offset="136" name="NumberLogFileFull">
        <type>DWORDLONG</type>
      </field>
      <field offset="144" name="OldestTransactionAge">
        <type>DWORDLONG</type>
      </field>
      <field offset="152" name="RMName">
        <type>GUID</type>
      </field>
      <field offset="168" name="TmLogPathOffset">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="TXFS_QUERY_RM_INFORMATION">
      <struct name="_TXFS_QUERY_RM_INFORMATION" />
    </typedef>
    <typedef name="PTXFS_QUERY_RM_INFORMATION">
      <ptr>
        <struct name="_TXFS_QUERY_RM_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_TXFS_ROLLFORWARD_REDO_INFORMATION">
      <field offset="0" name="LastVirtualClock">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="8" name="LastRedoLsn">
        <type>DWORDLONG</type>
      </field>
      <field offset="16" name="HighestRecoveryLsn">
        <type>DWORDLONG</type>
      </field>
      <field offset="24" name="Flags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="TXFS_ROLLFORWARD_REDO_INFORMATION">
      <struct name="_TXFS_ROLLFORWARD_REDO_INFORMATION" />
    </typedef>
    <typedef name="PTXFS_ROLLFORWARD_REDO_INFORMATION">
      <ptr>
        <struct name="_TXFS_ROLLFORWARD_REDO_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_TXFS_START_RM_INFORMATION">
      <field offset="0" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="LogContainerSize">
        <type>DWORDLONG</type>
      </field>
      <field offset="16" name="LogContainerCountMin">
        <type>DWORD</type>
      </field>
      <field offset="20" name="LogContainerCountMax">
        <type>DWORD</type>
      </field>
      <field offset="24" name="LogGrowthIncrement">
        <type>DWORD</type>
      </field>
      <field offset="28" name="LogAutoShrinkPercentage">
        <type>DWORD</type>
      </field>
      <field offset="32" name="TmLogPathOffset">
        <type>DWORD</type>
      </field>
      <field offset="36" name="TmLogPathLength">
        <type>WORD</type>
      </field>
      <field offset="38" name="LoggingMode">
        <type>WORD</type>
      </field>
      <field offset="40" name="LogPathLength">
        <type>WORD</type>
      </field>
      <field offset="42" name="Reserved">
        <type>WORD</type>
      </field>
      <field offset="44" name="LogPath">
        <arr length="1">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="TXFS_START_RM_INFORMATION">
      <struct name="_TXFS_START_RM_INFORMATION" />
    </typedef>
    <typedef name="PTXFS_START_RM_INFORMATION">
      <ptr>
        <struct name="_TXFS_START_RM_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="struct_153">
      <field offset="0" name="LowPart">
        <type>LONGLONG</type>
      </field>
      <field offset="8" name="HighPart">
        <type>LONGLONG</type>
      </field>
    </struct>
    <struct name="_TXFS_GET_METADATA_INFO_OUT">
      <field offset="0" name="TxfFileId">
        <struct name="struct_153" />
      </field>
      <field offset="16" name="LockingTransaction">
        <type>GUID</type>
      </field>
      <field offset="32" name="LastLsn">
        <type>DWORDLONG</type>
      </field>
      <field offset="40" name="TransactionState">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="TXFS_GET_METADATA_INFO_OUT">
      <struct name="_TXFS_GET_METADATA_INFO_OUT" />
    </typedef>
    <typedef name="PTXFS_GET_METADATA_INFO_OUT">
      <ptr>
        <struct name="_TXFS_GET_METADATA_INFO_OUT" />
      </ptr>
    </typedef>
    <struct name="_TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY">
      <field offset="0" name="Offset">
        <type>DWORDLONG</type>
      </field>
      <field offset="8" name="NameFlags">
        <type>DWORD</type>
      </field>
      <field offset="16" name="FileId">
        <type>LONGLONG</type>
      </field>
      <field offset="24" name="Reserved1">
        <type>DWORD</type>
      </field>
      <field offset="28" name="Reserved2">
        <type>DWORD</type>
      </field>
      <field offset="32" name="Reserved3">
        <type>LONGLONG</type>
      </field>
      <field offset="40" name="FileName">
        <arr length="1">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY">
      <struct name="_TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY" />
    </typedef>
    <typedef name="PTXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY">
      <ptr>
        <struct name="_TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY" />
      </ptr>
    </typedef>
    <struct name="_TXFS_LIST_TRANSACTION_LOCKED_FILES">
      <field offset="0" name="KtmTransaction">
        <type>GUID</type>
      </field>
      <field offset="16" name="NumberOfFiles">
        <type>DWORDLONG</type>
      </field>
      <field offset="24" name="BufferSizeRequired">
        <type>DWORDLONG</type>
      </field>
      <field offset="32" name="Offset">
        <type>DWORDLONG</type>
      </field>
    </struct>
    <typedef name="TXFS_LIST_TRANSACTION_LOCKED_FILES">
      <struct name="_TXFS_LIST_TRANSACTION_LOCKED_FILES" />
    </typedef>
    <typedef name="PTXFS_LIST_TRANSACTION_LOCKED_FILES">
      <ptr>
        <struct name="_TXFS_LIST_TRANSACTION_LOCKED_FILES" />
      </ptr>
    </typedef>
    <struct name="_TXFS_LIST_TRANSACTIONS_ENTRY">
      <field offset="0" name="TransactionId">
        <type>GUID</type>
      </field>
      <field offset="16" name="TransactionState">
        <type>DWORD</type>
      </field>
      <field offset="20" name="Reserved1">
        <type>DWORD</type>
      </field>
      <field offset="24" name="Reserved2">
        <type>DWORD</type>
      </field>
      <field offset="32" name="Reserved3">
        <type>LONGLONG</type>
      </field>
    </struct>
    <typedef name="TXFS_LIST_TRANSACTIONS_ENTRY">
      <struct name="_TXFS_LIST_TRANSACTIONS_ENTRY" />
    </typedef>
    <typedef name="PTXFS_LIST_TRANSACTIONS_ENTRY">
      <ptr>
        <struct name="_TXFS_LIST_TRANSACTIONS_ENTRY" />
      </ptr>
    </typedef>
    <struct name="_TXFS_LIST_TRANSACTIONS">
      <field offset="0" name="NumberOfTransactions">
        <type>DWORDLONG</type>
      </field>
      <field offset="8" name="BufferSizeRequired">
        <type>DWORDLONG</type>
      </field>
    </struct>
    <typedef name="TXFS_LIST_TRANSACTIONS">
      <struct name="_TXFS_LIST_TRANSACTIONS" />
    </typedef>
    <typedef name="PTXFS_LIST_TRANSACTIONS">
      <ptr>
        <struct name="_TXFS_LIST_TRANSACTIONS" />
      </ptr>
    </typedef>
    <struct name="_TXFS_READ_BACKUP_INFORMATION_OUT">
      <field offset="0">
        <union>
          <alt name="BufferLength">
            <type>DWORD</type>
          </alt>
          <alt name="Buffer">
            <arr length="1">
              <type>BYTE</type>
            </arr>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="TXFS_READ_BACKUP_INFORMATION_OUT">
      <struct name="_TXFS_READ_BACKUP_INFORMATION_OUT" />
    </typedef>
    <typedef name="PTXFS_READ_BACKUP_INFORMATION_OUT">
      <ptr>
        <struct name="_TXFS_READ_BACKUP_INFORMATION_OUT" />
      </ptr>
    </typedef>
    <struct name="_TXFS_WRITE_BACKUP_INFORMATION">
      <field offset="0" name="Buffer">
        <arr length="1">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="TXFS_WRITE_BACKUP_INFORMATION">
      <struct name="_TXFS_WRITE_BACKUP_INFORMATION" />
    </typedef>
    <typedef name="PTXFS_WRITE_BACKUP_INFORMATION">
      <ptr>
        <struct name="_TXFS_WRITE_BACKUP_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_TXFS_GET_TRANSACTED_VERSION">
      <field offset="0" name="ThisBaseVersion">
        <type>DWORD</type>
      </field>
      <field offset="4" name="LatestVersion">
        <type>DWORD</type>
      </field>
      <field offset="8" name="ThisMiniVersion">
        <type>WORD</type>
      </field>
      <field offset="10" name="FirstMiniVersion">
        <type>WORD</type>
      </field>
      <field offset="12" name="LatestMiniVersion">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="TXFS_GET_TRANSACTED_VERSION">
      <struct name="_TXFS_GET_TRANSACTED_VERSION" />
    </typedef>
    <typedef name="PTXFS_GET_TRANSACTED_VERSION">
      <ptr>
        <struct name="_TXFS_GET_TRANSACTED_VERSION" />
      </ptr>
    </typedef>
    <struct name="_TXFS_SAVEPOINT_INFORMATION">
      <field offset="0" name="KtmTransaction">
        <type>HANDLE</type>
      </field>
      <field offset="4" name="ActionCode">
        <type>DWORD</type>
      </field>
      <field offset="8" name="SavepointId">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="TXFS_SAVEPOINT_INFORMATION">
      <struct name="_TXFS_SAVEPOINT_INFORMATION" />
    </typedef>
    <typedef name="PTXFS_SAVEPOINT_INFORMATION">
      <ptr>
        <struct name="_TXFS_SAVEPOINT_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_TXFS_CREATE_MINIVERSION_INFO">
      <field offset="0" name="StructureVersion">
        <type>WORD</type>
      </field>
      <field offset="2" name="StructureLength">
        <type>WORD</type>
      </field>
      <field offset="4" name="BaseVersion">
        <type>DWORD</type>
      </field>
      <field offset="8" name="MiniVersion">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="TXFS_CREATE_MINIVERSION_INFO">
      <struct name="_TXFS_CREATE_MINIVERSION_INFO" />
    </typedef>
    <typedef name="PTXFS_CREATE_MINIVERSION_INFO">
      <ptr>
        <struct name="_TXFS_CREATE_MINIVERSION_INFO" />
      </ptr>
    </typedef>
    <struct name="_TXFS_TRANSACTION_ACTIVE_INFO">
      <field offset="0" name="TransactionsActiveAtSnapshot">
        <type>BOOLEAN</type>
      </field>
    </struct>
    <typedef name="TXFS_TRANSACTION_ACTIVE_INFO">
      <struct name="_TXFS_TRANSACTION_ACTIVE_INFO" />
    </typedef>
    <typedef name="PTXFS_TRANSACTION_ACTIVE_INFO">
      <ptr>
        <struct name="_TXFS_TRANSACTION_ACTIVE_INFO" />
      </ptr>
    </typedef>
    <struct name="struct_154">
      <field offset="0" name="Offset">
        <type>LARGE_INTEGER</type>
      </field>
    </struct>
    <struct name="_BOOT_AREA_INFO">
      <field offset="0" name="BootSectorCount">
        <type>DWORD</type>
      </field>
      <field offset="8" name="BootSectors">
        <arr length="2">
          <struct name="struct_154" />
        </arr>
      </field>
    </struct>
    <typedef name="BOOT_AREA_INFO">
      <struct name="_BOOT_AREA_INFO" />
    </typedef>
    <typedef name="PBOOT_AREA_INFO">
      <ptr>
        <struct name="_BOOT_AREA_INFO" />
      </ptr>
    </typedef>
    <struct name="_RETRIEVAL_POINTER_BASE">
      <field offset="0" name="FileAreaOffset">
        <type>LARGE_INTEGER</type>
      </field>
    </struct>
    <typedef name="RETRIEVAL_POINTER_BASE">
      <struct name="_RETRIEVAL_POINTER_BASE" />
    </typedef>
    <typedef name="PRETRIEVAL_POINTER_BASE">
      <ptr>
        <struct name="_RETRIEVAL_POINTER_BASE" />
      </ptr>
    </typedef>
    <struct name="_FILE_FS_PERSISTENT_VOLUME_INFORMATION">
      <field offset="0" name="VolumeFlags">
        <type>DWORD</type>
      </field>
      <field offset="4" name="FlagMask">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Version">
        <type>DWORD</type>
      </field>
      <field offset="12" name="Reserved">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="FILE_FS_PERSISTENT_VOLUME_INFORMATION">
      <struct name="_FILE_FS_PERSISTENT_VOLUME_INFORMATION" />
    </typedef>
    <typedef name="PFILE_FS_PERSISTENT_VOLUME_INFORMATION">
      <ptr>
        <struct name="_FILE_FS_PERSISTENT_VOLUME_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_FILE_SYSTEM_RECOGNITION_INFORMATION">
      <field offset="0" name="FileSystem">
        <arr length="9">
          <type>CHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="FILE_SYSTEM_RECOGNITION_INFORMATION">
      <struct name="_FILE_SYSTEM_RECOGNITION_INFORMATION" />
    </typedef>
    <typedef name="PFILE_SYSTEM_RECOGNITION_INFORMATION">
      <ptr>
        <struct name="_FILE_SYSTEM_RECOGNITION_INFORMATION" />
      </ptr>
    </typedef>
    <struct name="_REQUEST_OPLOCK_INPUT_BUFFER">
      <field offset="0" name="StructureVersion">
        <type>WORD</type>
      </field>
      <field offset="2" name="StructureLength">
        <type>WORD</type>
      </field>
      <field offset="4" name="RequestedOplockLevel">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Flags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="REQUEST_OPLOCK_INPUT_BUFFER">
      <struct name="_REQUEST_OPLOCK_INPUT_BUFFER" />
    </typedef>
    <typedef name="PREQUEST_OPLOCK_INPUT_BUFFER">
      <ptr>
        <struct name="_REQUEST_OPLOCK_INPUT_BUFFER" />
      </ptr>
    </typedef>
    <struct name="_REQUEST_OPLOCK_OUTPUT_BUFFER">
      <field offset="0" name="StructureVersion">
        <type>WORD</type>
      </field>
      <field offset="2" name="StructureLength">
        <type>WORD</type>
      </field>
      <field offset="4" name="OriginalOplockLevel">
        <type>DWORD</type>
      </field>
      <field offset="8" name="NewOplockLevel">
        <type>DWORD</type>
      </field>
      <field offset="12" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="16" name="AccessMode">
        <type>ACCESS_MASK</type>
      </field>
      <field offset="20" name="ShareMode">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="REQUEST_OPLOCK_OUTPUT_BUFFER">
      <struct name="_REQUEST_OPLOCK_OUTPUT_BUFFER" />
    </typedef>
    <typedef name="PREQUEST_OPLOCK_OUTPUT_BUFFER">
      <ptr>
        <struct name="_REQUEST_OPLOCK_OUTPUT_BUFFER" />
      </ptr>
    </typedef>
    <struct name="_SD_CHANGE_MACHINE_SID_INPUT">
      <field offset="0" name="CurrentMachineSIDOffset">
        <type>WORD</type>
      </field>
      <field offset="2" name="CurrentMachineSIDLength">
        <type>WORD</type>
      </field>
      <field offset="4" name="NewMachineSIDOffset">
        <type>WORD</type>
      </field>
      <field offset="6" name="NewMachineSIDLength">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="SD_CHANGE_MACHINE_SID_INPUT">
      <struct name="_SD_CHANGE_MACHINE_SID_INPUT" />
    </typedef>
    <typedef name="PSD_CHANGE_MACHINE_SID_INPUT">
      <ptr>
        <struct name="_SD_CHANGE_MACHINE_SID_INPUT" />
      </ptr>
    </typedef>
    <struct name="_SD_CHANGE_MACHINE_SID_OUTPUT">
      <field offset="0" name="NumSDChangedSuccess">
        <type>DWORDLONG</type>
      </field>
      <field offset="8" name="NumSDChangedFail">
        <type>DWORDLONG</type>
      </field>
      <field offset="16" name="NumSDUnused">
        <type>DWORDLONG</type>
      </field>
      <field offset="24" name="NumSDTotal">
        <type>DWORDLONG</type>
      </field>
      <field offset="32" name="NumMftSDChangedSuccess">
        <type>DWORDLONG</type>
      </field>
      <field offset="40" name="NumMftSDChangedFail">
        <type>DWORDLONG</type>
      </field>
      <field offset="48" name="NumMftSDTotal">
        <type>DWORDLONG</type>
      </field>
    </struct>
    <typedef name="SD_CHANGE_MACHINE_SID_OUTPUT">
      <struct name="_SD_CHANGE_MACHINE_SID_OUTPUT" />
    </typedef>
    <typedef name="PSD_CHANGE_MACHINE_SID_OUTPUT">
      <ptr>
        <struct name="_SD_CHANGE_MACHINE_SID_OUTPUT" />
      </ptr>
    </typedef>
    <struct name="_SD_GLOBAL_CHANGE_INPUT">
      <field offset="0" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="4" name="ChangeType">
        <type>DWORD</type>
      </field>
      <field offset="8">
        <union>
          <alt name="SdChange">
            <type>SD_CHANGE_MACHINE_SID_INPUT</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="SD_GLOBAL_CHANGE_INPUT">
      <struct name="_SD_GLOBAL_CHANGE_INPUT" />
    </typedef>
    <typedef name="PSD_GLOBAL_CHANGE_INPUT">
      <ptr>
        <struct name="_SD_GLOBAL_CHANGE_INPUT" />
      </ptr>
    </typedef>
    <struct name="_SD_GLOBAL_CHANGE_OUTPUT">
      <field offset="0" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="4" name="ChangeType">
        <type>DWORD</type>
      </field>
      <field offset="8">
        <union>
          <alt name="SdChange">
            <type>SD_CHANGE_MACHINE_SID_OUTPUT</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="SD_GLOBAL_CHANGE_OUTPUT">
      <struct name="_SD_GLOBAL_CHANGE_OUTPUT" />
    </typedef>
    <typedef name="PSD_GLOBAL_CHANGE_OUTPUT">
      <ptr>
        <struct name="_SD_GLOBAL_CHANGE_OUTPUT" />
      </ptr>
    </typedef>
    <struct name="_EXTENDED_ENCRYPTED_DATA_INFO">
      <field offset="0" name="ExtendedCode">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Length">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="12" name="Reserved">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="EXTENDED_ENCRYPTED_DATA_INFO">
      <struct name="_EXTENDED_ENCRYPTED_DATA_INFO" />
    </typedef>
    <typedef name="PEXTENDED_ENCRYPTED_DATA_INFO">
      <ptr>
        <struct name="_EXTENDED_ENCRYPTED_DATA_INFO" />
      </ptr>
    </typedef>
    <struct name="_LOOKUP_STREAM_FROM_CLUSTER_INPUT">
      <field offset="0" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="4" name="NumberOfClusters">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Cluster">
        <arr length="1">
          <type>LARGE_INTEGER</type>
        </arr>
      </field>
    </struct>
    <typedef name="LOOKUP_STREAM_FROM_CLUSTER_INPUT">
      <struct name="_LOOKUP_STREAM_FROM_CLUSTER_INPUT" />
    </typedef>
    <typedef name="PLOOKUP_STREAM_FROM_CLUSTER_INPUT">
      <ptr>
        <struct name="_LOOKUP_STREAM_FROM_CLUSTER_INPUT" />
      </ptr>
    </typedef>
    <struct name="_LOOKUP_STREAM_FROM_CLUSTER_OUTPUT">
      <field offset="0" name="Offset">
        <type>DWORD</type>
      </field>
      <field offset="4" name="NumberOfMatches">
        <type>DWORD</type>
      </field>
      <field offset="8" name="BufferSizeRequired">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="LOOKUP_STREAM_FROM_CLUSTER_OUTPUT">
      <struct name="_LOOKUP_STREAM_FROM_CLUSTER_OUTPUT" />
    </typedef>
    <typedef name="PLOOKUP_STREAM_FROM_CLUSTER_OUTPUT">
      <ptr>
        <struct name="_LOOKUP_STREAM_FROM_CLUSTER_OUTPUT" />
      </ptr>
    </typedef>
    <struct name="_LOOKUP_STREAM_FROM_CLUSTER_ENTRY">
      <field offset="0" name="OffsetToNext">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Reserved">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="16" name="Cluster">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="24" name="FileName">
        <arr length="1">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="LOOKUP_STREAM_FROM_CLUSTER_ENTRY">
      <struct name="_LOOKUP_STREAM_FROM_CLUSTER_ENTRY" />
    </typedef>
    <typedef name="PLOOKUP_STREAM_FROM_CLUSTER_ENTRY">
      <ptr>
        <struct name="_LOOKUP_STREAM_FROM_CLUSTER_ENTRY" />
      </ptr>
    </typedef>
    <struct name="_FILE_TYPE_NOTIFICATION_INPUT">
      <field offset="0" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="4" name="NumFileTypeIDs">
        <type>DWORD</type>
      </field>
      <field offset="8" name="FileTypeID">
        <arr length="1">
          <type>GUID</type>
        </arr>
      </field>
    </struct>
    <typedef name="FILE_TYPE_NOTIFICATION_INPUT">
      <struct name="_FILE_TYPE_NOTIFICATION_INPUT" />
    </typedef>
    <typedef name="PFILE_TYPE_NOTIFICATION_INPUT">
      <ptr>
        <struct name="_FILE_TYPE_NOTIFICATION_INPUT" />
      </ptr>
    </typedef>
    <struct name="_DISK_EXTENT">
      <field offset="0" name="DiskNumber">
        <type>DWORD</type>
      </field>
      <field offset="8" name="StartingOffset">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="16" name="ExtentLength">
        <type>LARGE_INTEGER</type>
      </field>
    </struct>
    <typedef name="DISK_EXTENT">
      <struct name="_DISK_EXTENT" />
    </typedef>
    <typedef name="PDISK_EXTENT">
      <ptr>
        <struct name="_DISK_EXTENT" />
      </ptr>
    </typedef>
    <struct name="_VOLUME_DISK_EXTENTS">
      <field offset="0" name="NumberOfDiskExtents">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Extents">
        <arr length="1">
          <type>DISK_EXTENT</type>
        </arr>
      </field>
    </struct>
    <typedef name="VOLUME_DISK_EXTENTS">
      <struct name="_VOLUME_DISK_EXTENTS" />
    </typedef>
    <typedef name="PVOLUME_DISK_EXTENTS">
      <ptr>
        <struct name="_VOLUME_DISK_EXTENTS" />
      </ptr>
    </typedef>
    <struct name="_VOLUME_GET_GPT_ATTRIBUTES_INFORMATION">
      <field offset="0" name="GptAttributes">
        <type>DWORDLONG</type>
      </field>
    </struct>
    <typedef name="VOLUME_GET_GPT_ATTRIBUTES_INFORMATION">
      <struct name="_VOLUME_GET_GPT_ATTRIBUTES_INFORMATION" />
    </typedef>
    <typedef name="PVOLUME_GET_GPT_ATTRIBUTES_INFORMATION">
      <ptr>
        <struct name="_VOLUME_GET_GPT_ATTRIBUTES_INFORMATION" />
      </ptr>
    </typedef>
    <typedef name="ULONG">
      <type>DWORD</type>
    </typedef>
    <typedef name="UWORD">
      <type>WORD</type>
    </typedef>
    <typedef name="UCHAR">
      <type>BYTE</type>
    </typedef>
    <struct name="_SCARD_IO_REQUEST">
      <field offset="0" name="dwProtocol">
        <type>DWORD</type>
      </field>
      <field offset="4" name="cbPciLength">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="SCARD_IO_REQUEST">
      <struct name="_SCARD_IO_REQUEST" />
    </typedef>
    <typedef name="PSCARD_IO_REQUEST">
      <ptr>
        <struct name="_SCARD_IO_REQUEST" />
      </ptr>
    </typedef>
    <typedef name="LPSCARD_IO_REQUEST">
      <ptr>
        <struct name="_SCARD_IO_REQUEST" />
      </ptr>
    </typedef>
    <typedef name="LPCSCARD_IO_REQUEST">
      <ptr>
        <type>SCARD_IO_REQUEST</type>
      </ptr>
    </typedef>
    <struct name="struct_155">
      <field offset="0" name="bCla">
        <type>BYTE</type>
      </field>
      <field offset="1" name="bIns">
        <type>BYTE</type>
      </field>
      <field offset="2" name="bP1">
        <type>BYTE</type>
      </field>
      <field offset="3" name="bP2">
        <type>BYTE</type>
      </field>
      <field offset="4" name="bP3">
        <type>BYTE</type>
      </field>
    </struct>
    <typedef name="SCARD_T0_COMMAND">
      <struct name="struct_155" />
    </typedef>
    <typedef name="LPSCARD_T0_COMMAND">
      <ptr>
        <struct name="struct_155" />
      </ptr>
    </typedef>
    <struct name="struct_156">
      <field offset="0" name="ioRequest">
        <type>SCARD_IO_REQUEST</type>
      </field>
      <field offset="8" name="bSw1">
        <type>BYTE</type>
      </field>
      <field offset="9" name="bSw2">
        <type>BYTE</type>
      </field>
      <field offset="10">
        <union>
          <alt name="CmdBytes">
            <type>SCARD_T0_COMMAND</type>
          </alt>
          <alt name="rgbHeader">
            <arr length="5">
              <type>BYTE</type>
            </arr>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="SCARD_T0_REQUEST">
      <struct name="struct_156" />
    </typedef>
    <typedef name="PSCARD_T0_REQUEST">
      <ptr>
        <type>SCARD_T0_REQUEST</type>
      </ptr>
    </typedef>
    <typedef name="LPSCARD_T0_REQUEST">
      <ptr>
        <type>SCARD_T0_REQUEST</type>
      </ptr>
    </typedef>
    <struct name="struct_157">
      <field offset="0" name="ioRequest">
        <type>SCARD_IO_REQUEST</type>
      </field>
    </struct>
    <typedef name="SCARD_T1_REQUEST">
      <struct name="struct_157" />
    </typedef>
    <typedef name="PSCARD_T1_REQUEST">
      <ptr>
        <type>SCARD_T1_REQUEST</type>
      </ptr>
    </typedef>
    <typedef name="LPSCARD_T1_REQUEST">
      <ptr>
        <type>SCARD_T1_REQUEST</type>
      </ptr>
    </typedef>
    <typedef name="LPCBYTE">
      <ptr>
        <type>BYTE</type>
      </ptr>
    </typedef>
    <typedef name="LPCVOID">
      <ptr>
        <void />
      </ptr>
    </typedef>
    <typedef name="SCARDCONTEXT">
      <type>ULONG_PTR</type>
    </typedef>
    <typedef name="PSCARDCONTEXT">
      <ptr>
        <type>SCARDCONTEXT</type>
      </ptr>
    </typedef>
    <typedef name="LPSCARDCONTEXT">
      <ptr>
        <type>SCARDCONTEXT</type>
      </ptr>
    </typedef>
    <typedef name="SCARDHANDLE">
      <type>ULONG_PTR</type>
    </typedef>
    <typedef name="PSCARDHANDLE">
      <ptr>
        <type>SCARDHANDLE</type>
      </ptr>
    </typedef>
    <typedef name="LPSCARDHANDLE">
      <ptr>
        <type>SCARDHANDLE</type>
      </ptr>
    </typedef>
    <struct name="struct_158">
      <field offset="0" name="szReader">
        <type>LPCSTR</type>
      </field>
      <field offset="4" name="pvUserData">
        <type>LPVOID</type>
      </field>
      <field offset="8" name="dwCurrentState">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwEventState">
        <type>DWORD</type>
      </field>
      <field offset="16" name="cbAtr">
        <type>DWORD</type>
      </field>
      <field offset="24" name="rgbAtr">
        <arr length="36">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="SCARD_READERSTATEA">
      <struct name="struct_158" />
    </typedef>
    <typedef name="PSCARD_READERSTATEA">
      <ptr>
        <struct name="struct_158" />
      </ptr>
    </typedef>
    <typedef name="LPSCARD_READERSTATEA">
      <ptr>
        <struct name="struct_158" />
      </ptr>
    </typedef>
    <struct name="struct_159">
      <field offset="0" name="szReader">
        <type>LPCWSTR</type>
      </field>
      <field offset="4" name="pvUserData">
        <type>LPVOID</type>
      </field>
      <field offset="8" name="dwCurrentState">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwEventState">
        <type>DWORD</type>
      </field>
      <field offset="16" name="cbAtr">
        <type>DWORD</type>
      </field>
      <field offset="24" name="rgbAtr">
        <arr length="36">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="SCARD_READERSTATEW">
      <struct name="struct_159" />
    </typedef>
    <typedef name="PSCARD_READERSTATEW">
      <ptr>
        <struct name="struct_159" />
      </ptr>
    </typedef>
    <typedef name="LPSCARD_READERSTATEW">
      <ptr>
        <struct name="struct_159" />
      </ptr>
    </typedef>
    <typedef name="SCARD_READERSTATE">
      <type>SCARD_READERSTATEA</type>
    </typedef>
    <typedef name="PSCARD_READERSTATE">
      <type>PSCARD_READERSTATEA</type>
    </typedef>
    <typedef name="LPSCARD_READERSTATE">
      <type>LPSCARD_READERSTATEA</type>
    </typedef>
    <struct name="_SCARD_ATRMASK">
      <field offset="0" name="cbAtr">
        <type>DWORD</type>
      </field>
      <field offset="8" name="rgbAtr">
        <arr length="36">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="48" name="rgbMask">
        <arr length="36">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="SCARD_ATRMASK">
      <struct name="_SCARD_ATRMASK" />
    </typedef>
    <typedef name="PSCARD_ATRMASK">
      <ptr>
        <struct name="_SCARD_ATRMASK" />
      </ptr>
    </typedef>
    <typedef name="LPSCARD_ATRMASK">
      <ptr>
        <struct name="_SCARD_ATRMASK" />
      </ptr>
    </typedef>
    <typedef name="LPOCNCONNPROCA">
      <ptr>
        <fn>
          <return>
            <type>SCARDHANDLE</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>SCARDCONTEXT</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPSTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPSTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>PVOID</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="LPOCNCONNPROCW">
      <ptr>
        <fn>
          <return>
            <type>SCARDHANDLE</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>SCARDCONTEXT</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPWSTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPWSTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>PVOID</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="LPOCNCHKPROC">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>SCARDCONTEXT</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>SCARDHANDLE</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>PVOID</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="LPOCNDSCPROC">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg>
            <type>SCARDCONTEXT</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>SCARDHANDLE</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>PVOID</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="struct_160">
      <field offset="0" name="dwStructSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="lpstrGroupNames">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="nMaxGroupNames">
        <type>DWORD</type>
      </field>
      <field offset="12" name="rgguidInterfaces">
        <type>LPCGUID</type>
      </field>
      <field offset="16" name="cguidInterfaces">
        <type>DWORD</type>
      </field>
      <field offset="20" name="lpstrCardNames">
        <type>LPSTR</type>
      </field>
      <field offset="24" name="nMaxCardNames">
        <type>DWORD</type>
      </field>
      <field offset="28" name="lpfnCheck">
        <type>LPOCNCHKPROC</type>
      </field>
      <field offset="32" name="lpfnConnect">
        <type>LPOCNCONNPROCA</type>
      </field>
      <field offset="36" name="lpfnDisconnect">
        <type>LPOCNDSCPROC</type>
      </field>
      <field offset="40" name="pvUserData">
        <type>LPVOID</type>
      </field>
      <field offset="44" name="dwShareMode">
        <type>DWORD</type>
      </field>
      <field offset="48" name="dwPreferredProtocols">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="OPENCARD_SEARCH_CRITERIAA">
      <struct name="struct_160" />
    </typedef>
    <typedef name="POPENCARD_SEARCH_CRITERIAA">
      <ptr>
        <struct name="struct_160" />
      </ptr>
    </typedef>
    <typedef name="LPOPENCARD_SEARCH_CRITERIAA">
      <ptr>
        <struct name="struct_160" />
      </ptr>
    </typedef>
    <struct name="struct_161">
      <field offset="0" name="dwStructSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="lpstrGroupNames">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="nMaxGroupNames">
        <type>DWORD</type>
      </field>
      <field offset="12" name="rgguidInterfaces">
        <type>LPCGUID</type>
      </field>
      <field offset="16" name="cguidInterfaces">
        <type>DWORD</type>
      </field>
      <field offset="20" name="lpstrCardNames">
        <type>LPWSTR</type>
      </field>
      <field offset="24" name="nMaxCardNames">
        <type>DWORD</type>
      </field>
      <field offset="28" name="lpfnCheck">
        <type>LPOCNCHKPROC</type>
      </field>
      <field offset="32" name="lpfnConnect">
        <type>LPOCNCONNPROCW</type>
      </field>
      <field offset="36" name="lpfnDisconnect">
        <type>LPOCNDSCPROC</type>
      </field>
      <field offset="40" name="pvUserData">
        <type>LPVOID</type>
      </field>
      <field offset="44" name="dwShareMode">
        <type>DWORD</type>
      </field>
      <field offset="48" name="dwPreferredProtocols">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="OPENCARD_SEARCH_CRITERIAW">
      <struct name="struct_161" />
    </typedef>
    <typedef name="POPENCARD_SEARCH_CRITERIAW">
      <ptr>
        <struct name="struct_161" />
      </ptr>
    </typedef>
    <typedef name="LPOPENCARD_SEARCH_CRITERIAW">
      <ptr>
        <struct name="struct_161" />
      </ptr>
    </typedef>
    <typedef name="OPENCARD_SEARCH_CRITERIA">
      <type>OPENCARD_SEARCH_CRITERIAA</type>
    </typedef>
    <typedef name="POPENCARD_SEARCH_CRITERIA">
      <type>POPENCARD_SEARCH_CRITERIAA</type>
    </typedef>
    <typedef name="LPOPENCARD_SEARCH_CRITERIA">
      <type>LPOPENCARD_SEARCH_CRITERIAA</type>
    </typedef>
    <struct name="struct_162">
      <field offset="0" name="dwStructSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="hSCardContext">
        <type>SCARDCONTEXT</type>
      </field>
      <field offset="8" name="hwndOwner">
        <type>HWND</type>
      </field>
      <field offset="12" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="16" name="lpstrTitle">
        <type>LPCSTR</type>
      </field>
      <field offset="20" name="lpstrSearchDesc">
        <type>LPCSTR</type>
      </field>
      <field offset="24" name="hIcon">
        <type>HICON</type>
      </field>
      <field offset="28" name="pOpenCardSearchCriteria">
        <type>POPENCARD_SEARCH_CRITERIAA</type>
      </field>
      <field offset="32" name="lpfnConnect">
        <type>LPOCNCONNPROCA</type>
      </field>
      <field offset="36" name="pvUserData">
        <type>LPVOID</type>
      </field>
      <field offset="40" name="dwShareMode">
        <type>DWORD</type>
      </field>
      <field offset="44" name="dwPreferredProtocols">
        <type>DWORD</type>
      </field>
      <field offset="48" name="lpstrRdr">
        <type>LPSTR</type>
      </field>
      <field offset="52" name="nMaxRdr">
        <type>DWORD</type>
      </field>
      <field offset="56" name="lpstrCard">
        <type>LPSTR</type>
      </field>
      <field offset="60" name="nMaxCard">
        <type>DWORD</type>
      </field>
      <field offset="64" name="dwActiveProtocol">
        <type>DWORD</type>
      </field>
      <field offset="68" name="hCardHandle">
        <type>SCARDHANDLE</type>
      </field>
    </struct>
    <typedef name="OPENCARDNAME_EXA">
      <struct name="struct_162" />
    </typedef>
    <typedef name="POPENCARDNAME_EXA">
      <ptr>
        <struct name="struct_162" />
      </ptr>
    </typedef>
    <typedef name="LPOPENCARDNAME_EXA">
      <ptr>
        <struct name="struct_162" />
      </ptr>
    </typedef>
    <struct name="struct_163">
      <field offset="0" name="dwStructSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="hSCardContext">
        <type>SCARDCONTEXT</type>
      </field>
      <field offset="8" name="hwndOwner">
        <type>HWND</type>
      </field>
      <field offset="12" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="16" name="lpstrTitle">
        <type>LPCWSTR</type>
      </field>
      <field offset="20" name="lpstrSearchDesc">
        <type>LPCWSTR</type>
      </field>
      <field offset="24" name="hIcon">
        <type>HICON</type>
      </field>
      <field offset="28" name="pOpenCardSearchCriteria">
        <type>POPENCARD_SEARCH_CRITERIAW</type>
      </field>
      <field offset="32" name="lpfnConnect">
        <type>LPOCNCONNPROCW</type>
      </field>
      <field offset="36" name="pvUserData">
        <type>LPVOID</type>
      </field>
      <field offset="40" name="dwShareMode">
        <type>DWORD</type>
      </field>
      <field offset="44" name="dwPreferredProtocols">
        <type>DWORD</type>
      </field>
      <field offset="48" name="lpstrRdr">
        <type>LPWSTR</type>
      </field>
      <field offset="52" name="nMaxRdr">
        <type>DWORD</type>
      </field>
      <field offset="56" name="lpstrCard">
        <type>LPWSTR</type>
      </field>
      <field offset="60" name="nMaxCard">
        <type>DWORD</type>
      </field>
      <field offset="64" name="dwActiveProtocol">
        <type>DWORD</type>
      </field>
      <field offset="68" name="hCardHandle">
        <type>SCARDHANDLE</type>
      </field>
    </struct>
    <typedef name="OPENCARDNAME_EXW">
      <struct name="struct_163" />
    </typedef>
    <typedef name="POPENCARDNAME_EXW">
      <ptr>
        <struct name="struct_163" />
      </ptr>
    </typedef>
    <typedef name="LPOPENCARDNAME_EXW">
      <ptr>
        <struct name="struct_163" />
      </ptr>
    </typedef>
    <typedef name="OPENCARDNAME_EX">
      <type>OPENCARDNAME_EXA</type>
    </typedef>
    <typedef name="POPENCARDNAME_EX">
      <type>POPENCARDNAME_EXA</type>
    </typedef>
    <typedef name="LPOPENCARDNAME_EX">
      <type>LPOPENCARDNAME_EXA</type>
    </typedef>
    <struct name="struct_164">
      <field offset="0" name="dwStructSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="hwndOwner">
        <type>HWND</type>
      </field>
      <field offset="8" name="hSCardContext">
        <type>SCARDCONTEXT</type>
      </field>
      <field offset="12" name="lpstrGroupNames">
        <type>LPSTR</type>
      </field>
      <field offset="16" name="nMaxGroupNames">
        <type>DWORD</type>
      </field>
      <field offset="20" name="lpstrCardNames">
        <type>LPSTR</type>
      </field>
      <field offset="24" name="nMaxCardNames">
        <type>DWORD</type>
      </field>
      <field offset="28" name="rgguidInterfaces">
        <type>LPCGUID</type>
      </field>
      <field offset="32" name="cguidInterfaces">
        <type>DWORD</type>
      </field>
      <field offset="36" name="lpstrRdr">
        <type>LPSTR</type>
      </field>
      <field offset="40" name="nMaxRdr">
        <type>DWORD</type>
      </field>
      <field offset="44" name="lpstrCard">
        <type>LPSTR</type>
      </field>
      <field offset="48" name="nMaxCard">
        <type>DWORD</type>
      </field>
      <field offset="52" name="lpstrTitle">
        <type>LPCSTR</type>
      </field>
      <field offset="56" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="60" name="pvUserData">
        <type>LPVOID</type>
      </field>
      <field offset="64" name="dwShareMode">
        <type>DWORD</type>
      </field>
      <field offset="68" name="dwPreferredProtocols">
        <type>DWORD</type>
      </field>
      <field offset="72" name="dwActiveProtocol">
        <type>DWORD</type>
      </field>
      <field offset="76" name="lpfnConnect">
        <type>LPOCNCONNPROCA</type>
      </field>
      <field offset="80" name="lpfnCheck">
        <type>LPOCNCHKPROC</type>
      </field>
      <field offset="84" name="lpfnDisconnect">
        <type>LPOCNDSCPROC</type>
      </field>
      <field offset="88" name="hCardHandle">
        <type>SCARDHANDLE</type>
      </field>
    </struct>
    <typedef name="OPENCARDNAMEA">
      <struct name="struct_164" />
    </typedef>
    <typedef name="POPENCARDNAMEA">
      <ptr>
        <struct name="struct_164" />
      </ptr>
    </typedef>
    <typedef name="LPOPENCARDNAMEA">
      <ptr>
        <struct name="struct_164" />
      </ptr>
    </typedef>
    <struct name="struct_165">
      <field offset="0" name="dwStructSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="hwndOwner">
        <type>HWND</type>
      </field>
      <field offset="8" name="hSCardContext">
        <type>SCARDCONTEXT</type>
      </field>
      <field offset="12" name="lpstrGroupNames">
        <type>LPWSTR</type>
      </field>
      <field offset="16" name="nMaxGroupNames">
        <type>DWORD</type>
      </field>
      <field offset="20" name="lpstrCardNames">
        <type>LPWSTR</type>
      </field>
      <field offset="24" name="nMaxCardNames">
        <type>DWORD</type>
      </field>
      <field offset="28" name="rgguidInterfaces">
        <type>LPCGUID</type>
      </field>
      <field offset="32" name="cguidInterfaces">
        <type>DWORD</type>
      </field>
      <field offset="36" name="lpstrRdr">
        <type>LPWSTR</type>
      </field>
      <field offset="40" name="nMaxRdr">
        <type>DWORD</type>
      </field>
      <field offset="44" name="lpstrCard">
        <type>LPWSTR</type>
      </field>
      <field offset="48" name="nMaxCard">
        <type>DWORD</type>
      </field>
      <field offset="52" name="lpstrTitle">
        <type>LPCWSTR</type>
      </field>
      <field offset="56" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="60" name="pvUserData">
        <type>LPVOID</type>
      </field>
      <field offset="64" name="dwShareMode">
        <type>DWORD</type>
      </field>
      <field offset="68" name="dwPreferredProtocols">
        <type>DWORD</type>
      </field>
      <field offset="72" name="dwActiveProtocol">
        <type>DWORD</type>
      </field>
      <field offset="76" name="lpfnConnect">
        <type>LPOCNCONNPROCW</type>
      </field>
      <field offset="80" name="lpfnCheck">
        <type>LPOCNCHKPROC</type>
      </field>
      <field offset="84" name="lpfnDisconnect">
        <type>LPOCNDSCPROC</type>
      </field>
      <field offset="88" name="hCardHandle">
        <type>SCARDHANDLE</type>
      </field>
    </struct>
    <typedef name="OPENCARDNAMEW">
      <struct name="struct_165" />
    </typedef>
    <typedef name="POPENCARDNAMEW">
      <ptr>
        <struct name="struct_165" />
      </ptr>
    </typedef>
    <typedef name="LPOPENCARDNAMEW">
      <ptr>
        <struct name="struct_165" />
      </ptr>
    </typedef>
    <typedef name="OPENCARDNAME">
      <type>OPENCARDNAMEA</type>
    </typedef>
    <typedef name="POPENCARDNAME">
      <type>POPENCARDNAMEA</type>
    </typedef>
    <typedef name="LPOPENCARDNAME">
      <type>LPOPENCARDNAMEA</type>
    </typedef>
    <typedef name="HPROPSHEETPAGE">
      <ptr>
        <struct name="_PSP" />
      </ptr>
    </typedef>
    <typedef name="LPFNPSPCALLBACKA">
      <ptr>
        <fn>
          <return>
            <type>UINT</type>
            <reg>eax</reg>
          </return>
          <arg name="hwnd">
            <type>HWND</type>
            <stack size="4" />
          </arg>
          <arg name="uMsg">
            <type>UINT</type>
            <stack size="4" />
          </arg>
          <arg name="ppsp">
            <ptr>
              <struct name="_PROPSHEETPAGEA" />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="LPFNPSPCALLBACKW">
      <ptr>
        <fn>
          <return>
            <type>UINT</type>
            <reg>eax</reg>
          </return>
          <arg name="hwnd">
            <type>HWND</type>
            <stack size="4" />
          </arg>
          <arg name="uMsg">
            <type>UINT</type>
            <stack size="4" />
          </arg>
          <arg name="ppsp">
            <ptr>
              <struct name="_PROPSHEETPAGEW" />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PROPSHEETPAGE_RESOURCE">
      <type>LPCDLGTEMPLATE</type>
    </typedef>
    <struct name="_PROPSHEETPAGEA_V1">
      <field offset="0" name="dwSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="hInstance">
        <type>HINSTANCE</type>
      </field>
      <field offset="12">
        <union>
          <alt name="pszTemplate">
            <type>LPCSTR</type>
          </alt>
          <alt name="pResource">
            <type>PROPSHEETPAGE_RESOURCE</type>
          </alt>
        </union>
      </field>
      <field offset="16">
        <union>
          <alt name="hIcon">
            <type>HICON</type>
          </alt>
          <alt name="pszIcon">
            <type>LPCSTR</type>
          </alt>
        </union>
      </field>
      <field offset="20" name="pszTitle">
        <type>LPCSTR</type>
      </field>
      <field offset="24" name="pfnDlgProc">
        <type>DLGPROC</type>
      </field>
      <field offset="28" name="lParam">
        <type>LPARAM</type>
      </field>
      <field offset="32" name="pfnCallback">
        <type>LPFNPSPCALLBACKA</type>
      </field>
      <field offset="36" name="pcRefParent">
        <ptr>
          <type>UINT</type>
        </ptr>
      </field>
    </struct>
    <typedef name="PROPSHEETPAGEA_V1">
      <struct name="_PROPSHEETPAGEA_V1" />
    </typedef>
    <typedef name="LPPROPSHEETPAGEA_V1">
      <ptr>
        <struct name="_PROPSHEETPAGEA_V1" />
      </ptr>
    </typedef>
    <typedef name="LPCPROPSHEETPAGEA_V1">
      <ptr>
        <type>PROPSHEETPAGEA_V1</type>
      </ptr>
    </typedef>
    <struct name="_PROPSHEETPAGEA_V2">
      <field offset="0" name="dwSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="hInstance">
        <type>HINSTANCE</type>
      </field>
      <field offset="12">
        <union>
          <alt name="pszTemplate">
            <type>LPCSTR</type>
          </alt>
          <alt name="pResource">
            <type>PROPSHEETPAGE_RESOURCE</type>
          </alt>
        </union>
      </field>
      <field offset="16">
        <union>
          <alt name="hIcon">
            <type>HICON</type>
          </alt>
          <alt name="pszIcon">
            <type>LPCSTR</type>
          </alt>
        </union>
      </field>
      <field offset="20" name="pszTitle">
        <type>LPCSTR</type>
      </field>
      <field offset="24" name="pfnDlgProc">
        <type>DLGPROC</type>
      </field>
      <field offset="28" name="lParam">
        <type>LPARAM</type>
      </field>
      <field offset="32" name="pfnCallback">
        <type>LPFNPSPCALLBACKA</type>
      </field>
      <field offset="36" name="pcRefParent">
        <ptr>
          <type>UINT</type>
        </ptr>
      </field>
      <field offset="40" name="pszHeaderTitle">
        <type>LPCSTR</type>
      </field>
      <field offset="44" name="pszHeaderSubTitle">
        <type>LPCSTR</type>
      </field>
    </struct>
    <typedef name="PROPSHEETPAGEA_V2">
      <struct name="_PROPSHEETPAGEA_V2" />
    </typedef>
    <typedef name="LPPROPSHEETPAGEA_V2">
      <ptr>
        <struct name="_PROPSHEETPAGEA_V2" />
      </ptr>
    </typedef>
    <typedef name="LPCPROPSHEETPAGEA_V2">
      <ptr>
        <type>PROPSHEETPAGEA_V2</type>
      </ptr>
    </typedef>
    <struct name="_PROPSHEETPAGEA_V3">
      <field offset="0" name="dwSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="hInstance">
        <type>HINSTANCE</type>
      </field>
      <field offset="12">
        <union>
          <alt name="pszTemplate">
            <type>LPCSTR</type>
          </alt>
          <alt name="pResource">
            <type>PROPSHEETPAGE_RESOURCE</type>
          </alt>
        </union>
      </field>
      <field offset="16">
        <union>
          <alt name="hIcon">
            <type>HICON</type>
          </alt>
          <alt name="pszIcon">
            <type>LPCSTR</type>
          </alt>
        </union>
      </field>
      <field offset="20" name="pszTitle">
        <type>LPCSTR</type>
      </field>
      <field offset="24" name="pfnDlgProc">
        <type>DLGPROC</type>
      </field>
      <field offset="28" name="lParam">
        <type>LPARAM</type>
      </field>
      <field offset="32" name="pfnCallback">
        <type>LPFNPSPCALLBACKA</type>
      </field>
      <field offset="36" name="pcRefParent">
        <ptr>
          <type>UINT</type>
        </ptr>
      </field>
      <field offset="40" name="pszHeaderTitle">
        <type>LPCSTR</type>
      </field>
      <field offset="44" name="pszHeaderSubTitle">
        <type>LPCSTR</type>
      </field>
      <field offset="48" name="hActCtx">
        <type>HANDLE</type>
      </field>
    </struct>
    <typedef name="PROPSHEETPAGEA_V3">
      <struct name="_PROPSHEETPAGEA_V3" />
    </typedef>
    <typedef name="LPPROPSHEETPAGEA_V3">
      <ptr>
        <struct name="_PROPSHEETPAGEA_V3" />
      </ptr>
    </typedef>
    <typedef name="LPCPROPSHEETPAGEA_V3">
      <ptr>
        <type>PROPSHEETPAGEA_V3</type>
      </ptr>
    </typedef>
    <struct name="_PROPSHEETPAGEA">
      <field offset="0" name="dwSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="hInstance">
        <type>HINSTANCE</type>
      </field>
      <field offset="12">
        <union>
          <alt name="pszTemplate">
            <type>LPCSTR</type>
          </alt>
          <alt name="pResource">
            <type>PROPSHEETPAGE_RESOURCE</type>
          </alt>
        </union>
      </field>
      <field offset="16">
        <union>
          <alt name="hIcon">
            <type>HICON</type>
          </alt>
          <alt name="pszIcon">
            <type>LPCSTR</type>
          </alt>
        </union>
      </field>
      <field offset="20" name="pszTitle">
        <type>LPCSTR</type>
      </field>
      <field offset="24" name="pfnDlgProc">
        <type>DLGPROC</type>
      </field>
      <field offset="28" name="lParam">
        <type>LPARAM</type>
      </field>
      <field offset="32" name="pfnCallback">
        <type>LPFNPSPCALLBACKA</type>
      </field>
      <field offset="36" name="pcRefParent">
        <ptr>
          <type>UINT</type>
        </ptr>
      </field>
      <field offset="40" name="pszHeaderTitle">
        <type>LPCSTR</type>
      </field>
      <field offset="44" name="pszHeaderSubTitle">
        <type>LPCSTR</type>
      </field>
      <field offset="48" name="hActCtx">
        <type>HANDLE</type>
      </field>
      <field offset="52">
        <union>
          <alt name="hbmHeader">
            <type>HBITMAP</type>
          </alt>
          <alt name="pszbmHeader">
            <type>LPCSTR</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="PROPSHEETPAGEA_V4">
      <struct name="_PROPSHEETPAGEA" />
    </typedef>
    <typedef name="LPPROPSHEETPAGEA_V4">
      <ptr>
        <struct name="_PROPSHEETPAGEA" />
      </ptr>
    </typedef>
    <typedef name="LPCPROPSHEETPAGEA_V4">
      <ptr>
        <type>PROPSHEETPAGEA_V4</type>
      </ptr>
    </typedef>
    <struct name="_PROPSHEETPAGEW_V1">
      <field offset="0" name="dwSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="hInstance">
        <type>HINSTANCE</type>
      </field>
      <field offset="12">
        <union>
          <alt name="pszTemplate">
            <type>LPCWSTR</type>
          </alt>
          <alt name="pResource">
            <type>PROPSHEETPAGE_RESOURCE</type>
          </alt>
        </union>
      </field>
      <field offset="16">
        <union>
          <alt name="hIcon">
            <type>HICON</type>
          </alt>
          <alt name="pszIcon">
            <type>LPCWSTR</type>
          </alt>
        </union>
      </field>
      <field offset="20" name="pszTitle">
        <type>LPCWSTR</type>
      </field>
      <field offset="24" name="pfnDlgProc">
        <type>DLGPROC</type>
      </field>
      <field offset="28" name="lParam">
        <type>LPARAM</type>
      </field>
      <field offset="32" name="pfnCallback">
        <type>LPFNPSPCALLBACKW</type>
      </field>
      <field offset="36" name="pcRefParent">
        <ptr>
          <type>UINT</type>
        </ptr>
      </field>
    </struct>
    <typedef name="PROPSHEETPAGEW_V1">
      <struct name="_PROPSHEETPAGEW_V1" />
    </typedef>
    <typedef name="LPPROPSHEETPAGEW_V1">
      <ptr>
        <struct name="_PROPSHEETPAGEW_V1" />
      </ptr>
    </typedef>
    <typedef name="LPCPROPSHEETPAGEW_V1">
      <ptr>
        <type>PROPSHEETPAGEW_V1</type>
      </ptr>
    </typedef>
    <struct name="_PROPSHEETPAGEW_V2">
      <field offset="0" name="dwSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="hInstance">
        <type>HINSTANCE</type>
      </field>
      <field offset="12">
        <union>
          <alt name="pszTemplate">
            <type>LPCWSTR</type>
          </alt>
          <alt name="pResource">
            <type>PROPSHEETPAGE_RESOURCE</type>
          </alt>
        </union>
      </field>
      <field offset="16">
        <union>
          <alt name="hIcon">
            <type>HICON</type>
          </alt>
          <alt name="pszIcon">
            <type>LPCWSTR</type>
          </alt>
        </union>
      </field>
      <field offset="20" name="pszTitle">
        <type>LPCWSTR</type>
      </field>
      <field offset="24" name="pfnDlgProc">
        <type>DLGPROC</type>
      </field>
      <field offset="28" name="lParam">
        <type>LPARAM</type>
      </field>
      <field offset="32" name="pfnCallback">
        <type>LPFNPSPCALLBACKW</type>
      </field>
      <field offset="36" name="pcRefParent">
        <ptr>
          <type>UINT</type>
        </ptr>
      </field>
      <field offset="40" name="pszHeaderTitle">
        <type>LPCWSTR</type>
      </field>
      <field offset="44" name="pszHeaderSubTitle">
        <type>LPCWSTR</type>
      </field>
    </struct>
    <typedef name="PROPSHEETPAGEW_V2">
      <struct name="_PROPSHEETPAGEW_V2" />
    </typedef>
    <typedef name="LPPROPSHEETPAGEW_V2">
      <ptr>
        <struct name="_PROPSHEETPAGEW_V2" />
      </ptr>
    </typedef>
    <typedef name="LPCPROPSHEETPAGEW_V2">
      <ptr>
        <type>PROPSHEETPAGEW_V2</type>
      </ptr>
    </typedef>
    <struct name="_PROPSHEETPAGEW_V3">
      <field offset="0" name="dwSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="hInstance">
        <type>HINSTANCE</type>
      </field>
      <field offset="12">
        <union>
          <alt name="pszTemplate">
            <type>LPCWSTR</type>
          </alt>
          <alt name="pResource">
            <type>PROPSHEETPAGE_RESOURCE</type>
          </alt>
        </union>
      </field>
      <field offset="16">
        <union>
          <alt name="hIcon">
            <type>HICON</type>
          </alt>
          <alt name="pszIcon">
            <type>LPCWSTR</type>
          </alt>
        </union>
      </field>
      <field offset="20" name="pszTitle">
        <type>LPCWSTR</type>
      </field>
      <field offset="24" name="pfnDlgProc">
        <type>DLGPROC</type>
      </field>
      <field offset="28" name="lParam">
        <type>LPARAM</type>
      </field>
      <field offset="32" name="pfnCallback">
        <type>LPFNPSPCALLBACKW</type>
      </field>
      <field offset="36" name="pcRefParent">
        <ptr>
          <type>UINT</type>
        </ptr>
      </field>
      <field offset="40" name="pszHeaderTitle">
        <type>LPCWSTR</type>
      </field>
      <field offset="44" name="pszHeaderSubTitle">
        <type>LPCWSTR</type>
      </field>
      <field offset="48" name="hActCtx">
        <type>HANDLE</type>
      </field>
    </struct>
    <typedef name="PROPSHEETPAGEW_V3">
      <struct name="_PROPSHEETPAGEW_V3" />
    </typedef>
    <typedef name="LPPROPSHEETPAGEW_V3">
      <ptr>
        <struct name="_PROPSHEETPAGEW_V3" />
      </ptr>
    </typedef>
    <typedef name="LPCPROPSHEETPAGEW_V3">
      <ptr>
        <type>PROPSHEETPAGEW_V3</type>
      </ptr>
    </typedef>
    <struct name="_PROPSHEETPAGEW">
      <field offset="0" name="dwSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="hInstance">
        <type>HINSTANCE</type>
      </field>
      <field offset="12">
        <union>
          <alt name="pszTemplate">
            <type>LPCWSTR</type>
          </alt>
          <alt name="pResource">
            <type>PROPSHEETPAGE_RESOURCE</type>
          </alt>
        </union>
      </field>
      <field offset="16">
        <union>
          <alt name="hIcon">
            <type>HICON</type>
          </alt>
          <alt name="pszIcon">
            <type>LPCWSTR</type>
          </alt>
        </union>
      </field>
      <field offset="20" name="pszTitle">
        <type>LPCWSTR</type>
      </field>
      <field offset="24" name="pfnDlgProc">
        <type>DLGPROC</type>
      </field>
      <field offset="28" name="lParam">
        <type>LPARAM</type>
      </field>
      <field offset="32" name="pfnCallback">
        <type>LPFNPSPCALLBACKW</type>
      </field>
      <field offset="36" name="pcRefParent">
        <ptr>
          <type>UINT</type>
        </ptr>
      </field>
      <field offset="40" name="pszHeaderTitle">
        <type>LPCWSTR</type>
      </field>
      <field offset="44" name="pszHeaderSubTitle">
        <type>LPCWSTR</type>
      </field>
      <field offset="48" name="hActCtx">
        <type>HANDLE</type>
      </field>
      <field offset="52">
        <union>
          <alt name="hbmHeader">
            <type>HBITMAP</type>
          </alt>
          <alt name="pszbmHeader">
            <type>LPCWSTR</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="PROPSHEETPAGEW_V4">
      <struct name="_PROPSHEETPAGEW" />
    </typedef>
    <typedef name="LPPROPSHEETPAGEW_V4">
      <ptr>
        <struct name="_PROPSHEETPAGEW" />
      </ptr>
    </typedef>
    <typedef name="LPCPROPSHEETPAGEW_V4">
      <ptr>
        <type>PROPSHEETPAGEW_V4</type>
      </ptr>
    </typedef>
    <typedef name="PROPSHEETPAGEA_LATEST">
      <type>PROPSHEETPAGEA_V4</type>
    </typedef>
    <typedef name="PROPSHEETPAGEW_LATEST">
      <type>PROPSHEETPAGEW_V4</type>
    </typedef>
    <typedef name="LPPROPSHEETPAGEA_LATEST">
      <type>LPPROPSHEETPAGEA_V4</type>
    </typedef>
    <typedef name="LPPROPSHEETPAGEW_LATEST">
      <type>LPPROPSHEETPAGEW_V4</type>
    </typedef>
    <typedef name="LPCPROPSHEETPAGEA_LATEST">
      <type>LPCPROPSHEETPAGEA_V4</type>
    </typedef>
    <typedef name="LPCPROPSHEETPAGEW_LATEST">
      <type>LPCPROPSHEETPAGEW_V4</type>
    </typedef>
    <typedef name="PROPSHEETPAGEA">
      <type>PROPSHEETPAGEA_V4</type>
    </typedef>
    <typedef name="PROPSHEETPAGEW">
      <type>PROPSHEETPAGEW_V4</type>
    </typedef>
    <typedef name="LPPROPSHEETPAGEA">
      <type>LPPROPSHEETPAGEA_V4</type>
    </typedef>
    <typedef name="LPPROPSHEETPAGEW">
      <type>LPPROPSHEETPAGEW_V4</type>
    </typedef>
    <typedef name="LPCPROPSHEETPAGEA">
      <type>LPCPROPSHEETPAGEA_V4</type>
    </typedef>
    <typedef name="LPCPROPSHEETPAGEW">
      <type>LPCPROPSHEETPAGEW_V4</type>
    </typedef>
    <typedef name="PFNPROPSHEETCALLBACK">
      <ptr>
        <fn>
          <return>
            <prim domain="SignedInt" size="4" />
            <reg>eax</reg>
          </return>
          <arg>
            <type>HWND</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>UINT</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="_PROPSHEETHEADERA_V1">
      <field offset="0" name="dwSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="hwndParent">
        <type>HWND</type>
      </field>
      <field offset="12" name="hInstance">
        <type>HINSTANCE</type>
      </field>
      <field offset="16">
        <union>
          <alt name="hIcon">
            <type>HICON</type>
          </alt>
          <alt name="pszIcon">
            <type>LPCSTR</type>
          </alt>
        </union>
      </field>
      <field offset="20" name="pszCaption">
        <type>LPCSTR</type>
      </field>
      <field offset="24" name="nPages">
        <type>UINT</type>
      </field>
      <field offset="28">
        <union>
          <alt name="nStartPage">
            <type>UINT</type>
          </alt>
          <alt name="pStartPage">
            <type>LPCSTR</type>
          </alt>
        </union>
      </field>
      <field offset="32">
        <union>
          <alt name="ppsp">
            <type>LPCPROPSHEETPAGEA</type>
          </alt>
          <alt name="phpage">
            <ptr>
              <type>HPROPSHEETPAGE</type>
            </ptr>
          </alt>
        </union>
      </field>
      <field offset="36" name="pfnCallback">
        <type>PFNPROPSHEETCALLBACK</type>
      </field>
    </struct>
    <typedef name="PROPSHEETHEADERA_V1">
      <struct name="_PROPSHEETHEADERA_V1" />
    </typedef>
    <typedef name="LPPROPSHEETHEADERA_V1">
      <ptr>
        <struct name="_PROPSHEETHEADERA_V1" />
      </ptr>
    </typedef>
    <typedef name="LPCPROPSHEETHEADERA_V1">
      <ptr>
        <type>PROPSHEETHEADERA_V1</type>
      </ptr>
    </typedef>
    <struct name="_PROPSHEETHEADERA_V2">
      <field offset="0" name="dwSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="hwndParent">
        <type>HWND</type>
      </field>
      <field offset="12" name="hInstance">
        <type>HINSTANCE</type>
      </field>
      <field offset="16">
        <union>
          <alt name="hIcon">
            <type>HICON</type>
          </alt>
          <alt name="pszIcon">
            <type>LPCSTR</type>
          </alt>
        </union>
      </field>
      <field offset="20" name="pszCaption">
        <type>LPCSTR</type>
      </field>
      <field offset="24" name="nPages">
        <type>UINT</type>
      </field>
      <field offset="28">
        <union>
          <alt name="nStartPage">
            <type>UINT</type>
          </alt>
          <alt name="pStartPage">
            <type>LPCSTR</type>
          </alt>
        </union>
      </field>
      <field offset="32">
        <union>
          <alt name="ppsp">
            <type>LPCPROPSHEETPAGEA</type>
          </alt>
          <alt name="phpage">
            <ptr>
              <type>HPROPSHEETPAGE</type>
            </ptr>
          </alt>
        </union>
      </field>
      <field offset="36" name="pfnCallback">
        <type>PFNPROPSHEETCALLBACK</type>
      </field>
      <field offset="40">
        <union>
          <alt name="hbmWatermark">
            <type>HBITMAP</type>
          </alt>
          <alt name="pszbmWatermark">
            <type>LPCSTR</type>
          </alt>
        </union>
      </field>
      <field offset="44" name="hplWatermark">
        <type>HPALETTE</type>
      </field>
      <field offset="48">
        <union>
          <alt name="hbmHeader">
            <type>HBITMAP</type>
          </alt>
          <alt name="pszbmHeader">
            <type>LPCSTR</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="PROPSHEETHEADERA_V2">
      <struct name="_PROPSHEETHEADERA_V2" />
    </typedef>
    <typedef name="LPPROPSHEETHEADERA_V2">
      <ptr>
        <struct name="_PROPSHEETHEADERA_V2" />
      </ptr>
    </typedef>
    <typedef name="LPCPROPSHEETHEADERA_V2">
      <ptr>
        <type>PROPSHEETHEADERA_V2</type>
      </ptr>
    </typedef>
    <struct name="_PROPSHEETHEADERW_V1">
      <field offset="0" name="dwSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="hwndParent">
        <type>HWND</type>
      </field>
      <field offset="12" name="hInstance">
        <type>HINSTANCE</type>
      </field>
      <field offset="16">
        <union>
          <alt name="hIcon">
            <type>HICON</type>
          </alt>
          <alt name="pszIcon">
            <type>LPCWSTR</type>
          </alt>
        </union>
      </field>
      <field offset="20" name="pszCaption">
        <type>LPCWSTR</type>
      </field>
      <field offset="24" name="nPages">
        <type>UINT</type>
      </field>
      <field offset="28">
        <union>
          <alt name="nStartPage">
            <type>UINT</type>
          </alt>
          <alt name="pStartPage">
            <type>LPCWSTR</type>
          </alt>
        </union>
      </field>
      <field offset="32">
        <union>
          <alt name="ppsp">
            <type>LPCPROPSHEETPAGEW</type>
          </alt>
          <alt name="phpage">
            <ptr>
              <type>HPROPSHEETPAGE</type>
            </ptr>
          </alt>
        </union>
      </field>
      <field offset="36" name="pfnCallback">
        <type>PFNPROPSHEETCALLBACK</type>
      </field>
    </struct>
    <typedef name="PROPSHEETHEADERW_V1">
      <struct name="_PROPSHEETHEADERW_V1" />
    </typedef>
    <typedef name="LPPROPSHEETHEADERW_V1">
      <ptr>
        <struct name="_PROPSHEETHEADERW_V1" />
      </ptr>
    </typedef>
    <typedef name="LPCPROPSHEETHEADERW_V1">
      <ptr>
        <type>PROPSHEETHEADERW_V1</type>
      </ptr>
    </typedef>
    <struct name="_PROPSHEETHEADERW_V2">
      <field offset="0" name="dwSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="hwndParent">
        <type>HWND</type>
      </field>
      <field offset="12" name="hInstance">
        <type>HINSTANCE</type>
      </field>
      <field offset="16">
        <union>
          <alt name="hIcon">
            <type>HICON</type>
          </alt>
          <alt name="pszIcon">
            <type>LPCWSTR</type>
          </alt>
        </union>
      </field>
      <field offset="20" name="pszCaption">
        <type>LPCWSTR</type>
      </field>
      <field offset="24" name="nPages">
        <type>UINT</type>
      </field>
      <field offset="28">
        <union>
          <alt name="nStartPage">
            <type>UINT</type>
          </alt>
          <alt name="pStartPage">
            <type>LPCWSTR</type>
          </alt>
        </union>
      </field>
      <field offset="32">
        <union>
          <alt name="ppsp">
            <type>LPCPROPSHEETPAGEW</type>
          </alt>
          <alt name="phpage">
            <ptr>
              <type>HPROPSHEETPAGE</type>
            </ptr>
          </alt>
        </union>
      </field>
      <field offset="36" name="pfnCallback">
        <type>PFNPROPSHEETCALLBACK</type>
      </field>
      <field offset="40">
        <union>
          <alt name="hbmWatermark">
            <type>HBITMAP</type>
          </alt>
          <alt name="pszbmWatermark">
            <type>LPCWSTR</type>
          </alt>
        </union>
      </field>
      <field offset="44" name="hplWatermark">
        <type>HPALETTE</type>
      </field>
      <field offset="48">
        <union>
          <alt name="hbmHeader">
            <type>HBITMAP</type>
          </alt>
          <alt name="pszbmHeader">
            <type>LPCWSTR</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="PROPSHEETHEADERW_V2">
      <struct name="_PROPSHEETHEADERW_V2" />
    </typedef>
    <typedef name="LPPROPSHEETHEADERW_V2">
      <ptr>
        <struct name="_PROPSHEETHEADERW_V2" />
      </ptr>
    </typedef>
    <typedef name="LPCPROPSHEETHEADERW_V2">
      <ptr>
        <type>PROPSHEETHEADERW_V2</type>
      </ptr>
    </typedef>
    <typedef name="PROPSHEETHEADERA">
      <type>PROPSHEETHEADERA_V2</type>
    </typedef>
    <typedef name="PROPSHEETHEADERW">
      <type>PROPSHEETHEADERW_V2</type>
    </typedef>
    <typedef name="LPPROPSHEETHEADERA">
      <type>LPPROPSHEETHEADERA_V2</type>
    </typedef>
    <typedef name="LPPROPSHEETHEADERW">
      <type>LPPROPSHEETHEADERW_V2</type>
    </typedef>
    <typedef name="LPCPROPSHEETHEADERA">
      <type>LPCPROPSHEETHEADERA_V2</type>
    </typedef>
    <typedef name="LPCPROPSHEETHEADERW">
      <type>LPCPROPSHEETHEADERW_V2</type>
    </typedef>
    <typedef name="LPFNADDPROPSHEETPAGE">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>HPROPSHEETPAGE</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="LPFNADDPROPSHEETPAGES">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>LPVOID</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPFNADDPROPSHEETPAGE</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="_PSHNOTIFY">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="lParam">
        <type>LPARAM</type>
      </field>
    </struct>
    <typedef name="PSHNOTIFY">
      <struct name="_PSHNOTIFY" />
    </typedef>
    <typedef name="LPPSHNOTIFY">
      <ptr>
        <struct name="_PSHNOTIFY" />
      </ptr>
    </typedef>
    <struct name="_PRINTER_INFO_1A">
      <field offset="0" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pDescription">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="pName">
        <type>LPSTR</type>
      </field>
      <field offset="12" name="pComment">
        <type>LPSTR</type>
      </field>
    </struct>
    <typedef name="PRINTER_INFO_1A">
      <struct name="_PRINTER_INFO_1A" />
    </typedef>
    <typedef name="PPRINTER_INFO_1A">
      <ptr>
        <struct name="_PRINTER_INFO_1A" />
      </ptr>
    </typedef>
    <typedef name="LPPRINTER_INFO_1A">
      <ptr>
        <struct name="_PRINTER_INFO_1A" />
      </ptr>
    </typedef>
    <struct name="_PRINTER_INFO_1W">
      <field offset="0" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pDescription">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="pName">
        <type>LPWSTR</type>
      </field>
      <field offset="12" name="pComment">
        <type>LPWSTR</type>
      </field>
    </struct>
    <typedef name="PRINTER_INFO_1W">
      <struct name="_PRINTER_INFO_1W" />
    </typedef>
    <typedef name="PPRINTER_INFO_1W">
      <ptr>
        <struct name="_PRINTER_INFO_1W" />
      </ptr>
    </typedef>
    <typedef name="LPPRINTER_INFO_1W">
      <ptr>
        <struct name="_PRINTER_INFO_1W" />
      </ptr>
    </typedef>
    <typedef name="PRINTER_INFO_1">
      <type>PRINTER_INFO_1A</type>
    </typedef>
    <typedef name="PPRINTER_INFO_1">
      <type>PPRINTER_INFO_1A</type>
    </typedef>
    <typedef name="LPPRINTER_INFO_1">
      <type>LPPRINTER_INFO_1A</type>
    </typedef>
    <struct name="_PRINTER_INFO_2A">
      <field offset="0" name="pServerName">
        <type>LPSTR</type>
      </field>
      <field offset="4" name="pPrinterName">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="pShareName">
        <type>LPSTR</type>
      </field>
      <field offset="12" name="pPortName">
        <type>LPSTR</type>
      </field>
      <field offset="16" name="pDriverName">
        <type>LPSTR</type>
      </field>
      <field offset="20" name="pComment">
        <type>LPSTR</type>
      </field>
      <field offset="24" name="pLocation">
        <type>LPSTR</type>
      </field>
      <field offset="28" name="pDevMode">
        <type>LPDEVMODEA</type>
      </field>
      <field offset="32" name="pSepFile">
        <type>LPSTR</type>
      </field>
      <field offset="36" name="pPrintProcessor">
        <type>LPSTR</type>
      </field>
      <field offset="40" name="pDatatype">
        <type>LPSTR</type>
      </field>
      <field offset="44" name="pParameters">
        <type>LPSTR</type>
      </field>
      <field offset="48" name="pSecurityDescriptor">
        <type>PSECURITY_DESCRIPTOR</type>
      </field>
      <field offset="52" name="Attributes">
        <type>DWORD</type>
      </field>
      <field offset="56" name="Priority">
        <type>DWORD</type>
      </field>
      <field offset="60" name="DefaultPriority">
        <type>DWORD</type>
      </field>
      <field offset="64" name="StartTime">
        <type>DWORD</type>
      </field>
      <field offset="68" name="UntilTime">
        <type>DWORD</type>
      </field>
      <field offset="72" name="Status">
        <type>DWORD</type>
      </field>
      <field offset="76" name="cJobs">
        <type>DWORD</type>
      </field>
      <field offset="80" name="AveragePPM">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PRINTER_INFO_2A">
      <struct name="_PRINTER_INFO_2A" />
    </typedef>
    <typedef name="PPRINTER_INFO_2A">
      <ptr>
        <struct name="_PRINTER_INFO_2A" />
      </ptr>
    </typedef>
    <typedef name="LPPRINTER_INFO_2A">
      <ptr>
        <struct name="_PRINTER_INFO_2A" />
      </ptr>
    </typedef>
    <struct name="_PRINTER_INFO_2W">
      <field offset="0" name="pServerName">
        <type>LPWSTR</type>
      </field>
      <field offset="4" name="pPrinterName">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="pShareName">
        <type>LPWSTR</type>
      </field>
      <field offset="12" name="pPortName">
        <type>LPWSTR</type>
      </field>
      <field offset="16" name="pDriverName">
        <type>LPWSTR</type>
      </field>
      <field offset="20" name="pComment">
        <type>LPWSTR</type>
      </field>
      <field offset="24" name="pLocation">
        <type>LPWSTR</type>
      </field>
      <field offset="28" name="pDevMode">
        <type>LPDEVMODEW</type>
      </field>
      <field offset="32" name="pSepFile">
        <type>LPWSTR</type>
      </field>
      <field offset="36" name="pPrintProcessor">
        <type>LPWSTR</type>
      </field>
      <field offset="40" name="pDatatype">
        <type>LPWSTR</type>
      </field>
      <field offset="44" name="pParameters">
        <type>LPWSTR</type>
      </field>
      <field offset="48" name="pSecurityDescriptor">
        <type>PSECURITY_DESCRIPTOR</type>
      </field>
      <field offset="52" name="Attributes">
        <type>DWORD</type>
      </field>
      <field offset="56" name="Priority">
        <type>DWORD</type>
      </field>
      <field offset="60" name="DefaultPriority">
        <type>DWORD</type>
      </field>
      <field offset="64" name="StartTime">
        <type>DWORD</type>
      </field>
      <field offset="68" name="UntilTime">
        <type>DWORD</type>
      </field>
      <field offset="72" name="Status">
        <type>DWORD</type>
      </field>
      <field offset="76" name="cJobs">
        <type>DWORD</type>
      </field>
      <field offset="80" name="AveragePPM">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PRINTER_INFO_2W">
      <struct name="_PRINTER_INFO_2W" />
    </typedef>
    <typedef name="PPRINTER_INFO_2W">
      <ptr>
        <struct name="_PRINTER_INFO_2W" />
      </ptr>
    </typedef>
    <typedef name="LPPRINTER_INFO_2W">
      <ptr>
        <struct name="_PRINTER_INFO_2W" />
      </ptr>
    </typedef>
    <typedef name="PRINTER_INFO_2">
      <type>PRINTER_INFO_2A</type>
    </typedef>
    <typedef name="PPRINTER_INFO_2">
      <type>PPRINTER_INFO_2A</type>
    </typedef>
    <typedef name="LPPRINTER_INFO_2">
      <type>LPPRINTER_INFO_2A</type>
    </typedef>
    <struct name="_PRINTER_INFO_3">
      <field offset="0" name="pSecurityDescriptor">
        <type>PSECURITY_DESCRIPTOR</type>
      </field>
    </struct>
    <typedef name="PRINTER_INFO_3">
      <struct name="_PRINTER_INFO_3" />
    </typedef>
    <typedef name="PPRINTER_INFO_3">
      <ptr>
        <struct name="_PRINTER_INFO_3" />
      </ptr>
    </typedef>
    <typedef name="LPPRINTER_INFO_3">
      <ptr>
        <struct name="_PRINTER_INFO_3" />
      </ptr>
    </typedef>
    <struct name="_PRINTER_INFO_4A">
      <field offset="0" name="pPrinterName">
        <type>LPSTR</type>
      </field>
      <field offset="4" name="pServerName">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="Attributes">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PRINTER_INFO_4A">
      <struct name="_PRINTER_INFO_4A" />
    </typedef>
    <typedef name="PPRINTER_INFO_4A">
      <ptr>
        <struct name="_PRINTER_INFO_4A" />
      </ptr>
    </typedef>
    <typedef name="LPPRINTER_INFO_4A">
      <ptr>
        <struct name="_PRINTER_INFO_4A" />
      </ptr>
    </typedef>
    <struct name="_PRINTER_INFO_4W">
      <field offset="0" name="pPrinterName">
        <type>LPWSTR</type>
      </field>
      <field offset="4" name="pServerName">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="Attributes">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PRINTER_INFO_4W">
      <struct name="_PRINTER_INFO_4W" />
    </typedef>
    <typedef name="PPRINTER_INFO_4W">
      <ptr>
        <struct name="_PRINTER_INFO_4W" />
      </ptr>
    </typedef>
    <typedef name="LPPRINTER_INFO_4W">
      <ptr>
        <struct name="_PRINTER_INFO_4W" />
      </ptr>
    </typedef>
    <typedef name="PRINTER_INFO_4">
      <type>PRINTER_INFO_4A</type>
    </typedef>
    <typedef name="PPRINTER_INFO_4">
      <type>PPRINTER_INFO_4A</type>
    </typedef>
    <typedef name="LPPRINTER_INFO_4">
      <type>LPPRINTER_INFO_4A</type>
    </typedef>
    <struct name="_PRINTER_INFO_5A">
      <field offset="0" name="pPrinterName">
        <type>LPSTR</type>
      </field>
      <field offset="4" name="pPortName">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="Attributes">
        <type>DWORD</type>
      </field>
      <field offset="12" name="DeviceNotSelectedTimeout">
        <type>DWORD</type>
      </field>
      <field offset="16" name="TransmissionRetryTimeout">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PRINTER_INFO_5A">
      <struct name="_PRINTER_INFO_5A" />
    </typedef>
    <typedef name="PPRINTER_INFO_5A">
      <ptr>
        <struct name="_PRINTER_INFO_5A" />
      </ptr>
    </typedef>
    <typedef name="LPPRINTER_INFO_5A">
      <ptr>
        <struct name="_PRINTER_INFO_5A" />
      </ptr>
    </typedef>
    <struct name="_PRINTER_INFO_5W">
      <field offset="0" name="pPrinterName">
        <type>LPWSTR</type>
      </field>
      <field offset="4" name="pPortName">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="Attributes">
        <type>DWORD</type>
      </field>
      <field offset="12" name="DeviceNotSelectedTimeout">
        <type>DWORD</type>
      </field>
      <field offset="16" name="TransmissionRetryTimeout">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PRINTER_INFO_5W">
      <struct name="_PRINTER_INFO_5W" />
    </typedef>
    <typedef name="PPRINTER_INFO_5W">
      <ptr>
        <struct name="_PRINTER_INFO_5W" />
      </ptr>
    </typedef>
    <typedef name="LPPRINTER_INFO_5W">
      <ptr>
        <struct name="_PRINTER_INFO_5W" />
      </ptr>
    </typedef>
    <typedef name="PRINTER_INFO_5">
      <type>PRINTER_INFO_5A</type>
    </typedef>
    <typedef name="PPRINTER_INFO_5">
      <type>PPRINTER_INFO_5A</type>
    </typedef>
    <typedef name="LPPRINTER_INFO_5">
      <type>LPPRINTER_INFO_5A</type>
    </typedef>
    <struct name="_PRINTER_INFO_6">
      <field offset="0" name="dwStatus">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PRINTER_INFO_6">
      <struct name="_PRINTER_INFO_6" />
    </typedef>
    <typedef name="PPRINTER_INFO_6">
      <ptr>
        <struct name="_PRINTER_INFO_6" />
      </ptr>
    </typedef>
    <typedef name="LPPRINTER_INFO_6">
      <ptr>
        <struct name="_PRINTER_INFO_6" />
      </ptr>
    </typedef>
    <struct name="_PRINTER_INFO_7A">
      <field offset="0" name="pszObjectGUID">
        <type>LPSTR</type>
      </field>
      <field offset="4" name="dwAction">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PRINTER_INFO_7A">
      <struct name="_PRINTER_INFO_7A" />
    </typedef>
    <typedef name="PPRINTER_INFO_7A">
      <ptr>
        <struct name="_PRINTER_INFO_7A" />
      </ptr>
    </typedef>
    <typedef name="LPPRINTER_INFO_7A">
      <ptr>
        <struct name="_PRINTER_INFO_7A" />
      </ptr>
    </typedef>
    <struct name="_PRINTER_INFO_7W">
      <field offset="0" name="pszObjectGUID">
        <type>LPWSTR</type>
      </field>
      <field offset="4" name="dwAction">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PRINTER_INFO_7W">
      <struct name="_PRINTER_INFO_7W" />
    </typedef>
    <typedef name="PPRINTER_INFO_7W">
      <ptr>
        <struct name="_PRINTER_INFO_7W" />
      </ptr>
    </typedef>
    <typedef name="LPPRINTER_INFO_7W">
      <ptr>
        <struct name="_PRINTER_INFO_7W" />
      </ptr>
    </typedef>
    <typedef name="PRINTER_INFO_7">
      <type>PRINTER_INFO_7A</type>
    </typedef>
    <typedef name="PPRINTER_INFO_7">
      <type>PPRINTER_INFO_7A</type>
    </typedef>
    <typedef name="LPPRINTER_INFO_7">
      <type>LPPRINTER_INFO_7A</type>
    </typedef>
    <struct name="_PRINTER_INFO_8A">
      <field offset="0" name="pDevMode">
        <type>LPDEVMODEA</type>
      </field>
    </struct>
    <typedef name="PRINTER_INFO_8A">
      <struct name="_PRINTER_INFO_8A" />
    </typedef>
    <typedef name="PPRINTER_INFO_8A">
      <ptr>
        <struct name="_PRINTER_INFO_8A" />
      </ptr>
    </typedef>
    <typedef name="LPPRINTER_INFO_8A">
      <ptr>
        <struct name="_PRINTER_INFO_8A" />
      </ptr>
    </typedef>
    <struct name="_PRINTER_INFO_8W">
      <field offset="0" name="pDevMode">
        <type>LPDEVMODEW</type>
      </field>
    </struct>
    <typedef name="PRINTER_INFO_8W">
      <struct name="_PRINTER_INFO_8W" />
    </typedef>
    <typedef name="PPRINTER_INFO_8W">
      <ptr>
        <struct name="_PRINTER_INFO_8W" />
      </ptr>
    </typedef>
    <typedef name="LPPRINTER_INFO_8W">
      <ptr>
        <struct name="_PRINTER_INFO_8W" />
      </ptr>
    </typedef>
    <typedef name="PRINTER_INFO_8">
      <type>PRINTER_INFO_8A</type>
    </typedef>
    <typedef name="PPRINTER_INFO_8">
      <type>PPRINTER_INFO_8A</type>
    </typedef>
    <typedef name="LPPRINTER_INFO_8">
      <type>LPPRINTER_INFO_8A</type>
    </typedef>
    <struct name="_PRINTER_INFO_9A">
      <field offset="0" name="pDevMode">
        <type>LPDEVMODEA</type>
      </field>
    </struct>
    <typedef name="PRINTER_INFO_9A">
      <struct name="_PRINTER_INFO_9A" />
    </typedef>
    <typedef name="PPRINTER_INFO_9A">
      <ptr>
        <struct name="_PRINTER_INFO_9A" />
      </ptr>
    </typedef>
    <typedef name="LPPRINTER_INFO_9A">
      <ptr>
        <struct name="_PRINTER_INFO_9A" />
      </ptr>
    </typedef>
    <struct name="_PRINTER_INFO_9W">
      <field offset="0" name="pDevMode">
        <type>LPDEVMODEW</type>
      </field>
    </struct>
    <typedef name="PRINTER_INFO_9W">
      <struct name="_PRINTER_INFO_9W" />
    </typedef>
    <typedef name="PPRINTER_INFO_9W">
      <ptr>
        <struct name="_PRINTER_INFO_9W" />
      </ptr>
    </typedef>
    <typedef name="LPPRINTER_INFO_9W">
      <ptr>
        <struct name="_PRINTER_INFO_9W" />
      </ptr>
    </typedef>
    <typedef name="PRINTER_INFO_9">
      <type>PRINTER_INFO_9A</type>
    </typedef>
    <typedef name="PPRINTER_INFO_9">
      <type>PPRINTER_INFO_9A</type>
    </typedef>
    <typedef name="LPPRINTER_INFO_9">
      <type>LPPRINTER_INFO_9A</type>
    </typedef>
    <struct name="_JOB_INFO_1A">
      <field offset="0" name="JobId">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pPrinterName">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="pMachineName">
        <type>LPSTR</type>
      </field>
      <field offset="12" name="pUserName">
        <type>LPSTR</type>
      </field>
      <field offset="16" name="pDocument">
        <type>LPSTR</type>
      </field>
      <field offset="20" name="pDatatype">
        <type>LPSTR</type>
      </field>
      <field offset="24" name="pStatus">
        <type>LPSTR</type>
      </field>
      <field offset="28" name="Status">
        <type>DWORD</type>
      </field>
      <field offset="32" name="Priority">
        <type>DWORD</type>
      </field>
      <field offset="36" name="Position">
        <type>DWORD</type>
      </field>
      <field offset="40" name="TotalPages">
        <type>DWORD</type>
      </field>
      <field offset="44" name="PagesPrinted">
        <type>DWORD</type>
      </field>
      <field offset="48" name="Submitted">
        <type>SYSTEMTIME</type>
      </field>
    </struct>
    <typedef name="JOB_INFO_1A">
      <struct name="_JOB_INFO_1A" />
    </typedef>
    <typedef name="PJOB_INFO_1A">
      <ptr>
        <struct name="_JOB_INFO_1A" />
      </ptr>
    </typedef>
    <typedef name="LPJOB_INFO_1A">
      <ptr>
        <struct name="_JOB_INFO_1A" />
      </ptr>
    </typedef>
    <struct name="_JOB_INFO_1W">
      <field offset="0" name="JobId">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pPrinterName">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="pMachineName">
        <type>LPWSTR</type>
      </field>
      <field offset="12" name="pUserName">
        <type>LPWSTR</type>
      </field>
      <field offset="16" name="pDocument">
        <type>LPWSTR</type>
      </field>
      <field offset="20" name="pDatatype">
        <type>LPWSTR</type>
      </field>
      <field offset="24" name="pStatus">
        <type>LPWSTR</type>
      </field>
      <field offset="28" name="Status">
        <type>DWORD</type>
      </field>
      <field offset="32" name="Priority">
        <type>DWORD</type>
      </field>
      <field offset="36" name="Position">
        <type>DWORD</type>
      </field>
      <field offset="40" name="TotalPages">
        <type>DWORD</type>
      </field>
      <field offset="44" name="PagesPrinted">
        <type>DWORD</type>
      </field>
      <field offset="48" name="Submitted">
        <type>SYSTEMTIME</type>
      </field>
    </struct>
    <typedef name="JOB_INFO_1W">
      <struct name="_JOB_INFO_1W" />
    </typedef>
    <typedef name="PJOB_INFO_1W">
      <ptr>
        <struct name="_JOB_INFO_1W" />
      </ptr>
    </typedef>
    <typedef name="LPJOB_INFO_1W">
      <ptr>
        <struct name="_JOB_INFO_1W" />
      </ptr>
    </typedef>
    <typedef name="JOB_INFO_1">
      <type>JOB_INFO_1A</type>
    </typedef>
    <typedef name="PJOB_INFO_1">
      <type>PJOB_INFO_1A</type>
    </typedef>
    <typedef name="LPJOB_INFO_1">
      <type>LPJOB_INFO_1A</type>
    </typedef>
    <struct name="_JOB_INFO_2A">
      <field offset="0" name="JobId">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pPrinterName">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="pMachineName">
        <type>LPSTR</type>
      </field>
      <field offset="12" name="pUserName">
        <type>LPSTR</type>
      </field>
      <field offset="16" name="pDocument">
        <type>LPSTR</type>
      </field>
      <field offset="20" name="pNotifyName">
        <type>LPSTR</type>
      </field>
      <field offset="24" name="pDatatype">
        <type>LPSTR</type>
      </field>
      <field offset="28" name="pPrintProcessor">
        <type>LPSTR</type>
      </field>
      <field offset="32" name="pParameters">
        <type>LPSTR</type>
      </field>
      <field offset="36" name="pDriverName">
        <type>LPSTR</type>
      </field>
      <field offset="40" name="pDevMode">
        <type>LPDEVMODEA</type>
      </field>
      <field offset="44" name="pStatus">
        <type>LPSTR</type>
      </field>
      <field offset="48" name="pSecurityDescriptor">
        <type>PSECURITY_DESCRIPTOR</type>
      </field>
      <field offset="52" name="Status">
        <type>DWORD</type>
      </field>
      <field offset="56" name="Priority">
        <type>DWORD</type>
      </field>
      <field offset="60" name="Position">
        <type>DWORD</type>
      </field>
      <field offset="64" name="StartTime">
        <type>DWORD</type>
      </field>
      <field offset="68" name="UntilTime">
        <type>DWORD</type>
      </field>
      <field offset="72" name="TotalPages">
        <type>DWORD</type>
      </field>
      <field offset="76" name="Size">
        <type>DWORD</type>
      </field>
      <field offset="80" name="Submitted">
        <type>SYSTEMTIME</type>
      </field>
      <field offset="96" name="Time">
        <type>DWORD</type>
      </field>
      <field offset="100" name="PagesPrinted">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="JOB_INFO_2A">
      <struct name="_JOB_INFO_2A" />
    </typedef>
    <typedef name="PJOB_INFO_2A">
      <ptr>
        <struct name="_JOB_INFO_2A" />
      </ptr>
    </typedef>
    <typedef name="LPJOB_INFO_2A">
      <ptr>
        <struct name="_JOB_INFO_2A" />
      </ptr>
    </typedef>
    <struct name="_JOB_INFO_2W">
      <field offset="0" name="JobId">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pPrinterName">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="pMachineName">
        <type>LPWSTR</type>
      </field>
      <field offset="12" name="pUserName">
        <type>LPWSTR</type>
      </field>
      <field offset="16" name="pDocument">
        <type>LPWSTR</type>
      </field>
      <field offset="20" name="pNotifyName">
        <type>LPWSTR</type>
      </field>
      <field offset="24" name="pDatatype">
        <type>LPWSTR</type>
      </field>
      <field offset="28" name="pPrintProcessor">
        <type>LPWSTR</type>
      </field>
      <field offset="32" name="pParameters">
        <type>LPWSTR</type>
      </field>
      <field offset="36" name="pDriverName">
        <type>LPWSTR</type>
      </field>
      <field offset="40" name="pDevMode">
        <type>LPDEVMODEW</type>
      </field>
      <field offset="44" name="pStatus">
        <type>LPWSTR</type>
      </field>
      <field offset="48" name="pSecurityDescriptor">
        <type>PSECURITY_DESCRIPTOR</type>
      </field>
      <field offset="52" name="Status">
        <type>DWORD</type>
      </field>
      <field offset="56" name="Priority">
        <type>DWORD</type>
      </field>
      <field offset="60" name="Position">
        <type>DWORD</type>
      </field>
      <field offset="64" name="StartTime">
        <type>DWORD</type>
      </field>
      <field offset="68" name="UntilTime">
        <type>DWORD</type>
      </field>
      <field offset="72" name="TotalPages">
        <type>DWORD</type>
      </field>
      <field offset="76" name="Size">
        <type>DWORD</type>
      </field>
      <field offset="80" name="Submitted">
        <type>SYSTEMTIME</type>
      </field>
      <field offset="96" name="Time">
        <type>DWORD</type>
      </field>
      <field offset="100" name="PagesPrinted">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="JOB_INFO_2W">
      <struct name="_JOB_INFO_2W" />
    </typedef>
    <typedef name="PJOB_INFO_2W">
      <ptr>
        <struct name="_JOB_INFO_2W" />
      </ptr>
    </typedef>
    <typedef name="LPJOB_INFO_2W">
      <ptr>
        <struct name="_JOB_INFO_2W" />
      </ptr>
    </typedef>
    <typedef name="JOB_INFO_2">
      <type>JOB_INFO_2A</type>
    </typedef>
    <typedef name="PJOB_INFO_2">
      <type>PJOB_INFO_2A</type>
    </typedef>
    <typedef name="LPJOB_INFO_2">
      <type>LPJOB_INFO_2A</type>
    </typedef>
    <struct name="_JOB_INFO_3">
      <field offset="0" name="JobId">
        <type>DWORD</type>
      </field>
      <field offset="4" name="NextJobId">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Reserved">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="JOB_INFO_3">
      <struct name="_JOB_INFO_3" />
    </typedef>
    <typedef name="PJOB_INFO_3">
      <ptr>
        <struct name="_JOB_INFO_3" />
      </ptr>
    </typedef>
    <typedef name="LPJOB_INFO_3">
      <ptr>
        <struct name="_JOB_INFO_3" />
      </ptr>
    </typedef>
    <struct name="_JOB_INFO_4A">
      <field offset="0" name="JobId">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pPrinterName">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="pMachineName">
        <type>LPSTR</type>
      </field>
      <field offset="12" name="pUserName">
        <type>LPSTR</type>
      </field>
      <field offset="16" name="pDocument">
        <type>LPSTR</type>
      </field>
      <field offset="20" name="pNotifyName">
        <type>LPSTR</type>
      </field>
      <field offset="24" name="pDatatype">
        <type>LPSTR</type>
      </field>
      <field offset="28" name="pPrintProcessor">
        <type>LPSTR</type>
      </field>
      <field offset="32" name="pParameters">
        <type>LPSTR</type>
      </field>
      <field offset="36" name="pDriverName">
        <type>LPSTR</type>
      </field>
      <field offset="40" name="pDevMode">
        <type>LPDEVMODEA</type>
      </field>
      <field offset="44" name="pStatus">
        <type>LPSTR</type>
      </field>
      <field offset="48" name="pSecurityDescriptor">
        <type>PSECURITY_DESCRIPTOR</type>
      </field>
      <field offset="52" name="Status">
        <type>DWORD</type>
      </field>
      <field offset="56" name="Priority">
        <type>DWORD</type>
      </field>
      <field offset="60" name="Position">
        <type>DWORD</type>
      </field>
      <field offset="64" name="StartTime">
        <type>DWORD</type>
      </field>
      <field offset="68" name="UntilTime">
        <type>DWORD</type>
      </field>
      <field offset="72" name="TotalPages">
        <type>DWORD</type>
      </field>
      <field offset="76" name="Size">
        <type>DWORD</type>
      </field>
      <field offset="80" name="Submitted">
        <type>SYSTEMTIME</type>
      </field>
      <field offset="96" name="Time">
        <type>DWORD</type>
      </field>
      <field offset="100" name="PagesPrinted">
        <type>DWORD</type>
      </field>
      <field offset="104" name="SizeHigh">
        <type>LONG</type>
      </field>
    </struct>
    <typedef name="JOB_INFO_4A">
      <struct name="_JOB_INFO_4A" />
    </typedef>
    <typedef name="PJOB_INFO_4A">
      <ptr>
        <struct name="_JOB_INFO_4A" />
      </ptr>
    </typedef>
    <typedef name="LPJOB_INFO_4A">
      <ptr>
        <struct name="_JOB_INFO_4A" />
      </ptr>
    </typedef>
    <struct name="_JOB_INFO_4W">
      <field offset="0" name="JobId">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pPrinterName">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="pMachineName">
        <type>LPWSTR</type>
      </field>
      <field offset="12" name="pUserName">
        <type>LPWSTR</type>
      </field>
      <field offset="16" name="pDocument">
        <type>LPWSTR</type>
      </field>
      <field offset="20" name="pNotifyName">
        <type>LPWSTR</type>
      </field>
      <field offset="24" name="pDatatype">
        <type>LPWSTR</type>
      </field>
      <field offset="28" name="pPrintProcessor">
        <type>LPWSTR</type>
      </field>
      <field offset="32" name="pParameters">
        <type>LPWSTR</type>
      </field>
      <field offset="36" name="pDriverName">
        <type>LPWSTR</type>
      </field>
      <field offset="40" name="pDevMode">
        <type>LPDEVMODEW</type>
      </field>
      <field offset="44" name="pStatus">
        <type>LPWSTR</type>
      </field>
      <field offset="48" name="pSecurityDescriptor">
        <type>PSECURITY_DESCRIPTOR</type>
      </field>
      <field offset="52" name="Status">
        <type>DWORD</type>
      </field>
      <field offset="56" name="Priority">
        <type>DWORD</type>
      </field>
      <field offset="60" name="Position">
        <type>DWORD</type>
      </field>
      <field offset="64" name="StartTime">
        <type>DWORD</type>
      </field>
      <field offset="68" name="UntilTime">
        <type>DWORD</type>
      </field>
      <field offset="72" name="TotalPages">
        <type>DWORD</type>
      </field>
      <field offset="76" name="Size">
        <type>DWORD</type>
      </field>
      <field offset="80" name="Submitted">
        <type>SYSTEMTIME</type>
      </field>
      <field offset="96" name="Time">
        <type>DWORD</type>
      </field>
      <field offset="100" name="PagesPrinted">
        <type>DWORD</type>
      </field>
      <field offset="104" name="SizeHigh">
        <type>LONG</type>
      </field>
    </struct>
    <typedef name="JOB_INFO_4W">
      <struct name="_JOB_INFO_4W" />
    </typedef>
    <typedef name="PJOB_INFO_4W">
      <ptr>
        <struct name="_JOB_INFO_4W" />
      </ptr>
    </typedef>
    <typedef name="LPJOB_INFO_4W">
      <ptr>
        <struct name="_JOB_INFO_4W" />
      </ptr>
    </typedef>
    <typedef name="JOB_INFO_4">
      <type>JOB_INFO_4A</type>
    </typedef>
    <typedef name="PJOB_INFO_4">
      <type>PJOB_INFO_4A</type>
    </typedef>
    <typedef name="LPJOB_INFO_4">
      <type>LPJOB_INFO_4A</type>
    </typedef>
    <struct name="_ADDJOB_INFO_1A">
      <field offset="0" name="Path">
        <type>LPSTR</type>
      </field>
      <field offset="4" name="JobId">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="ADDJOB_INFO_1A">
      <struct name="_ADDJOB_INFO_1A" />
    </typedef>
    <typedef name="PADDJOB_INFO_1A">
      <ptr>
        <struct name="_ADDJOB_INFO_1A" />
      </ptr>
    </typedef>
    <typedef name="LPADDJOB_INFO_1A">
      <ptr>
        <struct name="_ADDJOB_INFO_1A" />
      </ptr>
    </typedef>
    <struct name="_ADDJOB_INFO_1W">
      <field offset="0" name="Path">
        <type>LPWSTR</type>
      </field>
      <field offset="4" name="JobId">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="ADDJOB_INFO_1W">
      <struct name="_ADDJOB_INFO_1W" />
    </typedef>
    <typedef name="PADDJOB_INFO_1W">
      <ptr>
        <struct name="_ADDJOB_INFO_1W" />
      </ptr>
    </typedef>
    <typedef name="LPADDJOB_INFO_1W">
      <ptr>
        <struct name="_ADDJOB_INFO_1W" />
      </ptr>
    </typedef>
    <typedef name="ADDJOB_INFO_1">
      <type>ADDJOB_INFO_1A</type>
    </typedef>
    <typedef name="PADDJOB_INFO_1">
      <type>PADDJOB_INFO_1A</type>
    </typedef>
    <typedef name="LPADDJOB_INFO_1">
      <type>LPADDJOB_INFO_1A</type>
    </typedef>
    <struct name="_DRIVER_INFO_1A">
      <field offset="0" name="pName">
        <type>LPSTR</type>
      </field>
    </struct>
    <typedef name="DRIVER_INFO_1A">
      <struct name="_DRIVER_INFO_1A" />
    </typedef>
    <typedef name="PDRIVER_INFO_1A">
      <ptr>
        <struct name="_DRIVER_INFO_1A" />
      </ptr>
    </typedef>
    <typedef name="LPDRIVER_INFO_1A">
      <ptr>
        <struct name="_DRIVER_INFO_1A" />
      </ptr>
    </typedef>
    <struct name="_DRIVER_INFO_1W">
      <field offset="0" name="pName">
        <type>LPWSTR</type>
      </field>
    </struct>
    <typedef name="DRIVER_INFO_1W">
      <struct name="_DRIVER_INFO_1W" />
    </typedef>
    <typedef name="PDRIVER_INFO_1W">
      <ptr>
        <struct name="_DRIVER_INFO_1W" />
      </ptr>
    </typedef>
    <typedef name="LPDRIVER_INFO_1W">
      <ptr>
        <struct name="_DRIVER_INFO_1W" />
      </ptr>
    </typedef>
    <typedef name="DRIVER_INFO_1">
      <type>DRIVER_INFO_1A</type>
    </typedef>
    <typedef name="PDRIVER_INFO_1">
      <type>PDRIVER_INFO_1A</type>
    </typedef>
    <typedef name="LPDRIVER_INFO_1">
      <type>LPDRIVER_INFO_1A</type>
    </typedef>
    <struct name="_DRIVER_INFO_2A">
      <field offset="0" name="cVersion">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pName">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="pEnvironment">
        <type>LPSTR</type>
      </field>
      <field offset="12" name="pDriverPath">
        <type>LPSTR</type>
      </field>
      <field offset="16" name="pDataFile">
        <type>LPSTR</type>
      </field>
      <field offset="20" name="pConfigFile">
        <type>LPSTR</type>
      </field>
    </struct>
    <typedef name="DRIVER_INFO_2A">
      <struct name="_DRIVER_INFO_2A" />
    </typedef>
    <typedef name="PDRIVER_INFO_2A">
      <ptr>
        <struct name="_DRIVER_INFO_2A" />
      </ptr>
    </typedef>
    <typedef name="LPDRIVER_INFO_2A">
      <ptr>
        <struct name="_DRIVER_INFO_2A" />
      </ptr>
    </typedef>
    <struct name="_DRIVER_INFO_2W">
      <field offset="0" name="cVersion">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pName">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="pEnvironment">
        <type>LPWSTR</type>
      </field>
      <field offset="12" name="pDriverPath">
        <type>LPWSTR</type>
      </field>
      <field offset="16" name="pDataFile">
        <type>LPWSTR</type>
      </field>
      <field offset="20" name="pConfigFile">
        <type>LPWSTR</type>
      </field>
    </struct>
    <typedef name="DRIVER_INFO_2W">
      <struct name="_DRIVER_INFO_2W" />
    </typedef>
    <typedef name="PDRIVER_INFO_2W">
      <ptr>
        <struct name="_DRIVER_INFO_2W" />
      </ptr>
    </typedef>
    <typedef name="LPDRIVER_INFO_2W">
      <ptr>
        <struct name="_DRIVER_INFO_2W" />
      </ptr>
    </typedef>
    <typedef name="DRIVER_INFO_2">
      <type>DRIVER_INFO_2A</type>
    </typedef>
    <typedef name="PDRIVER_INFO_2">
      <type>PDRIVER_INFO_2A</type>
    </typedef>
    <typedef name="LPDRIVER_INFO_2">
      <type>LPDRIVER_INFO_2A</type>
    </typedef>
    <struct name="_DRIVER_INFO_3A">
      <field offset="0" name="cVersion">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pName">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="pEnvironment">
        <type>LPSTR</type>
      </field>
      <field offset="12" name="pDriverPath">
        <type>LPSTR</type>
      </field>
      <field offset="16" name="pDataFile">
        <type>LPSTR</type>
      </field>
      <field offset="20" name="pConfigFile">
        <type>LPSTR</type>
      </field>
      <field offset="24" name="pHelpFile">
        <type>LPSTR</type>
      </field>
      <field offset="28" name="pDependentFiles">
        <type>LPSTR</type>
      </field>
      <field offset="32" name="pMonitorName">
        <type>LPSTR</type>
      </field>
      <field offset="36" name="pDefaultDataType">
        <type>LPSTR</type>
      </field>
    </struct>
    <typedef name="DRIVER_INFO_3A">
      <struct name="_DRIVER_INFO_3A" />
    </typedef>
    <typedef name="PDRIVER_INFO_3A">
      <ptr>
        <struct name="_DRIVER_INFO_3A" />
      </ptr>
    </typedef>
    <typedef name="LPDRIVER_INFO_3A">
      <ptr>
        <struct name="_DRIVER_INFO_3A" />
      </ptr>
    </typedef>
    <struct name="_DRIVER_INFO_3W">
      <field offset="0" name="cVersion">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pName">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="pEnvironment">
        <type>LPWSTR</type>
      </field>
      <field offset="12" name="pDriverPath">
        <type>LPWSTR</type>
      </field>
      <field offset="16" name="pDataFile">
        <type>LPWSTR</type>
      </field>
      <field offset="20" name="pConfigFile">
        <type>LPWSTR</type>
      </field>
      <field offset="24" name="pHelpFile">
        <type>LPWSTR</type>
      </field>
      <field offset="28" name="pDependentFiles">
        <type>LPWSTR</type>
      </field>
      <field offset="32" name="pMonitorName">
        <type>LPWSTR</type>
      </field>
      <field offset="36" name="pDefaultDataType">
        <type>LPWSTR</type>
      </field>
    </struct>
    <typedef name="DRIVER_INFO_3W">
      <struct name="_DRIVER_INFO_3W" />
    </typedef>
    <typedef name="PDRIVER_INFO_3W">
      <ptr>
        <struct name="_DRIVER_INFO_3W" />
      </ptr>
    </typedef>
    <typedef name="LPDRIVER_INFO_3W">
      <ptr>
        <struct name="_DRIVER_INFO_3W" />
      </ptr>
    </typedef>
    <typedef name="DRIVER_INFO_3">
      <type>DRIVER_INFO_3A</type>
    </typedef>
    <typedef name="PDRIVER_INFO_3">
      <type>PDRIVER_INFO_3A</type>
    </typedef>
    <typedef name="LPDRIVER_INFO_3">
      <type>LPDRIVER_INFO_3A</type>
    </typedef>
    <struct name="_DRIVER_INFO_4A">
      <field offset="0" name="cVersion">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pName">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="pEnvironment">
        <type>LPSTR</type>
      </field>
      <field offset="12" name="pDriverPath">
        <type>LPSTR</type>
      </field>
      <field offset="16" name="pDataFile">
        <type>LPSTR</type>
      </field>
      <field offset="20" name="pConfigFile">
        <type>LPSTR</type>
      </field>
      <field offset="24" name="pHelpFile">
        <type>LPSTR</type>
      </field>
      <field offset="28" name="pDependentFiles">
        <type>LPSTR</type>
      </field>
      <field offset="32" name="pMonitorName">
        <type>LPSTR</type>
      </field>
      <field offset="36" name="pDefaultDataType">
        <type>LPSTR</type>
      </field>
      <field offset="40" name="pszzPreviousNames">
        <type>LPSTR</type>
      </field>
    </struct>
    <typedef name="DRIVER_INFO_4A">
      <struct name="_DRIVER_INFO_4A" />
    </typedef>
    <typedef name="PDRIVER_INFO_4A">
      <ptr>
        <struct name="_DRIVER_INFO_4A" />
      </ptr>
    </typedef>
    <typedef name="LPDRIVER_INFO_4A">
      <ptr>
        <struct name="_DRIVER_INFO_4A" />
      </ptr>
    </typedef>
    <struct name="_DRIVER_INFO_4W">
      <field offset="0" name="cVersion">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pName">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="pEnvironment">
        <type>LPWSTR</type>
      </field>
      <field offset="12" name="pDriverPath">
        <type>LPWSTR</type>
      </field>
      <field offset="16" name="pDataFile">
        <type>LPWSTR</type>
      </field>
      <field offset="20" name="pConfigFile">
        <type>LPWSTR</type>
      </field>
      <field offset="24" name="pHelpFile">
        <type>LPWSTR</type>
      </field>
      <field offset="28" name="pDependentFiles">
        <type>LPWSTR</type>
      </field>
      <field offset="32" name="pMonitorName">
        <type>LPWSTR</type>
      </field>
      <field offset="36" name="pDefaultDataType">
        <type>LPWSTR</type>
      </field>
      <field offset="40" name="pszzPreviousNames">
        <type>LPWSTR</type>
      </field>
    </struct>
    <typedef name="DRIVER_INFO_4W">
      <struct name="_DRIVER_INFO_4W" />
    </typedef>
    <typedef name="PDRIVER_INFO_4W">
      <ptr>
        <struct name="_DRIVER_INFO_4W" />
      </ptr>
    </typedef>
    <typedef name="LPDRIVER_INFO_4W">
      <ptr>
        <struct name="_DRIVER_INFO_4W" />
      </ptr>
    </typedef>
    <typedef name="DRIVER_INFO_4">
      <type>DRIVER_INFO_4A</type>
    </typedef>
    <typedef name="PDRIVER_INFO_4">
      <type>PDRIVER_INFO_4A</type>
    </typedef>
    <typedef name="LPDRIVER_INFO_4">
      <type>LPDRIVER_INFO_4A</type>
    </typedef>
    <struct name="_DRIVER_INFO_5A">
      <field offset="0" name="cVersion">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pName">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="pEnvironment">
        <type>LPSTR</type>
      </field>
      <field offset="12" name="pDriverPath">
        <type>LPSTR</type>
      </field>
      <field offset="16" name="pDataFile">
        <type>LPSTR</type>
      </field>
      <field offset="20" name="pConfigFile">
        <type>LPSTR</type>
      </field>
      <field offset="24" name="dwDriverAttributes">
        <type>DWORD</type>
      </field>
      <field offset="28" name="dwConfigVersion">
        <type>DWORD</type>
      </field>
      <field offset="32" name="dwDriverVersion">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="DRIVER_INFO_5A">
      <struct name="_DRIVER_INFO_5A" />
    </typedef>
    <typedef name="PDRIVER_INFO_5A">
      <ptr>
        <struct name="_DRIVER_INFO_5A" />
      </ptr>
    </typedef>
    <typedef name="LPDRIVER_INFO_5A">
      <ptr>
        <struct name="_DRIVER_INFO_5A" />
      </ptr>
    </typedef>
    <struct name="_DRIVER_INFO_5W">
      <field offset="0" name="cVersion">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pName">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="pEnvironment">
        <type>LPWSTR</type>
      </field>
      <field offset="12" name="pDriverPath">
        <type>LPWSTR</type>
      </field>
      <field offset="16" name="pDataFile">
        <type>LPWSTR</type>
      </field>
      <field offset="20" name="pConfigFile">
        <type>LPWSTR</type>
      </field>
      <field offset="24" name="dwDriverAttributes">
        <type>DWORD</type>
      </field>
      <field offset="28" name="dwConfigVersion">
        <type>DWORD</type>
      </field>
      <field offset="32" name="dwDriverVersion">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="DRIVER_INFO_5W">
      <struct name="_DRIVER_INFO_5W" />
    </typedef>
    <typedef name="PDRIVER_INFO_5W">
      <ptr>
        <struct name="_DRIVER_INFO_5W" />
      </ptr>
    </typedef>
    <typedef name="LPDRIVER_INFO_5W">
      <ptr>
        <struct name="_DRIVER_INFO_5W" />
      </ptr>
    </typedef>
    <typedef name="DRIVER_INFO_5">
      <type>DRIVER_INFO_5A</type>
    </typedef>
    <typedef name="PDRIVER_INFO_5">
      <type>PDRIVER_INFO_5A</type>
    </typedef>
    <typedef name="LPDRIVER_INFO_5">
      <type>LPDRIVER_INFO_5A</type>
    </typedef>
    <struct name="_DRIVER_INFO_6A">
      <field offset="0" name="cVersion">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pName">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="pEnvironment">
        <type>LPSTR</type>
      </field>
      <field offset="12" name="pDriverPath">
        <type>LPSTR</type>
      </field>
      <field offset="16" name="pDataFile">
        <type>LPSTR</type>
      </field>
      <field offset="20" name="pConfigFile">
        <type>LPSTR</type>
      </field>
      <field offset="24" name="pHelpFile">
        <type>LPSTR</type>
      </field>
      <field offset="28" name="pDependentFiles">
        <type>LPSTR</type>
      </field>
      <field offset="32" name="pMonitorName">
        <type>LPSTR</type>
      </field>
      <field offset="36" name="pDefaultDataType">
        <type>LPSTR</type>
      </field>
      <field offset="40" name="pszzPreviousNames">
        <type>LPSTR</type>
      </field>
      <field offset="48" name="ftDriverDate">
        <type>FILETIME</type>
      </field>
      <field offset="56" name="dwlDriverVersion">
        <type>DWORDLONG</type>
      </field>
      <field offset="64" name="pszMfgName">
        <type>LPSTR</type>
      </field>
      <field offset="68" name="pszOEMUrl">
        <type>LPSTR</type>
      </field>
      <field offset="72" name="pszHardwareID">
        <type>LPSTR</type>
      </field>
      <field offset="76" name="pszProvider">
        <type>LPSTR</type>
      </field>
    </struct>
    <typedef name="DRIVER_INFO_6A">
      <struct name="_DRIVER_INFO_6A" />
    </typedef>
    <typedef name="PDRIVER_INFO_6A">
      <ptr>
        <struct name="_DRIVER_INFO_6A" />
      </ptr>
    </typedef>
    <typedef name="LPDRIVER_INFO_6A">
      <ptr>
        <struct name="_DRIVER_INFO_6A" />
      </ptr>
    </typedef>
    <struct name="_DRIVER_INFO_6W">
      <field offset="0" name="cVersion">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pName">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="pEnvironment">
        <type>LPWSTR</type>
      </field>
      <field offset="12" name="pDriverPath">
        <type>LPWSTR</type>
      </field>
      <field offset="16" name="pDataFile">
        <type>LPWSTR</type>
      </field>
      <field offset="20" name="pConfigFile">
        <type>LPWSTR</type>
      </field>
      <field offset="24" name="pHelpFile">
        <type>LPWSTR</type>
      </field>
      <field offset="28" name="pDependentFiles">
        <type>LPWSTR</type>
      </field>
      <field offset="32" name="pMonitorName">
        <type>LPWSTR</type>
      </field>
      <field offset="36" name="pDefaultDataType">
        <type>LPWSTR</type>
      </field>
      <field offset="40" name="pszzPreviousNames">
        <type>LPWSTR</type>
      </field>
      <field offset="48" name="ftDriverDate">
        <type>FILETIME</type>
      </field>
      <field offset="56" name="dwlDriverVersion">
        <type>DWORDLONG</type>
      </field>
      <field offset="64" name="pszMfgName">
        <type>LPWSTR</type>
      </field>
      <field offset="68" name="pszOEMUrl">
        <type>LPWSTR</type>
      </field>
      <field offset="72" name="pszHardwareID">
        <type>LPWSTR</type>
      </field>
      <field offset="76" name="pszProvider">
        <type>LPWSTR</type>
      </field>
    </struct>
    <typedef name="DRIVER_INFO_6W">
      <struct name="_DRIVER_INFO_6W" />
    </typedef>
    <typedef name="PDRIVER_INFO_6W">
      <ptr>
        <struct name="_DRIVER_INFO_6W" />
      </ptr>
    </typedef>
    <typedef name="LPDRIVER_INFO_6W">
      <ptr>
        <struct name="_DRIVER_INFO_6W" />
      </ptr>
    </typedef>
    <typedef name="DRIVER_INFO_6">
      <type>DRIVER_INFO_6A</type>
    </typedef>
    <typedef name="PDRIVER_INFO_6">
      <type>PDRIVER_INFO_6A</type>
    </typedef>
    <typedef name="LPDRIVER_INFO_6">
      <type>LPDRIVER_INFO_6A</type>
    </typedef>
    <struct name="_DRIVER_INFO_8A">
      <field offset="0" name="cVersion">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pName">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="pEnvironment">
        <type>LPSTR</type>
      </field>
      <field offset="12" name="pDriverPath">
        <type>LPSTR</type>
      </field>
      <field offset="16" name="pDataFile">
        <type>LPSTR</type>
      </field>
      <field offset="20" name="pConfigFile">
        <type>LPSTR</type>
      </field>
      <field offset="24" name="pHelpFile">
        <type>LPSTR</type>
      </field>
      <field offset="28" name="pDependentFiles">
        <type>LPSTR</type>
      </field>
      <field offset="32" name="pMonitorName">
        <type>LPSTR</type>
      </field>
      <field offset="36" name="pDefaultDataType">
        <type>LPSTR</type>
      </field>
      <field offset="40" name="pszzPreviousNames">
        <type>LPSTR</type>
      </field>
      <field offset="48" name="ftDriverDate">
        <type>FILETIME</type>
      </field>
      <field offset="56" name="dwlDriverVersion">
        <type>DWORDLONG</type>
      </field>
      <field offset="64" name="pszMfgName">
        <type>LPSTR</type>
      </field>
      <field offset="68" name="pszOEMUrl">
        <type>LPSTR</type>
      </field>
      <field offset="72" name="pszHardwareID">
        <type>LPSTR</type>
      </field>
      <field offset="76" name="pszProvider">
        <type>LPSTR</type>
      </field>
      <field offset="80" name="pszPrintProcessor">
        <type>LPSTR</type>
      </field>
      <field offset="84" name="pszVendorSetup">
        <type>LPSTR</type>
      </field>
      <field offset="88" name="pszzColorProfiles">
        <type>LPSTR</type>
      </field>
      <field offset="92" name="pszInfPath">
        <type>LPSTR</type>
      </field>
      <field offset="96" name="dwPrinterDriverAttributes">
        <type>DWORD</type>
      </field>
      <field offset="100" name="pszzCoreDriverDependencies">
        <type>LPSTR</type>
      </field>
      <field offset="104" name="ftMinInboxDriverVerDate">
        <type>FILETIME</type>
      </field>
      <field offset="112" name="dwlMinInboxDriverVerVersion">
        <type>DWORDLONG</type>
      </field>
    </struct>
    <typedef name="DRIVER_INFO_8A">
      <struct name="_DRIVER_INFO_8A" />
    </typedef>
    <typedef name="PDRIVER_INFO_8A">
      <ptr>
        <struct name="_DRIVER_INFO_8A" />
      </ptr>
    </typedef>
    <typedef name="LPDRIVER_INFO_8A">
      <ptr>
        <struct name="_DRIVER_INFO_8A" />
      </ptr>
    </typedef>
    <struct name="_DRIVER_INFO_8W">
      <field offset="0" name="cVersion">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pName">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="pEnvironment">
        <type>LPWSTR</type>
      </field>
      <field offset="12" name="pDriverPath">
        <type>LPWSTR</type>
      </field>
      <field offset="16" name="pDataFile">
        <type>LPWSTR</type>
      </field>
      <field offset="20" name="pConfigFile">
        <type>LPWSTR</type>
      </field>
      <field offset="24" name="pHelpFile">
        <type>LPWSTR</type>
      </field>
      <field offset="28" name="pDependentFiles">
        <type>LPWSTR</type>
      </field>
      <field offset="32" name="pMonitorName">
        <type>LPWSTR</type>
      </field>
      <field offset="36" name="pDefaultDataType">
        <type>LPWSTR</type>
      </field>
      <field offset="40" name="pszzPreviousNames">
        <type>LPWSTR</type>
      </field>
      <field offset="48" name="ftDriverDate">
        <type>FILETIME</type>
      </field>
      <field offset="56" name="dwlDriverVersion">
        <type>DWORDLONG</type>
      </field>
      <field offset="64" name="pszMfgName">
        <type>LPWSTR</type>
      </field>
      <field offset="68" name="pszOEMUrl">
        <type>LPWSTR</type>
      </field>
      <field offset="72" name="pszHardwareID">
        <type>LPWSTR</type>
      </field>
      <field offset="76" name="pszProvider">
        <type>LPWSTR</type>
      </field>
      <field offset="80" name="pszPrintProcessor">
        <type>LPWSTR</type>
      </field>
      <field offset="84" name="pszVendorSetup">
        <type>LPWSTR</type>
      </field>
      <field offset="88" name="pszzColorProfiles">
        <type>LPWSTR</type>
      </field>
      <field offset="92" name="pszInfPath">
        <type>LPWSTR</type>
      </field>
      <field offset="96" name="dwPrinterDriverAttributes">
        <type>DWORD</type>
      </field>
      <field offset="100" name="pszzCoreDriverDependencies">
        <type>LPWSTR</type>
      </field>
      <field offset="104" name="ftMinInboxDriverVerDate">
        <type>FILETIME</type>
      </field>
      <field offset="112" name="dwlMinInboxDriverVerVersion">
        <type>DWORDLONG</type>
      </field>
    </struct>
    <typedef name="DRIVER_INFO_8W">
      <struct name="_DRIVER_INFO_8W" />
    </typedef>
    <typedef name="PDRIVER_INFO_8W">
      <ptr>
        <struct name="_DRIVER_INFO_8W" />
      </ptr>
    </typedef>
    <typedef name="LPDRIVER_INFO_8W">
      <ptr>
        <struct name="_DRIVER_INFO_8W" />
      </ptr>
    </typedef>
    <typedef name="DRIVER_INFO_8">
      <type>DRIVER_INFO_8A</type>
    </typedef>
    <typedef name="PDRIVER_INFO_8">
      <type>PDRIVER_INFO_8A</type>
    </typedef>
    <typedef name="LPDRIVER_INFO_8">
      <type>LPDRIVER_INFO_8A</type>
    </typedef>
    <struct name="_DOC_INFO_1A">
      <field offset="0" name="pDocName">
        <type>LPSTR</type>
      </field>
      <field offset="4" name="pOutputFile">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="pDatatype">
        <type>LPSTR</type>
      </field>
    </struct>
    <typedef name="DOC_INFO_1A">
      <struct name="_DOC_INFO_1A" />
    </typedef>
    <typedef name="PDOC_INFO_1A">
      <ptr>
        <struct name="_DOC_INFO_1A" />
      </ptr>
    </typedef>
    <typedef name="LPDOC_INFO_1A">
      <ptr>
        <struct name="_DOC_INFO_1A" />
      </ptr>
    </typedef>
    <struct name="_DOC_INFO_1W">
      <field offset="0" name="pDocName">
        <type>LPWSTR</type>
      </field>
      <field offset="4" name="pOutputFile">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="pDatatype">
        <type>LPWSTR</type>
      </field>
    </struct>
    <typedef name="DOC_INFO_1W">
      <struct name="_DOC_INFO_1W" />
    </typedef>
    <typedef name="PDOC_INFO_1W">
      <ptr>
        <struct name="_DOC_INFO_1W" />
      </ptr>
    </typedef>
    <typedef name="LPDOC_INFO_1W">
      <ptr>
        <struct name="_DOC_INFO_1W" />
      </ptr>
    </typedef>
    <typedef name="DOC_INFO_1">
      <type>DOC_INFO_1A</type>
    </typedef>
    <typedef name="PDOC_INFO_1">
      <type>PDOC_INFO_1A</type>
    </typedef>
    <typedef name="LPDOC_INFO_1">
      <type>LPDOC_INFO_1A</type>
    </typedef>
    <struct name="_FORM_INFO_1A">
      <field offset="0" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pName">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="Size">
        <type>SIZEL</type>
      </field>
      <field offset="16" name="ImageableArea">
        <type>RECTL</type>
      </field>
    </struct>
    <typedef name="FORM_INFO_1A">
      <struct name="_FORM_INFO_1A" />
    </typedef>
    <typedef name="PFORM_INFO_1A">
      <ptr>
        <struct name="_FORM_INFO_1A" />
      </ptr>
    </typedef>
    <typedef name="LPFORM_INFO_1A">
      <ptr>
        <struct name="_FORM_INFO_1A" />
      </ptr>
    </typedef>
    <struct name="_FORM_INFO_1W">
      <field offset="0" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pName">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="Size">
        <type>SIZEL</type>
      </field>
      <field offset="16" name="ImageableArea">
        <type>RECTL</type>
      </field>
    </struct>
    <typedef name="FORM_INFO_1W">
      <struct name="_FORM_INFO_1W" />
    </typedef>
    <typedef name="PFORM_INFO_1W">
      <ptr>
        <struct name="_FORM_INFO_1W" />
      </ptr>
    </typedef>
    <typedef name="LPFORM_INFO_1W">
      <ptr>
        <struct name="_FORM_INFO_1W" />
      </ptr>
    </typedef>
    <typedef name="FORM_INFO_1">
      <type>FORM_INFO_1A</type>
    </typedef>
    <typedef name="PFORM_INFO_1">
      <type>PFORM_INFO_1A</type>
    </typedef>
    <typedef name="LPFORM_INFO_1">
      <type>LPFORM_INFO_1A</type>
    </typedef>
    <struct name="_FORM_INFO_2A">
      <field offset="0" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pName">
        <type>LPCSTR</type>
      </field>
      <field offset="8" name="Size">
        <type>SIZEL</type>
      </field>
      <field offset="16" name="ImageableArea">
        <type>RECTL</type>
      </field>
      <field offset="32" name="pKeyword">
        <type>LPCSTR</type>
      </field>
      <field offset="36" name="StringType">
        <type>DWORD</type>
      </field>
      <field offset="40" name="pMuiDll">
        <type>LPCSTR</type>
      </field>
      <field offset="44" name="dwResourceId">
        <type>DWORD</type>
      </field>
      <field offset="48" name="pDisplayName">
        <type>LPCSTR</type>
      </field>
      <field offset="52" name="wLangId">
        <type>LANGID</type>
      </field>
    </struct>
    <typedef name="FORM_INFO_2A">
      <struct name="_FORM_INFO_2A" />
    </typedef>
    <typedef name="PFORM_INFO_2A">
      <ptr>
        <struct name="_FORM_INFO_2A" />
      </ptr>
    </typedef>
    <typedef name="LPFORM_INFO_2A">
      <ptr>
        <struct name="_FORM_INFO_2A" />
      </ptr>
    </typedef>
    <struct name="_FORM_INFO_2W">
      <field offset="0" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pName">
        <type>LPCWSTR</type>
      </field>
      <field offset="8" name="Size">
        <type>SIZEL</type>
      </field>
      <field offset="16" name="ImageableArea">
        <type>RECTL</type>
      </field>
      <field offset="32" name="pKeyword">
        <type>LPCSTR</type>
      </field>
      <field offset="36" name="StringType">
        <type>DWORD</type>
      </field>
      <field offset="40" name="pMuiDll">
        <type>LPCWSTR</type>
      </field>
      <field offset="44" name="dwResourceId">
        <type>DWORD</type>
      </field>
      <field offset="48" name="pDisplayName">
        <type>LPCWSTR</type>
      </field>
      <field offset="52" name="wLangId">
        <type>LANGID</type>
      </field>
    </struct>
    <typedef name="FORM_INFO_2W">
      <struct name="_FORM_INFO_2W" />
    </typedef>
    <typedef name="PFORM_INFO_2W">
      <ptr>
        <struct name="_FORM_INFO_2W" />
      </ptr>
    </typedef>
    <typedef name="LPFORM_INFO_2W">
      <ptr>
        <struct name="_FORM_INFO_2W" />
      </ptr>
    </typedef>
    <typedef name="FORM_INFO_2">
      <type>FORM_INFO_2A</type>
    </typedef>
    <typedef name="PFORM_INFO_2">
      <type>PFORM_INFO_2A</type>
    </typedef>
    <typedef name="LPFORM_INFO_2">
      <type>LPFORM_INFO_2A</type>
    </typedef>
    <struct name="_DOC_INFO_2A">
      <field offset="0" name="pDocName">
        <type>LPSTR</type>
      </field>
      <field offset="4" name="pOutputFile">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="pDatatype">
        <type>LPSTR</type>
      </field>
      <field offset="12" name="dwMode">
        <type>DWORD</type>
      </field>
      <field offset="16" name="JobId">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="DOC_INFO_2A">
      <struct name="_DOC_INFO_2A" />
    </typedef>
    <typedef name="PDOC_INFO_2A">
      <ptr>
        <struct name="_DOC_INFO_2A" />
      </ptr>
    </typedef>
    <typedef name="LPDOC_INFO_2A">
      <ptr>
        <struct name="_DOC_INFO_2A" />
      </ptr>
    </typedef>
    <struct name="_DOC_INFO_2W">
      <field offset="0" name="pDocName">
        <type>LPWSTR</type>
      </field>
      <field offset="4" name="pOutputFile">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="pDatatype">
        <type>LPWSTR</type>
      </field>
      <field offset="12" name="dwMode">
        <type>DWORD</type>
      </field>
      <field offset="16" name="JobId">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="DOC_INFO_2W">
      <struct name="_DOC_INFO_2W" />
    </typedef>
    <typedef name="PDOC_INFO_2W">
      <ptr>
        <struct name="_DOC_INFO_2W" />
      </ptr>
    </typedef>
    <typedef name="LPDOC_INFO_2W">
      <ptr>
        <struct name="_DOC_INFO_2W" />
      </ptr>
    </typedef>
    <typedef name="DOC_INFO_2">
      <type>DOC_INFO_2A</type>
    </typedef>
    <typedef name="PDOC_INFO_2">
      <type>PDOC_INFO_2A</type>
    </typedef>
    <typedef name="LPDOC_INFO_2">
      <type>LPDOC_INFO_2A</type>
    </typedef>
    <struct name="_DOC_INFO_3A">
      <field offset="0" name="pDocName">
        <type>LPSTR</type>
      </field>
      <field offset="4" name="pOutputFile">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="pDatatype">
        <type>LPSTR</type>
      </field>
      <field offset="12" name="dwFlags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="DOC_INFO_3A">
      <struct name="_DOC_INFO_3A" />
    </typedef>
    <typedef name="PDOC_INFO_3A">
      <ptr>
        <struct name="_DOC_INFO_3A" />
      </ptr>
    </typedef>
    <typedef name="LPDOC_INFO_3A">
      <ptr>
        <struct name="_DOC_INFO_3A" />
      </ptr>
    </typedef>
    <struct name="_DOC_INFO_3W">
      <field offset="0" name="pDocName">
        <type>LPWSTR</type>
      </field>
      <field offset="4" name="pOutputFile">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="pDatatype">
        <type>LPWSTR</type>
      </field>
      <field offset="12" name="dwFlags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="DOC_INFO_3W">
      <struct name="_DOC_INFO_3W" />
    </typedef>
    <typedef name="PDOC_INFO_3W">
      <ptr>
        <struct name="_DOC_INFO_3W" />
      </ptr>
    </typedef>
    <typedef name="LPDOC_INFO_3W">
      <ptr>
        <struct name="_DOC_INFO_3W" />
      </ptr>
    </typedef>
    <typedef name="DOC_INFO_3">
      <type>DOC_INFO_3A</type>
    </typedef>
    <typedef name="PDOC_INFO_3">
      <type>PDOC_INFO_3A</type>
    </typedef>
    <typedef name="LPDOC_INFO_3">
      <type>LPDOC_INFO_3A</type>
    </typedef>
    <struct name="_PRINTPROCESSOR_INFO_1A">
      <field offset="0" name="pName">
        <type>LPSTR</type>
      </field>
    </struct>
    <typedef name="PRINTPROCESSOR_INFO_1A">
      <struct name="_PRINTPROCESSOR_INFO_1A" />
    </typedef>
    <typedef name="PPRINTPROCESSOR_INFO_1A">
      <ptr>
        <struct name="_PRINTPROCESSOR_INFO_1A" />
      </ptr>
    </typedef>
    <typedef name="LPPRINTPROCESSOR_INFO_1A">
      <ptr>
        <struct name="_PRINTPROCESSOR_INFO_1A" />
      </ptr>
    </typedef>
    <struct name="_PRINTPROCESSOR_INFO_1W">
      <field offset="0" name="pName">
        <type>LPWSTR</type>
      </field>
    </struct>
    <typedef name="PRINTPROCESSOR_INFO_1W">
      <struct name="_PRINTPROCESSOR_INFO_1W" />
    </typedef>
    <typedef name="PPRINTPROCESSOR_INFO_1W">
      <ptr>
        <struct name="_PRINTPROCESSOR_INFO_1W" />
      </ptr>
    </typedef>
    <typedef name="LPPRINTPROCESSOR_INFO_1W">
      <ptr>
        <struct name="_PRINTPROCESSOR_INFO_1W" />
      </ptr>
    </typedef>
    <typedef name="PRINTPROCESSOR_INFO_1">
      <type>PRINTPROCESSOR_INFO_1A</type>
    </typedef>
    <typedef name="PPRINTPROCESSOR_INFO_1">
      <type>PPRINTPROCESSOR_INFO_1A</type>
    </typedef>
    <typedef name="LPPRINTPROCESSOR_INFO_1">
      <type>LPPRINTPROCESSOR_INFO_1A</type>
    </typedef>
    <struct name="_PRINTPROCESSOR_CAPS_1">
      <field offset="0" name="dwLevel">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwNupOptions">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwPageOrderFlags">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwNumberOfCopies">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PRINTPROCESSOR_CAPS_1">
      <struct name="_PRINTPROCESSOR_CAPS_1" />
    </typedef>
    <typedef name="PPRINTPROCESSOR_CAPS_1">
      <ptr>
        <struct name="_PRINTPROCESSOR_CAPS_1" />
      </ptr>
    </typedef>
    <struct name="_PRINTPROCESSOR_CAPS_2">
      <field offset="0" name="dwLevel">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwNupOptions">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwPageOrderFlags">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwNumberOfCopies">
        <type>DWORD</type>
      </field>
      <field offset="16" name="dwDuplexHandlingCaps">
        <type>DWORD</type>
      </field>
      <field offset="20" name="dwNupDirectionCaps">
        <type>DWORD</type>
      </field>
      <field offset="24" name="dwNupBorderCaps">
        <type>DWORD</type>
      </field>
      <field offset="28" name="dwBookletHandlingCaps">
        <type>DWORD</type>
      </field>
      <field offset="32" name="dwScalingCaps">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PRINTPROCESSOR_CAPS_2">
      <struct name="_PRINTPROCESSOR_CAPS_2" />
    </typedef>
    <typedef name="PPRINTPROCESSOR_CAPS_2">
      <ptr>
        <struct name="_PRINTPROCESSOR_CAPS_2" />
      </ptr>
    </typedef>
    <struct name="_PORT_INFO_1A">
      <field offset="0" name="pName">
        <type>LPSTR</type>
      </field>
    </struct>
    <typedef name="PORT_INFO_1A">
      <struct name="_PORT_INFO_1A" />
    </typedef>
    <typedef name="PPORT_INFO_1A">
      <ptr>
        <struct name="_PORT_INFO_1A" />
      </ptr>
    </typedef>
    <typedef name="LPPORT_INFO_1A">
      <ptr>
        <struct name="_PORT_INFO_1A" />
      </ptr>
    </typedef>
    <struct name="_PORT_INFO_1W">
      <field offset="0" name="pName">
        <type>LPWSTR</type>
      </field>
    </struct>
    <typedef name="PORT_INFO_1W">
      <struct name="_PORT_INFO_1W" />
    </typedef>
    <typedef name="PPORT_INFO_1W">
      <ptr>
        <struct name="_PORT_INFO_1W" />
      </ptr>
    </typedef>
    <typedef name="LPPORT_INFO_1W">
      <ptr>
        <struct name="_PORT_INFO_1W" />
      </ptr>
    </typedef>
    <typedef name="PORT_INFO_1">
      <type>PORT_INFO_1A</type>
    </typedef>
    <typedef name="PPORT_INFO_1">
      <type>PPORT_INFO_1A</type>
    </typedef>
    <typedef name="LPPORT_INFO_1">
      <type>LPPORT_INFO_1A</type>
    </typedef>
    <struct name="_PORT_INFO_2A">
      <field offset="0" name="pPortName">
        <type>LPSTR</type>
      </field>
      <field offset="4" name="pMonitorName">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="pDescription">
        <type>LPSTR</type>
      </field>
      <field offset="12" name="fPortType">
        <type>DWORD</type>
      </field>
      <field offset="16" name="Reserved">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PORT_INFO_2A">
      <struct name="_PORT_INFO_2A" />
    </typedef>
    <typedef name="PPORT_INFO_2A">
      <ptr>
        <struct name="_PORT_INFO_2A" />
      </ptr>
    </typedef>
    <typedef name="LPPORT_INFO_2A">
      <ptr>
        <struct name="_PORT_INFO_2A" />
      </ptr>
    </typedef>
    <struct name="_PORT_INFO_2W">
      <field offset="0" name="pPortName">
        <type>LPWSTR</type>
      </field>
      <field offset="4" name="pMonitorName">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="pDescription">
        <type>LPWSTR</type>
      </field>
      <field offset="12" name="fPortType">
        <type>DWORD</type>
      </field>
      <field offset="16" name="Reserved">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PORT_INFO_2W">
      <struct name="_PORT_INFO_2W" />
    </typedef>
    <typedef name="PPORT_INFO_2W">
      <ptr>
        <struct name="_PORT_INFO_2W" />
      </ptr>
    </typedef>
    <typedef name="LPPORT_INFO_2W">
      <ptr>
        <struct name="_PORT_INFO_2W" />
      </ptr>
    </typedef>
    <typedef name="PORT_INFO_2">
      <type>PORT_INFO_2A</type>
    </typedef>
    <typedef name="PPORT_INFO_2">
      <type>PPORT_INFO_2A</type>
    </typedef>
    <typedef name="LPPORT_INFO_2">
      <type>LPPORT_INFO_2A</type>
    </typedef>
    <struct name="_PORT_INFO_3A">
      <field offset="0" name="dwStatus">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pszStatus">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="dwSeverity">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PORT_INFO_3A">
      <struct name="_PORT_INFO_3A" />
    </typedef>
    <typedef name="PPORT_INFO_3A">
      <ptr>
        <struct name="_PORT_INFO_3A" />
      </ptr>
    </typedef>
    <typedef name="LPPORT_INFO_3A">
      <ptr>
        <struct name="_PORT_INFO_3A" />
      </ptr>
    </typedef>
    <struct name="_PORT_INFO_3W">
      <field offset="0" name="dwStatus">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pszStatus">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="dwSeverity">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PORT_INFO_3W">
      <struct name="_PORT_INFO_3W" />
    </typedef>
    <typedef name="PPORT_INFO_3W">
      <ptr>
        <struct name="_PORT_INFO_3W" />
      </ptr>
    </typedef>
    <typedef name="LPPORT_INFO_3W">
      <ptr>
        <struct name="_PORT_INFO_3W" />
      </ptr>
    </typedef>
    <typedef name="PORT_INFO_3">
      <type>PORT_INFO_3A</type>
    </typedef>
    <typedef name="PPORT_INFO_3">
      <type>PPORT_INFO_3A</type>
    </typedef>
    <typedef name="LPPORT_INFO_3">
      <type>LPPORT_INFO_3A</type>
    </typedef>
    <struct name="_MONITOR_INFO_1A">
      <field offset="0" name="pName">
        <type>LPSTR</type>
      </field>
    </struct>
    <typedef name="MONITOR_INFO_1A">
      <struct name="_MONITOR_INFO_1A" />
    </typedef>
    <typedef name="PMONITOR_INFO_1A">
      <ptr>
        <struct name="_MONITOR_INFO_1A" />
      </ptr>
    </typedef>
    <typedef name="LPMONITOR_INFO_1A">
      <ptr>
        <struct name="_MONITOR_INFO_1A" />
      </ptr>
    </typedef>
    <struct name="_MONITOR_INFO_1W">
      <field offset="0" name="pName">
        <type>LPWSTR</type>
      </field>
    </struct>
    <typedef name="MONITOR_INFO_1W">
      <struct name="_MONITOR_INFO_1W" />
    </typedef>
    <typedef name="PMONITOR_INFO_1W">
      <ptr>
        <struct name="_MONITOR_INFO_1W" />
      </ptr>
    </typedef>
    <typedef name="LPMONITOR_INFO_1W">
      <ptr>
        <struct name="_MONITOR_INFO_1W" />
      </ptr>
    </typedef>
    <typedef name="MONITOR_INFO_1">
      <type>MONITOR_INFO_1A</type>
    </typedef>
    <typedef name="PMONITOR_INFO_1">
      <type>PMONITOR_INFO_1A</type>
    </typedef>
    <typedef name="LPMONITOR_INFO_1">
      <type>LPMONITOR_INFO_1A</type>
    </typedef>
    <struct name="_MONITOR_INFO_2A">
      <field offset="0" name="pName">
        <type>LPSTR</type>
      </field>
      <field offset="4" name="pEnvironment">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="pDLLName">
        <type>LPSTR</type>
      </field>
    </struct>
    <typedef name="MONITOR_INFO_2A">
      <struct name="_MONITOR_INFO_2A" />
    </typedef>
    <typedef name="PMONITOR_INFO_2A">
      <ptr>
        <struct name="_MONITOR_INFO_2A" />
      </ptr>
    </typedef>
    <typedef name="LPMONITOR_INFO_2A">
      <ptr>
        <struct name="_MONITOR_INFO_2A" />
      </ptr>
    </typedef>
    <struct name="_MONITOR_INFO_2W">
      <field offset="0" name="pName">
        <type>LPWSTR</type>
      </field>
      <field offset="4" name="pEnvironment">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="pDLLName">
        <type>LPWSTR</type>
      </field>
    </struct>
    <typedef name="MONITOR_INFO_2W">
      <struct name="_MONITOR_INFO_2W" />
    </typedef>
    <typedef name="PMONITOR_INFO_2W">
      <ptr>
        <struct name="_MONITOR_INFO_2W" />
      </ptr>
    </typedef>
    <typedef name="LPMONITOR_INFO_2W">
      <ptr>
        <struct name="_MONITOR_INFO_2W" />
      </ptr>
    </typedef>
    <typedef name="MONITOR_INFO_2">
      <type>MONITOR_INFO_2A</type>
    </typedef>
    <typedef name="PMONITOR_INFO_2">
      <type>PMONITOR_INFO_2A</type>
    </typedef>
    <typedef name="LPMONITOR_INFO_2">
      <type>LPMONITOR_INFO_2A</type>
    </typedef>
    <struct name="_DATATYPES_INFO_1A">
      <field offset="0" name="pName">
        <type>LPSTR</type>
      </field>
    </struct>
    <typedef name="DATATYPES_INFO_1A">
      <struct name="_DATATYPES_INFO_1A" />
    </typedef>
    <typedef name="PDATATYPES_INFO_1A">
      <ptr>
        <struct name="_DATATYPES_INFO_1A" />
      </ptr>
    </typedef>
    <typedef name="LPDATATYPES_INFO_1A">
      <ptr>
        <struct name="_DATATYPES_INFO_1A" />
      </ptr>
    </typedef>
    <struct name="_DATATYPES_INFO_1W">
      <field offset="0" name="pName">
        <type>LPWSTR</type>
      </field>
    </struct>
    <typedef name="DATATYPES_INFO_1W">
      <struct name="_DATATYPES_INFO_1W" />
    </typedef>
    <typedef name="PDATATYPES_INFO_1W">
      <ptr>
        <struct name="_DATATYPES_INFO_1W" />
      </ptr>
    </typedef>
    <typedef name="LPDATATYPES_INFO_1W">
      <ptr>
        <struct name="_DATATYPES_INFO_1W" />
      </ptr>
    </typedef>
    <typedef name="DATATYPES_INFO_1">
      <type>DATATYPES_INFO_1A</type>
    </typedef>
    <typedef name="PDATATYPES_INFO_1">
      <type>PDATATYPES_INFO_1A</type>
    </typedef>
    <typedef name="LPDATATYPES_INFO_1">
      <type>LPDATATYPES_INFO_1A</type>
    </typedef>
    <struct name="_PRINTER_DEFAULTSA">
      <field offset="0" name="pDatatype">
        <type>LPSTR</type>
      </field>
      <field offset="4" name="pDevMode">
        <type>LPDEVMODEA</type>
      </field>
      <field offset="8" name="DesiredAccess">
        <type>ACCESS_MASK</type>
      </field>
    </struct>
    <typedef name="PRINTER_DEFAULTSA">
      <struct name="_PRINTER_DEFAULTSA" />
    </typedef>
    <typedef name="PPRINTER_DEFAULTSA">
      <ptr>
        <struct name="_PRINTER_DEFAULTSA" />
      </ptr>
    </typedef>
    <typedef name="LPPRINTER_DEFAULTSA">
      <ptr>
        <struct name="_PRINTER_DEFAULTSA" />
      </ptr>
    </typedef>
    <struct name="_PRINTER_DEFAULTSW">
      <field offset="0" name="pDatatype">
        <type>LPWSTR</type>
      </field>
      <field offset="4" name="pDevMode">
        <type>LPDEVMODEW</type>
      </field>
      <field offset="8" name="DesiredAccess">
        <type>ACCESS_MASK</type>
      </field>
    </struct>
    <typedef name="PRINTER_DEFAULTSW">
      <struct name="_PRINTER_DEFAULTSW" />
    </typedef>
    <typedef name="PPRINTER_DEFAULTSW">
      <ptr>
        <struct name="_PRINTER_DEFAULTSW" />
      </ptr>
    </typedef>
    <typedef name="LPPRINTER_DEFAULTSW">
      <ptr>
        <struct name="_PRINTER_DEFAULTSW" />
      </ptr>
    </typedef>
    <typedef name="PRINTER_DEFAULTS">
      <type>PRINTER_DEFAULTSA</type>
    </typedef>
    <typedef name="PPRINTER_DEFAULTS">
      <type>PPRINTER_DEFAULTSA</type>
    </typedef>
    <typedef name="LPPRINTER_DEFAULTS">
      <type>LPPRINTER_DEFAULTSA</type>
    </typedef>
    <struct name="_PRINTER_ENUM_VALUESA">
      <field offset="0" name="pValueName">
        <type>LPSTR</type>
      </field>
      <field offset="4" name="cbValueName">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwType">
        <type>DWORD</type>
      </field>
      <field offset="12" name="pData">
        <type>LPBYTE</type>
      </field>
      <field offset="16" name="cbData">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PRINTER_ENUM_VALUESA">
      <struct name="_PRINTER_ENUM_VALUESA" />
    </typedef>
    <typedef name="PPRINTER_ENUM_VALUESA">
      <ptr>
        <struct name="_PRINTER_ENUM_VALUESA" />
      </ptr>
    </typedef>
    <typedef name="LPPRINTER_ENUM_VALUESA">
      <ptr>
        <struct name="_PRINTER_ENUM_VALUESA" />
      </ptr>
    </typedef>
    <struct name="_PRINTER_ENUM_VALUESW">
      <field offset="0" name="pValueName">
        <type>LPWSTR</type>
      </field>
      <field offset="4" name="cbValueName">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwType">
        <type>DWORD</type>
      </field>
      <field offset="12" name="pData">
        <type>LPBYTE</type>
      </field>
      <field offset="16" name="cbData">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PRINTER_ENUM_VALUESW">
      <struct name="_PRINTER_ENUM_VALUESW" />
    </typedef>
    <typedef name="PPRINTER_ENUM_VALUESW">
      <ptr>
        <struct name="_PRINTER_ENUM_VALUESW" />
      </ptr>
    </typedef>
    <typedef name="LPPRINTER_ENUM_VALUESW">
      <ptr>
        <struct name="_PRINTER_ENUM_VALUESW" />
      </ptr>
    </typedef>
    <typedef name="PRINTER_ENUM_VALUES">
      <type>PRINTER_ENUM_VALUESA</type>
    </typedef>
    <typedef name="PPRINTER_ENUM_VALUES">
      <type>PPRINTER_ENUM_VALUESA</type>
    </typedef>
    <typedef name="LPPRINTER_ENUM_VALUES">
      <type>LPPRINTER_ENUM_VALUESA</type>
    </typedef>
    <struct name="_PRINTER_NOTIFY_OPTIONS_TYPE">
      <field offset="0" name="Type">
        <type>WORD</type>
      </field>
      <field offset="2" name="Reserved0">
        <type>WORD</type>
      </field>
      <field offset="4" name="Reserved1">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Reserved2">
        <type>DWORD</type>
      </field>
      <field offset="12" name="Count">
        <type>DWORD</type>
      </field>
      <field offset="16" name="pFields">
        <type>PWORD</type>
      </field>
    </struct>
    <typedef name="PRINTER_NOTIFY_OPTIONS_TYPE">
      <struct name="_PRINTER_NOTIFY_OPTIONS_TYPE" />
    </typedef>
    <typedef name="PPRINTER_NOTIFY_OPTIONS_TYPE">
      <ptr>
        <struct name="_PRINTER_NOTIFY_OPTIONS_TYPE" />
      </ptr>
    </typedef>
    <typedef name="LPPRINTER_NOTIFY_OPTIONS_TYPE">
      <ptr>
        <struct name="_PRINTER_NOTIFY_OPTIONS_TYPE" />
      </ptr>
    </typedef>
    <struct name="_PRINTER_NOTIFY_OPTIONS">
      <field offset="0" name="Version">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Count">
        <type>DWORD</type>
      </field>
      <field offset="12" name="pTypes">
        <type>PPRINTER_NOTIFY_OPTIONS_TYPE</type>
      </field>
    </struct>
    <typedef name="PRINTER_NOTIFY_OPTIONS">
      <struct name="_PRINTER_NOTIFY_OPTIONS" />
    </typedef>
    <typedef name="PPRINTER_NOTIFY_OPTIONS">
      <ptr>
        <struct name="_PRINTER_NOTIFY_OPTIONS" />
      </ptr>
    </typedef>
    <typedef name="LPPRINTER_NOTIFY_OPTIONS">
      <ptr>
        <struct name="_PRINTER_NOTIFY_OPTIONS" />
      </ptr>
    </typedef>
    <struct name="struct_166">
      <field offset="0" name="cbBuf">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pBuf">
        <type>LPVOID</type>
      </field>
    </struct>
    <struct name="_PRINTER_NOTIFY_INFO_DATA">
      <field offset="0" name="Type">
        <type>WORD</type>
      </field>
      <field offset="2" name="Field">
        <type>WORD</type>
      </field>
      <field offset="4" name="Reserved">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Id">
        <type>DWORD</type>
      </field>
      <field offset="16" name="NotifyData">
        <union>
          <alt name="adwData">
            <arr length="2">
              <type>DWORD</type>
            </arr>
          </alt>
          <alt name="Data">
            <struct name="struct_166" />
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="PRINTER_NOTIFY_INFO_DATA">
      <struct name="_PRINTER_NOTIFY_INFO_DATA" />
    </typedef>
    <typedef name="PPRINTER_NOTIFY_INFO_DATA">
      <ptr>
        <struct name="_PRINTER_NOTIFY_INFO_DATA" />
      </ptr>
    </typedef>
    <typedef name="LPPRINTER_NOTIFY_INFO_DATA">
      <ptr>
        <struct name="_PRINTER_NOTIFY_INFO_DATA" />
      </ptr>
    </typedef>
    <struct name="_PRINTER_NOTIFY_INFO">
      <field offset="0" name="Version">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Count">
        <type>DWORD</type>
      </field>
      <field offset="16" name="aData">
        <arr length="1">
          <type>PRINTER_NOTIFY_INFO_DATA</type>
        </arr>
      </field>
    </struct>
    <typedef name="PRINTER_NOTIFY_INFO">
      <struct name="_PRINTER_NOTIFY_INFO" />
    </typedef>
    <typedef name="PPRINTER_NOTIFY_INFO">
      <ptr>
        <struct name="_PRINTER_NOTIFY_INFO" />
      </ptr>
    </typedef>
    <typedef name="LPPRINTER_NOTIFY_INFO">
      <ptr>
        <struct name="_PRINTER_NOTIFY_INFO" />
      </ptr>
    </typedef>
    <struct name="_BINARY_CONTAINER">
      <field offset="0" name="cbBuf">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pData">
        <type>LPBYTE</type>
      </field>
    </struct>
    <typedef name="BINARY_CONTAINER">
      <struct name="_BINARY_CONTAINER" />
    </typedef>
    <typedef name="PBINARY_CONTAINER">
      <ptr>
        <struct name="_BINARY_CONTAINER" />
      </ptr>
    </typedef>
    <struct name="_BIDI_DATA">
      <field offset="0" name="dwBidiType">
        <type>DWORD</type>
      </field>
      <field offset="8" name="u">
        <union>
          <alt name="bData">
            <type>BOOL</type>
          </alt>
          <alt name="iData">
            <type>LONG</type>
          </alt>
          <alt name="sData">
            <type>LPWSTR</type>
          </alt>
          <alt name="fData">
            <type>FLOAT</type>
          </alt>
          <alt name="biData">
            <type>BINARY_CONTAINER</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="BIDI_DATA">
      <struct name="_BIDI_DATA" />
    </typedef>
    <typedef name="PBIDI_DATA">
      <ptr>
        <struct name="_BIDI_DATA" />
      </ptr>
    </typedef>
    <typedef name="LPBIDI_DATA">
      <ptr>
        <struct name="_BIDI_DATA" />
      </ptr>
    </typedef>
    <struct name="_BIDI_REQUEST_DATA">
      <field offset="0" name="dwReqNumber">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pSchema">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="data">
        <type>BIDI_DATA</type>
      </field>
    </struct>
    <typedef name="BIDI_REQUEST_DATA">
      <struct name="_BIDI_REQUEST_DATA" />
    </typedef>
    <typedef name="PBIDI_REQUEST_DATA">
      <ptr>
        <struct name="_BIDI_REQUEST_DATA" />
      </ptr>
    </typedef>
    <typedef name="LPBIDI_REQUEST_DATA">
      <ptr>
        <struct name="_BIDI_REQUEST_DATA" />
      </ptr>
    </typedef>
    <struct name="_BIDI_REQUEST_CONTAINER">
      <field offset="0" name="Version">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Count">
        <type>DWORD</type>
      </field>
      <field offset="16" name="aData">
        <arr length="1">
          <type>BIDI_REQUEST_DATA</type>
        </arr>
      </field>
    </struct>
    <typedef name="BIDI_REQUEST_CONTAINER">
      <struct name="_BIDI_REQUEST_CONTAINER" />
    </typedef>
    <typedef name="PBIDI_REQUEST_CONTAINER">
      <ptr>
        <struct name="_BIDI_REQUEST_CONTAINER" />
      </ptr>
    </typedef>
    <typedef name="LPBIDI_REQUEST_CONTAINER">
      <ptr>
        <struct name="_BIDI_REQUEST_CONTAINER" />
      </ptr>
    </typedef>
    <struct name="_BIDI_RESPONSE_DATA">
      <field offset="0" name="dwResult">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwReqNumber">
        <type>DWORD</type>
      </field>
      <field offset="8" name="pSchema">
        <type>LPWSTR</type>
      </field>
      <field offset="16" name="data">
        <type>BIDI_DATA</type>
      </field>
    </struct>
    <typedef name="BIDI_RESPONSE_DATA">
      <struct name="_BIDI_RESPONSE_DATA" />
    </typedef>
    <typedef name="PBIDI_RESPONSE_DATA">
      <ptr>
        <struct name="_BIDI_RESPONSE_DATA" />
      </ptr>
    </typedef>
    <typedef name="LPBIDI_RESPONSE_DATA">
      <ptr>
        <struct name="_BIDI_RESPONSE_DATA" />
      </ptr>
    </typedef>
    <struct name="_BIDI_RESPONSE_CONTAINER">
      <field offset="0" name="Version">
        <type>DWORD</type>
      </field>
      <field offset="4" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="Count">
        <type>DWORD</type>
      </field>
      <field offset="16" name="aData">
        <arr length="1">
          <type>BIDI_RESPONSE_DATA</type>
        </arr>
      </field>
    </struct>
    <typedef name="BIDI_RESPONSE_CONTAINER">
      <struct name="_BIDI_RESPONSE_CONTAINER" />
    </typedef>
    <typedef name="PBIDI_RESPONSE_CONTAINER">
      <ptr>
        <struct name="_BIDI_RESPONSE_CONTAINER" />
      </ptr>
    </typedef>
    <typedef name="LPBIDI_RESPONSE_CONTAINER">
      <ptr>
        <struct name="_BIDI_RESPONSE_CONTAINER" />
      </ptr>
    </typedef>
    <enum name="enum_119">
      <member name="BIDI_NULL" value="0" />
      <member name="BIDI_INT" value="1" />
      <member name="BIDI_FLOAT" value="2" />
      <member name="BIDI_BOOL" value="3" />
      <member name="BIDI_STRING" value="4" />
      <member name="BIDI_TEXT" value="5" />
      <member name="BIDI_ENUM" value="6" />
      <member name="BIDI_BLOB" value="7" />
    </enum>
    <typedef name="BIDI_TYPE">
      <enum name="enum_119" />
    </typedef>
    <struct name="_PROVIDOR_INFO_1A">
      <field offset="0" name="pName">
        <type>LPSTR</type>
      </field>
      <field offset="4" name="pEnvironment">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="pDLLName">
        <type>LPSTR</type>
      </field>
    </struct>
    <typedef name="PROVIDOR_INFO_1A">
      <struct name="_PROVIDOR_INFO_1A" />
    </typedef>
    <typedef name="PPROVIDOR_INFO_1A">
      <ptr>
        <struct name="_PROVIDOR_INFO_1A" />
      </ptr>
    </typedef>
    <typedef name="LPPROVIDOR_INFO_1A">
      <ptr>
        <struct name="_PROVIDOR_INFO_1A" />
      </ptr>
    </typedef>
    <struct name="_PROVIDOR_INFO_1W">
      <field offset="0" name="pName">
        <type>LPWSTR</type>
      </field>
      <field offset="4" name="pEnvironment">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="pDLLName">
        <type>LPWSTR</type>
      </field>
    </struct>
    <typedef name="PROVIDOR_INFO_1W">
      <struct name="_PROVIDOR_INFO_1W" />
    </typedef>
    <typedef name="PPROVIDOR_INFO_1W">
      <ptr>
        <struct name="_PROVIDOR_INFO_1W" />
      </ptr>
    </typedef>
    <typedef name="LPPROVIDOR_INFO_1W">
      <ptr>
        <struct name="_PROVIDOR_INFO_1W" />
      </ptr>
    </typedef>
    <typedef name="PROVIDOR_INFO_1">
      <type>PROVIDOR_INFO_1A</type>
    </typedef>
    <typedef name="PPROVIDOR_INFO_1">
      <type>PPROVIDOR_INFO_1A</type>
    </typedef>
    <typedef name="LPPROVIDOR_INFO_1">
      <type>LPPROVIDOR_INFO_1A</type>
    </typedef>
    <struct name="_PROVIDOR_INFO_2A">
      <field offset="0" name="pOrder">
        <type>LPSTR</type>
      </field>
    </struct>
    <typedef name="PROVIDOR_INFO_2A">
      <struct name="_PROVIDOR_INFO_2A" />
    </typedef>
    <typedef name="PPROVIDOR_INFO_2A">
      <ptr>
        <struct name="_PROVIDOR_INFO_2A" />
      </ptr>
    </typedef>
    <typedef name="LPPROVIDOR_INFO_2A">
      <ptr>
        <struct name="_PROVIDOR_INFO_2A" />
      </ptr>
    </typedef>
    <struct name="_PROVIDOR_INFO_2W">
      <field offset="0" name="pOrder">
        <type>LPWSTR</type>
      </field>
    </struct>
    <typedef name="PROVIDOR_INFO_2W">
      <struct name="_PROVIDOR_INFO_2W" />
    </typedef>
    <typedef name="PPROVIDOR_INFO_2W">
      <ptr>
        <struct name="_PROVIDOR_INFO_2W" />
      </ptr>
    </typedef>
    <typedef name="LPPROVIDOR_INFO_2W">
      <ptr>
        <struct name="_PROVIDOR_INFO_2W" />
      </ptr>
    </typedef>
    <typedef name="PROVIDOR_INFO_2">
      <type>PROVIDOR_INFO_2A</type>
    </typedef>
    <typedef name="PPROVIDOR_INFO_2">
      <type>PPROVIDOR_INFO_2A</type>
    </typedef>
    <typedef name="LPPROVIDOR_INFO_2">
      <type>LPPROVIDOR_INFO_2A</type>
    </typedef>
    <enum name="_PRINTER_OPTION_FLAGS">
      <member name="PRINTER_OPTION_NO_CACHE" value="1" />
      <member name="PRINTER_OPTION_CACHE" value="2" />
      <member name="PRINTER_OPTION_CLIENT_CHANGE" value="4" />
      <member name="PRINTER_OPTION_NO_CLIENT_DATA" value="8" />
    </enum>
    <typedef name="PRINTER_OPTION_FLAGS">
      <enum name="_PRINTER_OPTION_FLAGS" />
    </typedef>
    <struct name="_PRINTER_OPTIONSA">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PRINTER_OPTIONSA">
      <struct name="_PRINTER_OPTIONSA" />
    </typedef>
    <typedef name="PPRINTER_OPTIONSA">
      <ptr>
        <struct name="_PRINTER_OPTIONSA" />
      </ptr>
    </typedef>
    <typedef name="LPPRINTER_OPTIONSA">
      <ptr>
        <struct name="_PRINTER_OPTIONSA" />
      </ptr>
    </typedef>
    <struct name="_PRINTER_OPTIONSW">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PRINTER_OPTIONSW">
      <struct name="_PRINTER_OPTIONSW" />
    </typedef>
    <typedef name="PPRINTER_OPTIONSW">
      <ptr>
        <struct name="_PRINTER_OPTIONSW" />
      </ptr>
    </typedef>
    <typedef name="LPPRINTER_OPTIONSW">
      <ptr>
        <struct name="_PRINTER_OPTIONSW" />
      </ptr>
    </typedef>
    <typedef name="PRINTER_OPTIONS">
      <type>PRINTER_OPTIONSA</type>
    </typedef>
    <typedef name="PPRINTER_OPTIONS">
      <type>PPRINTER_OPTIONSA</type>
    </typedef>
    <typedef name="LPPRINTER_OPTIONS">
      <type>LPPRINTER_OPTIONSA</type>
    </typedef>
    <struct name="_PRINTER_CONNECTION_INFO_1A">
      <field offset="0" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pszDriverName">
        <type>LPSTR</type>
      </field>
    </struct>
    <typedef name="PRINTER_CONNECTION_INFO_1A">
      <struct name="_PRINTER_CONNECTION_INFO_1A" />
    </typedef>
    <typedef name="PPRINTER_CONNECTION_INFO_1A">
      <ptr>
        <struct name="_PRINTER_CONNECTION_INFO_1A" />
      </ptr>
    </typedef>
    <struct name="_PRINTER_CONNECTION_INFO_1W">
      <field offset="0" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pszDriverName">
        <type>LPWSTR</type>
      </field>
    </struct>
    <typedef name="PRINTER_CONNECTION_INFO_1W">
      <struct name="_PRINTER_CONNECTION_INFO_1W" />
    </typedef>
    <typedef name="PPRINTER_CONNECTION_INFO_1W">
      <ptr>
        <struct name="_PRINTER_CONNECTION_INFO_1W" />
      </ptr>
    </typedef>
    <typedef name="PRINTER_CONNECTION_INFO_1">
      <type>PRINTER_CONNECTION_INFO_1A</type>
    </typedef>
    <typedef name="PPRINTER_CONNECTION_INFO_1">
      <type>PPRINTER_CONNECTION_INFO_1A</type>
    </typedef>
    <struct name="_CORE_PRINTER_DRIVERA">
      <field offset="0" name="CoreDriverGUID">
        <type>GUID</type>
      </field>
      <field offset="16" name="ftDriverDate">
        <type>FILETIME</type>
      </field>
      <field offset="24" name="dwlDriverVersion">
        <type>DWORDLONG</type>
      </field>
      <field offset="32" name="szPackageID">
        <arr length="260">
          <type>CHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="CORE_PRINTER_DRIVERA">
      <struct name="_CORE_PRINTER_DRIVERA" />
    </typedef>
    <typedef name="PCORE_PRINTER_DRIVERA">
      <ptr>
        <struct name="_CORE_PRINTER_DRIVERA" />
      </ptr>
    </typedef>
    <struct name="_CORE_PRINTER_DRIVERW">
      <field offset="0" name="CoreDriverGUID">
        <type>GUID</type>
      </field>
      <field offset="16" name="ftDriverDate">
        <type>FILETIME</type>
      </field>
      <field offset="24" name="dwlDriverVersion">
        <type>DWORDLONG</type>
      </field>
      <field offset="32" name="szPackageID">
        <arr length="260">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="CORE_PRINTER_DRIVERW">
      <struct name="_CORE_PRINTER_DRIVERW" />
    </typedef>
    <typedef name="PCORE_PRINTER_DRIVERW">
      <ptr>
        <struct name="_CORE_PRINTER_DRIVERW" />
      </ptr>
    </typedef>
    <typedef name="CORE_PRINTER_DRIVER">
      <type>CORE_PRINTER_DRIVERA</type>
    </typedef>
    <typedef name="PCORE_PRINTER_DRIVER">
      <type>PCORE_PRINTER_DRIVERA</type>
    </typedef>
    <enum name="enum_121">
      <member name="kPropertyTypeString" value="1" />
      <member name="kPropertyTypeInt32" value="2" />
      <member name="kPropertyTypeInt64" value="3" />
      <member name="kPropertyTypeByte" value="4" />
      <member name="kPropertyTypeTime" value="5" />
      <member name="kPropertyTypeDevMode" value="6" />
      <member name="kPropertyTypeSD" value="7" />
      <member name="kPropertyTypeNotificationReply" value="8" />
      <member name="kPropertyTypeNotificationOptions" value="9" />
      <member name="kPropertyTypeBuffer" value="10" />
    </enum>
    <typedef name="EPrintPropertyType">
      <enum name="enum_121" />
    </typedef>
    <enum name="enum_122">
      <member name="kAddingDocumentSequence" value="0" />
      <member name="kDocumentSequenceAdded" value="1" />
      <member name="kAddingFixedDocument" value="2" />
      <member name="kFixedDocumentAdded" value="3" />
      <member name="kAddingFixedPage" value="4" />
      <member name="kFixedPageAdded" value="5" />
      <member name="kResourceAdded" value="6" />
      <member name="kFontAdded" value="7" />
      <member name="kImageAdded" value="8" />
      <member name="kXpsDocumentCommitted" value="9" />
    </enum>
    <typedef name="EPrintXPSJobProgress">
      <enum name="enum_122" />
    </typedef>
    <enum name="enum_123">
      <member name="kJobProduction" value="1" />
      <member name="kJobConsumption" value="2" />
    </enum>
    <typedef name="EPrintXPSJobOperation">
      <enum name="enum_123" />
    </typedef>
    <struct name="struct_168">
      <field offset="0" name="cbBuf">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pBuf">
        <type>LPVOID</type>
      </field>
    </struct>
    <struct name="struct_167">
      <field offset="0" name="ePropertyType">
        <type>EPrintPropertyType</type>
      </field>
      <field offset="8" name="value">
        <union>
          <alt name="propertyByte">
            <type>BYTE</type>
          </alt>
          <alt name="propertyString">
            <type>PWSTR</type>
          </alt>
          <alt name="propertyInt32">
            <type>LONG</type>
          </alt>
          <alt name="propertyInt64">
            <type>LONGLONG</type>
          </alt>
          <alt name="propertyBlob">
            <struct name="struct_168" />
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="PrintPropertyValue">
      <struct name="struct_167" />
    </typedef>
    <struct name="struct_169">
      <field offset="0" name="propertyName">
        <ptr>
          <type>WCHAR</type>
        </ptr>
      </field>
      <field offset="8" name="propertyValue">
        <type>PrintPropertyValue</type>
      </field>
    </struct>
    <typedef name="PrintNamedProperty">
      <struct name="struct_169" />
    </typedef>
    <struct name="struct_170">
      <field offset="0" name="numberOfProperties">
        <type>ULONG</type>
      </field>
      <field offset="4" name="propertiesCollection">
        <ptr>
          <type>PrintNamedProperty</type>
        </ptr>
      </field>
    </struct>
    <typedef name="PrintPropertiesCollection">
      <struct name="struct_170" />
    </typedef>
    <enum name="enum_124">
      <member name="PRINT_EXECUTION_CONTEXT_APPLICATION" value="0" />
      <member name="PRINT_EXECUTION_CONTEXT_SPOOLER_SERVICE" value="1" />
      <member name="PRINT_EXECUTION_CONTEXT_SPOOLER_ISOLATION_HOST" value="2" />
      <member name="PRINT_EXECUTION_CONTEXT_FILTER_PIPELINE" value="3" />
      <member name="PRINT_EXECUTION_CONTEXT_WOW64" value="4" />
    </enum>
    <typedef name="PRINT_EXECUTION_CONTEXT">
      <enum name="enum_124" />
    </typedef>
    <struct name="struct_171">
      <field offset="0" name="context">
        <type>PRINT_EXECUTION_CONTEXT</type>
      </field>
      <field offset="4" name="clientAppPID">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PRINT_EXECUTION_DATA">
      <struct name="struct_171" />
    </typedef>
    <typedef name="_onexit_t">
      <ptr>
        <fn>
          <return>
            <prim domain="SignedInt" size="4" />
            <reg>eax</reg>
          </return>
        </fn>
      </ptr>
    </typedef>
    <struct name="_div_t">
      <field offset="0" name="quot">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="4" name="rem">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="div_t">
      <struct name="_div_t" />
    </typedef>
    <struct name="_ldiv_t">
      <field offset="0" name="quot">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="4" name="rem">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="ldiv_t">
      <struct name="_ldiv_t" />
    </typedef>
    <struct name="_lldiv_t">
      <field offset="0" name="quot">
        <prim domain="SignedInt" size="8" />
      </field>
      <field offset="8" name="rem">
        <prim domain="SignedInt" size="8" />
      </field>
    </struct>
    <typedef name="lldiv_t">
      <struct name="_lldiv_t" />
    </typedef>
    <struct name="struct_172">
      <field offset="0" name="ld">
        <arr length="10">
          <prim domain="UnsignedInt" size="1" />
        </arr>
      </field>
    </struct>
    <typedef name="_LDOUBLE">
      <struct name="struct_172" />
    </typedef>
    <struct name="struct_173">
      <field offset="0" name="x">
        <prim domain="Real" size="8" />
      </field>
    </struct>
    <typedef name="_CRT_DOUBLE">
      <struct name="struct_173" />
    </typedef>
    <struct name="struct_174">
      <field offset="0" name="f">
        <prim domain="Real" size="4" />
      </field>
    </struct>
    <typedef name="_CRT_FLOAT">
      <struct name="struct_174" />
    </typedef>
    <struct name="struct_175">
      <field offset="0" name="x">
        <prim domain="Real" size="8" />
      </field>
    </struct>
    <typedef name="_LONGDOUBLE">
      <struct name="struct_175" />
    </typedef>
    <struct name="struct_176">
      <field offset="0" name="ld12">
        <arr length="12">
          <prim domain="UnsignedInt" size="1" />
        </arr>
      </field>
    </struct>
    <typedef name="_LDBL12">
      <struct name="struct_176" />
    </typedef>
    <typedef name="_purecall_handler">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
        </fn>
      </ptr>
    </typedef>
    <typedef name="_invalid_parameter_handler">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg>
            <ptr>
              <prim domain="Character" size="2" />
            </ptr>
            <stack size="4" />
          </arg>
          <arg>
            <ptr>
              <prim domain="Character" size="2" />
            </ptr>
            <stack size="4" />
          </arg>
          <arg>
            <ptr>
              <prim domain="Character" size="2" />
            </ptr>
            <stack size="4" />
          </arg>
          <arg>
            <prim domain="UnsignedInt" size="4" />
            <stack size="4" />
          </arg>
          <arg>
            <type>uintptr_t</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <enum name="tagREGCLS">
      <member name="REGCLS_SINGLEUSE" value="0" />
      <member name="REGCLS_MULTIPLEUSE" value="1" />
      <member name="REGCLS_MULTI_SEPARATE" value="2" />
      <member name="REGCLS_SUSPENDED" value="4" />
      <member name="REGCLS_SURROGATE" value="8" />
    </enum>
    <typedef name="REGCLS">
      <enum name="tagREGCLS" />
    </typedef>
    <typedef name="STGFMT">
      <type>DWORD</type>
    </typedef>
    <typedef name="IRpcStubBuffer">
      <struct name="IRpcStubBuffer" />
    </typedef>
    <typedef name="IRpcChannelBuffer">
      <struct name="IRpcChannelBuffer" />
    </typedef>
    <typedef name="IUnknown">
      <struct name="IUnknown" />
    </typedef>
    <typedef name="AsyncIUnknown">
      <struct name="AsyncIUnknown" />
    </typedef>
    <typedef name="IClassFactory">
      <struct name="IClassFactory" />
    </typedef>
    <typedef name="LPUNKNOWN">
      <ptr>
        <type>IUnknown</type>
      </ptr>
    </typedef>
    <struct name="IUnknownVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IUnknownVtbl">
      <struct name="IUnknownVtbl" />
    </typedef>
    <struct name="IUnknown">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IUnknownVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="AsyncIUnknownVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Begin_QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Finish_QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="Begin_AddRef">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Finish_AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="Begin_Release">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="Finish_Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="AsyncIUnknownVtbl">
      <struct name="AsyncIUnknownVtbl" />
    </typedef>
    <struct name="AsyncIUnknown">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="AsyncIUnknownVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPCLASSFACTORY">
      <ptr>
        <type>IClassFactory</type>
      </ptr>
    </typedef>
    <struct name="IClassFactoryVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IClassFactory</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IClassFactory</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IClassFactory</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="CreateInstance">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IClassFactory</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pUnkOuter">
              <ptr>
                <type>IUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="LockServer">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IClassFactory</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fLock">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IClassFactoryVtbl">
      <struct name="IClassFactoryVtbl" />
    </typedef>
    <struct name="IClassFactory">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IClassFactoryVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="IMarshal">
      <struct name="IMarshal" />
    </typedef>
    <typedef name="IMarshal2">
      <struct name="IMarshal2" />
    </typedef>
    <typedef name="IMalloc">
      <struct name="IMalloc" />
    </typedef>
    <typedef name="IMallocSpy">
      <struct name="IMallocSpy" />
    </typedef>
    <typedef name="IStdMarshalInfo">
      <struct name="IStdMarshalInfo" />
    </typedef>
    <typedef name="IExternalConnection">
      <struct name="IExternalConnection" />
    </typedef>
    <typedef name="IMultiQI">
      <struct name="IMultiQI" />
    </typedef>
    <typedef name="AsyncIMultiQI">
      <struct name="AsyncIMultiQI" />
    </typedef>
    <typedef name="IInternalUnknown">
      <struct name="IInternalUnknown" />
    </typedef>
    <typedef name="IEnumUnknown">
      <struct name="IEnumUnknown" />
    </typedef>
    <typedef name="IBindCtx">
      <struct name="IBindCtx" />
    </typedef>
    <typedef name="IEnumMoniker">
      <struct name="IEnumMoniker" />
    </typedef>
    <typedef name="IRunnableObject">
      <struct name="IRunnableObject" />
    </typedef>
    <typedef name="IRunningObjectTable">
      <struct name="IRunningObjectTable" />
    </typedef>
    <typedef name="IPersist">
      <struct name="IPersist" />
    </typedef>
    <typedef name="IPersistStream">
      <struct name="IPersistStream" />
    </typedef>
    <typedef name="IMoniker">
      <struct name="IMoniker" />
    </typedef>
    <typedef name="IROTData">
      <struct name="IROTData" />
    </typedef>
    <typedef name="IEnumString">
      <struct name="IEnumString" />
    </typedef>
    <typedef name="ISequentialStream">
      <struct name="ISequentialStream" />
    </typedef>
    <typedef name="IStream">
      <struct name="IStream" />
    </typedef>
    <typedef name="IEnumSTATSTG">
      <struct name="IEnumSTATSTG" />
    </typedef>
    <typedef name="IStorage">
      <struct name="IStorage" />
    </typedef>
    <typedef name="IPersistFile">
      <struct name="IPersistFile" />
    </typedef>
    <typedef name="IPersistStorage">
      <struct name="IPersistStorage" />
    </typedef>
    <typedef name="ILockBytes">
      <struct name="ILockBytes" />
    </typedef>
    <typedef name="IEnumFORMATETC">
      <struct name="IEnumFORMATETC" />
    </typedef>
    <typedef name="IEnumSTATDATA">
      <struct name="IEnumSTATDATA" />
    </typedef>
    <typedef name="IRootStorage">
      <struct name="IRootStorage" />
    </typedef>
    <typedef name="IAdviseSink">
      <struct name="IAdviseSink" />
    </typedef>
    <typedef name="AsyncIAdviseSink">
      <struct name="AsyncIAdviseSink" />
    </typedef>
    <typedef name="IAdviseSink2">
      <struct name="IAdviseSink2" />
    </typedef>
    <typedef name="AsyncIAdviseSink2">
      <struct name="AsyncIAdviseSink2" />
    </typedef>
    <typedef name="IDataObject">
      <struct name="IDataObject" />
    </typedef>
    <typedef name="IDataAdviseHolder">
      <struct name="IDataAdviseHolder" />
    </typedef>
    <typedef name="IMessageFilter">
      <struct name="IMessageFilter" />
    </typedef>
    <typedef name="IRpcChannelBuffer">
      <struct name="IRpcChannelBuffer" />
    </typedef>
    <typedef name="IRpcChannelBuffer2">
      <struct name="IRpcChannelBuffer2" />
    </typedef>
    <typedef name="IAsyncRpcChannelBuffer">
      <struct name="IAsyncRpcChannelBuffer" />
    </typedef>
    <typedef name="IRpcChannelBuffer3">
      <struct name="IRpcChannelBuffer3" />
    </typedef>
    <typedef name="IRpcSyntaxNegotiate">
      <struct name="IRpcSyntaxNegotiate" />
    </typedef>
    <typedef name="IRpcProxyBuffer">
      <struct name="IRpcProxyBuffer" />
    </typedef>
    <typedef name="IRpcStubBuffer">
      <struct name="IRpcStubBuffer" />
    </typedef>
    <typedef name="IPSFactoryBuffer">
      <struct name="IPSFactoryBuffer" />
    </typedef>
    <typedef name="IChannelHook">
      <struct name="IChannelHook" />
    </typedef>
    <typedef name="IClientSecurity">
      <struct name="IClientSecurity" />
    </typedef>
    <typedef name="IServerSecurity">
      <struct name="IServerSecurity" />
    </typedef>
    <typedef name="IClassActivator">
      <struct name="IClassActivator" />
    </typedef>
    <typedef name="IRpcOptions">
      <struct name="IRpcOptions" />
    </typedef>
    <typedef name="IGlobalOptions">
      <struct name="IGlobalOptions" />
    </typedef>
    <typedef name="IFillLockBytes">
      <struct name="IFillLockBytes" />
    </typedef>
    <typedef name="IProgressNotify">
      <struct name="IProgressNotify" />
    </typedef>
    <typedef name="ILayoutStorage">
      <struct name="ILayoutStorage" />
    </typedef>
    <typedef name="IBlockingLock">
      <struct name="IBlockingLock" />
    </typedef>
    <typedef name="ITimeAndNoticeControl">
      <struct name="ITimeAndNoticeControl" />
    </typedef>
    <typedef name="IOplockStorage">
      <struct name="IOplockStorage" />
    </typedef>
    <typedef name="ISurrogate">
      <struct name="ISurrogate" />
    </typedef>
    <typedef name="IGlobalInterfaceTable">
      <struct name="IGlobalInterfaceTable" />
    </typedef>
    <typedef name="IDirectWriterLock">
      <struct name="IDirectWriterLock" />
    </typedef>
    <typedef name="ISynchronize">
      <struct name="ISynchronize" />
    </typedef>
    <typedef name="ISynchronizeHandle">
      <struct name="ISynchronizeHandle" />
    </typedef>
    <typedef name="ISynchronizeEvent">
      <struct name="ISynchronizeEvent" />
    </typedef>
    <typedef name="ISynchronizeContainer">
      <struct name="ISynchronizeContainer" />
    </typedef>
    <typedef name="ISynchronizeMutex">
      <struct name="ISynchronizeMutex" />
    </typedef>
    <typedef name="ICancelMethodCalls">
      <struct name="ICancelMethodCalls" />
    </typedef>
    <typedef name="IAsyncManager">
      <struct name="IAsyncManager" />
    </typedef>
    <typedef name="ICallFactory">
      <struct name="ICallFactory" />
    </typedef>
    <typedef name="IRpcHelper">
      <struct name="IRpcHelper" />
    </typedef>
    <typedef name="IReleaseMarshalBuffers">
      <struct name="IReleaseMarshalBuffers" />
    </typedef>
    <typedef name="IWaitMultiple">
      <struct name="IWaitMultiple" />
    </typedef>
    <typedef name="IUrlMon">
      <struct name="IUrlMon" />
    </typedef>
    <typedef name="IForegroundTransfer">
      <struct name="IForegroundTransfer" />
    </typedef>
    <typedef name="IAddrTrackingControl">
      <struct name="IAddrTrackingControl" />
    </typedef>
    <typedef name="IAddrExclusionControl">
      <struct name="IAddrExclusionControl" />
    </typedef>
    <typedef name="IPipeByte">
      <struct name="IPipeByte" />
    </typedef>
    <typedef name="AsyncIPipeByte">
      <struct name="AsyncIPipeByte" />
    </typedef>
    <typedef name="IPipeLong">
      <struct name="IPipeLong" />
    </typedef>
    <typedef name="AsyncIPipeLong">
      <struct name="AsyncIPipeLong" />
    </typedef>
    <typedef name="IPipeDouble">
      <struct name="IPipeDouble" />
    </typedef>
    <typedef name="AsyncIPipeDouble">
      <struct name="AsyncIPipeDouble" />
    </typedef>
    <typedef name="IThumbnailExtractor">
      <struct name="IThumbnailExtractor" />
    </typedef>
    <typedef name="IDummyHICONIncluder">
      <struct name="IDummyHICONIncluder" />
    </typedef>
    <typedef name="IEnumContextProps">
      <struct name="IEnumContextProps" />
    </typedef>
    <typedef name="IContext">
      <struct name="IContext" />
    </typedef>
    <typedef name="IObjContext">
      <struct name="IObjContext" />
    </typedef>
    <typedef name="IProcessLock">
      <struct name="IProcessLock" />
    </typedef>
    <typedef name="ISurrogateService">
      <struct name="ISurrogateService" />
    </typedef>
    <typedef name="IComThreadingInfo">
      <struct name="IComThreadingInfo" />
    </typedef>
    <typedef name="IProcessInitControl">
      <struct name="IProcessInitControl" />
    </typedef>
    <typedef name="IInitializeSpy">
      <struct name="IInitializeSpy" />
    </typedef>
    <struct name="_COSERVERINFO">
      <field offset="0" name="dwReserved1">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pwszName">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="pAuthInfo">
        <ptr>
          <type>COAUTHINFO</type>
        </ptr>
      </field>
      <field offset="12" name="dwReserved2">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="COSERVERINFO">
      <struct name="_COSERVERINFO" />
    </typedef>
    <typedef name="LPMARSHAL">
      <ptr>
        <type>IMarshal</type>
      </ptr>
    </typedef>
    <struct name="IMarshalVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMarshal</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMarshal</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMarshal</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetUnmarshalClass">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMarshal</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pv">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwDestContext">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pvDestContext">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="mshlflags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pCid">
              <ptr>
                <type>CLSID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetMarshalSizeMax">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMarshal</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pv">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwDestContext">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pvDestContext">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="mshlflags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pSize">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="MarshalInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMarshal</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pStm">
              <ptr>
                <type>IStream</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pv">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwDestContext">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pvDestContext">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="mshlflags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="UnmarshalInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMarshal</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pStm">
              <ptr>
                <type>IStream</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppv">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="ReleaseMarshalData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMarshal</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pStm">
              <ptr>
                <type>IStream</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="DisconnectObject">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMarshal</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IMarshalVtbl">
      <struct name="IMarshalVtbl" />
    </typedef>
    <struct name="IMarshal">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IMarshalVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPMARSHAL2">
      <ptr>
        <type>IMarshal2</type>
      </ptr>
    </typedef>
    <struct name="IMarshal2Vtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMarshal2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMarshal2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMarshal2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetUnmarshalClass">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMarshal2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pv">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwDestContext">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pvDestContext">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="mshlflags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pCid">
              <ptr>
                <type>CLSID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetMarshalSizeMax">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMarshal2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pv">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwDestContext">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pvDestContext">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="mshlflags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pSize">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="MarshalInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMarshal2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pStm">
              <ptr>
                <type>IStream</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pv">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwDestContext">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pvDestContext">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="mshlflags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="UnmarshalInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMarshal2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pStm">
              <ptr>
                <type>IStream</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppv">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="ReleaseMarshalData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMarshal2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pStm">
              <ptr>
                <type>IStream</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="DisconnectObject">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMarshal2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IMarshal2Vtbl">
      <struct name="IMarshal2Vtbl" />
    </typedef>
    <struct name="IMarshal2">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IMarshal2Vtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPMALLOC">
      <ptr>
        <type>IMalloc</type>
      </ptr>
    </typedef>
    <struct name="IMallocVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMalloc</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMalloc</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMalloc</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Alloc">
        <ptr>
          <fn>
            <return>
              <ptr>
                <void />
              </ptr>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMalloc</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cb">
              <type>SIZE_T</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Realloc">
        <ptr>
          <fn>
            <return>
              <ptr>
                <void />
              </ptr>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMalloc</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pv">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cb">
              <type>SIZE_T</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="Free">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>IMalloc</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pv">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="GetSize">
        <ptr>
          <fn>
            <return>
              <type>SIZE_T</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMalloc</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pv">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="DidAlloc">
        <ptr>
          <fn>
            <return>
              <prim domain="SignedInt" size="4" />
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMalloc</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pv">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="HeapMinimize">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>IMalloc</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IMallocVtbl">
      <struct name="IMallocVtbl" />
    </typedef>
    <struct name="IMalloc">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IMallocVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPMALLOCSPY">
      <ptr>
        <type>IMallocSpy</type>
      </ptr>
    </typedef>
    <struct name="IMallocSpyVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMallocSpy</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMallocSpy</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMallocSpy</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="PreAlloc">
        <ptr>
          <fn>
            <return>
              <type>SIZE_T</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMallocSpy</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbRequest">
              <type>SIZE_T</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="PostAlloc">
        <ptr>
          <fn>
            <return>
              <ptr>
                <void />
              </ptr>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMallocSpy</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pActual">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="PreFree">
        <ptr>
          <fn>
            <return>
              <ptr>
                <void />
              </ptr>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMallocSpy</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pRequest">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fSpyed">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="PostFree">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>IMallocSpy</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fSpyed">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="PreRealloc">
        <ptr>
          <fn>
            <return>
              <type>SIZE_T</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMallocSpy</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pRequest">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbRequest">
              <type>SIZE_T</type>
              <stack size="4" />
            </arg>
            <arg name="ppNewRequest">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fSpyed">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="PostRealloc">
        <ptr>
          <fn>
            <return>
              <ptr>
                <void />
              </ptr>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMallocSpy</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pActual">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fSpyed">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="PreGetSize">
        <ptr>
          <fn>
            <return>
              <ptr>
                <void />
              </ptr>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMallocSpy</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pRequest">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fSpyed">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="PostGetSize">
        <ptr>
          <fn>
            <return>
              <type>SIZE_T</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMallocSpy</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbActual">
              <type>SIZE_T</type>
              <stack size="4" />
            </arg>
            <arg name="fSpyed">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="PreDidAlloc">
        <ptr>
          <fn>
            <return>
              <ptr>
                <void />
              </ptr>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMallocSpy</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pRequest">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fSpyed">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="PostDidAlloc">
        <ptr>
          <fn>
            <return>
              <prim domain="SignedInt" size="4" />
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMallocSpy</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pRequest">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fSpyed">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
            <arg name="fActual">
              <prim domain="SignedInt" size="4" />
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="PreHeapMinimize">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>IMallocSpy</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="PostHeapMinimize">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>IMallocSpy</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IMallocSpyVtbl">
      <struct name="IMallocSpyVtbl" />
    </typedef>
    <struct name="IMallocSpy">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IMallocSpyVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPSTDMARSHALINFO">
      <ptr>
        <type>IStdMarshalInfo</type>
      </ptr>
    </typedef>
    <struct name="IStdMarshalInfoVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IStdMarshalInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IStdMarshalInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IStdMarshalInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetClassForHandler">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IStdMarshalInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwDestContext">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pvDestContext">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pClsid">
              <ptr>
                <type>CLSID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IStdMarshalInfoVtbl">
      <struct name="IStdMarshalInfoVtbl" />
    </typedef>
    <struct name="IStdMarshalInfo">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IStdMarshalInfoVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPEXTERNALCONNECTION">
      <ptr>
        <type>IExternalConnection</type>
      </ptr>
    </typedef>
    <enum name="tagEXTCONN">
      <member name="EXTCONN_STRONG" value="1" />
      <member name="EXTCONN_WEAK" value="2" />
      <member name="EXTCONN_CALLABLE" value="4" />
    </enum>
    <typedef name="EXTCONN">
      <enum name="tagEXTCONN" />
    </typedef>
    <struct name="IExternalConnectionVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IExternalConnection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IExternalConnection</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IExternalConnection</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="AddConnection">
        <ptr>
          <fn>
            <return>
              <type>DWORD</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IExternalConnection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="extconn">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="reserved">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="ReleaseConnection">
        <ptr>
          <fn>
            <return>
              <type>DWORD</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IExternalConnection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="extconn">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="reserved">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="fLastReleaseCloses">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IExternalConnectionVtbl">
      <struct name="IExternalConnectionVtbl" />
    </typedef>
    <struct name="IExternalConnection">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IExternalConnectionVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPMULTIQI">
      <ptr>
        <type>IMultiQI</type>
      </ptr>
    </typedef>
    <struct name="tagMULTI_QI">
      <field offset="0" name="pIID">
        <ptr>
          <type>IID</type>
        </ptr>
      </field>
      <field offset="4" name="pItf">
        <ptr>
          <type>IUnknown</type>
        </ptr>
      </field>
      <field offset="8" name="hr">
        <type>HRESULT</type>
      </field>
    </struct>
    <typedef name="MULTI_QI">
      <struct name="tagMULTI_QI" />
    </typedef>
    <struct name="IMultiQIVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMultiQI</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMultiQI</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMultiQI</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="QueryMultipleInterfaces">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMultiQI</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cMQIs">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="pMQIs">
              <ptr>
                <type>MULTI_QI</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IMultiQIVtbl">
      <struct name="IMultiQIVtbl" />
    </typedef>
    <struct name="IMultiQI">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IMultiQIVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="AsyncIMultiQIVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIMultiQI</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIMultiQI</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIMultiQI</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Begin_QueryMultipleInterfaces">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIMultiQI</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cMQIs">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="pMQIs">
              <ptr>
                <type>MULTI_QI</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Finish_QueryMultipleInterfaces">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIMultiQI</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pMQIs">
              <ptr>
                <type>MULTI_QI</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="AsyncIMultiQIVtbl">
      <struct name="AsyncIMultiQIVtbl" />
    </typedef>
    <struct name="AsyncIMultiQI">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="AsyncIMultiQIVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IInternalUnknownVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternalUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternalUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternalUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="QueryInternalInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternalUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppv">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IInternalUnknownVtbl">
      <struct name="IInternalUnknownVtbl" />
    </typedef>
    <struct name="IInternalUnknown">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IInternalUnknownVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPENUMUNKNOWN">
      <ptr>
        <type>IEnumUnknown</type>
      </ptr>
    </typedef>
    <struct name="IEnumUnknownVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Next">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="celt">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="rgelt">
              <ptr>
                <ptr>
                  <type>IUnknown</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pceltFetched">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Skip">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="celt">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="Reset">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Clone">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppenum">
              <ptr>
                <ptr>
                  <type>IEnumUnknown</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IEnumUnknownVtbl">
      <struct name="IEnumUnknownVtbl" />
    </typedef>
    <struct name="IEnumUnknown">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IEnumUnknownVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPBC">
      <ptr>
        <type>IBindCtx</type>
      </ptr>
    </typedef>
    <typedef name="LPBINDCTX">
      <ptr>
        <type>IBindCtx</type>
      </ptr>
    </typedef>
    <struct name="tagBIND_OPTS">
      <field offset="0" name="cbStruct">
        <type>DWORD</type>
      </field>
      <field offset="4" name="grfFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="grfMode">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwTickCountDeadline">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="BIND_OPTS">
      <struct name="tagBIND_OPTS" />
    </typedef>
    <typedef name="LPBIND_OPTS">
      <ptr>
        <struct name="tagBIND_OPTS" />
      </ptr>
    </typedef>
    <struct name="tagBIND_OPTS2">
      <field offset="0" name="cbStruct">
        <type>DWORD</type>
      </field>
      <field offset="4" name="grfFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="grfMode">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwTickCountDeadline">
        <type>DWORD</type>
      </field>
      <field offset="16" name="dwTrackFlags">
        <type>DWORD</type>
      </field>
      <field offset="20" name="dwClassContext">
        <type>DWORD</type>
      </field>
      <field offset="24" name="locale">
        <type>LCID</type>
      </field>
      <field offset="28" name="pServerInfo">
        <ptr>
          <type>COSERVERINFO</type>
        </ptr>
      </field>
    </struct>
    <typedef name="BIND_OPTS2">
      <struct name="tagBIND_OPTS2" />
    </typedef>
    <typedef name="LPBIND_OPTS2">
      <ptr>
        <struct name="tagBIND_OPTS2" />
      </ptr>
    </typedef>
    <struct name="tagBIND_OPTS3">
      <field offset="0" name="cbStruct">
        <type>DWORD</type>
      </field>
      <field offset="4" name="grfFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="grfMode">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwTickCountDeadline">
        <type>DWORD</type>
      </field>
      <field offset="16" name="dwTrackFlags">
        <type>DWORD</type>
      </field>
      <field offset="20" name="dwClassContext">
        <type>DWORD</type>
      </field>
      <field offset="24" name="locale">
        <type>LCID</type>
      </field>
      <field offset="28" name="pServerInfo">
        <ptr>
          <type>COSERVERINFO</type>
        </ptr>
      </field>
      <field offset="32" name="hwnd">
        <type>HWND</type>
      </field>
    </struct>
    <typedef name="BIND_OPTS3">
      <struct name="tagBIND_OPTS3" />
    </typedef>
    <typedef name="LPBIND_OPTS3">
      <ptr>
        <struct name="tagBIND_OPTS3" />
      </ptr>
    </typedef>
    <enum name="tagBIND_FLAGS">
      <member name="BIND_MAYBOTHERUSER" value="1" />
      <member name="BIND_JUSTTESTEXISTENCE" value="2" />
    </enum>
    <typedef name="BIND_FLAGS">
      <enum name="tagBIND_FLAGS" />
    </typedef>
    <struct name="IBindCtxVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindCtx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindCtx</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindCtx</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="RegisterObjectBound">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindCtx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="punk">
              <ptr>
                <type>IUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="RevokeObjectBound">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindCtx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="punk">
              <ptr>
                <type>IUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="ReleaseBoundObjects">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindCtx</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="SetBindOptions">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindCtx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbindopts">
              <ptr>
                <type>BIND_OPTS</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="GetBindOptions">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindCtx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbindopts">
              <ptr>
                <type>BIND_OPTS</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="GetRunningObjectTable">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindCtx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pprot">
              <ptr>
                <ptr>
                  <type>IRunningObjectTable</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="RegisterObjectParam">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindCtx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pszKey">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
            <arg name="punk">
              <ptr>
                <type>IUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="GetObjectParam">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindCtx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pszKey">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
            <arg name="ppunk">
              <ptr>
                <ptr>
                  <type>IUnknown</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="EnumObjectParam">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindCtx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppenum">
              <ptr>
                <ptr>
                  <type>IEnumString</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="RevokeObjectParam">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindCtx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pszKey">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IBindCtxVtbl">
      <struct name="IBindCtxVtbl" />
    </typedef>
    <struct name="IBindCtx">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IBindCtxVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPENUMMONIKER">
      <ptr>
        <type>IEnumMoniker</type>
      </ptr>
    </typedef>
    <struct name="IEnumMonikerVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Next">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="celt">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="rgelt">
              <ptr>
                <ptr>
                  <type>IMoniker</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pceltFetched">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Skip">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="celt">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="Reset">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Clone">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppenum">
              <ptr>
                <ptr>
                  <type>IEnumMoniker</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IEnumMonikerVtbl">
      <struct name="IEnumMonikerVtbl" />
    </typedef>
    <struct name="IEnumMoniker">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IEnumMonikerVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPRUNNABLEOBJECT">
      <ptr>
        <type>IRunnableObject</type>
      </ptr>
    </typedef>
    <struct name="IRunnableObjectVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRunnableObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRunnableObject</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRunnableObject</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetRunningClass">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRunnableObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lpClsid">
              <type>LPCLSID</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Run">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRunnableObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbc">
              <type>LPBINDCTX</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="IsRunning">
        <ptr>
          <fn>
            <return>
              <type>BOOL</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRunnableObject</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="LockRunning">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRunnableObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fLock">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
            <arg name="fLastUnlockCloses">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="SetContainedObject">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRunnableObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fContained">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IRunnableObjectVtbl">
      <struct name="IRunnableObjectVtbl" />
    </typedef>
    <struct name="IRunnableObject">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IRunnableObjectVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPRUNNINGOBJECTTABLE">
      <ptr>
        <type>IRunningObjectTable</type>
      </ptr>
    </typedef>
    <struct name="IRunningObjectTableVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRunningObjectTable</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRunningObjectTable</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRunningObjectTable</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Register">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRunningObjectTable</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="grfFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="punkObject">
              <ptr>
                <type>IUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pmkObjectName">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwRegister">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Revoke">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRunningObjectTable</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwRegister">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="IsRunning">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRunningObjectTable</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pmkObjectName">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="GetObjectA">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRunningObjectTable</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pmkObjectName">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppunkObject">
              <ptr>
                <ptr>
                  <type>IUnknown</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="NoteChangeTime">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRunningObjectTable</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwRegister">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pfiletime">
              <ptr>
                <type>FILETIME</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="GetTimeOfLastChange">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRunningObjectTable</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pmkObjectName">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pfiletime">
              <ptr>
                <type>FILETIME</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="EnumRunning">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRunningObjectTable</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppenumMoniker">
              <ptr>
                <ptr>
                  <type>IEnumMoniker</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IRunningObjectTableVtbl">
      <struct name="IRunningObjectTableVtbl" />
    </typedef>
    <struct name="IRunningObjectTable">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IRunningObjectTableVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPPERSIST">
      <ptr>
        <type>IPersist</type>
      </ptr>
    </typedef>
    <struct name="IPersistVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersist</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersist</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersist</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetClassID">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersist</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pClassID">
              <ptr>
                <type>CLSID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IPersistVtbl">
      <struct name="IPersistVtbl" />
    </typedef>
    <struct name="IPersist">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IPersistVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPPERSISTSTREAM">
      <ptr>
        <type>IPersistStream</type>
      </ptr>
    </typedef>
    <struct name="IPersistStreamVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersistStream</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersistStream</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersistStream</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetClassID">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersistStream</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pClassID">
              <ptr>
                <type>CLSID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="IsDirty">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersistStream</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="Load">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersistStream</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pStm">
              <ptr>
                <type>IStream</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Save">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersistStream</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pStm">
              <ptr>
                <type>IStream</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fClearDirty">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="GetSizeMax">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersistStream</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pcbSize">
              <ptr>
                <type>ULARGE_INTEGER</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IPersistStreamVtbl">
      <struct name="IPersistStreamVtbl" />
    </typedef>
    <struct name="IPersistStream">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IPersistStreamVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPMONIKER">
      <ptr>
        <type>IMoniker</type>
      </ptr>
    </typedef>
    <enum name="tagMKSYS">
      <member name="MKSYS_NONE" value="0" />
      <member name="MKSYS_GENERICCOMPOSITE" value="1" />
      <member name="MKSYS_FILEMONIKER" value="2" />
      <member name="MKSYS_ANTIMONIKER" value="3" />
      <member name="MKSYS_ITEMMONIKER" value="4" />
      <member name="MKSYS_POINTERMONIKER" value="5" />
      <member name="MKSYS_CLASSMONIKER" value="7" />
      <member name="MKSYS_OBJREFMONIKER" value="8" />
      <member name="MKSYS_SESSIONMONIKER" value="9" />
      <member name="MKSYS_LUAMONIKER" value="10" />
    </enum>
    <typedef name="MKSYS">
      <enum name="tagMKSYS" />
    </typedef>
    <enum name="tagMKREDUCE">
      <member name="MKRREDUCE_ONE" value="196608" />
      <member name="MKRREDUCE_TOUSER" value="131072" />
      <member name="MKRREDUCE_THROUGHUSER" value="65536" />
      <member name="MKRREDUCE_ALL" value="0" />
    </enum>
    <typedef name="MKRREDUCE">
      <enum name="tagMKREDUCE" />
    </typedef>
    <struct name="IMonikerVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetClassID">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pClassID">
              <ptr>
                <type>CLSID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="IsDirty">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="Load">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pStm">
              <ptr>
                <type>IStream</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Save">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pStm">
              <ptr>
                <type>IStream</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fClearDirty">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="GetSizeMax">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pcbSize">
              <ptr>
                <type>ULARGE_INTEGER</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="BindToObject">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbc">
              <ptr>
                <type>IBindCtx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pmkToLeft">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riidResult">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvResult">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="BindToStorage">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbc">
              <ptr>
                <type>IBindCtx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pmkToLeft">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObj">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="Reduce">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbc">
              <ptr>
                <type>IBindCtx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwReduceHowFar">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="ppmkToLeft">
              <ptr>
                <ptr>
                  <type>IMoniker</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppmkReduced">
              <ptr>
                <ptr>
                  <type>IMoniker</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="ComposeWith">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pmkRight">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fOnlyIfNotGeneric">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
            <arg name="ppmkComposite">
              <ptr>
                <ptr>
                  <type>IMoniker</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="Enum">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fForward">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
            <arg name="ppenumMoniker">
              <ptr>
                <ptr>
                  <type>IEnumMoniker</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="IsEqual">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pmkOtherMoniker">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="Hash">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwHash">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="60" name="IsRunning">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbc">
              <ptr>
                <type>IBindCtx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pmkToLeft">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pmkNewlyRunning">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="64" name="GetTimeOfLastChange">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbc">
              <ptr>
                <type>IBindCtx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pmkToLeft">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pFileTime">
              <ptr>
                <type>FILETIME</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="68" name="Inverse">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppmk">
              <ptr>
                <ptr>
                  <type>IMoniker</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="72" name="CommonPrefixWith">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pmkOther">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppmkPrefix">
              <ptr>
                <ptr>
                  <type>IMoniker</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="76" name="RelativePathTo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pmkOther">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppmkRelPath">
              <ptr>
                <ptr>
                  <type>IMoniker</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="80" name="GetDisplayName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbc">
              <ptr>
                <type>IBindCtx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pmkToLeft">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppszDisplayName">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="84" name="ParseDisplayName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbc">
              <ptr>
                <type>IBindCtx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pmkToLeft">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pszDisplayName">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
            <arg name="pchEaten">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppmkOut">
              <ptr>
                <ptr>
                  <type>IMoniker</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="88" name="IsSystemMoniker">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwMksys">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IMonikerVtbl">
      <struct name="IMonikerVtbl" />
    </typedef>
    <struct name="IMoniker">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IMonikerVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IROTDataVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IROTData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IROTData</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IROTData</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetComparisonData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IROTData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbData">
              <ptr>
                <type>byte</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbMax">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="pcbData">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IROTDataVtbl">
      <struct name="IROTDataVtbl" />
    </typedef>
    <struct name="IROTData">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IROTDataVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPENUMSTRING">
      <ptr>
        <type>IEnumString</type>
      </ptr>
    </typedef>
    <struct name="IEnumStringVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumString</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumString</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumString</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Next">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumString</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="celt">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="rgelt">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pceltFetched">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Skip">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumString</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="celt">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="Reset">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumString</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Clone">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumString</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppenum">
              <ptr>
                <ptr>
                  <type>IEnumString</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IEnumStringVtbl">
      <struct name="IEnumStringVtbl" />
    </typedef>
    <struct name="IEnumString">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IEnumStringVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="ISequentialStreamVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISequentialStream</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISequentialStream</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISequentialStream</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Read">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISequentialStream</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pv">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cb">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="pcbRead">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Write">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISequentialStream</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pv">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cb">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="pcbWritten">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="ISequentialStreamVtbl">
      <struct name="ISequentialStreamVtbl" />
    </typedef>
    <struct name="ISequentialStream">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="ISequentialStreamVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPSTREAM">
      <ptr>
        <type>IStream</type>
      </ptr>
    </typedef>
    <struct name="tagSTATSTG">
      <field offset="0" name="pwcsName">
        <type>LPOLESTR</type>
      </field>
      <field offset="4" name="type">
        <type>DWORD</type>
      </field>
      <field offset="8" name="cbSize">
        <type>ULARGE_INTEGER</type>
      </field>
      <field offset="16" name="mtime">
        <type>FILETIME</type>
      </field>
      <field offset="24" name="ctime">
        <type>FILETIME</type>
      </field>
      <field offset="32" name="atime">
        <type>FILETIME</type>
      </field>
      <field offset="40" name="grfMode">
        <type>DWORD</type>
      </field>
      <field offset="44" name="grfLocksSupported">
        <type>DWORD</type>
      </field>
      <field offset="48" name="clsid">
        <type>CLSID</type>
      </field>
      <field offset="64" name="grfStateBits">
        <type>DWORD</type>
      </field>
      <field offset="68" name="reserved">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="STATSTG">
      <struct name="tagSTATSTG" />
    </typedef>
    <enum name="tagSTGTY">
      <member name="STGTY_STORAGE" value="1" />
      <member name="STGTY_STREAM" value="2" />
      <member name="STGTY_LOCKBYTES" value="3" />
      <member name="STGTY_PROPERTY" value="4" />
    </enum>
    <typedef name="STGTY">
      <enum name="tagSTGTY" />
    </typedef>
    <enum name="tagSTREAM_SEEK">
      <member name="STREAM_SEEK_SET" value="0" />
      <member name="STREAM_SEEK_CUR" value="1" />
      <member name="STREAM_SEEK_END" value="2" />
    </enum>
    <typedef name="STREAM_SEEK">
      <enum name="tagSTREAM_SEEK" />
    </typedef>
    <enum name="tagLOCKTYPE">
      <member name="LOCK_WRITE" value="1" />
      <member name="LOCK_EXCLUSIVE" value="2" />
      <member name="LOCK_ONLYONCE" value="4" />
    </enum>
    <typedef name="LOCKTYPE">
      <enum name="tagLOCKTYPE" />
    </typedef>
    <struct name="IStreamVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IStream</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IStream</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IStream</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Read">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IStream</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pv">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cb">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="pcbRead">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Write">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IStream</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pv">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cb">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="pcbWritten">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="Seek">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IStream</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dlibMove">
              <type>LARGE_INTEGER</type>
              <stack size="8" />
            </arg>
            <arg name="dwOrigin">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="plibNewPosition">
              <ptr>
                <type>ULARGE_INTEGER</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="SetSize">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IStream</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="libNewSize">
              <type>ULARGE_INTEGER</type>
              <stack size="8" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="CopyTo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IStream</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pstm">
              <ptr>
                <type>IStream</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cb">
              <type>ULARGE_INTEGER</type>
              <stack size="8" />
            </arg>
            <arg name="pcbRead">
              <ptr>
                <type>ULARGE_INTEGER</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pcbWritten">
              <ptr>
                <type>ULARGE_INTEGER</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="Commit">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IStream</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="grfCommitFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="Revert">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IStream</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="LockRegion">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IStream</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="libOffset">
              <type>ULARGE_INTEGER</type>
              <stack size="8" />
            </arg>
            <arg name="cb">
              <type>ULARGE_INTEGER</type>
              <stack size="8" />
            </arg>
            <arg name="dwLockType">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="UnlockRegion">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IStream</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="libOffset">
              <type>ULARGE_INTEGER</type>
              <stack size="8" />
            </arg>
            <arg name="cb">
              <type>ULARGE_INTEGER</type>
              <stack size="8" />
            </arg>
            <arg name="dwLockType">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="Stat">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IStream</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pstatstg">
              <ptr>
                <type>STATSTG</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="grfStatFlag">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="Clone">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IStream</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppstm">
              <ptr>
                <ptr>
                  <type>IStream</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IStreamVtbl">
      <struct name="IStreamVtbl" />
    </typedef>
    <struct name="IStream">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IStreamVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPENUMSTATSTG">
      <ptr>
        <type>IEnumSTATSTG</type>
      </ptr>
    </typedef>
    <struct name="IEnumSTATSTGVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumSTATSTG</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumSTATSTG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumSTATSTG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Next">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumSTATSTG</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="celt">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="rgelt">
              <ptr>
                <type>STATSTG</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pceltFetched">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Skip">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumSTATSTG</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="celt">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="Reset">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumSTATSTG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Clone">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumSTATSTG</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppenum">
              <ptr>
                <ptr>
                  <type>IEnumSTATSTG</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IEnumSTATSTGVtbl">
      <struct name="IEnumSTATSTGVtbl" />
    </typedef>
    <struct name="IEnumSTATSTG">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IEnumSTATSTGVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPSTORAGE">
      <ptr>
        <type>IStorage</type>
      </ptr>
    </typedef>
    <struct name="tagRemSNB">
      <field offset="0" name="ulCntStr">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="ulCntChar">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="8" name="rgString">
        <arr length="1">
          <type>OLECHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="RemSNB">
      <struct name="tagRemSNB" />
    </typedef>
    <typedef name="wireSNB">
      <ptr>
        <type>RemSNB</type>
      </ptr>
    </typedef>
    <typedef name="SNB">
      <ptr>
        <type>LPOLESTR</type>
      </ptr>
    </typedef>
    <struct name="IStorageVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="CreateStream">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwcsName">
              <ptr>
                <type>OLECHAR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="grfMode">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="reserved1">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="reserved2">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="ppstm">
              <ptr>
                <ptr>
                  <type>IStream</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="OpenStream">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwcsName">
              <ptr>
                <type>OLECHAR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="reserved1">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="grfMode">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="reserved2">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="ppstm">
              <ptr>
                <ptr>
                  <type>IStream</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="CreateStorage">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwcsName">
              <ptr>
                <type>OLECHAR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="grfMode">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="reserved1">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="reserved2">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="ppstg">
              <ptr>
                <ptr>
                  <type>IStorage</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="OpenStorage">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwcsName">
              <ptr>
                <type>OLECHAR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pstgPriority">
              <ptr>
                <type>IStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="grfMode">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="snbExclude">
              <type>SNB</type>
              <stack size="4" />
            </arg>
            <arg name="reserved">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="ppstg">
              <ptr>
                <ptr>
                  <type>IStorage</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="CopyTo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ciidExclude">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="rgiidExclude">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="snbExclude">
              <type>SNB</type>
              <stack size="4" />
            </arg>
            <arg name="pstgDest">
              <ptr>
                <type>IStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="MoveElementTo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwcsName">
              <ptr>
                <type>OLECHAR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pstgDest">
              <ptr>
                <type>IStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwcsNewName">
              <ptr>
                <type>OLECHAR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="grfFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="Commit">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="grfCommitFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="Revert">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="EnumElements">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="reserved1">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="reserved2">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="reserved3">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="ppenum">
              <ptr>
                <ptr>
                  <type>IEnumSTATSTG</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="DestroyElement">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwcsName">
              <ptr>
                <type>OLECHAR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="RenameElement">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwcsOldName">
              <ptr>
                <type>OLECHAR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwcsNewName">
              <ptr>
                <type>OLECHAR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="SetElementTimes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwcsName">
              <ptr>
                <type>OLECHAR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pctime">
              <ptr>
                <type>FILETIME</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="patime">
              <ptr>
                <type>FILETIME</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pmtime">
              <ptr>
                <type>FILETIME</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="60" name="SetClass">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="clsid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="64" name="SetStateBits">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="grfStateBits">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="grfMask">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="68" name="Stat">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pstatstg">
              <ptr>
                <type>STATSTG</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="grfStatFlag">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IStorageVtbl">
      <struct name="IStorageVtbl" />
    </typedef>
    <struct name="IStorage">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IStorageVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPPERSISTFILE">
      <ptr>
        <type>IPersistFile</type>
      </ptr>
    </typedef>
    <struct name="IPersistFileVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersistFile</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersistFile</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersistFile</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetClassID">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersistFile</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pClassID">
              <ptr>
                <type>CLSID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="IsDirty">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersistFile</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="Load">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersistFile</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pszFileName">
              <type>LPCOLESTR</type>
              <stack size="4" />
            </arg>
            <arg name="dwMode">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Save">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersistFile</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pszFileName">
              <type>LPCOLESTR</type>
              <stack size="4" />
            </arg>
            <arg name="fRemember">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="SaveCompleted">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersistFile</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pszFileName">
              <type>LPCOLESTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="GetCurFile">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersistFile</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppszFileName">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IPersistFileVtbl">
      <struct name="IPersistFileVtbl" />
    </typedef>
    <struct name="IPersistFile">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IPersistFileVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPPERSISTSTORAGE">
      <ptr>
        <type>IPersistStorage</type>
      </ptr>
    </typedef>
    <struct name="IPersistStorageVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersistStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersistStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersistStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetClassID">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersistStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pClassID">
              <ptr>
                <type>CLSID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="IsDirty">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersistStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="InitNew">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersistStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pStg">
              <ptr>
                <type>IStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Load">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersistStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pStg">
              <ptr>
                <type>IStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="Save">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersistStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pStgSave">
              <ptr>
                <type>IStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fSameAsLoad">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="SaveCompleted">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersistStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pStgNew">
              <ptr>
                <type>IStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="HandsOffStorage">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersistStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IPersistStorageVtbl">
      <struct name="IPersistStorageVtbl" />
    </typedef>
    <struct name="IPersistStorage">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IPersistStorageVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPLOCKBYTES">
      <ptr>
        <type>ILockBytes</type>
      </ptr>
    </typedef>
    <struct name="ILockBytesVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ILockBytes</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ILockBytes</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ILockBytes</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="ReadAt">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ILockBytes</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ulOffset">
              <type>ULARGE_INTEGER</type>
              <stack size="8" />
            </arg>
            <arg name="pv">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cb">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="pcbRead">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="WriteAt">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ILockBytes</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ulOffset">
              <type>ULARGE_INTEGER</type>
              <stack size="8" />
            </arg>
            <arg name="pv">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cb">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="pcbWritten">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="Flush">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ILockBytes</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="SetSize">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ILockBytes</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cb">
              <type>ULARGE_INTEGER</type>
              <stack size="8" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="LockRegion">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ILockBytes</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="libOffset">
              <type>ULARGE_INTEGER</type>
              <stack size="8" />
            </arg>
            <arg name="cb">
              <type>ULARGE_INTEGER</type>
              <stack size="8" />
            </arg>
            <arg name="dwLockType">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="UnlockRegion">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ILockBytes</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="libOffset">
              <type>ULARGE_INTEGER</type>
              <stack size="8" />
            </arg>
            <arg name="cb">
              <type>ULARGE_INTEGER</type>
              <stack size="8" />
            </arg>
            <arg name="dwLockType">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="Stat">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ILockBytes</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pstatstg">
              <ptr>
                <type>STATSTG</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="grfStatFlag">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="ILockBytesVtbl">
      <struct name="ILockBytesVtbl" />
    </typedef>
    <struct name="ILockBytes">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="ILockBytesVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPENUMFORMATETC">
      <ptr>
        <type>IEnumFORMATETC</type>
      </ptr>
    </typedef>
    <struct name="tagDVTARGETDEVICE">
      <field offset="0" name="tdSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="tdDriverNameOffset">
        <type>WORD</type>
      </field>
      <field offset="6" name="tdDeviceNameOffset">
        <type>WORD</type>
      </field>
      <field offset="8" name="tdPortNameOffset">
        <type>WORD</type>
      </field>
      <field offset="10" name="tdExtDevmodeOffset">
        <type>WORD</type>
      </field>
      <field offset="12" name="tdData">
        <arr length="1">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="DVTARGETDEVICE">
      <struct name="tagDVTARGETDEVICE" />
    </typedef>
    <typedef name="LPCLIPFORMAT">
      <ptr>
        <type>CLIPFORMAT</type>
      </ptr>
    </typedef>
    <struct name="tagFORMATETC">
      <field offset="0" name="cfFormat">
        <type>CLIPFORMAT</type>
      </field>
      <field offset="4" name="ptd">
        <ptr>
          <type>DVTARGETDEVICE</type>
        </ptr>
      </field>
      <field offset="8" name="dwAspect">
        <type>DWORD</type>
      </field>
      <field offset="12" name="lindex">
        <type>LONG</type>
      </field>
      <field offset="16" name="tymed">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="FORMATETC">
      <struct name="tagFORMATETC" />
    </typedef>
    <typedef name="LPFORMATETC">
      <ptr>
        <struct name="tagFORMATETC" />
      </ptr>
    </typedef>
    <struct name="IEnumFORMATETCVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumFORMATETC</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumFORMATETC</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumFORMATETC</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Next">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumFORMATETC</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="celt">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="rgelt">
              <ptr>
                <type>FORMATETC</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pceltFetched">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Skip">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumFORMATETC</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="celt">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="Reset">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumFORMATETC</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Clone">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumFORMATETC</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppenum">
              <ptr>
                <ptr>
                  <type>IEnumFORMATETC</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IEnumFORMATETCVtbl">
      <struct name="IEnumFORMATETCVtbl" />
    </typedef>
    <struct name="IEnumFORMATETC">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IEnumFORMATETCVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPENUMSTATDATA">
      <ptr>
        <type>IEnumSTATDATA</type>
      </ptr>
    </typedef>
    <enum name="tagADVF">
      <member name="ADVF_NODATA" value="1" />
      <member name="ADVF_PRIMEFIRST" value="2" />
      <member name="ADVF_ONLYONCE" value="4" />
      <member name="ADVF_DATAONSTOP" value="64" />
      <member name="ADVFCACHE_NOHANDLER" value="8" />
      <member name="ADVFCACHE_FORCEBUILTIN" value="16" />
      <member name="ADVFCACHE_ONSAVE" value="32" />
    </enum>
    <typedef name="ADVF">
      <enum name="tagADVF" />
    </typedef>
    <struct name="tagSTATDATA">
      <field offset="0" name="formatetc">
        <type>FORMATETC</type>
      </field>
      <field offset="20" name="advf">
        <type>DWORD</type>
      </field>
      <field offset="24" name="pAdvSink">
        <ptr>
          <type>IAdviseSink</type>
        </ptr>
      </field>
      <field offset="28" name="dwConnection">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="STATDATA">
      <struct name="tagSTATDATA" />
    </typedef>
    <typedef name="LPSTATDATA">
      <ptr>
        <type>STATDATA</type>
      </ptr>
    </typedef>
    <struct name="IEnumSTATDATAVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumSTATDATA</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumSTATDATA</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumSTATDATA</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Next">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumSTATDATA</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="celt">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="rgelt">
              <ptr>
                <type>STATDATA</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pceltFetched">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Skip">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumSTATDATA</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="celt">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="Reset">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumSTATDATA</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Clone">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumSTATDATA</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppenum">
              <ptr>
                <ptr>
                  <type>IEnumSTATDATA</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IEnumSTATDATAVtbl">
      <struct name="IEnumSTATDATAVtbl" />
    </typedef>
    <struct name="IEnumSTATDATA">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IEnumSTATDATAVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPROOTSTORAGE">
      <ptr>
        <type>IRootStorage</type>
      </ptr>
    </typedef>
    <struct name="IRootStorageVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRootStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRootStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRootStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="SwitchToFile">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRootStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pszFile">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IRootStorageVtbl">
      <struct name="IRootStorageVtbl" />
    </typedef>
    <struct name="IRootStorage">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IRootStorageVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPADVISESINK">
      <ptr>
        <type>IAdviseSink</type>
      </ptr>
    </typedef>
    <enum name="tagTYMED">
      <member name="TYMED_HGLOBAL" value="1" />
      <member name="TYMED_FILE" value="2" />
      <member name="TYMED_ISTREAM" value="4" />
      <member name="TYMED_ISTORAGE" value="8" />
      <member name="TYMED_GDI" value="16" />
      <member name="TYMED_MFPICT" value="32" />
      <member name="TYMED_ENHMF" value="64" />
      <member name="TYMED_NULL" value="0" />
    </enum>
    <typedef name="TYMED">
      <enum name="tagTYMED" />
    </typedef>
    <struct name="tagRemSTGMEDIUM">
      <field offset="0" name="tymed">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwHandleType">
        <type>DWORD</type>
      </field>
      <field offset="8" name="pData">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="12" name="pUnkForRelease">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="16" name="cbData">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="20" name="data">
        <arr length="1">
          <type>byte</type>
        </arr>
      </field>
    </struct>
    <typedef name="RemSTGMEDIUM">
      <struct name="tagRemSTGMEDIUM" />
    </typedef>
    <struct name="tagSTGMEDIUM">
      <field offset="0" name="tymed">
        <type>DWORD</type>
      </field>
      <field offset="4">
        <union>
          <alt name="hBitmap">
            <type>HBITMAP</type>
          </alt>
          <alt name="hMetaFilePict">
            <type>HMETAFILEPICT</type>
          </alt>
          <alt name="hEnhMetaFile">
            <type>HENHMETAFILE</type>
          </alt>
          <alt name="hGlobal">
            <type>HGLOBAL</type>
          </alt>
          <alt name="lpszFileName">
            <type>LPOLESTR</type>
          </alt>
          <alt name="pstm">
            <ptr>
              <type>IStream</type>
            </ptr>
          </alt>
          <alt name="pstg">
            <ptr>
              <type>IStorage</type>
            </ptr>
          </alt>
        </union>
      </field>
      <field offset="8" name="pUnkForRelease">
        <ptr>
          <type>IUnknown</type>
        </ptr>
      </field>
    </struct>
    <typedef name="uSTGMEDIUM">
      <struct name="tagSTGMEDIUM" />
    </typedef>
    <union name="__MIDL_IAdviseSink_0002">
      <alt name="hBitmap">
        <type>wireHBITMAP</type>
      </alt>
      <alt name="hPalette">
        <type>wireHPALETTE</type>
      </alt>
      <alt name="hGeneric">
        <type>wireHGLOBAL</type>
      </alt>
    </union>
    <struct name="_GDI_OBJECT">
      <field offset="0" name="ObjectType">
        <type>DWORD</type>
      </field>
      <field offset="4" name="u">
        <union name="__MIDL_IAdviseSink_0002" />
      </field>
    </struct>
    <typedef name="GDI_OBJECT">
      <struct name="_GDI_OBJECT" />
    </typedef>
    <union name="__MIDL_IAdviseSink_0003">
      <alt name="hMetaFilePict">
        <type>wireHMETAFILEPICT</type>
      </alt>
      <alt name="hHEnhMetaFile">
        <type>wireHENHMETAFILE</type>
      </alt>
      <alt name="hGdiHandle">
        <ptr>
          <type>GDI_OBJECT</type>
        </ptr>
      </alt>
      <alt name="hGlobal">
        <type>wireHGLOBAL</type>
      </alt>
      <alt name="lpszFileName">
        <type>LPOLESTR</type>
      </alt>
      <alt name="pstm">
        <ptr>
          <type>BYTE_BLOB</type>
        </ptr>
      </alt>
      <alt name="pstg">
        <ptr>
          <type>BYTE_BLOB</type>
        </ptr>
      </alt>
    </union>
    <struct name="_STGMEDIUM_UNION">
      <field offset="0" name="tymed">
        <type>DWORD</type>
      </field>
      <field offset="4" name="u">
        <union name="__MIDL_IAdviseSink_0003" />
      </field>
    </struct>
    <struct name="_userSTGMEDIUM">
      <field offset="0">
        <struct name="_STGMEDIUM_UNION" />
      </field>
      <field offset="8" name="pUnkForRelease">
        <ptr>
          <type>IUnknown</type>
        </ptr>
      </field>
    </struct>
    <typedef name="userSTGMEDIUM">
      <struct name="_userSTGMEDIUM" />
    </typedef>
    <typedef name="wireSTGMEDIUM">
      <ptr>
        <type>userSTGMEDIUM</type>
      </ptr>
    </typedef>
    <typedef name="STGMEDIUM">
      <type>uSTGMEDIUM</type>
    </typedef>
    <typedef name="wireASYNC_STGMEDIUM">
      <ptr>
        <type>userSTGMEDIUM</type>
      </ptr>
    </typedef>
    <typedef name="ASYNC_STGMEDIUM">
      <type>STGMEDIUM</type>
    </typedef>
    <typedef name="LPSTGMEDIUM">
      <ptr>
        <type>STGMEDIUM</type>
      </ptr>
    </typedef>
    <struct name="_userFLAG_STGMEDIUM">
      <field offset="0" name="ContextFlags">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="4" name="fPassOwnership">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="Stgmed">
        <type>userSTGMEDIUM</type>
      </field>
    </struct>
    <typedef name="userFLAG_STGMEDIUM">
      <struct name="_userFLAG_STGMEDIUM" />
    </typedef>
    <typedef name="wireFLAG_STGMEDIUM">
      <ptr>
        <type>userFLAG_STGMEDIUM</type>
      </ptr>
    </typedef>
    <struct name="_FLAG_STGMEDIUM">
      <field offset="0" name="ContextFlags">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="4" name="fPassOwnership">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="Stgmed">
        <type>STGMEDIUM</type>
      </field>
    </struct>
    <typedef name="FLAG_STGMEDIUM">
      <struct name="_FLAG_STGMEDIUM" />
    </typedef>
    <struct name="IAdviseSinkVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAdviseSink</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAdviseSink</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAdviseSink</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="OnDataChange">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>IAdviseSink</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pFormatetc">
              <ptr>
                <type>FORMATETC</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pStgmed">
              <ptr>
                <type>STGMEDIUM</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="OnViewChange">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>IAdviseSink</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwAspect">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="lindex">
              <type>LONG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="OnRename">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>IAdviseSink</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pmk">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="OnSave">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>IAdviseSink</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="OnClose">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>IAdviseSink</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IAdviseSinkVtbl">
      <struct name="IAdviseSinkVtbl" />
    </typedef>
    <struct name="IAdviseSink">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IAdviseSinkVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="AsyncIAdviseSinkVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIAdviseSink</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIAdviseSink</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIAdviseSink</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Begin_OnDataChange">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIAdviseSink</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pFormatetc">
              <ptr>
                <type>FORMATETC</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pStgmed">
              <ptr>
                <type>STGMEDIUM</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Finish_OnDataChange">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIAdviseSink</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="Begin_OnViewChange">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIAdviseSink</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwAspect">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="lindex">
              <type>LONG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Finish_OnViewChange">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIAdviseSink</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="Begin_OnRename">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIAdviseSink</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pmk">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="Finish_OnRename">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIAdviseSink</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="Begin_OnSave">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIAdviseSink</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="Finish_OnSave">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIAdviseSink</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="Begin_OnClose">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIAdviseSink</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="Finish_OnClose">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIAdviseSink</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="AsyncIAdviseSinkVtbl">
      <struct name="AsyncIAdviseSinkVtbl" />
    </typedef>
    <struct name="AsyncIAdviseSink">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="AsyncIAdviseSinkVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPADVISESINK2">
      <ptr>
        <type>IAdviseSink2</type>
      </ptr>
    </typedef>
    <struct name="IAdviseSink2Vtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAdviseSink2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAdviseSink2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAdviseSink2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="OnDataChange">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>IAdviseSink2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pFormatetc">
              <ptr>
                <type>FORMATETC</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pStgmed">
              <ptr>
                <type>STGMEDIUM</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="OnViewChange">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>IAdviseSink2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwAspect">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="lindex">
              <type>LONG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="OnRename">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>IAdviseSink2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pmk">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="OnSave">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>IAdviseSink2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="OnClose">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>IAdviseSink2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="OnLinkSrcChange">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>IAdviseSink2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pmk">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IAdviseSink2Vtbl">
      <struct name="IAdviseSink2Vtbl" />
    </typedef>
    <struct name="IAdviseSink2">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IAdviseSink2Vtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="AsyncIAdviseSink2Vtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIAdviseSink2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIAdviseSink2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIAdviseSink2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Begin_OnDataChange">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIAdviseSink2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pFormatetc">
              <ptr>
                <type>FORMATETC</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pStgmed">
              <ptr>
                <type>STGMEDIUM</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Finish_OnDataChange">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIAdviseSink2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="Begin_OnViewChange">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIAdviseSink2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwAspect">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="lindex">
              <type>LONG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Finish_OnViewChange">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIAdviseSink2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="Begin_OnRename">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIAdviseSink2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pmk">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="Finish_OnRename">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIAdviseSink2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="Begin_OnSave">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIAdviseSink2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="Finish_OnSave">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIAdviseSink2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="Begin_OnClose">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIAdviseSink2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="Finish_OnClose">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIAdviseSink2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="Begin_OnLinkSrcChange">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIAdviseSink2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pmk">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="Finish_OnLinkSrcChange">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIAdviseSink2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="AsyncIAdviseSink2Vtbl">
      <struct name="AsyncIAdviseSink2Vtbl" />
    </typedef>
    <struct name="AsyncIAdviseSink2">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="AsyncIAdviseSink2Vtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPDATAOBJECT">
      <ptr>
        <type>IDataObject</type>
      </ptr>
    </typedef>
    <enum name="tagDATADIR">
      <member name="DATADIR_GET" value="1" />
      <member name="DATADIR_SET" value="2" />
    </enum>
    <typedef name="DATADIR">
      <enum name="tagDATADIR" />
    </typedef>
    <struct name="IDataObjectVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDataObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDataObject</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDataObject</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDataObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pformatetcIn">
              <ptr>
                <type>FORMATETC</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pmedium">
              <ptr>
                <type>STGMEDIUM</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetDataHere">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDataObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pformatetc">
              <ptr>
                <type>FORMATETC</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pmedium">
              <ptr>
                <type>STGMEDIUM</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="QueryGetData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDataObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pformatetc">
              <ptr>
                <type>FORMATETC</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="GetCanonicalFormatEtc">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDataObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pformatectIn">
              <ptr>
                <type>FORMATETC</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pformatetcOut">
              <ptr>
                <type>FORMATETC</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="SetData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDataObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pformatetc">
              <ptr>
                <type>FORMATETC</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pmedium">
              <ptr>
                <type>STGMEDIUM</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fRelease">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="EnumFormatEtc">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDataObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwDirection">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="ppenumFormatEtc">
              <ptr>
                <ptr>
                  <type>IEnumFORMATETC</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="DAdvise">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDataObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pformatetc">
              <ptr>
                <type>FORMATETC</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="advf">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pAdvSink">
              <ptr>
                <type>IAdviseSink</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwConnection">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="DUnadvise">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDataObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwConnection">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="EnumDAdvise">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDataObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppenumAdvise">
              <ptr>
                <ptr>
                  <type>IEnumSTATDATA</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IDataObjectVtbl">
      <struct name="IDataObjectVtbl" />
    </typedef>
    <struct name="IDataObject">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IDataObjectVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPDATAADVISEHOLDER">
      <ptr>
        <type>IDataAdviseHolder</type>
      </ptr>
    </typedef>
    <struct name="IDataAdviseHolderVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDataAdviseHolder</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDataAdviseHolder</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDataAdviseHolder</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Advise">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDataAdviseHolder</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pDataObject">
              <ptr>
                <type>IDataObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pFetc">
              <ptr>
                <type>FORMATETC</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="advf">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pAdvise">
              <ptr>
                <type>IAdviseSink</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwConnection">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Unadvise">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDataAdviseHolder</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwConnection">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="EnumAdvise">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDataAdviseHolder</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppenumAdvise">
              <ptr>
                <ptr>
                  <type>IEnumSTATDATA</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="SendOnDataChange">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDataAdviseHolder</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pDataObject">
              <ptr>
                <type>IDataObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="advf">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IDataAdviseHolderVtbl">
      <struct name="IDataAdviseHolderVtbl" />
    </typedef>
    <struct name="IDataAdviseHolder">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IDataAdviseHolderVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPMESSAGEFILTER">
      <ptr>
        <type>IMessageFilter</type>
      </ptr>
    </typedef>
    <enum name="tagCALLTYPE">
      <member name="CALLTYPE_TOPLEVEL" value="1" />
      <member name="CALLTYPE_NESTED" value="2" />
      <member name="CALLTYPE_ASYNC" value="3" />
      <member name="CALLTYPE_TOPLEVEL_CALLPENDING" value="4" />
      <member name="CALLTYPE_ASYNC_CALLPENDING" value="5" />
    </enum>
    <typedef name="CALLTYPE">
      <enum name="tagCALLTYPE" />
    </typedef>
    <enum name="tagSERVERCALL">
      <member name="SERVERCALL_ISHANDLED" value="0" />
      <member name="SERVERCALL_REJECTED" value="1" />
      <member name="SERVERCALL_RETRYLATER" value="2" />
    </enum>
    <typedef name="SERVERCALL">
      <enum name="tagSERVERCALL" />
    </typedef>
    <enum name="tagPENDINGTYPE">
      <member name="PENDINGTYPE_TOPLEVEL" value="1" />
      <member name="PENDINGTYPE_NESTED" value="2" />
    </enum>
    <typedef name="PENDINGTYPE">
      <enum name="tagPENDINGTYPE" />
    </typedef>
    <enum name="tagPENDINGMSG">
      <member name="PENDINGMSG_CANCELCALL" value="0" />
      <member name="PENDINGMSG_WAITNOPROCESS" value="1" />
      <member name="PENDINGMSG_WAITDEFPROCESS" value="2" />
    </enum>
    <typedef name="PENDINGMSG">
      <enum name="tagPENDINGMSG" />
    </typedef>
    <struct name="tagINTERFACEINFO">
      <field offset="0" name="pUnk">
        <ptr>
          <type>IUnknown</type>
        </ptr>
      </field>
      <field offset="8" name="iid">
        <type>IID</type>
      </field>
      <field offset="24" name="wMethod">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="INTERFACEINFO">
      <struct name="tagINTERFACEINFO" />
    </typedef>
    <typedef name="LPINTERFACEINFO">
      <ptr>
        <struct name="tagINTERFACEINFO" />
      </ptr>
    </typedef>
    <struct name="IMessageFilterVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMessageFilter</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMessageFilter</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMessageFilter</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="HandleInComingCall">
        <ptr>
          <fn>
            <return>
              <type>DWORD</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMessageFilter</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwCallType">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="htaskCaller">
              <type>HTASK</type>
              <stack size="4" />
            </arg>
            <arg name="dwTickCount">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="lpInterfaceInfo">
              <type>LPINTERFACEINFO</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="RetryRejectedCall">
        <ptr>
          <fn>
            <return>
              <type>DWORD</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMessageFilter</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="htaskCallee">
              <type>HTASK</type>
              <stack size="4" />
            </arg>
            <arg name="dwTickCount">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwRejectType">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="MessagePending">
        <ptr>
          <fn>
            <return>
              <type>DWORD</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMessageFilter</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="htaskCallee">
              <type>HTASK</type>
              <stack size="4" />
            </arg>
            <arg name="dwTickCount">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwPendingType">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IMessageFilterVtbl">
      <struct name="IMessageFilterVtbl" />
    </typedef>
    <struct name="IMessageFilter">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IMessageFilterVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="RPCOLEDATAREP">
      <prim domain="UnsignedInt" size="4" />
    </typedef>
    <struct name="tagRPCOLEMESSAGE">
      <field offset="0" name="reserved1">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="4" name="dataRepresentation">
        <type>RPCOLEDATAREP</type>
      </field>
      <field offset="8" name="Buffer">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="12" name="cbBuffer">
        <type>ULONG</type>
      </field>
      <field offset="16" name="iMethod">
        <type>ULONG</type>
      </field>
      <field offset="24" name="reserved2">
        <arr length="5">
          <ptr>
            <void />
          </ptr>
        </arr>
      </field>
      <field offset="44" name="rpcFlags">
        <type>ULONG</type>
      </field>
    </struct>
    <typedef name="RPCOLEMESSAGE">
      <struct name="tagRPCOLEMESSAGE" />
    </typedef>
    <typedef name="PRPCOLEMESSAGE">
      <ptr>
        <type>RPCOLEMESSAGE</type>
      </ptr>
    </typedef>
    <struct name="IRpcChannelBufferVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcChannelBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcChannelBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcChannelBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetBuffer">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcChannelBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pMessage">
              <ptr>
                <type>RPCOLEMESSAGE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="SendReceive">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcChannelBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pMessage">
              <ptr>
                <type>RPCOLEMESSAGE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pStatus">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="FreeBuffer">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcChannelBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pMessage">
              <ptr>
                <type>RPCOLEMESSAGE</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="GetDestCtx">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcChannelBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwDestContext">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvDestContext">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="IsConnected">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcChannelBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IRpcChannelBufferVtbl">
      <struct name="IRpcChannelBufferVtbl" />
    </typedef>
    <struct name="IRpcChannelBuffer">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IRpcChannelBufferVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IRpcChannelBuffer2Vtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcChannelBuffer2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcChannelBuffer2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcChannelBuffer2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetBuffer">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcChannelBuffer2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pMessage">
              <ptr>
                <type>RPCOLEMESSAGE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="SendReceive">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcChannelBuffer2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pMessage">
              <ptr>
                <type>RPCOLEMESSAGE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pStatus">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="FreeBuffer">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcChannelBuffer2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pMessage">
              <ptr>
                <type>RPCOLEMESSAGE</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="GetDestCtx">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcChannelBuffer2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwDestContext">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvDestContext">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="IsConnected">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcChannelBuffer2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="GetProtocolVersion">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcChannelBuffer2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwVersion">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IRpcChannelBuffer2Vtbl">
      <struct name="IRpcChannelBuffer2Vtbl" />
    </typedef>
    <struct name="IRpcChannelBuffer2">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IRpcChannelBuffer2Vtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IAsyncRpcChannelBufferVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAsyncRpcChannelBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAsyncRpcChannelBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAsyncRpcChannelBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetBuffer">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAsyncRpcChannelBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pMessage">
              <ptr>
                <type>RPCOLEMESSAGE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="SendReceive">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAsyncRpcChannelBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pMessage">
              <ptr>
                <type>RPCOLEMESSAGE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pStatus">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="FreeBuffer">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAsyncRpcChannelBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pMessage">
              <ptr>
                <type>RPCOLEMESSAGE</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="GetDestCtx">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAsyncRpcChannelBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwDestContext">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvDestContext">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="IsConnected">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAsyncRpcChannelBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="GetProtocolVersion">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAsyncRpcChannelBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwVersion">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="Send">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAsyncRpcChannelBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pMsg">
              <ptr>
                <type>RPCOLEMESSAGE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pSync">
              <ptr>
                <type>ISynchronize</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pulStatus">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="Receive">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAsyncRpcChannelBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pMsg">
              <ptr>
                <type>RPCOLEMESSAGE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pulStatus">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="GetDestCtxEx">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAsyncRpcChannelBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pMsg">
              <ptr>
                <type>RPCOLEMESSAGE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwDestContext">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvDestContext">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IAsyncRpcChannelBufferVtbl">
      <struct name="IAsyncRpcChannelBufferVtbl" />
    </typedef>
    <struct name="IAsyncRpcChannelBuffer">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IAsyncRpcChannelBufferVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IRpcChannelBuffer3Vtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcChannelBuffer3</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcChannelBuffer3</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcChannelBuffer3</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetBuffer">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcChannelBuffer3</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pMessage">
              <ptr>
                <type>RPCOLEMESSAGE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="SendReceive">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcChannelBuffer3</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pMessage">
              <ptr>
                <type>RPCOLEMESSAGE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pStatus">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="FreeBuffer">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcChannelBuffer3</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pMessage">
              <ptr>
                <type>RPCOLEMESSAGE</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="GetDestCtx">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcChannelBuffer3</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwDestContext">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvDestContext">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="IsConnected">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcChannelBuffer3</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="GetProtocolVersion">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcChannelBuffer3</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwVersion">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="Send">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcChannelBuffer3</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pMsg">
              <ptr>
                <type>RPCOLEMESSAGE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pulStatus">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="Receive">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcChannelBuffer3</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pMsg">
              <ptr>
                <type>RPCOLEMESSAGE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ulSize">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="pulStatus">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="Cancel">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcChannelBuffer3</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pMsg">
              <ptr>
                <type>RPCOLEMESSAGE</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="GetCallContext">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcChannelBuffer3</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pMsg">
              <ptr>
                <type>RPCOLEMESSAGE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pInterface">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="GetDestCtxEx">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcChannelBuffer3</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pMsg">
              <ptr>
                <type>RPCOLEMESSAGE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwDestContext">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvDestContext">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="GetState">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcChannelBuffer3</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pMsg">
              <ptr>
                <type>RPCOLEMESSAGE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pState">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="60" name="RegisterAsync">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcChannelBuffer3</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pMsg">
              <ptr>
                <type>RPCOLEMESSAGE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pAsyncMgr">
              <ptr>
                <type>IAsyncManager</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IRpcChannelBuffer3Vtbl">
      <struct name="IRpcChannelBuffer3Vtbl" />
    </typedef>
    <struct name="IRpcChannelBuffer3">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IRpcChannelBuffer3Vtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IRpcSyntaxNegotiateVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcSyntaxNegotiate</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcSyntaxNegotiate</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcSyntaxNegotiate</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="NegotiateSyntax">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcSyntaxNegotiate</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pMsg">
              <ptr>
                <type>RPCOLEMESSAGE</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IRpcSyntaxNegotiateVtbl">
      <struct name="IRpcSyntaxNegotiateVtbl" />
    </typedef>
    <struct name="IRpcSyntaxNegotiate">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IRpcSyntaxNegotiateVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IRpcProxyBufferVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcProxyBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcProxyBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcProxyBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Connect">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcProxyBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pRpcChannelBuffer">
              <ptr>
                <type>IRpcChannelBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Disconnect">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcProxyBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IRpcProxyBufferVtbl">
      <struct name="IRpcProxyBufferVtbl" />
    </typedef>
    <struct name="IRpcProxyBuffer">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IRpcProxyBufferVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IRpcStubBufferVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcStubBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcStubBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcStubBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Connect">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcStubBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pUnkServer">
              <ptr>
                <type>IUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Disconnect">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcStubBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="Invoke">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcStubBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="_prpcmsg">
              <ptr>
                <type>RPCOLEMESSAGE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="_pRpcChannelBuffer">
              <ptr>
                <type>IRpcChannelBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="IsIIDSupported">
        <ptr>
          <fn>
            <return>
              <ptr>
                <type>IRpcStubBuffer</type>
              </ptr>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcStubBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="CountRefs">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcStubBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="DebugServerQueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcStubBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppv">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="DebugServerRelease">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcStubBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pv">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IRpcStubBufferVtbl">
      <struct name="IRpcStubBufferVtbl" />
    </typedef>
    <struct name="IRpcStubBuffer">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IRpcStubBufferVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IPSFactoryBufferVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPSFactoryBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPSFactoryBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPSFactoryBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="CreateProxy">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPSFactoryBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pUnkOuter">
              <ptr>
                <type>IUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppProxy">
              <ptr>
                <ptr>
                  <type>IRpcProxyBuffer</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppv">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="CreateStub">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPSFactoryBuffer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pUnkServer">
              <ptr>
                <type>IUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppStub">
              <ptr>
                <ptr>
                  <type>IRpcStubBuffer</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IPSFactoryBufferVtbl">
      <struct name="IPSFactoryBufferVtbl" />
    </typedef>
    <struct name="IPSFactoryBuffer">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IPSFactoryBufferVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="SChannelHookCallInfo">
      <field offset="0" name="iid">
        <type>IID</type>
      </field>
      <field offset="16" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="24" name="uCausality">
        <type>GUID</type>
      </field>
      <field offset="40" name="dwServerPid">
        <type>DWORD</type>
      </field>
      <field offset="44" name="iMethod">
        <type>DWORD</type>
      </field>
      <field offset="48" name="pObject">
        <ptr>
          <void />
        </ptr>
      </field>
    </struct>
    <typedef name="SChannelHookCallInfo">
      <struct name="SChannelHookCallInfo" />
    </typedef>
    <struct name="IChannelHookVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IChannelHook</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IChannelHook</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IChannelHook</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="ClientGetSize">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>IChannelHook</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="uExtent">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pDataSize">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="ClientFillBuffer">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>IChannelHook</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="uExtent">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pDataSize">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pDataBuffer">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="ClientNotify">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>IChannelHook</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="uExtent">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbDataSize">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="pDataBuffer">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lDataRep">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="hrFault">
              <type>HRESULT</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="ServerNotify">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>IChannelHook</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="uExtent">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbDataSize">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="pDataBuffer">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lDataRep">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="ServerGetSize">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>IChannelHook</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="uExtent">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="hrFault">
              <type>HRESULT</type>
              <stack size="4" />
            </arg>
            <arg name="pDataSize">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="ServerFillBuffer">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>IChannelHook</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="uExtent">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pDataSize">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pDataBuffer">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="hrFault">
              <type>HRESULT</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IChannelHookVtbl">
      <struct name="IChannelHookVtbl" />
    </typedef>
    <struct name="IChannelHook">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IChannelHookVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="tagSOLE_AUTHENTICATION_SERVICE">
      <field offset="0" name="dwAuthnSvc">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwAuthzSvc">
        <type>DWORD</type>
      </field>
      <field offset="8" name="pPrincipalName">
        <ptr>
          <type>OLECHAR</type>
        </ptr>
      </field>
      <field offset="12" name="hr">
        <type>HRESULT</type>
      </field>
    </struct>
    <typedef name="SOLE_AUTHENTICATION_SERVICE">
      <struct name="tagSOLE_AUTHENTICATION_SERVICE" />
    </typedef>
    <typedef name="PSOLE_AUTHENTICATION_SERVICE">
      <ptr>
        <type>SOLE_AUTHENTICATION_SERVICE</type>
      </ptr>
    </typedef>
    <enum name="tagEOLE_AUTHENTICATION_CAPABILITIES">
      <member name="EOAC_NONE" value="0" />
      <member name="EOAC_MUTUAL_AUTH" value="1" />
      <member name="EOAC_STATIC_CLOAKING" value="32" />
      <member name="EOAC_DYNAMIC_CLOAKING" value="64" />
      <member name="EOAC_ANY_AUTHORITY" value="128" />
      <member name="EOAC_MAKE_FULLSIC" value="256" />
      <member name="EOAC_DEFAULT" value="2048" />
      <member name="EOAC_SECURE_REFS" value="2" />
      <member name="EOAC_ACCESS_CONTROL" value="4" />
      <member name="EOAC_APPID" value="8" />
      <member name="EOAC_DYNAMIC" value="16" />
      <member name="EOAC_REQUIRE_FULLSIC" value="512" />
      <member name="EOAC_AUTO_IMPERSONATE" value="1024" />
      <member name="EOAC_NO_CUSTOM_MARSHAL" value="8192" />
      <member name="EOAC_DISABLE_AAA" value="4096" />
    </enum>
    <typedef name="EOLE_AUTHENTICATION_CAPABILITIES">
      <enum name="tagEOLE_AUTHENTICATION_CAPABILITIES" />
    </typedef>
    <struct name="tagSOLE_AUTHENTICATION_INFO">
      <field offset="0" name="dwAuthnSvc">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwAuthzSvc">
        <type>DWORD</type>
      </field>
      <field offset="8" name="pAuthInfo">
        <ptr>
          <void />
        </ptr>
      </field>
    </struct>
    <typedef name="SOLE_AUTHENTICATION_INFO">
      <struct name="tagSOLE_AUTHENTICATION_INFO" />
    </typedef>
    <typedef name="PSOLE_AUTHENTICATION_INFO">
      <ptr>
        <struct name="tagSOLE_AUTHENTICATION_INFO" />
      </ptr>
    </typedef>
    <struct name="tagSOLE_AUTHENTICATION_LIST">
      <field offset="0" name="cAuthInfo">
        <type>DWORD</type>
      </field>
      <field offset="4" name="aAuthInfo">
        <ptr>
          <type>SOLE_AUTHENTICATION_INFO</type>
        </ptr>
      </field>
    </struct>
    <typedef name="SOLE_AUTHENTICATION_LIST">
      <struct name="tagSOLE_AUTHENTICATION_LIST" />
    </typedef>
    <typedef name="PSOLE_AUTHENTICATION_LIST">
      <ptr>
        <struct name="tagSOLE_AUTHENTICATION_LIST" />
      </ptr>
    </typedef>
    <struct name="IClientSecurityVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IClientSecurity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IClientSecurity</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IClientSecurity</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="QueryBlanket">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IClientSecurity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pProxy">
              <ptr>
                <type>IUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pAuthnSvc">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pAuthzSvc">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pServerPrincName">
              <ptr>
                <ptr>
                  <type>OLECHAR</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pAuthnLevel">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pImpLevel">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pAuthInfo">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pCapabilites">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="SetBlanket">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IClientSecurity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pProxy">
              <ptr>
                <type>IUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwAuthnSvc">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwAuthzSvc">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pServerPrincName">
              <ptr>
                <type>OLECHAR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwAuthnLevel">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwImpLevel">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pAuthInfo">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwCapabilities">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="CopyProxy">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IClientSecurity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pProxy">
              <ptr>
                <type>IUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppCopy">
              <ptr>
                <ptr>
                  <type>IUnknown</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IClientSecurityVtbl">
      <struct name="IClientSecurityVtbl" />
    </typedef>
    <struct name="IClientSecurity">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IClientSecurityVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IServerSecurityVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IServerSecurity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IServerSecurity</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IServerSecurity</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="QueryBlanket">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IServerSecurity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pAuthnSvc">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pAuthzSvc">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pServerPrincName">
              <ptr>
                <ptr>
                  <type>OLECHAR</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pAuthnLevel">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pImpLevel">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pPrivs">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pCapabilities">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="ImpersonateClient">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IServerSecurity</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="RevertToSelf">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IServerSecurity</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="IsImpersonating">
        <ptr>
          <fn>
            <return>
              <type>BOOL</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IServerSecurity</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IServerSecurityVtbl">
      <struct name="IServerSecurityVtbl" />
    </typedef>
    <struct name="IServerSecurity">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IServerSecurityVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IClassActivatorVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IClassActivator</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IClassActivator</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IClassActivator</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetClassObject">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IClassActivator</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rclsid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwClassContext">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="locale">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppv">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IClassActivatorVtbl">
      <struct name="IClassActivatorVtbl" />
    </typedef>
    <struct name="IClassActivator">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IClassActivatorVtbl" />
        </ptr>
      </field>
    </struct>
    <enum name="tagRPCOPT_PROPERTIES">
      <member name="COMBND_RPCTIMEOUT" value="1" />
      <member name="COMBND_SERVER_LOCALITY" value="2" />
    </enum>
    <typedef name="RPCOPT_PROPERTIES">
      <enum name="tagRPCOPT_PROPERTIES" />
    </typedef>
    <enum name="tagRPCOPT_SERVER_LOCALITY_VALUES">
      <member name="SERVER_LOCALITY_PROCESS_LOCAL" value="0" />
      <member name="SERVER_LOCALITY_MACHINE_LOCAL" value="1" />
      <member name="SERVER_LOCALITY_REMOTE" value="2" />
    </enum>
    <typedef name="RPCOPT_SERVER_LOCALITY_VALUES">
      <enum name="tagRPCOPT_SERVER_LOCALITY_VALUES" />
    </typedef>
    <struct name="IRpcOptionsVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcOptions</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcOptions</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcOptions</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Set">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcOptions</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pPrx">
              <ptr>
                <type>IUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwProperty">
              <type>RPCOPT_PROPERTIES</type>
              <stack size="4" />
            </arg>
            <arg name="dwValue">
              <type>ULONG_PTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Query">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcOptions</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pPrx">
              <ptr>
                <type>IUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwProperty">
              <type>RPCOPT_PROPERTIES</type>
              <stack size="4" />
            </arg>
            <arg name="pdwValue">
              <ptr>
                <type>ULONG_PTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IRpcOptionsVtbl">
      <struct name="IRpcOptionsVtbl" />
    </typedef>
    <struct name="IRpcOptions">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IRpcOptionsVtbl" />
        </ptr>
      </field>
    </struct>
    <enum name="tagGLOBALOPT_PROPERTIES">
      <member name="COMGLB_EXCEPTION_HANDLING" value="1" />
      <member name="COMGLB_APPID" value="2" />
      <member name="COMGLB_RPC_THREADPOOL_SETTING" value="3" />
    </enum>
    <typedef name="GLOBALOPT_PROPERTIES">
      <enum name="tagGLOBALOPT_PROPERTIES" />
    </typedef>
    <enum name="tagGLOBALOPT_EH_VALUES">
      <member name="COMGLB_EXCEPTION_HANDLE" value="0" />
      <member name="COMGLB_EXCEPTION_DONOT_HANDLE_FATAL" value="1" />
      <member name="COMGLB_EXCEPTION_DONOT_HANDLE" value="1" />
      <member name="COMGLB_EXCEPTION_DONOT_HANDLE_ANY" value="2" />
    </enum>
    <typedef name="GLOBALOPT_EH_VALUES">
      <enum name="tagGLOBALOPT_EH_VALUES" />
    </typedef>
    <enum name="tagGLOBALOPT_RPCTP_VALUES">
      <member name="COMGLB_RPC_THREADPOOL_SETTING_DEFAULT_POOL" value="0" />
      <member name="COMGLB_RPC_THREADPOOL_SETTING_PRIVATE_POOL" value="1" />
    </enum>
    <typedef name="GLOBALOPT_RPCTP_VALUES">
      <enum name="tagGLOBALOPT_RPCTP_VALUES" />
    </typedef>
    <struct name="IGlobalOptionsVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IGlobalOptions</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IGlobalOptions</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IGlobalOptions</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Set">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IGlobalOptions</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwProperty">
              <type>GLOBALOPT_PROPERTIES</type>
              <stack size="4" />
            </arg>
            <arg name="dwValue">
              <type>ULONG_PTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Query">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IGlobalOptions</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwProperty">
              <type>GLOBALOPT_PROPERTIES</type>
              <stack size="4" />
            </arg>
            <arg name="pdwValue">
              <ptr>
                <type>ULONG_PTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IGlobalOptionsVtbl">
      <struct name="IGlobalOptionsVtbl" />
    </typedef>
    <struct name="IGlobalOptions">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IGlobalOptionsVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IFillLockBytesVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IFillLockBytes</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IFillLockBytes</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IFillLockBytes</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="FillAppend">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IFillLockBytes</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pv">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cb">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="pcbWritten">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="FillAt">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IFillLockBytes</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ulOffset">
              <type>ULARGE_INTEGER</type>
              <stack size="8" />
            </arg>
            <arg name="pv">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cb">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="pcbWritten">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="SetFillSize">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IFillLockBytes</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ulSize">
              <type>ULARGE_INTEGER</type>
              <stack size="8" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Terminate">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IFillLockBytes</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="bCanceled">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IFillLockBytesVtbl">
      <struct name="IFillLockBytesVtbl" />
    </typedef>
    <struct name="IFillLockBytes">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IFillLockBytesVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IProgressNotifyVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IProgressNotify</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IProgressNotify</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IProgressNotify</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="OnProgress">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IProgressNotify</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwProgressCurrent">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwProgressMaximum">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="fAccurate">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
            <arg name="fOwner">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IProgressNotifyVtbl">
      <struct name="IProgressNotifyVtbl" />
    </typedef>
    <struct name="IProgressNotify">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IProgressNotifyVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="tagStorageLayout">
      <field offset="0" name="LayoutType">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pwcsElementName">
        <ptr>
          <type>OLECHAR</type>
        </ptr>
      </field>
      <field offset="8" name="cOffset">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="16" name="cBytes">
        <type>LARGE_INTEGER</type>
      </field>
    </struct>
    <typedef name="StorageLayout">
      <struct name="tagStorageLayout" />
    </typedef>
    <struct name="ILayoutStorageVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ILayoutStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ILayoutStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ILayoutStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="LayoutScript">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ILayoutStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pStorageLayout">
              <ptr>
                <type>StorageLayout</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nEntries">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="glfInterleavedFlag">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="BeginMonitor">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ILayoutStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="EndMonitor">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ILayoutStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="ReLayoutDocfile">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ILayoutStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwcsNewDfName">
              <ptr>
                <type>OLECHAR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="ReLayoutDocfileOnILockBytes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ILayoutStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pILockBytes">
              <ptr>
                <type>ILockBytes</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="ILayoutStorageVtbl">
      <struct name="ILayoutStorageVtbl" />
    </typedef>
    <struct name="ILayoutStorage">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="ILayoutStorageVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IBlockingLockVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBlockingLock</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBlockingLock</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBlockingLock</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Lock">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBlockingLock</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwTimeout">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Unlock">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBlockingLock</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IBlockingLockVtbl">
      <struct name="IBlockingLockVtbl" />
    </typedef>
    <struct name="IBlockingLock">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IBlockingLockVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="ITimeAndNoticeControlVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITimeAndNoticeControl</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITimeAndNoticeControl</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITimeAndNoticeControl</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="SuppressChanges">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITimeAndNoticeControl</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="res1">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="res2">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="ITimeAndNoticeControlVtbl">
      <struct name="ITimeAndNoticeControlVtbl" />
    </typedef>
    <struct name="ITimeAndNoticeControl">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="ITimeAndNoticeControlVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IOplockStorageVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOplockStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOplockStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOplockStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="CreateStorageEx">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOplockStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwcsName">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="grfMode">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="stgfmt">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="grfAttrs">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppstgOpen">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="OpenStorageEx">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOplockStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwcsName">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="grfMode">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="stgfmt">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="grfAttrs">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppstgOpen">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IOplockStorageVtbl">
      <struct name="IOplockStorageVtbl" />
    </typedef>
    <struct name="IOplockStorage">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IOplockStorageVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPSURROGATE">
      <ptr>
        <type>ISurrogate</type>
      </ptr>
    </typedef>
    <struct name="ISurrogateVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISurrogate</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISurrogate</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISurrogate</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="LoadDllServer">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISurrogate</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="Clsid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="FreeSurrogate">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISurrogate</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="ISurrogateVtbl">
      <struct name="ISurrogateVtbl" />
    </typedef>
    <struct name="ISurrogate">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="ISurrogateVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPGLOBALINTERFACETABLE">
      <ptr>
        <type>IGlobalInterfaceTable</type>
      </ptr>
    </typedef>
    <struct name="IGlobalInterfaceTableVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IGlobalInterfaceTable</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IGlobalInterfaceTable</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IGlobalInterfaceTable</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="RegisterInterfaceInGlobal">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IGlobalInterfaceTable</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pUnk">
              <ptr>
                <type>IUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwCookie">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="RevokeInterfaceFromGlobal">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IGlobalInterfaceTable</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwCookie">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetInterfaceFromGlobal">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IGlobalInterfaceTable</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwCookie">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppv">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IGlobalInterfaceTableVtbl">
      <struct name="IGlobalInterfaceTableVtbl" />
    </typedef>
    <struct name="IGlobalInterfaceTable">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IGlobalInterfaceTableVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IDirectWriterLockVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDirectWriterLock</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDirectWriterLock</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDirectWriterLock</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="WaitForWriteAccess">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDirectWriterLock</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwTimeout">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="ReleaseWriteAccess">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDirectWriterLock</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="HaveWriteAccess">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDirectWriterLock</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IDirectWriterLockVtbl">
      <struct name="IDirectWriterLockVtbl" />
    </typedef>
    <struct name="IDirectWriterLock">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IDirectWriterLockVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="ISynchronizeVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISynchronize</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISynchronize</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISynchronize</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Wait">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISynchronize</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwMilliseconds">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Signal">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISynchronize</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="Reset">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISynchronize</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="ISynchronizeVtbl">
      <struct name="ISynchronizeVtbl" />
    </typedef>
    <struct name="ISynchronize">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="ISynchronizeVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="ISynchronizeHandleVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISynchronizeHandle</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISynchronizeHandle</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISynchronizeHandle</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetHandle">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISynchronizeHandle</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ph">
              <ptr>
                <type>HANDLE</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="ISynchronizeHandleVtbl">
      <struct name="ISynchronizeHandleVtbl" />
    </typedef>
    <struct name="ISynchronizeHandle">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="ISynchronizeHandleVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="ISynchronizeEventVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISynchronizeEvent</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISynchronizeEvent</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISynchronizeEvent</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetHandle">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISynchronizeEvent</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ph">
              <ptr>
                <type>HANDLE</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="SetEventHandle">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISynchronizeEvent</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ph">
              <ptr>
                <type>HANDLE</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="ISynchronizeEventVtbl">
      <struct name="ISynchronizeEventVtbl" />
    </typedef>
    <struct name="ISynchronizeEvent">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="ISynchronizeEventVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="ISynchronizeContainerVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISynchronizeContainer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISynchronizeContainer</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISynchronizeContainer</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="AddSynchronize">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISynchronizeContainer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pSync">
              <ptr>
                <type>ISynchronize</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="WaitMultiple">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISynchronizeContainer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwTimeOut">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="ppSync">
              <ptr>
                <ptr>
                  <type>ISynchronize</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="ISynchronizeContainerVtbl">
      <struct name="ISynchronizeContainerVtbl" />
    </typedef>
    <struct name="ISynchronizeContainer">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="ISynchronizeContainerVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="ISynchronizeMutexVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISynchronizeMutex</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISynchronizeMutex</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISynchronizeMutex</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Wait">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISynchronizeMutex</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwMilliseconds">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Signal">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISynchronizeMutex</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="Reset">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISynchronizeMutex</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="ReleaseMutex">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISynchronizeMutex</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="ISynchronizeMutexVtbl">
      <struct name="ISynchronizeMutexVtbl" />
    </typedef>
    <struct name="ISynchronizeMutex">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="ISynchronizeMutexVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPCANCELMETHODCALLS">
      <ptr>
        <type>ICancelMethodCalls</type>
      </ptr>
    </typedef>
    <struct name="ICancelMethodCallsVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICancelMethodCalls</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICancelMethodCalls</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICancelMethodCalls</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Cancel">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICancelMethodCalls</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ulSeconds">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="TestCancel">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICancelMethodCalls</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="ICancelMethodCallsVtbl">
      <struct name="ICancelMethodCallsVtbl" />
    </typedef>
    <struct name="ICancelMethodCalls">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="ICancelMethodCallsVtbl" />
        </ptr>
      </field>
    </struct>
    <enum name="tagDCOM_CALL_STATE">
      <member name="DCOM_NONE" value="0" />
      <member name="DCOM_CALL_COMPLETE" value="1" />
      <member name="DCOM_CALL_CANCELED" value="2" />
    </enum>
    <typedef name="DCOM_CALL_STATE">
      <enum name="tagDCOM_CALL_STATE" />
    </typedef>
    <struct name="IAsyncManagerVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAsyncManager</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAsyncManager</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAsyncManager</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="CompleteCall">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAsyncManager</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="Result">
              <type>HRESULT</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetCallContext">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAsyncManager</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pInterface">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetState">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAsyncManager</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pulStateFlags">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IAsyncManagerVtbl">
      <struct name="IAsyncManagerVtbl" />
    </typedef>
    <struct name="IAsyncManager">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IAsyncManagerVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="ICallFactoryVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICallFactory</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICallFactory</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICallFactory</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="CreateCall">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICallFactory</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pCtrlUnk">
              <ptr>
                <type>IUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid2">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppv">
              <ptr>
                <ptr>
                  <type>IUnknown</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="ICallFactoryVtbl">
      <struct name="ICallFactoryVtbl" />
    </typedef>
    <struct name="ICallFactory">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="ICallFactoryVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IRpcHelperVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcHelper</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcHelper</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcHelper</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetDCOMProtocolVersion">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcHelper</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pComVersion">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetIIDFromOBJREF">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRpcHelper</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pObjRef">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="piid">
              <ptr>
                <ptr>
                  <type>IID</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IRpcHelperVtbl">
      <struct name="IRpcHelperVtbl" />
    </typedef>
    <struct name="IRpcHelper">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IRpcHelperVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IReleaseMarshalBuffersVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IReleaseMarshalBuffers</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IReleaseMarshalBuffers</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IReleaseMarshalBuffers</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="ReleaseMarshalBuffer">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IReleaseMarshalBuffers</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pMsg">
              <ptr>
                <type>RPCOLEMESSAGE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pChnl">
              <ptr>
                <type>IUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IReleaseMarshalBuffersVtbl">
      <struct name="IReleaseMarshalBuffersVtbl" />
    </typedef>
    <struct name="IReleaseMarshalBuffers">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IReleaseMarshalBuffersVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IWaitMultipleVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IWaitMultiple</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IWaitMultiple</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IWaitMultiple</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="WaitMultiple">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IWaitMultiple</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="timeout">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pSync">
              <ptr>
                <ptr>
                  <type>ISynchronize</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="AddSynchronize">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IWaitMultiple</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pSync">
              <ptr>
                <type>ISynchronize</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IWaitMultipleVtbl">
      <struct name="IWaitMultipleVtbl" />
    </typedef>
    <struct name="IWaitMultiple">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IWaitMultipleVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IUrlMonVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUrlMon</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUrlMon</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUrlMon</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="AsyncGetClassBits">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUrlMon</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rclsid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pszTYPE">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="pszExt">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="dwFileVersionMS">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwFileVersionLS">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pszCodeBase">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="pbc">
              <ptr>
                <type>IBindCtx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwClassContext">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="flags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IUrlMonVtbl">
      <struct name="IUrlMonVtbl" />
    </typedef>
    <struct name="IUrlMon">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IUrlMonVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IForegroundTransferVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IForegroundTransfer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IForegroundTransfer</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IForegroundTransfer</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="AllowForegroundTransfer">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IForegroundTransfer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lpvReserved">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IForegroundTransferVtbl">
      <struct name="IForegroundTransferVtbl" />
    </typedef>
    <struct name="IForegroundTransfer">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IForegroundTransferVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPADDRTRACKINGCONTROL">
      <ptr>
        <type>IAddrTrackingControl</type>
      </ptr>
    </typedef>
    <struct name="IAddrTrackingControlVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAddrTrackingControl</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAddrTrackingControl</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAddrTrackingControl</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="EnableCOMDynamicAddrTracking">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAddrTrackingControl</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="DisableCOMDynamicAddrTracking">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAddrTrackingControl</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IAddrTrackingControlVtbl">
      <struct name="IAddrTrackingControlVtbl" />
    </typedef>
    <struct name="IAddrTrackingControl">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IAddrTrackingControlVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPADDREXCLUSIONCONTROL">
      <ptr>
        <type>IAddrExclusionControl</type>
      </ptr>
    </typedef>
    <struct name="IAddrExclusionControlVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAddrExclusionControl</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAddrExclusionControl</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAddrExclusionControl</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetCurrentAddrExclusionList">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAddrExclusionControl</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppEnumerator">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="UpdateAddrExclusionList">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAddrExclusionControl</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pEnumerator">
              <ptr>
                <type>IUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IAddrExclusionControlVtbl">
      <struct name="IAddrExclusionControlVtbl" />
    </typedef>
    <struct name="IAddrExclusionControl">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IAddrExclusionControlVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IPipeByteVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPipeByte</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPipeByte</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPipeByte</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Pull">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPipeByte</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="buf">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cRequest">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="pcReturned">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Push">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPipeByte</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="buf">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cSent">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IPipeByteVtbl">
      <struct name="IPipeByteVtbl" />
    </typedef>
    <struct name="IPipeByte">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IPipeByteVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="AsyncIPipeByteVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIPipeByte</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIPipeByte</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIPipeByte</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Begin_Pull">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIPipeByte</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cRequest">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Finish_Pull">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIPipeByte</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="buf">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pcReturned">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="Begin_Push">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIPipeByte</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="buf">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cSent">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Finish_Push">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIPipeByte</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="AsyncIPipeByteVtbl">
      <struct name="AsyncIPipeByteVtbl" />
    </typedef>
    <struct name="AsyncIPipeByte">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="AsyncIPipeByteVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IPipeLongVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPipeLong</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPipeLong</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPipeLong</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Pull">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPipeLong</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="buf">
              <ptr>
                <type>LONG</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cRequest">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="pcReturned">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Push">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPipeLong</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="buf">
              <ptr>
                <type>LONG</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cSent">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IPipeLongVtbl">
      <struct name="IPipeLongVtbl" />
    </typedef>
    <struct name="IPipeLong">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IPipeLongVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="AsyncIPipeLongVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIPipeLong</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIPipeLong</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIPipeLong</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Begin_Pull">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIPipeLong</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cRequest">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Finish_Pull">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIPipeLong</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="buf">
              <ptr>
                <type>LONG</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pcReturned">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="Begin_Push">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIPipeLong</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="buf">
              <ptr>
                <type>LONG</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cSent">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Finish_Push">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIPipeLong</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="AsyncIPipeLongVtbl">
      <struct name="AsyncIPipeLongVtbl" />
    </typedef>
    <struct name="AsyncIPipeLong">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="AsyncIPipeLongVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IPipeDoubleVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPipeDouble</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPipeDouble</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPipeDouble</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Pull">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPipeDouble</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="buf">
              <ptr>
                <type>DOUBLE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cRequest">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="pcReturned">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Push">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPipeDouble</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="buf">
              <ptr>
                <type>DOUBLE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cSent">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IPipeDoubleVtbl">
      <struct name="IPipeDoubleVtbl" />
    </typedef>
    <struct name="IPipeDouble">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IPipeDoubleVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="AsyncIPipeDoubleVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIPipeDouble</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIPipeDouble</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIPipeDouble</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Begin_Pull">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIPipeDouble</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cRequest">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Finish_Pull">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIPipeDouble</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="buf">
              <ptr>
                <type>DOUBLE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pcReturned">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="Begin_Push">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIPipeDouble</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="buf">
              <ptr>
                <type>DOUBLE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cSent">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Finish_Push">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>AsyncIPipeDouble</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="AsyncIPipeDoubleVtbl">
      <struct name="AsyncIPipeDoubleVtbl" />
    </typedef>
    <struct name="AsyncIPipeDouble">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="AsyncIPipeDoubleVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IThumbnailExtractorVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IThumbnailExtractor</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IThumbnailExtractor</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IThumbnailExtractor</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="ExtractThumbnail">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IThumbnailExtractor</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pStg">
              <ptr>
                <type>IStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ulLength">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="ulHeight">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="pulOutputLength">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pulOutputHeight">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="phOutputBitmap">
              <ptr>
                <type>HBITMAP</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="OnFileUpdated">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IThumbnailExtractor</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pStg">
              <ptr>
                <type>IStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IThumbnailExtractorVtbl">
      <struct name="IThumbnailExtractorVtbl" />
    </typedef>
    <struct name="IThumbnailExtractor">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IThumbnailExtractorVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IDummyHICONIncluderVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDummyHICONIncluder</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDummyHICONIncluder</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDummyHICONIncluder</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Dummy">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDummyHICONIncluder</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="h1">
              <type>HICON</type>
              <stack size="4" />
            </arg>
            <arg name="h2">
              <type>HDC</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IDummyHICONIncluderVtbl">
      <struct name="IDummyHICONIncluderVtbl" />
    </typedef>
    <struct name="IDummyHICONIncluder">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IDummyHICONIncluderVtbl" />
        </ptr>
      </field>
    </struct>
    <enum name="tagApplicationType">
      <member name="ServerApplication" value="0" />
      <member name="LibraryApplication" value="1" />
    </enum>
    <typedef name="ApplicationType">
      <enum name="tagApplicationType" />
    </typedef>
    <enum name="tagShutdownType">
      <member name="IdleShutdown" value="0" />
      <member name="ForcedShutdown" value="1" />
    </enum>
    <typedef name="ShutdownType">
      <enum name="tagShutdownType" />
    </typedef>
    <struct name="IProcessLockVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IProcessLock</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IProcessLock</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IProcessLock</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="AddRefOnProcess">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IProcessLock</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="ReleaseRefOnProcess">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IProcessLock</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IProcessLockVtbl">
      <struct name="IProcessLockVtbl" />
    </typedef>
    <struct name="IProcessLock">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IProcessLockVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="ISurrogateServiceVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISurrogateService</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISurrogateService</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISurrogateService</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Init">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISurrogateService</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rguidProcessID">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pProcessLock">
              <ptr>
                <type>IProcessLock</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pfApplicationAware">
              <ptr>
                <type>BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="ApplicationLaunch">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISurrogateService</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rguidApplID">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="appType">
              <type>ApplicationType</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="ApplicationFree">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISurrogateService</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rguidApplID">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="CatalogRefresh">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISurrogateService</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ulReserved">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="ProcessShutdown">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISurrogateService</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="shutdownType">
              <type>ShutdownType</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="ISurrogateServiceVtbl">
      <struct name="ISurrogateServiceVtbl" />
    </typedef>
    <struct name="ISurrogateService">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="ISurrogateServiceVtbl" />
        </ptr>
      </field>
    </struct>
    <enum name="_APTTYPEQUALIFIER">
      <member name="APTTYPEQUALIFIER_NONE" value="0" />
      <member name="APTTYPEQUALIFIER_IMPLICIT_MTA" value="1" />
      <member name="APTTYPEQUALIFIER_NA_ON_MTA" value="2" />
      <member name="APTTYPEQUALIFIER_NA_ON_STA" value="3" />
      <member name="APTTYPEQUALIFIER_NA_ON_IMPLICIT_MTA" value="4" />
      <member name="APTTYPEQUALIFIER_NA_ON_MAINSTA" value="5" />
    </enum>
    <typedef name="APTTYPEQUALIFIER">
      <enum name="_APTTYPEQUALIFIER" />
    </typedef>
    <enum name="_APTTYPE">
      <member name="APTTYPE_CURRENT" value="-1" />
      <member name="APTTYPE_STA" value="0" />
      <member name="APTTYPE_MTA" value="1" />
      <member name="APTTYPE_NA" value="2" />
      <member name="APTTYPE_MAINSTA" value="3" />
    </enum>
    <typedef name="APTTYPE">
      <enum name="_APTTYPE" />
    </typedef>
    <enum name="_THDTYPE">
      <member name="THDTYPE_BLOCKMESSAGES" value="0" />
      <member name="THDTYPE_PROCESSMESSAGES" value="1" />
    </enum>
    <typedef name="THDTYPE">
      <enum name="_THDTYPE" />
    </typedef>
    <typedef name="APARTMENTID">
      <type>DWORD</type>
    </typedef>
    <struct name="IComThreadingInfoVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IComThreadingInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IComThreadingInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IComThreadingInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetCurrentApartmentType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IComThreadingInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pAptType">
              <ptr>
                <type>APTTYPE</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetCurrentThreadType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IComThreadingInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pThreadType">
              <ptr>
                <type>THDTYPE</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetCurrentLogicalThreadId">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IComThreadingInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pguidLogicalThreadId">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="SetCurrentLogicalThreadId">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IComThreadingInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rguid">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IComThreadingInfoVtbl">
      <struct name="IComThreadingInfoVtbl" />
    </typedef>
    <struct name="IComThreadingInfo">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IComThreadingInfoVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IProcessInitControlVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IProcessInitControl</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IProcessInitControl</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IProcessInitControl</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="ResetInitializerTimeout">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IProcessInitControl</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwSecondsRemaining">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IProcessInitControlVtbl">
      <struct name="IProcessInitControlVtbl" />
    </typedef>
    <struct name="IProcessInitControl">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IProcessInitControlVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPINITIALIZESPY">
      <ptr>
        <type>IInitializeSpy</type>
      </ptr>
    </typedef>
    <struct name="IInitializeSpyVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInitializeSpy</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInitializeSpy</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInitializeSpy</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="PreInitialize">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInitializeSpy</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwCoInit">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwCurThreadAptRefs">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="PostInitialize">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInitializeSpy</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="hrCoInit">
              <type>HRESULT</type>
              <stack size="4" />
            </arg>
            <arg name="dwCoInit">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwNewThreadAptRefs">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="PreUninitialize">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInitializeSpy</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwCurThreadAptRefs">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="PostUninitialize">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInitializeSpy</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwNewThreadAptRefs">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IInitializeSpyVtbl">
      <struct name="IInitializeSpyVtbl" />
    </typedef>
    <struct name="IInitializeSpy">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IInitializeSpyVtbl" />
        </ptr>
      </field>
    </struct>
    <enum name="tagCOINIT">
      <member name="COINIT_APARTMENTTHREADED" value="2" />
      <member name="COINIT_MULTITHREADED" value="0" />
      <member name="COINIT_DISABLE_OLE1DDE" value="4" />
      <member name="COINIT_SPEED_OVER_MEMORY" value="8" />
    </enum>
    <typedef name="COINIT">
      <enum name="tagCOINIT" />
    </typedef>
    <enum name="tagCOMSD">
      <member name="SD_LAUNCHPERMISSIONS" value="0" />
      <member name="SD_ACCESSPERMISSIONS" value="1" />
      <member name="SD_LAUNCHRESTRICTIONS" value="2" />
      <member name="SD_ACCESSRESTRICTIONS" value="3" />
    </enum>
    <typedef name="COMSD">
      <enum name="tagCOMSD" />
    </typedef>
    <struct name="tagSOleTlsDataPublic">
      <field offset="0" name="pvReserved0">
        <arr length="2">
          <ptr>
            <void />
          </ptr>
        </arr>
      </field>
      <field offset="8" name="dwReserved0">
        <arr length="3">
          <type>DWORD</type>
        </arr>
      </field>
      <field offset="20" name="pvReserved1">
        <arr length="1">
          <ptr>
            <void />
          </ptr>
        </arr>
      </field>
      <field offset="24" name="dwReserved1">
        <arr length="3">
          <type>DWORD</type>
        </arr>
      </field>
      <field offset="40" name="pvReserved2">
        <arr length="4">
          <ptr>
            <void />
          </ptr>
        </arr>
      </field>
      <field offset="56" name="dwReserved2">
        <arr length="1">
          <type>DWORD</type>
        </arr>
      </field>
      <field offset="60" name="pCurrentCtx">
        <ptr>
          <void />
        </ptr>
      </field>
    </struct>
    <typedef name="SOleTlsDataPublic">
      <struct name="tagSOleTlsDataPublic" />
    </typedef>
    <enum name="tagSTDMSHLFLAGS">
      <member name="SMEXF_SERVER" value="1" />
      <member name="SMEXF_HANDLER" value="2" />
    </enum>
    <typedef name="STDMSHLFLAGS">
      <enum name="tagSTDMSHLFLAGS" />
    </typedef>
    <enum name="tagCOWAIT_FLAGS">
      <member name="COWAIT_WAITALL" value="1" />
      <member name="COWAIT_ALERTABLE" value="2" />
      <member name="COWAIT_INPUTAVAILABLE" value="4" />
    </enum>
    <typedef name="COWAIT_FLAGS">
      <enum name="tagCOWAIT_FLAGS" />
    </typedef>
    <typedef name="LPFNGETCLASSOBJECT">
      <ptr>
        <fn>
          <return>
            <type>HRESULT</type>
            <reg>eax</reg>
          </return>
          <arg>
            <ptr>
              <type>IID</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg>
            <ptr>
              <type>IID</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg>
            <ptr>
              <type>LPVOID</type>
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="LPFNCANUNLOADNOW">
      <ptr>
        <fn>
          <return>
            <type>HRESULT</type>
            <reg>eax</reg>
          </return>
        </fn>
      </ptr>
    </typedef>
    <struct name="tagSTGOPTIONS">
      <field offset="0" name="usVersion">
        <type>USHORT</type>
      </field>
      <field offset="2" name="reserved">
        <type>USHORT</type>
      </field>
      <field offset="4" name="ulSectorSize">
        <type>ULONG</type>
      </field>
      <field offset="8" name="pwcsTemplateFile">
        <ptr>
          <type>WCHAR</type>
        </ptr>
      </field>
    </struct>
    <typedef name="STGOPTIONS">
      <struct name="tagSTGOPTIONS" />
    </typedef>
    <typedef name="IPersistMoniker">
      <struct name="IPersistMoniker" />
    </typedef>
    <typedef name="IMonikerProp">
      <struct name="IMonikerProp" />
    </typedef>
    <typedef name="IBindProtocol">
      <struct name="IBindProtocol" />
    </typedef>
    <typedef name="IBinding">
      <struct name="IBinding" />
    </typedef>
    <typedef name="IBindStatusCallback">
      <struct name="IBindStatusCallback" />
    </typedef>
    <typedef name="IBindStatusCallbackEx">
      <struct name="IBindStatusCallbackEx" />
    </typedef>
    <typedef name="IAuthenticate">
      <struct name="IAuthenticate" />
    </typedef>
    <typedef name="IAuthenticateEx">
      <struct name="IAuthenticateEx" />
    </typedef>
    <typedef name="IHttpNegotiate">
      <struct name="IHttpNegotiate" />
    </typedef>
    <typedef name="IHttpNegotiate2">
      <struct name="IHttpNegotiate2" />
    </typedef>
    <typedef name="IHttpNegotiate3">
      <struct name="IHttpNegotiate3" />
    </typedef>
    <typedef name="IWinInetFileStream">
      <struct name="IWinInetFileStream" />
    </typedef>
    <typedef name="IWindowForBindingUI">
      <struct name="IWindowForBindingUI" />
    </typedef>
    <typedef name="ICodeInstall">
      <struct name="ICodeInstall" />
    </typedef>
    <typedef name="IUri">
      <struct name="IUri" />
    </typedef>
    <typedef name="IUriContainer">
      <struct name="IUriContainer" />
    </typedef>
    <typedef name="IUriBuilder">
      <struct name="IUriBuilder" />
    </typedef>
    <typedef name="IUriBuilderFactory">
      <struct name="IUriBuilderFactory" />
    </typedef>
    <typedef name="IWinInetInfo">
      <struct name="IWinInetInfo" />
    </typedef>
    <typedef name="IHttpSecurity">
      <struct name="IHttpSecurity" />
    </typedef>
    <typedef name="IWinInetHttpInfo">
      <struct name="IWinInetHttpInfo" />
    </typedef>
    <typedef name="IWinInetCacheHints">
      <struct name="IWinInetCacheHints" />
    </typedef>
    <typedef name="IWinInetCacheHints2">
      <struct name="IWinInetCacheHints2" />
    </typedef>
    <typedef name="IBindHost">
      <struct name="IBindHost" />
    </typedef>
    <typedef name="IInternet">
      <struct name="IInternet" />
    </typedef>
    <typedef name="IInternetBindInfo">
      <struct name="IInternetBindInfo" />
    </typedef>
    <typedef name="IInternetBindInfoEx">
      <struct name="IInternetBindInfoEx" />
    </typedef>
    <typedef name="IInternetProtocolRoot">
      <struct name="IInternetProtocolRoot" />
    </typedef>
    <typedef name="IInternetProtocol">
      <struct name="IInternetProtocol" />
    </typedef>
    <typedef name="IInternetProtocolEx">
      <struct name="IInternetProtocolEx" />
    </typedef>
    <typedef name="IInternetProtocolSink">
      <struct name="IInternetProtocolSink" />
    </typedef>
    <typedef name="IInternetProtocolSinkStackable">
      <struct name="IInternetProtocolSinkStackable" />
    </typedef>
    <typedef name="IInternetSession">
      <struct name="IInternetSession" />
    </typedef>
    <typedef name="IInternetThreadSwitch">
      <struct name="IInternetThreadSwitch" />
    </typedef>
    <typedef name="IInternetPriority">
      <struct name="IInternetPriority" />
    </typedef>
    <typedef name="IInternetProtocolInfo">
      <struct name="IInternetProtocolInfo" />
    </typedef>
    <typedef name="IInternetSecurityMgrSite">
      <struct name="IInternetSecurityMgrSite" />
    </typedef>
    <typedef name="IInternetSecurityManager">
      <struct name="IInternetSecurityManager" />
    </typedef>
    <typedef name="IInternetSecurityManagerEx">
      <struct name="IInternetSecurityManagerEx" />
    </typedef>
    <typedef name="IInternetSecurityManagerEx2">
      <struct name="IInternetSecurityManagerEx2" />
    </typedef>
    <typedef name="IZoneIdentifier">
      <struct name="IZoneIdentifier" />
    </typedef>
    <typedef name="IInternetHostSecurityManager">
      <struct name="IInternetHostSecurityManager" />
    </typedef>
    <typedef name="IInternetZoneManager">
      <struct name="IInternetZoneManager" />
    </typedef>
    <typedef name="IInternetZoneManagerEx">
      <struct name="IInternetZoneManagerEx" />
    </typedef>
    <typedef name="IInternetZoneManagerEx2">
      <struct name="IInternetZoneManagerEx2" />
    </typedef>
    <typedef name="ISoftDistExt">
      <struct name="ISoftDistExt" />
    </typedef>
    <typedef name="ICatalogFileInfo">
      <struct name="ICatalogFileInfo" />
    </typedef>
    <typedef name="IDataFilter">
      <struct name="IDataFilter" />
    </typedef>
    <typedef name="IEncodingFilterFactory">
      <struct name="IEncodingFilterFactory" />
    </typedef>
    <typedef name="IWrappedProtocol">
      <struct name="IWrappedProtocol" />
    </typedef>
    <typedef name="IOleAdviseHolder">
      <struct name="IOleAdviseHolder" />
    </typedef>
    <typedef name="IOleCache">
      <struct name="IOleCache" />
    </typedef>
    <typedef name="IOleCache2">
      <struct name="IOleCache2" />
    </typedef>
    <typedef name="IOleCacheControl">
      <struct name="IOleCacheControl" />
    </typedef>
    <typedef name="IParseDisplayName">
      <struct name="IParseDisplayName" />
    </typedef>
    <typedef name="IOleContainer">
      <struct name="IOleContainer" />
    </typedef>
    <typedef name="IOleClientSite">
      <struct name="IOleClientSite" />
    </typedef>
    <typedef name="IOleObject">
      <struct name="IOleObject" />
    </typedef>
    <typedef name="IOleWindow">
      <struct name="IOleWindow" />
    </typedef>
    <typedef name="IOleLink">
      <struct name="IOleLink" />
    </typedef>
    <typedef name="IOleItemContainer">
      <struct name="IOleItemContainer" />
    </typedef>
    <typedef name="IOleInPlaceUIWindow">
      <struct name="IOleInPlaceUIWindow" />
    </typedef>
    <typedef name="IOleInPlaceActiveObject">
      <struct name="IOleInPlaceActiveObject" />
    </typedef>
    <typedef name="IOleInPlaceFrame">
      <struct name="IOleInPlaceFrame" />
    </typedef>
    <typedef name="IOleInPlaceObject">
      <struct name="IOleInPlaceObject" />
    </typedef>
    <typedef name="IOleInPlaceSite">
      <struct name="IOleInPlaceSite" />
    </typedef>
    <typedef name="IContinue">
      <struct name="IContinue" />
    </typedef>
    <typedef name="IViewObject">
      <struct name="IViewObject" />
    </typedef>
    <typedef name="IViewObject2">
      <struct name="IViewObject2" />
    </typedef>
    <typedef name="IDropSource">
      <struct name="IDropSource" />
    </typedef>
    <typedef name="IDropTarget">
      <struct name="IDropTarget" />
    </typedef>
    <typedef name="IDropSourceNotify">
      <struct name="IDropSourceNotify" />
    </typedef>
    <typedef name="IEnumOLEVERB">
      <struct name="IEnumOLEVERB" />
    </typedef>
    <typedef name="LPOLEADVISEHOLDER">
      <ptr>
        <type>IOleAdviseHolder</type>
      </ptr>
    </typedef>
    <struct name="IOleAdviseHolderVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleAdviseHolder</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleAdviseHolder</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleAdviseHolder</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Advise">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleAdviseHolder</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pAdvise">
              <ptr>
                <type>IAdviseSink</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwConnection">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Unadvise">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleAdviseHolder</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwConnection">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="EnumAdvise">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleAdviseHolder</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppenumAdvise">
              <ptr>
                <ptr>
                  <type>IEnumSTATDATA</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="SendOnRename">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleAdviseHolder</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pmk">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="SendOnSave">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleAdviseHolder</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="SendOnClose">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleAdviseHolder</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IOleAdviseHolderVtbl">
      <struct name="IOleAdviseHolderVtbl" />
    </typedef>
    <struct name="IOleAdviseHolder">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IOleAdviseHolderVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPOLECACHE">
      <ptr>
        <type>IOleCache</type>
      </ptr>
    </typedef>
    <struct name="IOleCacheVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleCache</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleCache</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleCache</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Cache">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleCache</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pformatetc">
              <ptr>
                <type>FORMATETC</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="advf">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pdwConnection">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Uncache">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleCache</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwConnection">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="EnumCache">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleCache</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppenumSTATDATA">
              <ptr>
                <ptr>
                  <type>IEnumSTATDATA</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="InitCache">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleCache</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pDataObject">
              <ptr>
                <type>IDataObject</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="SetData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleCache</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pformatetc">
              <ptr>
                <type>FORMATETC</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pmedium">
              <ptr>
                <type>STGMEDIUM</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fRelease">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IOleCacheVtbl">
      <struct name="IOleCacheVtbl" />
    </typedef>
    <struct name="IOleCache">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IOleCacheVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPOLECACHE2">
      <ptr>
        <type>IOleCache2</type>
      </ptr>
    </typedef>
    <enum name="tagDISCARDCACHE">
      <member name="DISCARDCACHE_SAVEIFDIRTY" value="0" />
      <member name="DISCARDCACHE_NOSAVE" value="1" />
    </enum>
    <typedef name="DISCARDCACHE">
      <enum name="tagDISCARDCACHE" />
    </typedef>
    <struct name="IOleCache2Vtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleCache2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleCache2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleCache2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Cache">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleCache2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pformatetc">
              <ptr>
                <type>FORMATETC</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="advf">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pdwConnection">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Uncache">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleCache2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwConnection">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="EnumCache">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleCache2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppenumSTATDATA">
              <ptr>
                <ptr>
                  <type>IEnumSTATDATA</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="InitCache">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleCache2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pDataObject">
              <ptr>
                <type>IDataObject</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="SetData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleCache2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pformatetc">
              <ptr>
                <type>FORMATETC</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pmedium">
              <ptr>
                <type>STGMEDIUM</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fRelease">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="UpdateCache">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleCache2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pDataObject">
              <type>LPDATAOBJECT</type>
              <stack size="4" />
            </arg>
            <arg name="grfUpdf">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pReserved">
              <type>LPVOID</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="DiscardCache">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleCache2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwDiscardOptions">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IOleCache2Vtbl">
      <struct name="IOleCache2Vtbl" />
    </typedef>
    <struct name="IOleCache2">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IOleCache2Vtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPOLECACHECONTROL">
      <ptr>
        <type>IOleCacheControl</type>
      </ptr>
    </typedef>
    <struct name="IOleCacheControlVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleCacheControl</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleCacheControl</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleCacheControl</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="OnRun">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleCacheControl</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pDataObject">
              <type>LPDATAOBJECT</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="OnStop">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleCacheControl</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IOleCacheControlVtbl">
      <struct name="IOleCacheControlVtbl" />
    </typedef>
    <struct name="IOleCacheControl">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IOleCacheControlVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPPARSEDISPLAYNAME">
      <ptr>
        <type>IParseDisplayName</type>
      </ptr>
    </typedef>
    <struct name="IParseDisplayNameVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IParseDisplayName</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IParseDisplayName</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IParseDisplayName</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="ParseDisplayName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IParseDisplayName</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbc">
              <ptr>
                <type>IBindCtx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pszDisplayName">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
            <arg name="pchEaten">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppmkOut">
              <ptr>
                <ptr>
                  <type>IMoniker</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IParseDisplayNameVtbl">
      <struct name="IParseDisplayNameVtbl" />
    </typedef>
    <struct name="IParseDisplayName">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IParseDisplayNameVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPOLECONTAINER">
      <ptr>
        <type>IOleContainer</type>
      </ptr>
    </typedef>
    <struct name="IOleContainerVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleContainer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleContainer</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleContainer</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="ParseDisplayName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleContainer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbc">
              <ptr>
                <type>IBindCtx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pszDisplayName">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
            <arg name="pchEaten">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppmkOut">
              <ptr>
                <ptr>
                  <type>IMoniker</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="EnumObjects">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleContainer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="grfFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="ppenum">
              <ptr>
                <ptr>
                  <type>IEnumUnknown</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="LockContainer">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleContainer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fLock">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IOleContainerVtbl">
      <struct name="IOleContainerVtbl" />
    </typedef>
    <struct name="IOleContainer">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IOleContainerVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPOLECLIENTSITE">
      <ptr>
        <type>IOleClientSite</type>
      </ptr>
    </typedef>
    <struct name="IOleClientSiteVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleClientSite</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleClientSite</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleClientSite</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="SaveObject">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleClientSite</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetMoniker">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleClientSite</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwAssign">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwWhichMoniker">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="ppmk">
              <ptr>
                <ptr>
                  <type>IMoniker</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetContainer">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleClientSite</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppContainer">
              <ptr>
                <ptr>
                  <type>IOleContainer</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="ShowObject">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleClientSite</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="OnShowWindow">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleClientSite</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fShow">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="RequestNewObjectLayout">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleClientSite</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IOleClientSiteVtbl">
      <struct name="IOleClientSiteVtbl" />
    </typedef>
    <struct name="IOleClientSite">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IOleClientSiteVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPOLEOBJECT">
      <ptr>
        <type>IOleObject</type>
      </ptr>
    </typedef>
    <enum name="tagOLEGETMONIKER">
      <member name="OLEGETMONIKER_ONLYIFTHERE" value="1" />
      <member name="OLEGETMONIKER_FORCEASSIGN" value="2" />
      <member name="OLEGETMONIKER_UNASSIGN" value="3" />
      <member name="OLEGETMONIKER_TEMPFORUSER" value="4" />
    </enum>
    <typedef name="OLEGETMONIKER">
      <enum name="tagOLEGETMONIKER" />
    </typedef>
    <enum name="tagOLEWHICHMK">
      <member name="OLEWHICHMK_CONTAINER" value="1" />
      <member name="OLEWHICHMK_OBJREL" value="2" />
      <member name="OLEWHICHMK_OBJFULL" value="3" />
    </enum>
    <typedef name="OLEWHICHMK">
      <enum name="tagOLEWHICHMK" />
    </typedef>
    <enum name="tagUSERCLASSTYPE">
      <member name="USERCLASSTYPE_FULL" value="1" />
      <member name="USERCLASSTYPE_SHORT" value="2" />
      <member name="USERCLASSTYPE_APPNAME" value="3" />
    </enum>
    <typedef name="USERCLASSTYPE">
      <enum name="tagUSERCLASSTYPE" />
    </typedef>
    <enum name="tagOLEMISC">
      <member name="OLEMISC_RECOMPOSEONRESIZE" value="1" />
      <member name="OLEMISC_ONLYICONIC" value="2" />
      <member name="OLEMISC_INSERTNOTREPLACE" value="4" />
      <member name="OLEMISC_STATIC" value="8" />
      <member name="OLEMISC_CANTLINKINSIDE" value="16" />
      <member name="OLEMISC_CANLINKBYOLE1" value="32" />
      <member name="OLEMISC_ISLINKOBJECT" value="64" />
      <member name="OLEMISC_INSIDEOUT" value="128" />
      <member name="OLEMISC_ACTIVATEWHENVISIBLE" value="256" />
      <member name="OLEMISC_RENDERINGISDEVICEINDEPENDENT" value="512" />
      <member name="OLEMISC_INVISIBLEATRUNTIME" value="1024" />
      <member name="OLEMISC_ALWAYSRUN" value="2048" />
      <member name="OLEMISC_ACTSLIKEBUTTON" value="4096" />
      <member name="OLEMISC_ACTSLIKELABEL" value="8192" />
      <member name="OLEMISC_NOUIACTIVATE" value="16384" />
      <member name="OLEMISC_ALIGNABLE" value="32768" />
      <member name="OLEMISC_SIMPLEFRAME" value="65536" />
      <member name="OLEMISC_SETCLIENTSITEFIRST" value="131072" />
      <member name="OLEMISC_IMEMODE" value="262144" />
      <member name="OLEMISC_IGNOREACTIVATEWHENVISIBLE" value="524288" />
      <member name="OLEMISC_WANTSTOMENUMERGE" value="1048576" />
      <member name="OLEMISC_SUPPORTSMULTILEVELUNDO" value="2097152" />
    </enum>
    <typedef name="OLEMISC">
      <enum name="tagOLEMISC" />
    </typedef>
    <enum name="tagOLECLOSE">
      <member name="OLECLOSE_SAVEIFDIRTY" value="0" />
      <member name="OLECLOSE_NOSAVE" value="1" />
      <member name="OLECLOSE_PROMPTSAVE" value="2" />
    </enum>
    <typedef name="OLECLOSE">
      <enum name="tagOLECLOSE" />
    </typedef>
    <struct name="IOleObjectVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleObject</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleObject</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="SetClientSite">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pClientSite">
              <ptr>
                <type>IOleClientSite</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetClientSite">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppClientSite">
              <ptr>
                <ptr>
                  <type>IOleClientSite</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="SetHostNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="szContainerApp">
              <type>LPCOLESTR</type>
              <stack size="4" />
            </arg>
            <arg name="szContainerObj">
              <type>LPCOLESTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Close">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwSaveOption">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="SetMoniker">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwWhichMoniker">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pmk">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="GetMoniker">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwAssign">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwWhichMoniker">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="ppmk">
              <ptr>
                <ptr>
                  <type>IMoniker</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="InitFromData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pDataObject">
              <ptr>
                <type>IDataObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fCreation">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="GetClipboardData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="ppDataObject">
              <ptr>
                <ptr>
                  <type>IDataObject</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="DoVerb">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="iVerb">
              <type>LONG</type>
              <stack size="4" />
            </arg>
            <arg name="lpmsg">
              <type>LPMSG</type>
              <stack size="4" />
            </arg>
            <arg name="pActiveSite">
              <ptr>
                <type>IOleClientSite</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lindex">
              <type>LONG</type>
              <stack size="4" />
            </arg>
            <arg name="hwndParent">
              <type>HWND</type>
              <stack size="4" />
            </arg>
            <arg name="lprcPosRect">
              <type>LPCRECT</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="EnumVerbs">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppEnumOleVerb">
              <ptr>
                <ptr>
                  <type>IEnumOLEVERB</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="Update">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleObject</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="IsUpToDate">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleObject</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="60" name="GetUserClassID">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pClsid">
              <ptr>
                <type>CLSID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="64" name="GetUserType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwFormOfType">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pszUserType">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="68" name="SetExtent">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwDrawAspect">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="psizel">
              <ptr>
                <type>SIZEL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="72" name="GetExtent">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwDrawAspect">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="psizel">
              <ptr>
                <type>SIZEL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="76" name="Advise">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pAdvSink">
              <ptr>
                <type>IAdviseSink</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwConnection">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="80" name="Unadvise">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwConnection">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="84" name="EnumAdvise">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppenumAdvise">
              <ptr>
                <ptr>
                  <type>IEnumSTATDATA</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="88" name="GetMiscStatus">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwAspect">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pdwStatus">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="92" name="SetColorScheme">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pLogpal">
              <ptr>
                <type>LOGPALETTE</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IOleObjectVtbl">
      <struct name="IOleObjectVtbl" />
    </typedef>
    <struct name="IOleObject">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IOleObjectVtbl" />
        </ptr>
      </field>
    </struct>
    <enum name="tagOLERENDER">
      <member name="OLERENDER_NONE" value="0" />
      <member name="OLERENDER_DRAW" value="1" />
      <member name="OLERENDER_FORMAT" value="2" />
      <member name="OLERENDER_ASIS" value="3" />
    </enum>
    <typedef name="OLERENDER">
      <enum name="tagOLERENDER" />
    </typedef>
    <typedef name="LPOLERENDER">
      <ptr>
        <type>OLERENDER</type>
      </ptr>
    </typedef>
    <struct name="tagOBJECTDESCRIPTOR">
      <field offset="0" name="cbSize">
        <type>ULONG</type>
      </field>
      <field offset="8" name="clsid">
        <type>CLSID</type>
      </field>
      <field offset="24" name="dwDrawAspect">
        <type>DWORD</type>
      </field>
      <field offset="32" name="sizel">
        <type>SIZEL</type>
      </field>
      <field offset="40" name="pointl">
        <type>POINTL</type>
      </field>
      <field offset="48" name="dwStatus">
        <type>DWORD</type>
      </field>
      <field offset="52" name="dwFullUserTypeName">
        <type>DWORD</type>
      </field>
      <field offset="56" name="dwSrcOfCopy">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="OBJECTDESCRIPTOR">
      <struct name="tagOBJECTDESCRIPTOR" />
    </typedef>
    <typedef name="POBJECTDESCRIPTOR">
      <ptr>
        <struct name="tagOBJECTDESCRIPTOR" />
      </ptr>
    </typedef>
    <typedef name="LPOBJECTDESCRIPTOR">
      <ptr>
        <struct name="tagOBJECTDESCRIPTOR" />
      </ptr>
    </typedef>
    <typedef name="LINKSRCDESCRIPTOR">
      <struct name="tagOBJECTDESCRIPTOR" />
    </typedef>
    <typedef name="PLINKSRCDESCRIPTOR">
      <ptr>
        <struct name="tagOBJECTDESCRIPTOR" />
      </ptr>
    </typedef>
    <typedef name="LPLINKSRCDESCRIPTOR">
      <ptr>
        <struct name="tagOBJECTDESCRIPTOR" />
      </ptr>
    </typedef>
    <typedef name="LPOLEWINDOW">
      <ptr>
        <type>IOleWindow</type>
      </ptr>
    </typedef>
    <struct name="IOleWindowVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleWindow</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleWindow</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleWindow</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetWindow">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleWindow</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="phwnd">
              <ptr>
                <type>HWND</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="ContextSensitiveHelp">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleWindow</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fEnterMode">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IOleWindowVtbl">
      <struct name="IOleWindowVtbl" />
    </typedef>
    <struct name="IOleWindow">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IOleWindowVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPOLELINK">
      <ptr>
        <type>IOleLink</type>
      </ptr>
    </typedef>
    <enum name="tagOLEUPDATE">
      <member name="OLEUPDATE_ALWAYS" value="1" />
      <member name="OLEUPDATE_ONCALL" value="3" />
    </enum>
    <typedef name="OLEUPDATE">
      <enum name="tagOLEUPDATE" />
    </typedef>
    <typedef name="LPOLEUPDATE">
      <ptr>
        <type>OLEUPDATE</type>
      </ptr>
    </typedef>
    <typedef name="POLEUPDATE">
      <ptr>
        <type>OLEUPDATE</type>
      </ptr>
    </typedef>
    <enum name="tagOLELINKBIND">
      <member name="OLELINKBIND_EVENIFCLASSDIFF" value="1" />
    </enum>
    <typedef name="OLELINKBIND">
      <enum name="tagOLELINKBIND" />
    </typedef>
    <struct name="IOleLinkVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleLink</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleLink</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleLink</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="SetUpdateOptions">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleLink</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwUpdateOpt">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetUpdateOptions">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleLink</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwUpdateOpt">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="SetSourceMoniker">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleLink</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pmk">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rclsid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="GetSourceMoniker">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleLink</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppmk">
              <ptr>
                <ptr>
                  <type>IMoniker</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="SetSourceDisplayName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleLink</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pszStatusText">
              <type>LPCOLESTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="GetSourceDisplayName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleLink</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppszDisplayName">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="BindToSource">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleLink</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="bindflags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pbc">
              <ptr>
                <type>IBindCtx</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="BindIfRunning">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleLink</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="GetBoundSource">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleLink</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppunk">
              <ptr>
                <ptr>
                  <type>IUnknown</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="UnbindSource">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleLink</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="Update">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleLink</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbc">
              <ptr>
                <type>IBindCtx</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IOleLinkVtbl">
      <struct name="IOleLinkVtbl" />
    </typedef>
    <struct name="IOleLink">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IOleLinkVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPOLEITEMCONTAINER">
      <ptr>
        <type>IOleItemContainer</type>
      </ptr>
    </typedef>
    <enum name="tagBINDSPEED">
      <member name="BINDSPEED_INDEFINITE" value="1" />
      <member name="BINDSPEED_MODERATE" value="2" />
      <member name="BINDSPEED_IMMEDIATE" value="3" />
    </enum>
    <typedef name="BINDSPEED">
      <enum name="tagBINDSPEED" />
    </typedef>
    <enum name="tagOLECONTF">
      <member name="OLECONTF_EMBEDDINGS" value="1" />
      <member name="OLECONTF_LINKS" value="2" />
      <member name="OLECONTF_OTHERS" value="4" />
      <member name="OLECONTF_ONLYUSER" value="8" />
      <member name="OLECONTF_ONLYIFRUNNING" value="16" />
    </enum>
    <typedef name="OLECONTF">
      <enum name="tagOLECONTF" />
    </typedef>
    <struct name="IOleItemContainerVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleItemContainer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleItemContainer</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleItemContainer</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="ParseDisplayName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleItemContainer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbc">
              <ptr>
                <type>IBindCtx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pszDisplayName">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
            <arg name="pchEaten">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppmkOut">
              <ptr>
                <ptr>
                  <type>IMoniker</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="EnumObjects">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleItemContainer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="grfFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="ppenum">
              <ptr>
                <ptr>
                  <type>IEnumUnknown</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="LockContainer">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleItemContainer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fLock">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="GetObjectA">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleItemContainer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pszItem">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
            <arg name="dwSpeedNeeded">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pbc">
              <ptr>
                <type>IBindCtx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="GetObjectStorage">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleItemContainer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pszItem">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
            <arg name="pbc">
              <ptr>
                <type>IBindCtx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvStorage">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="IsRunning">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleItemContainer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pszItem">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IOleItemContainerVtbl">
      <struct name="IOleItemContainerVtbl" />
    </typedef>
    <struct name="IOleItemContainer">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IOleItemContainerVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPOLEINPLACEUIWINDOW">
      <ptr>
        <type>IOleInPlaceUIWindow</type>
      </ptr>
    </typedef>
    <typedef name="BORDERWIDTHS">
      <type>RECT</type>
    </typedef>
    <typedef name="LPBORDERWIDTHS">
      <type>LPRECT</type>
    </typedef>
    <typedef name="LPCBORDERWIDTHS">
      <type>LPCRECT</type>
    </typedef>
    <struct name="IOleInPlaceUIWindowVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceUIWindow</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceUIWindow</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceUIWindow</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetWindow">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceUIWindow</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="phwnd">
              <ptr>
                <type>HWND</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="ContextSensitiveHelp">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceUIWindow</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fEnterMode">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetBorder">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceUIWindow</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lprectBorder">
              <type>LPRECT</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="RequestBorderSpace">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceUIWindow</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pborderwidths">
              <type>LPCBORDERWIDTHS</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="SetBorderSpace">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceUIWindow</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pborderwidths">
              <type>LPCBORDERWIDTHS</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="SetActiveObject">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceUIWindow</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pActiveObject">
              <ptr>
                <type>IOleInPlaceActiveObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pszObjName">
              <type>LPCOLESTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IOleInPlaceUIWindowVtbl">
      <struct name="IOleInPlaceUIWindowVtbl" />
    </typedef>
    <struct name="IOleInPlaceUIWindow">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IOleInPlaceUIWindowVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPOLEINPLACEACTIVEOBJECT">
      <ptr>
        <type>IOleInPlaceActiveObject</type>
      </ptr>
    </typedef>
    <struct name="IOleInPlaceActiveObjectVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceActiveObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceActiveObject</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceActiveObject</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetWindow">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceActiveObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="phwnd">
              <ptr>
                <type>HWND</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="ContextSensitiveHelp">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceActiveObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fEnterMode">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="TranslateAcceleratorA">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceActiveObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lpmsg">
              <type>LPMSG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="OnFrameWindowActivate">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceActiveObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fActivate">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="OnDocWindowActivate">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceActiveObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fActivate">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="ResizeBorder">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceActiveObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="prcBorder">
              <type>LPCRECT</type>
              <stack size="4" />
            </arg>
            <arg name="pUIWindow">
              <ptr>
                <type>IOleInPlaceUIWindow</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fFrameWindow">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="EnableModeless">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceActiveObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fEnable">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IOleInPlaceActiveObjectVtbl">
      <struct name="IOleInPlaceActiveObjectVtbl" />
    </typedef>
    <struct name="IOleInPlaceActiveObject">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IOleInPlaceActiveObjectVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPOLEINPLACEFRAME">
      <ptr>
        <type>IOleInPlaceFrame</type>
      </ptr>
    </typedef>
    <struct name="tagOIFI">
      <field offset="0" name="cb">
        <type>UINT</type>
      </field>
      <field offset="4" name="fMDIApp">
        <type>BOOL</type>
      </field>
      <field offset="8" name="hwndFrame">
        <type>HWND</type>
      </field>
      <field offset="12" name="haccel">
        <type>HACCEL</type>
      </field>
      <field offset="16" name="cAccelEntries">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="OLEINPLACEFRAMEINFO">
      <struct name="tagOIFI" />
    </typedef>
    <typedef name="LPOLEINPLACEFRAMEINFO">
      <ptr>
        <struct name="tagOIFI" />
      </ptr>
    </typedef>
    <struct name="tagOleMenuGroupWidths">
      <field offset="0" name="width">
        <arr length="6">
          <type>LONG</type>
        </arr>
      </field>
    </struct>
    <typedef name="OLEMENUGROUPWIDTHS">
      <struct name="tagOleMenuGroupWidths" />
    </typedef>
    <typedef name="LPOLEMENUGROUPWIDTHS">
      <ptr>
        <struct name="tagOleMenuGroupWidths" />
      </ptr>
    </typedef>
    <typedef name="HOLEMENU">
      <type>HGLOBAL</type>
    </typedef>
    <struct name="IOleInPlaceFrameVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceFrame</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceFrame</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceFrame</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetWindow">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceFrame</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="phwnd">
              <ptr>
                <type>HWND</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="ContextSensitiveHelp">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceFrame</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fEnterMode">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetBorder">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceFrame</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lprectBorder">
              <type>LPRECT</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="RequestBorderSpace">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceFrame</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pborderwidths">
              <type>LPCBORDERWIDTHS</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="SetBorderSpace">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceFrame</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pborderwidths">
              <type>LPCBORDERWIDTHS</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="SetActiveObject">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceFrame</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pActiveObject">
              <ptr>
                <type>IOleInPlaceActiveObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pszObjName">
              <type>LPCOLESTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="InsertMenus">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceFrame</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="hmenuShared">
              <type>HMENU</type>
              <stack size="4" />
            </arg>
            <arg name="lpMenuWidths">
              <type>LPOLEMENUGROUPWIDTHS</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="SetMenu">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceFrame</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="hmenuShared">
              <type>HMENU</type>
              <stack size="4" />
            </arg>
            <arg name="holemenu">
              <type>HOLEMENU</type>
              <stack size="4" />
            </arg>
            <arg name="hwndActiveObject">
              <type>HWND</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="RemoveMenus">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceFrame</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="hmenuShared">
              <type>HMENU</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="SetStatusText">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceFrame</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pszStatusText">
              <type>LPCOLESTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="EnableModeless">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceFrame</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fEnable">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="TranslateAcceleratorA">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceFrame</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lpmsg">
              <type>LPMSG</type>
              <stack size="4" />
            </arg>
            <arg name="wID">
              <type>WORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IOleInPlaceFrameVtbl">
      <struct name="IOleInPlaceFrameVtbl" />
    </typedef>
    <struct name="IOleInPlaceFrame">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IOleInPlaceFrameVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPOLEINPLACEOBJECT">
      <ptr>
        <type>IOleInPlaceObject</type>
      </ptr>
    </typedef>
    <struct name="IOleInPlaceObjectVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceObject</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceObject</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetWindow">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="phwnd">
              <ptr>
                <type>HWND</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="ContextSensitiveHelp">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fEnterMode">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="InPlaceDeactivate">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceObject</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="UIDeactivate">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceObject</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="SetObjectRects">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lprcPosRect">
              <type>LPCRECT</type>
              <stack size="4" />
            </arg>
            <arg name="lprcClipRect">
              <type>LPCRECT</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="ReactivateAndUndo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceObject</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IOleInPlaceObjectVtbl">
      <struct name="IOleInPlaceObjectVtbl" />
    </typedef>
    <struct name="IOleInPlaceObject">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IOleInPlaceObjectVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPOLEINPLACESITE">
      <ptr>
        <type>IOleInPlaceSite</type>
      </ptr>
    </typedef>
    <struct name="IOleInPlaceSiteVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceSite</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceSite</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceSite</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetWindow">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceSite</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="phwnd">
              <ptr>
                <type>HWND</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="ContextSensitiveHelp">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceSite</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fEnterMode">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="CanInPlaceActivate">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceSite</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="OnInPlaceActivate">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceSite</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="OnUIActivate">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceSite</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="GetWindowContext">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceSite</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppFrame">
              <ptr>
                <ptr>
                  <type>IOleInPlaceFrame</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppDoc">
              <ptr>
                <ptr>
                  <type>IOleInPlaceUIWindow</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lprcPosRect">
              <type>LPRECT</type>
              <stack size="4" />
            </arg>
            <arg name="lprcClipRect">
              <type>LPRECT</type>
              <stack size="4" />
            </arg>
            <arg name="lpFrameInfo">
              <type>LPOLEINPLACEFRAMEINFO</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="Scroll">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceSite</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="scrollExtant">
              <type>SIZE</type>
              <stack size="8" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="OnUIDeactivate">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceSite</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fUndoable">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="OnInPlaceDeactivate">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceSite</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="DiscardUndoState">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceSite</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="DeactivateAndUndo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceSite</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="OnPosRectChange">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IOleInPlaceSite</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lprcPosRect">
              <type>LPCRECT</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IOleInPlaceSiteVtbl">
      <struct name="IOleInPlaceSiteVtbl" />
    </typedef>
    <struct name="IOleInPlaceSite">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IOleInPlaceSiteVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IContinueVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IContinue</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IContinue</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IContinue</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="FContinue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IContinue</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IContinueVtbl">
      <struct name="IContinueVtbl" />
    </typedef>
    <struct name="IContinue">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IContinueVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPVIEWOBJECT">
      <ptr>
        <type>IViewObject</type>
      </ptr>
    </typedef>
    <struct name="IViewObjectVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IViewObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IViewObject</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IViewObject</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Draw">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IViewObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwDrawAspect">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="lindex">
              <type>LONG</type>
              <stack size="4" />
            </arg>
            <arg name="pvAspect">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ptd">
              <ptr>
                <type>DVTARGETDEVICE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="hdcTargetDev">
              <type>HDC</type>
              <stack size="4" />
            </arg>
            <arg name="hdcDraw">
              <type>HDC</type>
              <stack size="4" />
            </arg>
            <arg name="lprcBounds">
              <type>LPCRECTL</type>
              <stack size="4" />
            </arg>
            <arg name="lprcWBounds">
              <type>LPCRECTL</type>
              <stack size="4" />
            </arg>
            <arg name="pfnContinue">
              <ptr>
                <fn>
                  <return>
                    <type>BOOL</type>
                    <reg>eax</reg>
                  </return>
                  <arg name="dwContinue">
                    <type>ULONG_PTR</type>
                    <stack size="4" />
                  </arg>
                </fn>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwContinue">
              <type>ULONG_PTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetColorSet">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IViewObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwDrawAspect">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="lindex">
              <type>LONG</type>
              <stack size="4" />
            </arg>
            <arg name="pvAspect">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ptd">
              <ptr>
                <type>DVTARGETDEVICE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="hicTargetDev">
              <type>HDC</type>
              <stack size="4" />
            </arg>
            <arg name="ppColorSet">
              <ptr>
                <ptr>
                  <type>LOGPALETTE</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="Freeze">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IViewObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwDrawAspect">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="lindex">
              <type>LONG</type>
              <stack size="4" />
            </arg>
            <arg name="pvAspect">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwFreeze">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Unfreeze">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IViewObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwFreeze">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="SetAdvise">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IViewObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="aspects">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="advf">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pAdvSink">
              <ptr>
                <type>IAdviseSink</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="GetAdvise">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IViewObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pAspects">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pAdvf">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppAdvSink">
              <ptr>
                <ptr>
                  <type>IAdviseSink</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IViewObjectVtbl">
      <struct name="IViewObjectVtbl" />
    </typedef>
    <struct name="IViewObject">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IViewObjectVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPVIEWOBJECT2">
      <ptr>
        <type>IViewObject2</type>
      </ptr>
    </typedef>
    <struct name="IViewObject2Vtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IViewObject2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IViewObject2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IViewObject2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Draw">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IViewObject2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwDrawAspect">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="lindex">
              <type>LONG</type>
              <stack size="4" />
            </arg>
            <arg name="pvAspect">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ptd">
              <ptr>
                <type>DVTARGETDEVICE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="hdcTargetDev">
              <type>HDC</type>
              <stack size="4" />
            </arg>
            <arg name="hdcDraw">
              <type>HDC</type>
              <stack size="4" />
            </arg>
            <arg name="lprcBounds">
              <type>LPCRECTL</type>
              <stack size="4" />
            </arg>
            <arg name="lprcWBounds">
              <type>LPCRECTL</type>
              <stack size="4" />
            </arg>
            <arg name="pfnContinue">
              <ptr>
                <fn>
                  <return>
                    <type>BOOL</type>
                    <reg>eax</reg>
                  </return>
                  <arg name="dwContinue">
                    <type>ULONG_PTR</type>
                    <stack size="4" />
                  </arg>
                </fn>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwContinue">
              <type>ULONG_PTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetColorSet">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IViewObject2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwDrawAspect">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="lindex">
              <type>LONG</type>
              <stack size="4" />
            </arg>
            <arg name="pvAspect">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ptd">
              <ptr>
                <type>DVTARGETDEVICE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="hicTargetDev">
              <type>HDC</type>
              <stack size="4" />
            </arg>
            <arg name="ppColorSet">
              <ptr>
                <ptr>
                  <type>LOGPALETTE</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="Freeze">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IViewObject2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwDrawAspect">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="lindex">
              <type>LONG</type>
              <stack size="4" />
            </arg>
            <arg name="pvAspect">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwFreeze">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Unfreeze">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IViewObject2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwFreeze">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="SetAdvise">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IViewObject2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="aspects">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="advf">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pAdvSink">
              <ptr>
                <type>IAdviseSink</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="GetAdvise">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IViewObject2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pAspects">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pAdvf">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppAdvSink">
              <ptr>
                <ptr>
                  <type>IAdviseSink</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="GetExtent">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IViewObject2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwDrawAspect">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="lindex">
              <type>LONG</type>
              <stack size="4" />
            </arg>
            <arg name="ptd">
              <ptr>
                <type>DVTARGETDEVICE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lpsizel">
              <type>LPSIZEL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IViewObject2Vtbl">
      <struct name="IViewObject2Vtbl" />
    </typedef>
    <struct name="IViewObject2">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IViewObject2Vtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPDROPSOURCE">
      <ptr>
        <type>IDropSource</type>
      </ptr>
    </typedef>
    <struct name="IDropSourceVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDropSource</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDropSource</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDropSource</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="QueryContinueDrag">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDropSource</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fEscapePressed">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
            <arg name="grfKeyState">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GiveFeedback">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDropSource</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwEffect">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IDropSourceVtbl">
      <struct name="IDropSourceVtbl" />
    </typedef>
    <struct name="IDropSource">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IDropSourceVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPDROPTARGET">
      <ptr>
        <type>IDropTarget</type>
      </ptr>
    </typedef>
    <struct name="IDropTargetVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDropTarget</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDropTarget</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDropTarget</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="DragEnter">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDropTarget</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pDataObj">
              <ptr>
                <type>IDataObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="grfKeyState">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pt">
              <type>POINTL</type>
              <stack size="8" />
            </arg>
            <arg name="pdwEffect">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="DragOver">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDropTarget</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="grfKeyState">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pt">
              <type>POINTL</type>
              <stack size="8" />
            </arg>
            <arg name="pdwEffect">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="DragLeave">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDropTarget</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Drop">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDropTarget</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pDataObj">
              <ptr>
                <type>IDataObject</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="grfKeyState">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pt">
              <type>POINTL</type>
              <stack size="8" />
            </arg>
            <arg name="pdwEffect">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IDropTargetVtbl">
      <struct name="IDropTargetVtbl" />
    </typedef>
    <struct name="IDropTarget">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IDropTargetVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IDropSourceNotifyVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDropSourceNotify</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDropSourceNotify</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDropSourceNotify</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="DragEnterTarget">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDropSourceNotify</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="hwndTarget">
              <type>HWND</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="DragLeaveTarget">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDropSourceNotify</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IDropSourceNotifyVtbl">
      <struct name="IDropSourceNotifyVtbl" />
    </typedef>
    <struct name="IDropSourceNotify">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IDropSourceNotifyVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPENUMOLEVERB">
      <ptr>
        <type>IEnumOLEVERB</type>
      </ptr>
    </typedef>
    <struct name="tagOLEVERB">
      <field offset="0" name="lVerb">
        <type>LONG</type>
      </field>
      <field offset="4" name="lpszVerbName">
        <type>LPOLESTR</type>
      </field>
      <field offset="8" name="fuFlags">
        <type>DWORD</type>
      </field>
      <field offset="12" name="grfAttribs">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="OLEVERB">
      <struct name="tagOLEVERB" />
    </typedef>
    <typedef name="LPOLEVERB">
      <ptr>
        <struct name="tagOLEVERB" />
      </ptr>
    </typedef>
    <enum name="tagOLEVERBATTRIB">
      <member name="OLEVERBATTRIB_NEVERDIRTIES" value="1" />
      <member name="OLEVERBATTRIB_ONCONTAINERMENU" value="2" />
    </enum>
    <typedef name="OLEVERBATTRIB">
      <enum name="tagOLEVERBATTRIB" />
    </typedef>
    <struct name="IEnumOLEVERBVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumOLEVERB</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumOLEVERB</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumOLEVERB</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Next">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumOLEVERB</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="celt">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="rgelt">
              <type>LPOLEVERB</type>
              <stack size="4" />
            </arg>
            <arg name="pceltFetched">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Skip">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumOLEVERB</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="celt">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="Reset">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumOLEVERB</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Clone">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumOLEVERB</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppenum">
              <ptr>
                <ptr>
                  <type>IEnumOLEVERB</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IEnumOLEVERBVtbl">
      <struct name="IEnumOLEVERBVtbl" />
    </typedef>
    <struct name="IEnumOLEVERB">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IEnumOLEVERBVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="IServiceProvider">
      <struct name="IServiceProvider" />
    </typedef>
    <typedef name="LPSERVICEPROVIDER">
      <ptr>
        <type>IServiceProvider</type>
      </ptr>
    </typedef>
    <struct name="IServiceProviderVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IServiceProvider</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IServiceProvider</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IServiceProvider</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="QueryService">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IServiceProvider</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="guidService">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IServiceProviderVtbl">
      <struct name="IServiceProviderVtbl" />
    </typedef>
    <struct name="IServiceProvider">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IServiceProviderVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="IXMLDOMImplementation">
      <struct name="IXMLDOMImplementation" />
    </typedef>
    <typedef name="IXMLDOMNode">
      <struct name="IXMLDOMNode" />
    </typedef>
    <typedef name="IXMLDOMDocumentFragment">
      <struct name="IXMLDOMDocumentFragment" />
    </typedef>
    <typedef name="IXMLDOMDocument">
      <struct name="IXMLDOMDocument" />
    </typedef>
    <typedef name="IXMLDOMNodeList">
      <struct name="IXMLDOMNodeList" />
    </typedef>
    <typedef name="IXMLDOMNamedNodeMap">
      <struct name="IXMLDOMNamedNodeMap" />
    </typedef>
    <typedef name="IXMLDOMCharacterData">
      <struct name="IXMLDOMCharacterData" />
    </typedef>
    <typedef name="IXMLDOMAttribute">
      <struct name="IXMLDOMAttribute" />
    </typedef>
    <typedef name="IXMLDOMElement">
      <struct name="IXMLDOMElement" />
    </typedef>
    <typedef name="IXMLDOMText">
      <struct name="IXMLDOMText" />
    </typedef>
    <typedef name="IXMLDOMComment">
      <struct name="IXMLDOMComment" />
    </typedef>
    <typedef name="IXMLDOMProcessingInstruction">
      <struct name="IXMLDOMProcessingInstruction" />
    </typedef>
    <typedef name="IXMLDOMCDATASection">
      <struct name="IXMLDOMCDATASection" />
    </typedef>
    <typedef name="IXMLDOMDocumentType">
      <struct name="IXMLDOMDocumentType" />
    </typedef>
    <typedef name="IXMLDOMNotation">
      <struct name="IXMLDOMNotation" />
    </typedef>
    <typedef name="IXMLDOMEntity">
      <struct name="IXMLDOMEntity" />
    </typedef>
    <typedef name="IXMLDOMEntityReference">
      <struct name="IXMLDOMEntityReference" />
    </typedef>
    <typedef name="IXMLDOMParseError">
      <struct name="IXMLDOMParseError" />
    </typedef>
    <typedef name="IXTLRuntime">
      <struct name="IXTLRuntime" />
    </typedef>
    <typedef name="XMLDOMDocumentEvents">
      <struct name="XMLDOMDocumentEvents" />
    </typedef>
    <typedef name="DOMDocument">
      <struct name="DOMDocument" />
    </typedef>
    <typedef name="DOMFreeThreadedDocument">
      <struct name="DOMFreeThreadedDocument" />
    </typedef>
    <typedef name="IXMLHttpRequest">
      <struct name="IXMLHttpRequest" />
    </typedef>
    <typedef name="XMLHTTPRequest">
      <struct name="XMLHTTPRequest" />
    </typedef>
    <typedef name="IXMLDSOControl">
      <struct name="IXMLDSOControl" />
    </typedef>
    <typedef name="XMLDSOControl">
      <struct name="XMLDSOControl" />
    </typedef>
    <typedef name="IXMLElementCollection">
      <struct name="IXMLElementCollection" />
    </typedef>
    <typedef name="IXMLDocument">
      <struct name="IXMLDocument" />
    </typedef>
    <typedef name="IXMLDocument2">
      <struct name="IXMLDocument2" />
    </typedef>
    <typedef name="IXMLElement">
      <struct name="IXMLElement" />
    </typedef>
    <typedef name="IXMLElement2">
      <struct name="IXMLElement2" />
    </typedef>
    <typedef name="IXMLAttribute">
      <struct name="IXMLAttribute" />
    </typedef>
    <typedef name="IXMLError">
      <struct name="IXMLError" />
    </typedef>
    <typedef name="XMLDocument">
      <struct name="XMLDocument" />
    </typedef>
    <typedef name="ICreateTypeInfo">
      <struct name="ICreateTypeInfo" />
    </typedef>
    <typedef name="ICreateTypeInfo2">
      <struct name="ICreateTypeInfo2" />
    </typedef>
    <typedef name="ICreateTypeLib">
      <struct name="ICreateTypeLib" />
    </typedef>
    <typedef name="ICreateTypeLib2">
      <struct name="ICreateTypeLib2" />
    </typedef>
    <typedef name="IDispatch">
      <struct name="IDispatch" />
    </typedef>
    <typedef name="IEnumVARIANT">
      <struct name="IEnumVARIANT" />
    </typedef>
    <typedef name="ITypeComp">
      <struct name="ITypeComp" />
    </typedef>
    <typedef name="ITypeInfo">
      <struct name="ITypeInfo" />
    </typedef>
    <typedef name="ITypeInfo2">
      <struct name="ITypeInfo2" />
    </typedef>
    <typedef name="ITypeLib">
      <struct name="ITypeLib" />
    </typedef>
    <typedef name="ITypeLib2">
      <struct name="ITypeLib2" />
    </typedef>
    <typedef name="ITypeChangeEvents">
      <struct name="ITypeChangeEvents" />
    </typedef>
    <typedef name="IErrorInfo">
      <struct name="IErrorInfo" />
    </typedef>
    <typedef name="ICreateErrorInfo">
      <struct name="ICreateErrorInfo" />
    </typedef>
    <typedef name="ISupportErrorInfo">
      <struct name="ISupportErrorInfo" />
    </typedef>
    <typedef name="ITypeFactory">
      <struct name="ITypeFactory" />
    </typedef>
    <typedef name="ITypeMarshal">
      <struct name="ITypeMarshal" />
    </typedef>
    <typedef name="IRecordInfo">
      <struct name="IRecordInfo" />
    </typedef>
    <typedef name="IErrorLog">
      <struct name="IErrorLog" />
    </typedef>
    <typedef name="IPropertyBag">
      <struct name="IPropertyBag" />
    </typedef>
    <typedef name="CURRENCY">
      <type>CY</type>
    </typedef>
    <struct name="tagSAFEARRAYBOUND">
      <field offset="0" name="cElements">
        <type>ULONG</type>
      </field>
      <field offset="4" name="lLbound">
        <type>LONG</type>
      </field>
    </struct>
    <typedef name="SAFEARRAYBOUND">
      <struct name="tagSAFEARRAYBOUND" />
    </typedef>
    <typedef name="LPSAFEARRAYBOUND">
      <ptr>
        <struct name="tagSAFEARRAYBOUND" />
      </ptr>
    </typedef>
    <typedef name="wireVARIANT">
      <ptr>
        <struct name="_wireVARIANT" />
      </ptr>
    </typedef>
    <typedef name="wireBRECORD">
      <ptr>
        <struct name="_wireBRECORD" />
      </ptr>
    </typedef>
    <struct name="_wireSAFEARR_BSTR">
      <field offset="0" name="Size">
        <type>ULONG</type>
      </field>
      <field offset="4" name="aBstr">
        <ptr>
          <type>wireBSTR</type>
        </ptr>
      </field>
    </struct>
    <typedef name="SAFEARR_BSTR">
      <struct name="_wireSAFEARR_BSTR" />
    </typedef>
    <struct name="_wireSAFEARR_UNKNOWN">
      <field offset="0" name="Size">
        <type>ULONG</type>
      </field>
      <field offset="4" name="apUnknown">
        <ptr>
          <ptr>
            <type>IUnknown</type>
          </ptr>
        </ptr>
      </field>
    </struct>
    <typedef name="SAFEARR_UNKNOWN">
      <struct name="_wireSAFEARR_UNKNOWN" />
    </typedef>
    <struct name="_wireSAFEARR_DISPATCH">
      <field offset="0" name="Size">
        <type>ULONG</type>
      </field>
      <field offset="4" name="apDispatch">
        <ptr>
          <ptr>
            <type>IDispatch</type>
          </ptr>
        </ptr>
      </field>
    </struct>
    <typedef name="SAFEARR_DISPATCH">
      <struct name="_wireSAFEARR_DISPATCH" />
    </typedef>
    <struct name="_wireSAFEARR_VARIANT">
      <field offset="0" name="Size">
        <type>ULONG</type>
      </field>
      <field offset="4" name="aVariant">
        <ptr>
          <type>wireVARIANT</type>
        </ptr>
      </field>
    </struct>
    <typedef name="SAFEARR_VARIANT">
      <struct name="_wireSAFEARR_VARIANT" />
    </typedef>
    <struct name="_wireSAFEARR_BRECORD">
      <field offset="0" name="Size">
        <type>ULONG</type>
      </field>
      <field offset="4" name="aRecord">
        <ptr>
          <type>wireBRECORD</type>
        </ptr>
      </field>
    </struct>
    <typedef name="SAFEARR_BRECORD">
      <struct name="_wireSAFEARR_BRECORD" />
    </typedef>
    <struct name="_wireSAFEARR_HAVEIID">
      <field offset="0" name="Size">
        <type>ULONG</type>
      </field>
      <field offset="4" name="apUnknown">
        <ptr>
          <ptr>
            <type>IUnknown</type>
          </ptr>
        </ptr>
      </field>
      <field offset="8" name="iid">
        <type>IID</type>
      </field>
    </struct>
    <typedef name="SAFEARR_HAVEIID">
      <struct name="_wireSAFEARR_HAVEIID" />
    </typedef>
    <enum name="tagSF_TYPE">
      <member name="SF_ERROR" value="10" />
      <member name="SF_I1" value="16" />
      <member name="SF_I2" value="2" />
      <member name="SF_I4" value="3" />
      <member name="SF_I8" value="20" />
      <member name="SF_BSTR" value="8" />
      <member name="SF_UNKNOWN" value="13" />
      <member name="SF_DISPATCH" value="9" />
      <member name="SF_VARIANT" value="12" />
      <member name="SF_RECORD" value="36" />
      <member name="SF_HAVEIID" value="32781" />
    </enum>
    <typedef name="SF_TYPE">
      <enum name="tagSF_TYPE" />
    </typedef>
    <union name="__MIDL_IOleAutomationTypes_0001">
      <alt name="BstrStr">
        <type>SAFEARR_BSTR</type>
      </alt>
      <alt name="UnknownStr">
        <type>SAFEARR_UNKNOWN</type>
      </alt>
      <alt name="DispatchStr">
        <type>SAFEARR_DISPATCH</type>
      </alt>
      <alt name="VariantStr">
        <type>SAFEARR_VARIANT</type>
      </alt>
      <alt name="RecordStr">
        <type>SAFEARR_BRECORD</type>
      </alt>
      <alt name="HaveIidStr">
        <type>SAFEARR_HAVEIID</type>
      </alt>
      <alt name="ByteStr">
        <type>BYTE_SIZEDARR</type>
      </alt>
      <alt name="WordStr">
        <type>WORD_SIZEDARR</type>
      </alt>
      <alt name="LongStr">
        <type>DWORD_SIZEDARR</type>
      </alt>
      <alt name="HyperStr">
        <type>HYPER_SIZEDARR</type>
      </alt>
    </union>
    <struct name="_wireSAFEARRAY_UNION">
      <field offset="0" name="sfType">
        <type>ULONG</type>
      </field>
      <field offset="8" name="u">
        <union name="__MIDL_IOleAutomationTypes_0001" />
      </field>
    </struct>
    <typedef name="SAFEARRAYUNION">
      <struct name="_wireSAFEARRAY_UNION" />
    </typedef>
    <struct name="_wireSAFEARRAY">
      <field offset="0" name="cDims">
        <type>USHORT</type>
      </field>
      <field offset="2" name="fFeatures">
        <type>USHORT</type>
      </field>
      <field offset="4" name="cbElements">
        <type>ULONG</type>
      </field>
      <field offset="8" name="cLocks">
        <type>ULONG</type>
      </field>
      <field offset="16" name="uArrayStructs">
        <type>SAFEARRAYUNION</type>
      </field>
      <field offset="48" name="rgsabound">
        <arr length="1">
          <type>SAFEARRAYBOUND</type>
        </arr>
      </field>
    </struct>
    <typedef name="wireSAFEARRAY">
      <ptr>
        <struct name="_wireSAFEARRAY" />
      </ptr>
    </typedef>
    <typedef name="wirePSAFEARRAY">
      <ptr>
        <type>wireSAFEARRAY</type>
      </ptr>
    </typedef>
    <struct name="tagSAFEARRAY">
      <field offset="0" name="cDims">
        <type>USHORT</type>
      </field>
      <field offset="2" name="fFeatures">
        <type>USHORT</type>
      </field>
      <field offset="4" name="cbElements">
        <type>ULONG</type>
      </field>
      <field offset="8" name="cLocks">
        <type>ULONG</type>
      </field>
      <field offset="12" name="pvData">
        <type>PVOID</type>
      </field>
      <field offset="16" name="rgsabound">
        <arr length="1">
          <type>SAFEARRAYBOUND</type>
        </arr>
      </field>
    </struct>
    <typedef name="SAFEARRAY">
      <struct name="tagSAFEARRAY" />
    </typedef>
    <typedef name="LPSAFEARRAY">
      <ptr>
        <type>SAFEARRAY</type>
      </ptr>
    </typedef>
    <typedef name="VARIANT">
      <struct name="tagVARIANT" />
    </typedef>
    <struct name="struct_178">
      <field offset="0" name="pvRecord">
        <type>PVOID</type>
      </field>
      <field offset="4" name="pRecInfo">
        <ptr>
          <type>IRecordInfo</type>
        </ptr>
      </field>
    </struct>
    <struct name="struct_177">
      <field offset="0" name="vt">
        <type>VARTYPE</type>
      </field>
      <field offset="2" name="wReserved1">
        <type>WORD</type>
      </field>
      <field offset="4" name="wReserved2">
        <type>WORD</type>
      </field>
      <field offset="6" name="wReserved3">
        <type>WORD</type>
      </field>
      <field offset="8">
        <union>
          <alt name="llVal">
            <type>LONGLONG</type>
          </alt>
          <alt name="lVal">
            <type>LONG</type>
          </alt>
          <alt name="bVal">
            <type>BYTE</type>
          </alt>
          <alt name="iVal">
            <type>SHORT</type>
          </alt>
          <alt name="fltVal">
            <type>FLOAT</type>
          </alt>
          <alt name="dblVal">
            <type>DOUBLE</type>
          </alt>
          <alt name="boolVal">
            <type>VARIANT_BOOL</type>
          </alt>
          <alt name="scode">
            <type>SCODE</type>
          </alt>
          <alt name="cyVal">
            <type>CY</type>
          </alt>
          <alt name="date">
            <type>DATE</type>
          </alt>
          <alt name="bstrVal">
            <type>BSTR</type>
          </alt>
          <alt name="punkVal">
            <ptr>
              <type>IUnknown</type>
            </ptr>
          </alt>
          <alt name="pdispVal">
            <ptr>
              <type>IDispatch</type>
            </ptr>
          </alt>
          <alt name="parray">
            <ptr>
              <type>SAFEARRAY</type>
            </ptr>
          </alt>
          <alt name="pbVal">
            <ptr>
              <type>BYTE</type>
            </ptr>
          </alt>
          <alt name="piVal">
            <ptr>
              <type>SHORT</type>
            </ptr>
          </alt>
          <alt name="plVal">
            <ptr>
              <type>LONG</type>
            </ptr>
          </alt>
          <alt name="pllVal">
            <ptr>
              <type>LONGLONG</type>
            </ptr>
          </alt>
          <alt name="pfltVal">
            <ptr>
              <type>FLOAT</type>
            </ptr>
          </alt>
          <alt name="pdblVal">
            <ptr>
              <type>DOUBLE</type>
            </ptr>
          </alt>
          <alt name="pboolVal">
            <ptr>
              <type>VARIANT_BOOL</type>
            </ptr>
          </alt>
          <alt name="pscode">
            <ptr>
              <type>SCODE</type>
            </ptr>
          </alt>
          <alt name="pcyVal">
            <ptr>
              <type>CY</type>
            </ptr>
          </alt>
          <alt name="pdate">
            <ptr>
              <type>DATE</type>
            </ptr>
          </alt>
          <alt name="pbstrVal">
            <ptr>
              <type>BSTR</type>
            </ptr>
          </alt>
          <alt name="ppunkVal">
            <ptr>
              <ptr>
                <type>IUnknown</type>
              </ptr>
            </ptr>
          </alt>
          <alt name="ppdispVal">
            <ptr>
              <ptr>
                <type>IDispatch</type>
              </ptr>
            </ptr>
          </alt>
          <alt name="pparray">
            <ptr>
              <ptr>
                <type>SAFEARRAY</type>
              </ptr>
            </ptr>
          </alt>
          <alt name="pvarVal">
            <ptr>
              <type>VARIANT</type>
            </ptr>
          </alt>
          <alt name="byref">
            <type>PVOID</type>
          </alt>
          <alt name="cVal">
            <type>CHAR</type>
          </alt>
          <alt name="uiVal">
            <type>USHORT</type>
          </alt>
          <alt name="ulVal">
            <type>ULONG</type>
          </alt>
          <alt name="ullVal">
            <type>ULONGLONG</type>
          </alt>
          <alt name="intVal">
            <type>INT</type>
          </alt>
          <alt name="uintVal">
            <type>UINT</type>
          </alt>
          <alt name="pdecVal">
            <ptr>
              <type>DECIMAL</type>
            </ptr>
          </alt>
          <alt name="pcVal">
            <ptr>
              <type>CHAR</type>
            </ptr>
          </alt>
          <alt name="puiVal">
            <ptr>
              <type>USHORT</type>
            </ptr>
          </alt>
          <alt name="pulVal">
            <ptr>
              <type>ULONG</type>
            </ptr>
          </alt>
          <alt name="pullVal">
            <ptr>
              <type>ULONGLONG</type>
            </ptr>
          </alt>
          <alt name="pintVal">
            <ptr>
              <type>INT</type>
            </ptr>
          </alt>
          <alt name="puintVal">
            <ptr>
              <type>UINT</type>
            </ptr>
          </alt>
          <alt>
            <struct name="struct_178" />
          </alt>
        </union>
      </field>
    </struct>
    <struct name="tagVARIANT">
      <field offset="0">
        <union>
          <alt>
            <struct name="struct_177" />
          </alt>
          <alt name="decVal">
            <type>DECIMAL</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="LPVARIANT">
      <ptr>
        <type>VARIANT</type>
      </ptr>
    </typedef>
    <typedef name="VARIANTARG">
      <type>VARIANT</type>
    </typedef>
    <typedef name="LPVARIANTARG">
      <ptr>
        <type>VARIANT</type>
      </ptr>
    </typedef>
    <struct name="_wireBRECORD">
      <field offset="0" name="fFlags">
        <type>ULONG</type>
      </field>
      <field offset="4" name="clSize">
        <type>ULONG</type>
      </field>
      <field offset="8" name="pRecInfo">
        <ptr>
          <type>IRecordInfo</type>
        </ptr>
      </field>
      <field offset="12" name="pRecord">
        <ptr>
          <type>byte</type>
        </ptr>
      </field>
    </struct>
    <struct name="_wireVARIANT">
      <field offset="0" name="clSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="rpcReserved">
        <type>DWORD</type>
      </field>
      <field offset="8" name="vt">
        <type>USHORT</type>
      </field>
      <field offset="10" name="wReserved1">
        <type>USHORT</type>
      </field>
      <field offset="12" name="wReserved2">
        <type>USHORT</type>
      </field>
      <field offset="14" name="wReserved3">
        <type>USHORT</type>
      </field>
      <field offset="16">
        <union>
          <alt name="llVal">
            <type>LONGLONG</type>
          </alt>
          <alt name="lVal">
            <type>LONG</type>
          </alt>
          <alt name="bVal">
            <type>BYTE</type>
          </alt>
          <alt name="iVal">
            <type>SHORT</type>
          </alt>
          <alt name="fltVal">
            <type>FLOAT</type>
          </alt>
          <alt name="dblVal">
            <type>DOUBLE</type>
          </alt>
          <alt name="boolVal">
            <type>VARIANT_BOOL</type>
          </alt>
          <alt name="scode">
            <type>SCODE</type>
          </alt>
          <alt name="cyVal">
            <type>CY</type>
          </alt>
          <alt name="date">
            <type>DATE</type>
          </alt>
          <alt name="bstrVal">
            <type>wireBSTR</type>
          </alt>
          <alt name="punkVal">
            <ptr>
              <type>IUnknown</type>
            </ptr>
          </alt>
          <alt name="pdispVal">
            <ptr>
              <type>IDispatch</type>
            </ptr>
          </alt>
          <alt name="parray">
            <type>wirePSAFEARRAY</type>
          </alt>
          <alt name="brecVal">
            <type>wireBRECORD</type>
          </alt>
          <alt name="pbVal">
            <ptr>
              <type>BYTE</type>
            </ptr>
          </alt>
          <alt name="piVal">
            <ptr>
              <type>SHORT</type>
            </ptr>
          </alt>
          <alt name="plVal">
            <ptr>
              <type>LONG</type>
            </ptr>
          </alt>
          <alt name="pllVal">
            <ptr>
              <type>LONGLONG</type>
            </ptr>
          </alt>
          <alt name="pfltVal">
            <ptr>
              <type>FLOAT</type>
            </ptr>
          </alt>
          <alt name="pdblVal">
            <ptr>
              <type>DOUBLE</type>
            </ptr>
          </alt>
          <alt name="pboolVal">
            <ptr>
              <type>VARIANT_BOOL</type>
            </ptr>
          </alt>
          <alt name="pscode">
            <ptr>
              <type>SCODE</type>
            </ptr>
          </alt>
          <alt name="pcyVal">
            <ptr>
              <type>CY</type>
            </ptr>
          </alt>
          <alt name="pdate">
            <ptr>
              <type>DATE</type>
            </ptr>
          </alt>
          <alt name="pbstrVal">
            <ptr>
              <type>wireBSTR</type>
            </ptr>
          </alt>
          <alt name="ppunkVal">
            <ptr>
              <ptr>
                <type>IUnknown</type>
              </ptr>
            </ptr>
          </alt>
          <alt name="ppdispVal">
            <ptr>
              <ptr>
                <type>IDispatch</type>
              </ptr>
            </ptr>
          </alt>
          <alt name="pparray">
            <ptr>
              <type>wirePSAFEARRAY</type>
            </ptr>
          </alt>
          <alt name="pvarVal">
            <ptr>
              <type>wireVARIANT</type>
            </ptr>
          </alt>
          <alt name="cVal">
            <type>CHAR</type>
          </alt>
          <alt name="uiVal">
            <type>USHORT</type>
          </alt>
          <alt name="ulVal">
            <type>ULONG</type>
          </alt>
          <alt name="ullVal">
            <type>ULONGLONG</type>
          </alt>
          <alt name="intVal">
            <type>INT</type>
          </alt>
          <alt name="uintVal">
            <type>UINT</type>
          </alt>
          <alt name="decVal">
            <type>DECIMAL</type>
          </alt>
          <alt name="pdecVal">
            <ptr>
              <type>DECIMAL</type>
            </ptr>
          </alt>
          <alt name="pcVal">
            <ptr>
              <type>CHAR</type>
            </ptr>
          </alt>
          <alt name="puiVal">
            <ptr>
              <type>USHORT</type>
            </ptr>
          </alt>
          <alt name="pulVal">
            <ptr>
              <type>ULONG</type>
            </ptr>
          </alt>
          <alt name="pullVal">
            <ptr>
              <type>ULONGLONG</type>
            </ptr>
          </alt>
          <alt name="pintVal">
            <ptr>
              <type>INT</type>
            </ptr>
          </alt>
          <alt name="puintVal">
            <ptr>
              <type>UINT</type>
            </ptr>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="DISPID">
      <type>LONG</type>
    </typedef>
    <typedef name="MEMBERID">
      <type>DISPID</type>
    </typedef>
    <typedef name="HREFTYPE">
      <type>DWORD</type>
    </typedef>
    <enum name="tagTYPEKIND">
      <member name="TKIND_ENUM" value="0" />
      <member name="TKIND_RECORD" value="1" />
      <member name="TKIND_MODULE" value="2" />
      <member name="TKIND_INTERFACE" value="3" />
      <member name="TKIND_DISPATCH" value="4" />
      <member name="TKIND_COCLASS" value="5" />
      <member name="TKIND_ALIAS" value="6" />
      <member name="TKIND_UNION" value="7" />
      <member name="TKIND_MAX" value="8" />
    </enum>
    <typedef name="TYPEKIND">
      <enum name="tagTYPEKIND" />
    </typedef>
    <struct name="tagTYPEDESC">
      <field offset="0">
        <union>
          <alt name="lptdesc">
            <ptr>
              <struct name="tagTYPEDESC" />
            </ptr>
          </alt>
          <alt name="lpadesc">
            <ptr>
              <struct name="tagARRAYDESC" />
            </ptr>
          </alt>
          <alt name="hreftype">
            <type>HREFTYPE</type>
          </alt>
        </union>
      </field>
      <field offset="4" name="vt">
        <type>VARTYPE</type>
      </field>
    </struct>
    <typedef name="TYPEDESC">
      <struct name="tagTYPEDESC" />
    </typedef>
    <struct name="tagARRAYDESC">
      <field offset="0" name="tdescElem">
        <type>TYPEDESC</type>
      </field>
      <field offset="6" name="cDims">
        <type>USHORT</type>
      </field>
      <field offset="8" name="rgbounds">
        <arr length="1">
          <type>SAFEARRAYBOUND</type>
        </arr>
      </field>
    </struct>
    <typedef name="ARRAYDESC">
      <struct name="tagARRAYDESC" />
    </typedef>
    <struct name="tagPARAMDESCEX">
      <field offset="0" name="cBytes">
        <type>ULONG</type>
      </field>
      <field offset="8" name="varDefaultValue">
        <type>VARIANTARG</type>
      </field>
    </struct>
    <typedef name="PARAMDESCEX">
      <struct name="tagPARAMDESCEX" />
    </typedef>
    <typedef name="LPPARAMDESCEX">
      <ptr>
        <struct name="tagPARAMDESCEX" />
      </ptr>
    </typedef>
    <struct name="tagPARAMDESC">
      <field offset="0" name="pparamdescex">
        <type>LPPARAMDESCEX</type>
      </field>
      <field offset="4" name="wParamFlags">
        <type>USHORT</type>
      </field>
    </struct>
    <typedef name="PARAMDESC">
      <struct name="tagPARAMDESC" />
    </typedef>
    <typedef name="LPPARAMDESC">
      <ptr>
        <struct name="tagPARAMDESC" />
      </ptr>
    </typedef>
    <struct name="tagIDLDESC">
      <field offset="0" name="dwReserved">
        <type>ULONG_PTR</type>
      </field>
      <field offset="4" name="wIDLFlags">
        <type>USHORT</type>
      </field>
    </struct>
    <typedef name="IDLDESC">
      <struct name="tagIDLDESC" />
    </typedef>
    <typedef name="LPIDLDESC">
      <ptr>
        <struct name="tagIDLDESC" />
      </ptr>
    </typedef>
    <struct name="tagELEMDESC">
      <field offset="0" name="tdesc">
        <type>TYPEDESC</type>
      </field>
      <field offset="6">
        <union>
          <alt name="idldesc">
            <type>IDLDESC</type>
          </alt>
          <alt name="paramdesc">
            <type>PARAMDESC</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="ELEMDESC">
      <struct name="tagELEMDESC" />
    </typedef>
    <typedef name="LPELEMDESC">
      <ptr>
        <struct name="tagELEMDESC" />
      </ptr>
    </typedef>
    <struct name="tagTYPEATTR">
      <field offset="0" name="guid">
        <type>GUID</type>
      </field>
      <field offset="16" name="lcid">
        <type>LCID</type>
      </field>
      <field offset="20" name="dwReserved">
        <type>DWORD</type>
      </field>
      <field offset="24" name="memidConstructor">
        <type>MEMBERID</type>
      </field>
      <field offset="28" name="memidDestructor">
        <type>MEMBERID</type>
      </field>
      <field offset="32" name="lpstrSchema">
        <type>LPOLESTR</type>
      </field>
      <field offset="36" name="cbSizeInstance">
        <type>ULONG</type>
      </field>
      <field offset="40" name="typekind">
        <type>TYPEKIND</type>
      </field>
      <field offset="44" name="cFuncs">
        <type>WORD</type>
      </field>
      <field offset="46" name="cVars">
        <type>WORD</type>
      </field>
      <field offset="48" name="cImplTypes">
        <type>WORD</type>
      </field>
      <field offset="50" name="cbSizeVft">
        <type>WORD</type>
      </field>
      <field offset="52" name="cbAlignment">
        <type>WORD</type>
      </field>
      <field offset="54" name="wTypeFlags">
        <type>WORD</type>
      </field>
      <field offset="56" name="wMajorVerNum">
        <type>WORD</type>
      </field>
      <field offset="58" name="wMinorVerNum">
        <type>WORD</type>
      </field>
      <field offset="60" name="tdescAlias">
        <type>TYPEDESC</type>
      </field>
      <field offset="66" name="idldescType">
        <type>IDLDESC</type>
      </field>
    </struct>
    <typedef name="TYPEATTR">
      <struct name="tagTYPEATTR" />
    </typedef>
    <typedef name="LPTYPEATTR">
      <ptr>
        <struct name="tagTYPEATTR" />
      </ptr>
    </typedef>
    <struct name="tagDISPPARAMS">
      <field offset="0" name="rgvarg">
        <ptr>
          <type>VARIANTARG</type>
        </ptr>
      </field>
      <field offset="4" name="rgdispidNamedArgs">
        <ptr>
          <type>DISPID</type>
        </ptr>
      </field>
      <field offset="8" name="cArgs">
        <type>UINT</type>
      </field>
      <field offset="12" name="cNamedArgs">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="DISPPARAMS">
      <struct name="tagDISPPARAMS" />
    </typedef>
    <struct name="tagEXCEPINFO">
      <field offset="0" name="wCode">
        <type>WORD</type>
      </field>
      <field offset="2" name="wReserved">
        <type>WORD</type>
      </field>
      <field offset="4" name="bstrSource">
        <type>BSTR</type>
      </field>
      <field offset="8" name="bstrDescription">
        <type>BSTR</type>
      </field>
      <field offset="12" name="bstrHelpFile">
        <type>BSTR</type>
      </field>
      <field offset="16" name="dwHelpContext">
        <type>DWORD</type>
      </field>
      <field offset="20" name="pvReserved">
        <type>PVOID</type>
      </field>
      <field offset="24" name="pfnDeferredFillIn">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg>
              <ptr>
                <struct name="tagEXCEPINFO" />
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="scode">
        <type>SCODE</type>
      </field>
    </struct>
    <typedef name="EXCEPINFO">
      <struct name="tagEXCEPINFO" />
    </typedef>
    <typedef name="LPEXCEPINFO">
      <ptr>
        <struct name="tagEXCEPINFO" />
      </ptr>
    </typedef>
    <enum name="tagCALLCONV">
      <member name="CC_FASTCALL" value="0" />
      <member name="CC_CDECL" value="1" />
      <member name="CC_MSCPASCAL" value="2" />
      <member name="CC_PASCAL" value="2" />
      <member name="CC_MACPASCAL" value="3" />
      <member name="CC_STDCALL" value="4" />
      <member name="CC_FPFASTCALL" value="5" />
      <member name="CC_SYSCALL" value="6" />
      <member name="CC_MPWCDECL" value="7" />
      <member name="CC_MPWPASCAL" value="8" />
      <member name="CC_MAX" value="9" />
    </enum>
    <typedef name="CALLCONV">
      <enum name="tagCALLCONV" />
    </typedef>
    <enum name="tagFUNCKIND">
      <member name="FUNC_VIRTUAL" value="0" />
      <member name="FUNC_PUREVIRTUAL" value="1" />
      <member name="FUNC_NONVIRTUAL" value="2" />
      <member name="FUNC_STATIC" value="3" />
      <member name="FUNC_DISPATCH" value="4" />
    </enum>
    <typedef name="FUNCKIND">
      <enum name="tagFUNCKIND" />
    </typedef>
    <enum name="tagINVOKEKIND">
      <member name="INVOKE_FUNC" value="1" />
      <member name="INVOKE_PROPERTYGET" value="2" />
      <member name="INVOKE_PROPERTYPUT" value="4" />
      <member name="INVOKE_PROPERTYPUTREF" value="8" />
    </enum>
    <typedef name="INVOKEKIND">
      <enum name="tagINVOKEKIND" />
    </typedef>
    <struct name="tagFUNCDESC">
      <field offset="0" name="memid">
        <type>MEMBERID</type>
      </field>
      <field offset="4" name="lprgscode">
        <ptr>
          <type>SCODE</type>
        </ptr>
      </field>
      <field offset="8" name="lprgelemdescParam">
        <ptr>
          <type>ELEMDESC</type>
        </ptr>
      </field>
      <field offset="12" name="funckind">
        <type>FUNCKIND</type>
      </field>
      <field offset="16" name="invkind">
        <type>INVOKEKIND</type>
      </field>
      <field offset="20" name="callconv">
        <type>CALLCONV</type>
      </field>
      <field offset="24" name="cParams">
        <type>SHORT</type>
      </field>
      <field offset="26" name="cParamsOpt">
        <type>SHORT</type>
      </field>
      <field offset="28" name="oVft">
        <type>SHORT</type>
      </field>
      <field offset="30" name="cScodes">
        <type>SHORT</type>
      </field>
      <field offset="32" name="elemdescFunc">
        <type>ELEMDESC</type>
      </field>
      <field offset="44" name="wFuncFlags">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="FUNCDESC">
      <struct name="tagFUNCDESC" />
    </typedef>
    <typedef name="LPFUNCDESC">
      <ptr>
        <struct name="tagFUNCDESC" />
      </ptr>
    </typedef>
    <enum name="tagVARKIND">
      <member name="VAR_PERINSTANCE" value="0" />
      <member name="VAR_STATIC" value="1" />
      <member name="VAR_CONST" value="2" />
      <member name="VAR_DISPATCH" value="3" />
    </enum>
    <typedef name="VARKIND">
      <enum name="tagVARKIND" />
    </typedef>
    <struct name="tagVARDESC">
      <field offset="0" name="memid">
        <type>MEMBERID</type>
      </field>
      <field offset="4" name="lpstrSchema">
        <type>LPOLESTR</type>
      </field>
      <field offset="8">
        <union>
          <alt name="oInst">
            <type>ULONG</type>
          </alt>
          <alt name="lpvarValue">
            <ptr>
              <type>VARIANT</type>
            </ptr>
          </alt>
        </union>
      </field>
      <field offset="16" name="elemdescVar">
        <type>ELEMDESC</type>
      </field>
      <field offset="28" name="wVarFlags">
        <type>WORD</type>
      </field>
      <field offset="32" name="varkind">
        <type>VARKIND</type>
      </field>
    </struct>
    <typedef name="VARDESC">
      <struct name="tagVARDESC" />
    </typedef>
    <typedef name="LPVARDESC">
      <ptr>
        <struct name="tagVARDESC" />
      </ptr>
    </typedef>
    <enum name="tagTYPEFLAGS">
      <member name="TYPEFLAG_FAPPOBJECT" value="1" />
      <member name="TYPEFLAG_FCANCREATE" value="2" />
      <member name="TYPEFLAG_FLICENSED" value="4" />
      <member name="TYPEFLAG_FPREDECLID" value="8" />
      <member name="TYPEFLAG_FHIDDEN" value="16" />
      <member name="TYPEFLAG_FCONTROL" value="32" />
      <member name="TYPEFLAG_FDUAL" value="64" />
      <member name="TYPEFLAG_FNONEXTENSIBLE" value="128" />
      <member name="TYPEFLAG_FOLEAUTOMATION" value="256" />
      <member name="TYPEFLAG_FRESTRICTED" value="512" />
      <member name="TYPEFLAG_FAGGREGATABLE" value="1024" />
      <member name="TYPEFLAG_FREPLACEABLE" value="2048" />
      <member name="TYPEFLAG_FDISPATCHABLE" value="4096" />
      <member name="TYPEFLAG_FREVERSEBIND" value="8192" />
      <member name="TYPEFLAG_FPROXY" value="16384" />
    </enum>
    <typedef name="TYPEFLAGS">
      <enum name="tagTYPEFLAGS" />
    </typedef>
    <enum name="tagFUNCFLAGS">
      <member name="FUNCFLAG_FRESTRICTED" value="1" />
      <member name="FUNCFLAG_FSOURCE" value="2" />
      <member name="FUNCFLAG_FBINDABLE" value="4" />
      <member name="FUNCFLAG_FREQUESTEDIT" value="8" />
      <member name="FUNCFLAG_FDISPLAYBIND" value="16" />
      <member name="FUNCFLAG_FDEFAULTBIND" value="32" />
      <member name="FUNCFLAG_FHIDDEN" value="64" />
      <member name="FUNCFLAG_FUSESGETLASTERROR" value="128" />
      <member name="FUNCFLAG_FDEFAULTCOLLELEM" value="256" />
      <member name="FUNCFLAG_FUIDEFAULT" value="512" />
      <member name="FUNCFLAG_FNONBROWSABLE" value="1024" />
      <member name="FUNCFLAG_FREPLACEABLE" value="2048" />
      <member name="FUNCFLAG_FIMMEDIATEBIND" value="4096" />
    </enum>
    <typedef name="FUNCFLAGS">
      <enum name="tagFUNCFLAGS" />
    </typedef>
    <enum name="tagVARFLAGS">
      <member name="VARFLAG_FREADONLY" value="1" />
      <member name="VARFLAG_FSOURCE" value="2" />
      <member name="VARFLAG_FBINDABLE" value="4" />
      <member name="VARFLAG_FREQUESTEDIT" value="8" />
      <member name="VARFLAG_FDISPLAYBIND" value="16" />
      <member name="VARFLAG_FDEFAULTBIND" value="32" />
      <member name="VARFLAG_FHIDDEN" value="64" />
      <member name="VARFLAG_FRESTRICTED" value="128" />
      <member name="VARFLAG_FDEFAULTCOLLELEM" value="256" />
      <member name="VARFLAG_FUIDEFAULT" value="512" />
      <member name="VARFLAG_FNONBROWSABLE" value="1024" />
      <member name="VARFLAG_FREPLACEABLE" value="2048" />
      <member name="VARFLAG_FIMMEDIATEBIND" value="4096" />
    </enum>
    <typedef name="VARFLAGS">
      <enum name="tagVARFLAGS" />
    </typedef>
    <struct name="tagCLEANLOCALSTORAGE">
      <field offset="0" name="pInterface">
        <ptr>
          <type>IUnknown</type>
        </ptr>
      </field>
      <field offset="4" name="pStorage">
        <type>PVOID</type>
      </field>
      <field offset="8" name="flags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CLEANLOCALSTORAGE">
      <struct name="tagCLEANLOCALSTORAGE" />
    </typedef>
    <struct name="tagCUSTDATAITEM">
      <field offset="0" name="guid">
        <type>GUID</type>
      </field>
      <field offset="16" name="varValue">
        <type>VARIANTARG</type>
      </field>
    </struct>
    <typedef name="CUSTDATAITEM">
      <struct name="tagCUSTDATAITEM" />
    </typedef>
    <typedef name="LPCUSTDATAITEM">
      <ptr>
        <struct name="tagCUSTDATAITEM" />
      </ptr>
    </typedef>
    <struct name="tagCUSTDATA">
      <field offset="0" name="cCustData">
        <type>DWORD</type>
      </field>
      <field offset="4" name="prgCustData">
        <type>LPCUSTDATAITEM</type>
      </field>
    </struct>
    <typedef name="CUSTDATA">
      <struct name="tagCUSTDATA" />
    </typedef>
    <typedef name="LPCUSTDATA">
      <ptr>
        <struct name="tagCUSTDATA" />
      </ptr>
    </typedef>
    <typedef name="LPCREATETYPEINFO">
      <ptr>
        <type>ICreateTypeInfo</type>
      </ptr>
    </typedef>
    <struct name="ICreateTypeInfoVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="SetGuid">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="guid">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="SetTypeFlags">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="uTypeFlags">
              <type>UINT</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="SetDocString">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pStrDoc">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="SetHelpContext">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwHelpContext">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="SetVersion">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="wMajorVerNum">
              <type>WORD</type>
              <stack size="4" />
            </arg>
            <arg name="wMinorVerNum">
              <type>WORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="AddRefTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pTInfo">
              <ptr>
                <type>ITypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="phRefType">
              <ptr>
                <type>HREFTYPE</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="AddFuncDesc">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="pFuncDesc">
              <ptr>
                <type>FUNCDESC</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="AddImplType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="hRefType">
              <type>HREFTYPE</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="SetImplTypeFlags">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="implTypeFlags">
              <type>INT</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="SetAlignment">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbAlignment">
              <type>WORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="SetSchema">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pStrSchema">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="AddVarDesc">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="pVarDesc">
              <ptr>
                <type>VARDESC</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="60" name="SetFuncAndParamNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="rgszNames">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cNames">
              <type>UINT</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="64" name="SetVarName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="szName">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="68" name="SetTypeDescAlias">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pTDescAlias">
              <ptr>
                <type>TYPEDESC</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="72" name="DefineFuncAsDllEntry">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="szDllName">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
            <arg name="szProcName">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="76" name="SetFuncDocString">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="szDocString">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="80" name="SetVarDocString">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="szDocString">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="84" name="SetFuncHelpContext">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="dwHelpContext">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="88" name="SetVarHelpContext">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="dwHelpContext">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="92" name="SetMops">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="bstrMops">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="96" name="SetTypeIdldesc">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pIdlDesc">
              <ptr>
                <type>IDLDESC</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="100" name="LayOut">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="ICreateTypeInfoVtbl">
      <struct name="ICreateTypeInfoVtbl" />
    </typedef>
    <struct name="ICreateTypeInfo">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="ICreateTypeInfoVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPCREATETYPEINFO2">
      <ptr>
        <type>ICreateTypeInfo2</type>
      </ptr>
    </typedef>
    <struct name="ICreateTypeInfo2Vtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="SetGuid">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="guid">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="SetTypeFlags">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="uTypeFlags">
              <type>UINT</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="SetDocString">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pStrDoc">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="SetHelpContext">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwHelpContext">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="SetVersion">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="wMajorVerNum">
              <type>WORD</type>
              <stack size="4" />
            </arg>
            <arg name="wMinorVerNum">
              <type>WORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="AddRefTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pTInfo">
              <ptr>
                <type>ITypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="phRefType">
              <ptr>
                <type>HREFTYPE</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="AddFuncDesc">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="pFuncDesc">
              <ptr>
                <type>FUNCDESC</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="AddImplType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="hRefType">
              <type>HREFTYPE</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="SetImplTypeFlags">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="implTypeFlags">
              <type>INT</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="SetAlignment">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbAlignment">
              <type>WORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="SetSchema">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pStrSchema">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="AddVarDesc">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="pVarDesc">
              <ptr>
                <type>VARDESC</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="60" name="SetFuncAndParamNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="rgszNames">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cNames">
              <type>UINT</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="64" name="SetVarName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="szName">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="68" name="SetTypeDescAlias">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pTDescAlias">
              <ptr>
                <type>TYPEDESC</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="72" name="DefineFuncAsDllEntry">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="szDllName">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
            <arg name="szProcName">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="76" name="SetFuncDocString">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="szDocString">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="80" name="SetVarDocString">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="szDocString">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="84" name="SetFuncHelpContext">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="dwHelpContext">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="88" name="SetVarHelpContext">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="dwHelpContext">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="92" name="SetMops">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="bstrMops">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="96" name="SetTypeIdldesc">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pIdlDesc">
              <ptr>
                <type>IDLDESC</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="100" name="LayOut">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="104" name="DeleteFuncDesc">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="108" name="DeleteFuncDescByMemId">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="memid">
              <type>MEMBERID</type>
              <stack size="4" />
            </arg>
            <arg name="invKind">
              <type>INVOKEKIND</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="112" name="DeleteVarDesc">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="116" name="DeleteVarDescByMemId">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="memid">
              <type>MEMBERID</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="120" name="DeleteImplType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="124" name="SetCustData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="guid">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarVal">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="128" name="SetFuncCustData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="guid">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarVal">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="132" name="SetParamCustData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="indexFunc">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="indexParam">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="guid">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarVal">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="136" name="SetVarCustData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="guid">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarVal">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="140" name="SetImplTypeCustData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="guid">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarVal">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="144" name="SetHelpStringContext">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwHelpStringContext">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="148" name="SetFuncHelpStringContext">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="dwHelpStringContext">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="152" name="SetVarHelpStringContext">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="dwHelpStringContext">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="156" name="Invalidate">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="160" name="SetName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="szName">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="ICreateTypeInfo2Vtbl">
      <struct name="ICreateTypeInfo2Vtbl" />
    </typedef>
    <struct name="ICreateTypeInfo2">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="ICreateTypeInfo2Vtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPCREATETYPELIB">
      <ptr>
        <type>ICreateTypeLib</type>
      </ptr>
    </typedef>
    <struct name="ICreateTypeLibVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeLib</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeLib</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeLib</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="CreateTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeLib</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="szName">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
            <arg name="tkind">
              <type>TYPEKIND</type>
              <stack size="4" />
            </arg>
            <arg name="ppCTInfo">
              <ptr>
                <ptr>
                  <type>ICreateTypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="SetName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeLib</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="szName">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="SetVersion">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeLib</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="wMajorVerNum">
              <type>WORD</type>
              <stack size="4" />
            </arg>
            <arg name="wMinorVerNum">
              <type>WORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="SetGuid">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeLib</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="guid">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="SetDocString">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeLib</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="szDoc">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="SetHelpFileName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeLib</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="szHelpFileName">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="SetHelpContext">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeLib</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwHelpContext">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="SetLcid">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeLib</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="SetLibFlags">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeLib</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="uLibFlags">
              <type>UINT</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="SaveAllChanges">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeLib</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="ICreateTypeLibVtbl">
      <struct name="ICreateTypeLibVtbl" />
    </typedef>
    <struct name="ICreateTypeLib">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="ICreateTypeLibVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPCREATETYPELIB2">
      <ptr>
        <type>ICreateTypeLib2</type>
      </ptr>
    </typedef>
    <struct name="ICreateTypeLib2Vtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeLib2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeLib2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeLib2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="CreateTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeLib2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="szName">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
            <arg name="tkind">
              <type>TYPEKIND</type>
              <stack size="4" />
            </arg>
            <arg name="ppCTInfo">
              <ptr>
                <ptr>
                  <type>ICreateTypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="SetName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeLib2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="szName">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="SetVersion">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeLib2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="wMajorVerNum">
              <type>WORD</type>
              <stack size="4" />
            </arg>
            <arg name="wMinorVerNum">
              <type>WORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="SetGuid">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeLib2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="guid">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="SetDocString">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeLib2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="szDoc">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="SetHelpFileName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeLib2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="szHelpFileName">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="SetHelpContext">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeLib2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwHelpContext">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="SetLcid">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeLib2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="SetLibFlags">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeLib2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="uLibFlags">
              <type>UINT</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="SaveAllChanges">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeLib2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="DeleteTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeLib2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="szName">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="SetCustData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeLib2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="guid">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarVal">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="60" name="SetHelpStringContext">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeLib2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwHelpStringContext">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="64" name="SetHelpStringDll">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateTypeLib2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="szFileName">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="ICreateTypeLib2Vtbl">
      <struct name="ICreateTypeLib2Vtbl" />
    </typedef>
    <struct name="ICreateTypeLib2">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="ICreateTypeLib2Vtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPDISPATCH">
      <ptr>
        <type>IDispatch</type>
      </ptr>
    </typedef>
    <struct name="IDispatchVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDispatch</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDispatch</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDispatch</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetTypeInfoCount">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDispatch</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pctinfo">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDispatch</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="iTInfo">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="ppTInfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetIDsOfNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDispatch</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rgszNames">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cNames">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="rgDispId">
              <ptr>
                <type>DISPID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Invoke">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDispatch</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dispIdMember">
              <type>DISPID</type>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="wFlags">
              <type>WORD</type>
              <stack size="4" />
            </arg>
            <arg name="pDispParams">
              <ptr>
                <type>DISPPARAMS</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarResult">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pExcepInfo">
              <ptr>
                <type>EXCEPINFO</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="puArgErr">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IDispatchVtbl">
      <struct name="IDispatchVtbl" />
    </typedef>
    <struct name="IDispatch">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IDispatchVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPENUMVARIANT">
      <ptr>
        <type>IEnumVARIANT</type>
      </ptr>
    </typedef>
    <struct name="IEnumVARIANTVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumVARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumVARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumVARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Next">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumVARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="celt">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="rgVar">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pCeltFetched">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Skip">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumVARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="celt">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="Reset">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumVARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Clone">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumVARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppEnum">
              <ptr>
                <ptr>
                  <type>IEnumVARIANT</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IEnumVARIANTVtbl">
      <struct name="IEnumVARIANTVtbl" />
    </typedef>
    <struct name="IEnumVARIANT">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IEnumVARIANTVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPTYPECOMP">
      <ptr>
        <type>ITypeComp</type>
      </ptr>
    </typedef>
    <enum name="tagDESCKIND">
      <member name="DESCKIND_NONE" value="0" />
      <member name="DESCKIND_FUNCDESC" value="1" />
      <member name="DESCKIND_VARDESC" value="2" />
      <member name="DESCKIND_TYPECOMP" value="3" />
      <member name="DESCKIND_IMPLICITAPPOBJ" value="4" />
      <member name="DESCKIND_MAX" value="5" />
    </enum>
    <typedef name="DESCKIND">
      <enum name="tagDESCKIND" />
    </typedef>
    <union name="tagBINDPTR">
      <alt name="lpfuncdesc">
        <ptr>
          <type>FUNCDESC</type>
        </ptr>
      </alt>
      <alt name="lpvardesc">
        <ptr>
          <type>VARDESC</type>
        </ptr>
      </alt>
      <alt name="lptcomp">
        <ptr>
          <type>ITypeComp</type>
        </ptr>
      </alt>
    </union>
    <typedef name="BINDPTR">
      <union name="tagBINDPTR" />
    </typedef>
    <typedef name="LPBINDPTR">
      <ptr>
        <union name="tagBINDPTR">
          <alt name="lpfuncdesc">
            <ptr>
              <type>FUNCDESC</type>
            </ptr>
          </alt>
          <alt name="lpvardesc">
            <ptr>
              <type>VARDESC</type>
            </ptr>
          </alt>
          <alt name="lptcomp">
            <ptr>
              <type>ITypeComp</type>
            </ptr>
          </alt>
        </union>
      </ptr>
    </typedef>
    <struct name="ITypeCompVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeComp</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeComp</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeComp</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Bind">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeComp</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="szName">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
            <arg name="lHashVal">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="wFlags">
              <type>WORD</type>
              <stack size="4" />
            </arg>
            <arg name="ppTInfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pDescKind">
              <ptr>
                <type>DESCKIND</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pBindPtr">
              <ptr>
                <type>BINDPTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="BindType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeComp</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="szName">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
            <arg name="lHashVal">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="ppTInfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppTComp">
              <ptr>
                <ptr>
                  <type>ITypeComp</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="ITypeCompVtbl">
      <struct name="ITypeCompVtbl" />
    </typedef>
    <struct name="ITypeComp">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="ITypeCompVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPTYPEINFO">
      <ptr>
        <type>ITypeInfo</type>
      </ptr>
    </typedef>
    <struct name="ITypeInfoVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetTypeAttr">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppTypeAttr">
              <ptr>
                <ptr>
                  <type>TYPEATTR</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetTypeComp">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppTComp">
              <ptr>
                <ptr>
                  <type>ITypeComp</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetFuncDesc">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="ppFuncDesc">
              <ptr>
                <ptr>
                  <type>FUNCDESC</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="GetVarDesc">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="ppVarDesc">
              <ptr>
                <ptr>
                  <type>VARDESC</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="GetNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="memid">
              <type>MEMBERID</type>
              <stack size="4" />
            </arg>
            <arg name="rgBstrNames">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cMaxNames">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="pcNames">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="GetRefTypeOfImplType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="pRefType">
              <ptr>
                <type>HREFTYPE</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="GetImplTypeFlags">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="pImplTypeFlags">
              <ptr>
                <type>INT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="GetIDsOfNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rgszNames">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cNames">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="pMemId">
              <ptr>
                <type>MEMBERID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="Invoke">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pvInstance">
              <type>PVOID</type>
              <stack size="4" />
            </arg>
            <arg name="memid">
              <type>MEMBERID</type>
              <stack size="4" />
            </arg>
            <arg name="wFlags">
              <type>WORD</type>
              <stack size="4" />
            </arg>
            <arg name="pDispParams">
              <ptr>
                <type>DISPPARAMS</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarResult">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pExcepInfo">
              <ptr>
                <type>EXCEPINFO</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="puArgErr">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="GetDocumentation">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="memid">
              <type>MEMBERID</type>
              <stack size="4" />
            </arg>
            <arg name="pBstrName">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pBstrDocString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwHelpContext">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pBstrHelpFile">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="GetDllEntry">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="memid">
              <type>MEMBERID</type>
              <stack size="4" />
            </arg>
            <arg name="invKind">
              <type>INVOKEKIND</type>
              <stack size="4" />
            </arg>
            <arg name="pBstrDllName">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pBstrName">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwOrdinal">
              <ptr>
                <type>WORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="GetRefTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="hRefType">
              <type>HREFTYPE</type>
              <stack size="4" />
            </arg>
            <arg name="ppTInfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="60" name="AddressOfMember">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="memid">
              <type>MEMBERID</type>
              <stack size="4" />
            </arg>
            <arg name="invKind">
              <type>INVOKEKIND</type>
              <stack size="4" />
            </arg>
            <arg name="ppv">
              <ptr>
                <type>PVOID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="64" name="CreateInstance">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pUnkOuter">
              <ptr>
                <type>IUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObj">
              <ptr>
                <type>PVOID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="68" name="GetMops">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="memid">
              <type>MEMBERID</type>
              <stack size="4" />
            </arg>
            <arg name="pBstrMops">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="72" name="GetContainingTypeLib">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppTLib">
              <ptr>
                <ptr>
                  <type>ITypeLib</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pIndex">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="76" name="ReleaseTypeAttr">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pTypeAttr">
              <ptr>
                <type>TYPEATTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="80" name="ReleaseFuncDesc">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pFuncDesc">
              <ptr>
                <type>FUNCDESC</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="84" name="ReleaseVarDesc">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarDesc">
              <ptr>
                <type>VARDESC</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="ITypeInfoVtbl">
      <struct name="ITypeInfoVtbl" />
    </typedef>
    <struct name="ITypeInfo">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="ITypeInfoVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPTYPEINFO2">
      <ptr>
        <type>ITypeInfo2</type>
      </ptr>
    </typedef>
    <struct name="ITypeInfo2Vtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetTypeAttr">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppTypeAttr">
              <ptr>
                <ptr>
                  <type>TYPEATTR</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetTypeComp">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppTComp">
              <ptr>
                <ptr>
                  <type>ITypeComp</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetFuncDesc">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="ppFuncDesc">
              <ptr>
                <ptr>
                  <type>FUNCDESC</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="GetVarDesc">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="ppVarDesc">
              <ptr>
                <ptr>
                  <type>VARDESC</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="GetNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="memid">
              <type>MEMBERID</type>
              <stack size="4" />
            </arg>
            <arg name="rgBstrNames">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cMaxNames">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="pcNames">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="GetRefTypeOfImplType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="pRefType">
              <ptr>
                <type>HREFTYPE</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="GetImplTypeFlags">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="pImplTypeFlags">
              <ptr>
                <type>INT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="GetIDsOfNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rgszNames">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cNames">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="pMemId">
              <ptr>
                <type>MEMBERID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="Invoke">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pvInstance">
              <type>PVOID</type>
              <stack size="4" />
            </arg>
            <arg name="memid">
              <type>MEMBERID</type>
              <stack size="4" />
            </arg>
            <arg name="wFlags">
              <type>WORD</type>
              <stack size="4" />
            </arg>
            <arg name="pDispParams">
              <ptr>
                <type>DISPPARAMS</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarResult">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pExcepInfo">
              <ptr>
                <type>EXCEPINFO</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="puArgErr">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="GetDocumentation">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="memid">
              <type>MEMBERID</type>
              <stack size="4" />
            </arg>
            <arg name="pBstrName">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pBstrDocString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwHelpContext">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pBstrHelpFile">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="GetDllEntry">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="memid">
              <type>MEMBERID</type>
              <stack size="4" />
            </arg>
            <arg name="invKind">
              <type>INVOKEKIND</type>
              <stack size="4" />
            </arg>
            <arg name="pBstrDllName">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pBstrName">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwOrdinal">
              <ptr>
                <type>WORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="GetRefTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="hRefType">
              <type>HREFTYPE</type>
              <stack size="4" />
            </arg>
            <arg name="ppTInfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="60" name="AddressOfMember">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="memid">
              <type>MEMBERID</type>
              <stack size="4" />
            </arg>
            <arg name="invKind">
              <type>INVOKEKIND</type>
              <stack size="4" />
            </arg>
            <arg name="ppv">
              <ptr>
                <type>PVOID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="64" name="CreateInstance">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pUnkOuter">
              <ptr>
                <type>IUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObj">
              <ptr>
                <type>PVOID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="68" name="GetMops">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="memid">
              <type>MEMBERID</type>
              <stack size="4" />
            </arg>
            <arg name="pBstrMops">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="72" name="GetContainingTypeLib">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppTLib">
              <ptr>
                <ptr>
                  <type>ITypeLib</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pIndex">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="76" name="ReleaseTypeAttr">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pTypeAttr">
              <ptr>
                <type>TYPEATTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="80" name="ReleaseFuncDesc">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pFuncDesc">
              <ptr>
                <type>FUNCDESC</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="84" name="ReleaseVarDesc">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarDesc">
              <ptr>
                <type>VARDESC</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="88" name="GetTypeKind">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pTypeKind">
              <ptr>
                <type>TYPEKIND</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="92" name="GetTypeFlags">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pTypeFlags">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="96" name="GetFuncIndexOfMemId">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="memid">
              <type>MEMBERID</type>
              <stack size="4" />
            </arg>
            <arg name="invKind">
              <type>INVOKEKIND</type>
              <stack size="4" />
            </arg>
            <arg name="pFuncIndex">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="100" name="GetVarIndexOfMemId">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="memid">
              <type>MEMBERID</type>
              <stack size="4" />
            </arg>
            <arg name="pVarIndex">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="104" name="GetCustData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="guid">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarVal">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="108" name="GetFuncCustData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="guid">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarVal">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="112" name="GetParamCustData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="indexFunc">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="indexParam">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="guid">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarVal">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="116" name="GetVarCustData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="guid">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarVal">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="120" name="GetImplTypeCustData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="guid">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarVal">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="124" name="GetDocumentation2">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="memid">
              <type>MEMBERID</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="pbstrHelpString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwHelpStringContext">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbstrHelpStringDll">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="128" name="GetAllCustData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pCustData">
              <ptr>
                <type>CUSTDATA</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="132" name="GetAllFuncCustData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="pCustData">
              <ptr>
                <type>CUSTDATA</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="136" name="GetAllParamCustData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="indexFunc">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="indexParam">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="pCustData">
              <ptr>
                <type>CUSTDATA</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="140" name="GetAllVarCustData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="pCustData">
              <ptr>
                <type>CUSTDATA</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="144" name="GetAllImplTypeCustData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeInfo2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="pCustData">
              <ptr>
                <type>CUSTDATA</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="ITypeInfo2Vtbl">
      <struct name="ITypeInfo2Vtbl" />
    </typedef>
    <struct name="ITypeInfo2">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="ITypeInfo2Vtbl" />
        </ptr>
      </field>
    </struct>
    <enum name="tagSYSKIND">
      <member name="SYS_WIN16" value="0" />
      <member name="SYS_WIN32" value="1" />
      <member name="SYS_MAC" value="2" />
      <member name="SYS_WIN64" value="3" />
    </enum>
    <typedef name="SYSKIND">
      <enum name="tagSYSKIND" />
    </typedef>
    <enum name="tagLIBFLAGS">
      <member name="LIBFLAG_FRESTRICTED" value="1" />
      <member name="LIBFLAG_FCONTROL" value="2" />
      <member name="LIBFLAG_FHIDDEN" value="4" />
      <member name="LIBFLAG_FHASDISKIMAGE" value="8" />
    </enum>
    <typedef name="LIBFLAGS">
      <enum name="tagLIBFLAGS" />
    </typedef>
    <typedef name="LPTYPELIB">
      <ptr>
        <type>ITypeLib</type>
      </ptr>
    </typedef>
    <struct name="tagTLIBATTR">
      <field offset="0" name="guid">
        <type>GUID</type>
      </field>
      <field offset="16" name="lcid">
        <type>LCID</type>
      </field>
      <field offset="20" name="syskind">
        <type>SYSKIND</type>
      </field>
      <field offset="24" name="wMajorVerNum">
        <type>WORD</type>
      </field>
      <field offset="26" name="wMinorVerNum">
        <type>WORD</type>
      </field>
      <field offset="28" name="wLibFlags">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="TLIBATTR">
      <struct name="tagTLIBATTR" />
    </typedef>
    <typedef name="LPTLIBATTR">
      <ptr>
        <struct name="tagTLIBATTR" />
      </ptr>
    </typedef>
    <struct name="ITypeLibVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeLib</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeLib</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeLib</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetTypeInfoCount">
        <ptr>
          <fn>
            <return>
              <type>UINT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeLib</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeLib</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="ppTInfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetTypeInfoType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeLib</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="pTKind">
              <ptr>
                <type>TYPEKIND</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="GetTypeInfoOfGuid">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeLib</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="guid">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppTinfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="GetLibAttr">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeLib</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppTLibAttr">
              <ptr>
                <ptr>
                  <type>TLIBATTR</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="GetTypeComp">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeLib</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppTComp">
              <ptr>
                <ptr>
                  <type>ITypeComp</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="GetDocumentation">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeLib</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>INT</type>
              <stack size="4" />
            </arg>
            <arg name="pBstrName">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pBstrDocString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwHelpContext">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pBstrHelpFile">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="IsName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeLib</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="szNameBuf">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
            <arg name="lHashVal">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="pfName">
              <ptr>
                <type>BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="FindName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeLib</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="szNameBuf">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
            <arg name="lHashVal">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="ppTInfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rgMemId">
              <ptr>
                <type>MEMBERID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pcFound">
              <ptr>
                <type>USHORT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="ReleaseTLibAttr">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeLib</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pTLibAttr">
              <ptr>
                <type>TLIBATTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="ITypeLibVtbl">
      <struct name="ITypeLibVtbl" />
    </typedef>
    <struct name="ITypeLib">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="ITypeLibVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPTYPELIB2">
      <ptr>
        <type>ITypeLib2</type>
      </ptr>
    </typedef>
    <struct name="ITypeLib2Vtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeLib2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeLib2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeLib2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetTypeInfoCount">
        <ptr>
          <fn>
            <return>
              <type>UINT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeLib2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeLib2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="ppTInfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetTypeInfoType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeLib2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="pTKind">
              <ptr>
                <type>TYPEKIND</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="GetTypeInfoOfGuid">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeLib2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="guid">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppTinfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="GetLibAttr">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeLib2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppTLibAttr">
              <ptr>
                <ptr>
                  <type>TLIBATTR</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="GetTypeComp">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeLib2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppTComp">
              <ptr>
                <ptr>
                  <type>ITypeComp</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="GetDocumentation">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeLib2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>INT</type>
              <stack size="4" />
            </arg>
            <arg name="pBstrName">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pBstrDocString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwHelpContext">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pBstrHelpFile">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="IsName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeLib2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="szNameBuf">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
            <arg name="lHashVal">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="pfName">
              <ptr>
                <type>BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="FindName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeLib2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="szNameBuf">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
            <arg name="lHashVal">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="ppTInfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rgMemId">
              <ptr>
                <type>MEMBERID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pcFound">
              <ptr>
                <type>USHORT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="ReleaseTLibAttr">
        <ptr>
          <fn>
            <return>
              <void />
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeLib2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pTLibAttr">
              <ptr>
                <type>TLIBATTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="GetCustData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeLib2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="guid">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarVal">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="GetLibStatistics">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeLib2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pcUniqueNames">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pcchUniqueNames">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="60" name="GetDocumentation2">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeLib2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <type>INT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="pbstrHelpString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwHelpStringContext">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbstrHelpStringDll">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="64" name="GetAllCustData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeLib2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pCustData">
              <ptr>
                <type>CUSTDATA</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="ITypeLib2Vtbl">
      <struct name="ITypeLib2Vtbl" />
    </typedef>
    <struct name="ITypeLib2">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="ITypeLib2Vtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPTYPECHANGEEVENTS">
      <ptr>
        <type>ITypeChangeEvents</type>
      </ptr>
    </typedef>
    <enum name="tagCHANGEKIND">
      <member name="CHANGEKIND_ADDMEMBER" value="0" />
      <member name="CHANGEKIND_DELETEMEMBER" value="1" />
      <member name="CHANGEKIND_SETNAMES" value="2" />
      <member name="CHANGEKIND_SETDOCUMENTATION" value="3" />
      <member name="CHANGEKIND_GENERAL" value="4" />
      <member name="CHANGEKIND_INVALIDATE" value="5" />
      <member name="CHANGEKIND_CHANGEFAILED" value="6" />
      <member name="CHANGEKIND_MAX" value="7" />
    </enum>
    <typedef name="CHANGEKIND">
      <enum name="tagCHANGEKIND" />
    </typedef>
    <struct name="ITypeChangeEventsVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeChangeEvents</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeChangeEvents</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeChangeEvents</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="RequestTypeChange">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeChangeEvents</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="changeKind">
              <type>CHANGEKIND</type>
              <stack size="4" />
            </arg>
            <arg name="pTInfoBefore">
              <ptr>
                <type>ITypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pStrName">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
            <arg name="pfCancel">
              <ptr>
                <type>INT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="AfterTypeChange">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeChangeEvents</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="changeKind">
              <type>CHANGEKIND</type>
              <stack size="4" />
            </arg>
            <arg name="pTInfoAfter">
              <ptr>
                <type>ITypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pStrName">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="ITypeChangeEventsVtbl">
      <struct name="ITypeChangeEventsVtbl" />
    </typedef>
    <struct name="ITypeChangeEvents">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="ITypeChangeEventsVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPERRORINFO">
      <ptr>
        <type>IErrorInfo</type>
      </ptr>
    </typedef>
    <struct name="IErrorInfoVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IErrorInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IErrorInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IErrorInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetGUID">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IErrorInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pGUID">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetSource">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IErrorInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pBstrSource">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetDescription">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IErrorInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pBstrDescription">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="GetHelpFile">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IErrorInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pBstrHelpFile">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="GetHelpContext">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IErrorInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwHelpContext">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IErrorInfoVtbl">
      <struct name="IErrorInfoVtbl" />
    </typedef>
    <struct name="IErrorInfo">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IErrorInfoVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPCREATEERRORINFO">
      <ptr>
        <type>ICreateErrorInfo</type>
      </ptr>
    </typedef>
    <struct name="ICreateErrorInfoVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateErrorInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateErrorInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateErrorInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="SetGUID">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateErrorInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rguid">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="SetSource">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateErrorInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="szSource">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="SetDescription">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateErrorInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="szDescription">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="SetHelpFile">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateErrorInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="szHelpFile">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="SetHelpContext">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICreateErrorInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwHelpContext">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="ICreateErrorInfoVtbl">
      <struct name="ICreateErrorInfoVtbl" />
    </typedef>
    <struct name="ICreateErrorInfo">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="ICreateErrorInfoVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPSUPPORTERRORINFO">
      <ptr>
        <type>ISupportErrorInfo</type>
      </ptr>
    </typedef>
    <struct name="ISupportErrorInfoVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISupportErrorInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISupportErrorInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISupportErrorInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="InterfaceSupportsErrorInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISupportErrorInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="ISupportErrorInfoVtbl">
      <struct name="ISupportErrorInfoVtbl" />
    </typedef>
    <struct name="ISupportErrorInfo">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="ISupportErrorInfoVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="ITypeFactoryVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeFactory</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeFactory</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeFactory</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="CreateFromTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeFactory</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pTypeInfo">
              <ptr>
                <type>ITypeInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppv">
              <ptr>
                <ptr>
                  <type>IUnknown</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="ITypeFactoryVtbl">
      <struct name="ITypeFactoryVtbl" />
    </typedef>
    <struct name="ITypeFactory">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="ITypeFactoryVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="ITypeMarshalVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeMarshal</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeMarshal</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeMarshal</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Size">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeMarshal</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pvType">
              <type>PVOID</type>
              <stack size="4" />
            </arg>
            <arg name="dwDestContext">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pvDestContext">
              <type>PVOID</type>
              <stack size="4" />
            </arg>
            <arg name="pSize">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Marshal">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeMarshal</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pvType">
              <type>PVOID</type>
              <stack size="4" />
            </arg>
            <arg name="dwDestContext">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pvDestContext">
              <type>PVOID</type>
              <stack size="4" />
            </arg>
            <arg name="cbBufferLength">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="pBuffer">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pcbWritten">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="Unmarshal">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeMarshal</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pvType">
              <type>PVOID</type>
              <stack size="4" />
            </arg>
            <arg name="dwFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="cbBufferLength">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="pBuffer">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pcbRead">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Free">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ITypeMarshal</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pvType">
              <type>PVOID</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="ITypeMarshalVtbl">
      <struct name="ITypeMarshalVtbl" />
    </typedef>
    <struct name="ITypeMarshal">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="ITypeMarshalVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPRECORDINFO">
      <ptr>
        <type>IRecordInfo</type>
      </ptr>
    </typedef>
    <struct name="IRecordInfoVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRecordInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRecordInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRecordInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="RecordInit">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRecordInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pvNew">
              <type>PVOID</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="RecordClear">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRecordInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pvExisting">
              <type>PVOID</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="RecordCopy">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRecordInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pvExisting">
              <type>PVOID</type>
              <stack size="4" />
            </arg>
            <arg name="pvNew">
              <type>PVOID</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="GetGuid">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRecordInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pguid">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="GetName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRecordInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbstrName">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="GetSize">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRecordInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pcbSize">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="GetTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRecordInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppTypeInfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="GetField">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRecordInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pvData">
              <type>PVOID</type>
              <stack size="4" />
            </arg>
            <arg name="szFieldName">
              <type>LPCOLESTR</type>
              <stack size="4" />
            </arg>
            <arg name="pvarField">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="GetFieldNoCopy">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRecordInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pvData">
              <type>PVOID</type>
              <stack size="4" />
            </arg>
            <arg name="szFieldName">
              <type>LPCOLESTR</type>
              <stack size="4" />
            </arg>
            <arg name="pvarField">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvDataCArray">
              <ptr>
                <type>PVOID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="PutField">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRecordInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="wFlags">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="pvData">
              <type>PVOID</type>
              <stack size="4" />
            </arg>
            <arg name="szFieldName">
              <type>LPCOLESTR</type>
              <stack size="4" />
            </arg>
            <arg name="pvarField">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="PutFieldNoCopy">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRecordInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="wFlags">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="pvData">
              <type>PVOID</type>
              <stack size="4" />
            </arg>
            <arg name="szFieldName">
              <type>LPCOLESTR</type>
              <stack size="4" />
            </arg>
            <arg name="pvarField">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="GetFieldNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRecordInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pcNames">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rgBstrNames">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="60" name="IsMatchingType">
        <ptr>
          <fn>
            <return>
              <type>BOOL</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRecordInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pRecordInfo">
              <ptr>
                <type>IRecordInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="64" name="RecordCreate">
        <ptr>
          <fn>
            <return>
              <type>PVOID</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRecordInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="68" name="RecordCreateCopy">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRecordInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pvSource">
              <type>PVOID</type>
              <stack size="4" />
            </arg>
            <arg name="ppvDest">
              <ptr>
                <type>PVOID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="72" name="RecordDestroy">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IRecordInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pvRecord">
              <type>PVOID</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IRecordInfoVtbl">
      <struct name="IRecordInfoVtbl" />
    </typedef>
    <struct name="IRecordInfo">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IRecordInfoVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPERRORLOG">
      <ptr>
        <type>IErrorLog</type>
      </ptr>
    </typedef>
    <struct name="IErrorLogVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IErrorLog</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IErrorLog</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IErrorLog</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="AddError">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IErrorLog</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pszPropName">
              <type>LPCOLESTR</type>
              <stack size="4" />
            </arg>
            <arg name="pExcepInfo">
              <ptr>
                <type>EXCEPINFO</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IErrorLogVtbl">
      <struct name="IErrorLogVtbl" />
    </typedef>
    <struct name="IErrorLog">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IErrorLogVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPPROPERTYBAG">
      <ptr>
        <type>IPropertyBag</type>
      </ptr>
    </typedef>
    <struct name="IPropertyBagVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPropertyBag</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPropertyBag</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPropertyBag</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Read">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPropertyBag</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pszPropName">
              <type>LPCOLESTR</type>
              <stack size="4" />
            </arg>
            <arg name="pVar">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pErrorLog">
              <ptr>
                <type>IErrorLog</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Write">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPropertyBag</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pszPropName">
              <type>LPCOLESTR</type>
              <stack size="4" />
            </arg>
            <arg name="pVar">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IPropertyBagVtbl">
      <struct name="IPropertyBagVtbl" />
    </typedef>
    <struct name="IPropertyBag">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IPropertyBagVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="_xml_error">
      <field offset="0" name="_nLine">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="4" name="_pchBuf">
        <type>BSTR</type>
      </field>
      <field offset="8" name="_cchBuf">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="12" name="_ich">
        <prim domain="UnsignedInt" size="4" />
      </field>
      <field offset="16" name="_pszFound">
        <type>BSTR</type>
      </field>
      <field offset="20" name="_pszExpected">
        <type>BSTR</type>
      </field>
      <field offset="24" name="_reserved1">
        <type>DWORD</type>
      </field>
      <field offset="28" name="_reserved2">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="XML_ERROR">
      <struct name="_xml_error" />
    </typedef>
    <enum name="tagDOMNodeType">
      <member name="NODE_INVALID" value="0" />
      <member name="NODE_ELEMENT" value="1" />
      <member name="NODE_ATTRIBUTE" value="2" />
      <member name="NODE_TEXT" value="3" />
      <member name="NODE_CDATA_SECTION" value="4" />
      <member name="NODE_ENTITY_REFERENCE" value="5" />
      <member name="NODE_ENTITY" value="6" />
      <member name="NODE_PROCESSING_INSTRUCTION" value="7" />
      <member name="NODE_COMMENT" value="8" />
      <member name="NODE_DOCUMENT" value="9" />
      <member name="NODE_DOCUMENT_TYPE" value="10" />
      <member name="NODE_DOCUMENT_FRAGMENT" value="11" />
      <member name="NODE_NOTATION" value="12" />
    </enum>
    <typedef name="DOMNodeType">
      <enum name="tagDOMNodeType" />
    </typedef>
    <enum name="tagXMLEMEM_TYPE">
      <member name="XMLELEMTYPE_ELEMENT" value="0" />
      <member name="XMLELEMTYPE_TEXT" value="1" />
      <member name="XMLELEMTYPE_COMMENT" value="2" />
      <member name="XMLELEMTYPE_DOCUMENT" value="3" />
      <member name="XMLELEMTYPE_DTD" value="4" />
      <member name="XMLELEMTYPE_PI" value="5" />
      <member name="XMLELEMTYPE_OTHER" value="6" />
    </enum>
    <typedef name="XMLELEM_TYPE">
      <enum name="tagXMLEMEM_TYPE" />
    </typedef>
    <struct name="IXMLDOMImplementationVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMImplementation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMImplementation</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMImplementation</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetTypeInfoCount">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMImplementation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pctinfo">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMImplementation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="iTInfo">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="ppTInfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetIDsOfNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMImplementation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rgszNames">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cNames">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="rgDispId">
              <ptr>
                <type>DISPID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Invoke">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMImplementation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dispIdMember">
              <type>DISPID</type>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="wFlags">
              <type>WORD</type>
              <stack size="4" />
            </arg>
            <arg name="pDispParams">
              <ptr>
                <type>DISPPARAMS</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarResult">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pExcepInfo">
              <ptr>
                <type>EXCEPINFO</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="puArgErr">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="hasFeature">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMImplementation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="feature">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="version">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="hasFeature">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IXMLDOMImplementationVtbl">
      <struct name="IXMLDOMImplementationVtbl" />
    </typedef>
    <struct name="IXMLDOMImplementation">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IXMLDOMImplementationVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IXMLDOMNodeVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetTypeInfoCount">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pctinfo">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="iTInfo">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="ppTInfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetIDsOfNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rgszNames">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cNames">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="rgDispId">
              <ptr>
                <type>DISPID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Invoke">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dispIdMember">
              <type>DISPID</type>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="wFlags">
              <type>WORD</type>
              <stack size="4" />
            </arg>
            <arg name="pDispParams">
              <ptr>
                <type>DISPPARAMS</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarResult">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pExcepInfo">
              <ptr>
                <type>EXCEPINFO</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="puArgErr">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="get_nodeName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="name">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="get_nodeValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="value">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="put_nodeValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="value">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="get_nodeType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="type">
              <ptr>
                <type>DOMNodeType</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="get_parentNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="parent">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="get_childNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="childList">
              <ptr>
                <ptr>
                  <type>IXMLDOMNodeList</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="get_firstChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="firstChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="get_lastChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lastChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="60" name="get_previousSibling">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="previousSibling">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="64" name="get_nextSibling">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nextSibling">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="68" name="get_attributes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="attributeMap">
              <ptr>
                <ptr>
                  <type>IXMLDOMNamedNodeMap</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="72" name="insertBefore">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="refChild">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
            <arg name="outNewChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="76" name="replaceChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="oldChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outOldChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="80" name="removeChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="childNode">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="oldChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="84" name="appendChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outNewChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="88" name="hasChildNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="hasChild">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="92" name="get_ownerDocument">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="XMLDOMDocument">
              <ptr>
                <ptr>
                  <type>IXMLDOMDocument</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="96" name="cloneNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="deep">
              <type>VARIANT_BOOL</type>
              <stack size="4" />
            </arg>
            <arg name="cloneRoot">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="100" name="get_nodeTypeString">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nodeType">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="104" name="get_text">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="text">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="108" name="put_text">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="text">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="112" name="get_specified">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="isSpecified">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="116" name="get_definition">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="definitionNode">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="120" name="get_nodeTypedValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="typedValue">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="124" name="put_nodeTypedValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="typedValue">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="128" name="get_dataType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dataTypeName">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="132" name="put_dataType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dataTypeName">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="136" name="get_xml">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="xmlString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="140" name="transformNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="stylesheet">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="xmlString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="144" name="selectNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="queryString">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="resultList">
              <ptr>
                <ptr>
                  <type>IXMLDOMNodeList</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="148" name="selectSingleNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="queryString">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="resultNode">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="152" name="get_parsed">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="isParsed">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="156" name="get_namespaceURI">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="namespaceURI">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="160" name="get_prefix">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="prefixString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="164" name="get_baseName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nameString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="168" name="transformNodeToObject">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="stylesheet">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outputObject">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IXMLDOMNodeVtbl">
      <struct name="IXMLDOMNodeVtbl" />
    </typedef>
    <struct name="IXMLDOMNode">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IXMLDOMNodeVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IXMLDOMDocumentFragmentVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetTypeInfoCount">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pctinfo">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="iTInfo">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="ppTInfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetIDsOfNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rgszNames">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cNames">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="rgDispId">
              <ptr>
                <type>DISPID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Invoke">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dispIdMember">
              <type>DISPID</type>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="wFlags">
              <type>WORD</type>
              <stack size="4" />
            </arg>
            <arg name="pDispParams">
              <ptr>
                <type>DISPPARAMS</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarResult">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pExcepInfo">
              <ptr>
                <type>EXCEPINFO</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="puArgErr">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="get_nodeName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="name">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="get_nodeValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="value">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="put_nodeValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="value">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="get_nodeType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="type">
              <ptr>
                <type>DOMNodeType</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="get_parentNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="parent">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="get_childNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="childList">
              <ptr>
                <ptr>
                  <type>IXMLDOMNodeList</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="get_firstChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="firstChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="get_lastChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lastChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="60" name="get_previousSibling">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="previousSibling">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="64" name="get_nextSibling">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nextSibling">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="68" name="get_attributes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="attributeMap">
              <ptr>
                <ptr>
                  <type>IXMLDOMNamedNodeMap</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="72" name="insertBefore">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="refChild">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
            <arg name="outNewChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="76" name="replaceChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="oldChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outOldChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="80" name="removeChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="childNode">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="oldChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="84" name="appendChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outNewChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="88" name="hasChildNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="hasChild">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="92" name="get_ownerDocument">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="XMLDOMDocument">
              <ptr>
                <ptr>
                  <type>IXMLDOMDocument</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="96" name="cloneNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="deep">
              <type>VARIANT_BOOL</type>
              <stack size="4" />
            </arg>
            <arg name="cloneRoot">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="100" name="get_nodeTypeString">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nodeType">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="104" name="get_text">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="text">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="108" name="put_text">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="text">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="112" name="get_specified">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="isSpecified">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="116" name="get_definition">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="definitionNode">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="120" name="get_nodeTypedValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="typedValue">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="124" name="put_nodeTypedValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="typedValue">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="128" name="get_dataType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dataTypeName">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="132" name="put_dataType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dataTypeName">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="136" name="get_xml">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="xmlString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="140" name="transformNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="stylesheet">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="xmlString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="144" name="selectNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="queryString">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="resultList">
              <ptr>
                <ptr>
                  <type>IXMLDOMNodeList</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="148" name="selectSingleNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="queryString">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="resultNode">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="152" name="get_parsed">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="isParsed">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="156" name="get_namespaceURI">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="namespaceURI">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="160" name="get_prefix">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="prefixString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="164" name="get_baseName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nameString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="168" name="transformNodeToObject">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentFragment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="stylesheet">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outputObject">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IXMLDOMDocumentFragmentVtbl">
      <struct name="IXMLDOMDocumentFragmentVtbl" />
    </typedef>
    <struct name="IXMLDOMDocumentFragment">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IXMLDOMDocumentFragmentVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IXMLDOMDocumentVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetTypeInfoCount">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pctinfo">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="iTInfo">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="ppTInfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetIDsOfNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rgszNames">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cNames">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="rgDispId">
              <ptr>
                <type>DISPID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Invoke">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dispIdMember">
              <type>DISPID</type>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="wFlags">
              <type>WORD</type>
              <stack size="4" />
            </arg>
            <arg name="pDispParams">
              <ptr>
                <type>DISPPARAMS</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarResult">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pExcepInfo">
              <ptr>
                <type>EXCEPINFO</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="puArgErr">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="get_nodeName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="name">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="get_nodeValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="value">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="put_nodeValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="value">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="get_nodeType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="type">
              <ptr>
                <type>DOMNodeType</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="get_parentNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="parent">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="get_childNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="childList">
              <ptr>
                <ptr>
                  <type>IXMLDOMNodeList</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="get_firstChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="firstChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="get_lastChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lastChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="60" name="get_previousSibling">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="previousSibling">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="64" name="get_nextSibling">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nextSibling">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="68" name="get_attributes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="attributeMap">
              <ptr>
                <ptr>
                  <type>IXMLDOMNamedNodeMap</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="72" name="insertBefore">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="refChild">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
            <arg name="outNewChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="76" name="replaceChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="oldChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outOldChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="80" name="removeChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="childNode">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="oldChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="84" name="appendChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outNewChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="88" name="hasChildNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="hasChild">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="92" name="get_ownerDocument">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="XMLDOMDocument">
              <ptr>
                <ptr>
                  <type>IXMLDOMDocument</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="96" name="cloneNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="deep">
              <type>VARIANT_BOOL</type>
              <stack size="4" />
            </arg>
            <arg name="cloneRoot">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="100" name="get_nodeTypeString">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nodeType">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="104" name="get_text">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="text">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="108" name="put_text">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="text">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="112" name="get_specified">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="isSpecified">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="116" name="get_definition">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="definitionNode">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="120" name="get_nodeTypedValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="typedValue">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="124" name="put_nodeTypedValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="typedValue">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="128" name="get_dataType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dataTypeName">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="132" name="put_dataType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dataTypeName">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="136" name="get_xml">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="xmlString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="140" name="transformNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="stylesheet">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="xmlString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="144" name="selectNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="queryString">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="resultList">
              <ptr>
                <ptr>
                  <type>IXMLDOMNodeList</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="148" name="selectSingleNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="queryString">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="resultNode">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="152" name="get_parsed">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="isParsed">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="156" name="get_namespaceURI">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="namespaceURI">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="160" name="get_prefix">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="prefixString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="164" name="get_baseName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nameString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="168" name="transformNodeToObject">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="stylesheet">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outputObject">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="172" name="get_doctype">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="documentType">
              <ptr>
                <ptr>
                  <type>IXMLDOMDocumentType</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="176" name="get_implementation">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="impl">
              <ptr>
                <ptr>
                  <type>IXMLDOMImplementation</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="180" name="get_documentElement">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="DOMElement">
              <ptr>
                <ptr>
                  <type>IXMLDOMElement</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="184" name="putref_documentElement">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="DOMElement">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="188" name="createElement">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="tagName">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="element">
              <ptr>
                <ptr>
                  <type>IXMLDOMElement</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="192" name="createDocumentFragment">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="docFrag">
              <ptr>
                <ptr>
                  <type>IXMLDOMDocumentFragment</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="196" name="createTextNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="data">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="text">
              <ptr>
                <ptr>
                  <type>IXMLDOMText</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="200" name="createComment">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="data">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="comment">
              <ptr>
                <ptr>
                  <type>IXMLDOMComment</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="204" name="createCDATASection">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="data">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="cdata">
              <ptr>
                <ptr>
                  <type>IXMLDOMCDATASection</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="208" name="createProcessingInstruction">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="target">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="data">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="pi">
              <ptr>
                <ptr>
                  <type>IXMLDOMProcessingInstruction</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="212" name="createAttribute">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="name">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="attribute">
              <ptr>
                <ptr>
                  <type>IXMLDOMAttribute</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="216" name="createEntityReference">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="name">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="entityRef">
              <ptr>
                <ptr>
                  <type>IXMLDOMEntityReference</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="220" name="getElementsByTagName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="tagName">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="resultList">
              <ptr>
                <ptr>
                  <type>IXMLDOMNodeList</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="224" name="createNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="Type">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
            <arg name="name">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="namespaceURI">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="node">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="228" name="nodeFromID">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="idString">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="node">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="232" name="load">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="xmlSource">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
            <arg name="isSuccessful">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="236" name="get_readyState">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="value">
              <ptr>
                <prim domain="SignedInt" size="4" />
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="240" name="get_parseError">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="errorObj">
              <ptr>
                <ptr>
                  <type>IXMLDOMParseError</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="244" name="get_url">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="urlString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="248" name="get_async">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="isAsync">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="252" name="put_async">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="isAsync">
              <type>VARIANT_BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="256" name="abort">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="260" name="loadXML">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="bstrXML">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="isSuccessful">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="264" name="save">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="destination">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="268" name="get_validateOnParse">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="isValidating">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="272" name="put_validateOnParse">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="isValidating">
              <type>VARIANT_BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="276" name="get_resolveExternals">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="isResolving">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="280" name="put_resolveExternals">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="isResolving">
              <type>VARIANT_BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="284" name="get_preserveWhiteSpace">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="isPreserving">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="288" name="put_preserveWhiteSpace">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="isPreserving">
              <type>VARIANT_BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="292" name="put_onreadystatechange">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="readystatechangeSink">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="296" name="put_ondataavailable">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ondataavailableSink">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="300" name="put_ontransformnode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ontransformnodeSink">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IXMLDOMDocumentVtbl">
      <struct name="IXMLDOMDocumentVtbl" />
    </typedef>
    <struct name="IXMLDOMDocument">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IXMLDOMDocumentVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IXMLDOMNodeListVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNodeList</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNodeList</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNodeList</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetTypeInfoCount">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNodeList</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pctinfo">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNodeList</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="iTInfo">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="ppTInfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetIDsOfNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNodeList</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rgszNames">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cNames">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="rgDispId">
              <ptr>
                <type>DISPID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Invoke">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNodeList</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dispIdMember">
              <type>DISPID</type>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="wFlags">
              <type>WORD</type>
              <stack size="4" />
            </arg>
            <arg name="pDispParams">
              <ptr>
                <type>DISPPARAMS</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarResult">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pExcepInfo">
              <ptr>
                <type>EXCEPINFO</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="puArgErr">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="get_item">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNodeList</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <prim domain="SignedInt" size="4" />
              <stack size="4" />
            </arg>
            <arg name="listItem">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="get_length">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNodeList</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="listLength">
              <ptr>
                <prim domain="SignedInt" size="4" />
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="nextNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNodeList</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nextItem">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="reset">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNodeList</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="get__newEnum">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNodeList</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppUnk">
              <ptr>
                <ptr>
                  <type>IUnknown</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IXMLDOMNodeListVtbl">
      <struct name="IXMLDOMNodeListVtbl" />
    </typedef>
    <struct name="IXMLDOMNodeList">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IXMLDOMNodeListVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IXMLDOMNamedNodeMapVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNamedNodeMap</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNamedNodeMap</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNamedNodeMap</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetTypeInfoCount">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNamedNodeMap</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pctinfo">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNamedNodeMap</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="iTInfo">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="ppTInfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetIDsOfNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNamedNodeMap</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rgszNames">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cNames">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="rgDispId">
              <ptr>
                <type>DISPID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Invoke">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNamedNodeMap</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dispIdMember">
              <type>DISPID</type>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="wFlags">
              <type>WORD</type>
              <stack size="4" />
            </arg>
            <arg name="pDispParams">
              <ptr>
                <type>DISPPARAMS</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarResult">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pExcepInfo">
              <ptr>
                <type>EXCEPINFO</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="puArgErr">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="getNamedItem">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNamedNodeMap</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="name">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="namedItem">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="setNamedItem">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNamedNodeMap</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newItem">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nameItem">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="removeNamedItem">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNamedNodeMap</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="name">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="namedItem">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="get_item">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNamedNodeMap</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="index">
              <prim domain="SignedInt" size="4" />
              <stack size="4" />
            </arg>
            <arg name="listItem">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="get_length">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNamedNodeMap</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="listLength">
              <ptr>
                <prim domain="SignedInt" size="4" />
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="getQualifiedItem">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNamedNodeMap</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="baseName">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="namespaceURI">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="qualifiedItem">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="removeQualifiedItem">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNamedNodeMap</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="baseName">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="namespaceURI">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="qualifiedItem">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="nextNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNamedNodeMap</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nextItem">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="60" name="reset">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNamedNodeMap</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="64" name="get__newEnum">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNamedNodeMap</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppUnk">
              <ptr>
                <ptr>
                  <type>IUnknown</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IXMLDOMNamedNodeMapVtbl">
      <struct name="IXMLDOMNamedNodeMapVtbl" />
    </typedef>
    <struct name="IXMLDOMNamedNodeMap">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IXMLDOMNamedNodeMapVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IXMLDOMCharacterDataVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetTypeInfoCount">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pctinfo">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="iTInfo">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="ppTInfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetIDsOfNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rgszNames">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cNames">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="rgDispId">
              <ptr>
                <type>DISPID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Invoke">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dispIdMember">
              <type>DISPID</type>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="wFlags">
              <type>WORD</type>
              <stack size="4" />
            </arg>
            <arg name="pDispParams">
              <ptr>
                <type>DISPPARAMS</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarResult">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pExcepInfo">
              <ptr>
                <type>EXCEPINFO</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="puArgErr">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="get_nodeName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="name">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="get_nodeValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="value">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="put_nodeValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="value">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="get_nodeType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="type">
              <ptr>
                <type>DOMNodeType</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="get_parentNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="parent">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="get_childNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="childList">
              <ptr>
                <ptr>
                  <type>IXMLDOMNodeList</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="get_firstChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="firstChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="get_lastChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lastChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="60" name="get_previousSibling">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="previousSibling">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="64" name="get_nextSibling">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nextSibling">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="68" name="get_attributes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="attributeMap">
              <ptr>
                <ptr>
                  <type>IXMLDOMNamedNodeMap</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="72" name="insertBefore">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="refChild">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
            <arg name="outNewChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="76" name="replaceChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="oldChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outOldChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="80" name="removeChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="childNode">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="oldChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="84" name="appendChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outNewChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="88" name="hasChildNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="hasChild">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="92" name="get_ownerDocument">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="XMLDOMDocument">
              <ptr>
                <ptr>
                  <type>IXMLDOMDocument</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="96" name="cloneNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="deep">
              <type>VARIANT_BOOL</type>
              <stack size="4" />
            </arg>
            <arg name="cloneRoot">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="100" name="get_nodeTypeString">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nodeType">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="104" name="get_text">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="text">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="108" name="put_text">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="text">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="112" name="get_specified">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="isSpecified">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="116" name="get_definition">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="definitionNode">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="120" name="get_nodeTypedValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="typedValue">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="124" name="put_nodeTypedValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="typedValue">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="128" name="get_dataType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dataTypeName">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="132" name="put_dataType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dataTypeName">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="136" name="get_xml">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="xmlString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="140" name="transformNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="stylesheet">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="xmlString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="144" name="selectNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="queryString">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="resultList">
              <ptr>
                <ptr>
                  <type>IXMLDOMNodeList</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="148" name="selectSingleNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="queryString">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="resultNode">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="152" name="get_parsed">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="isParsed">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="156" name="get_namespaceURI">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="namespaceURI">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="160" name="get_prefix">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="prefixString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="164" name="get_baseName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nameString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="168" name="transformNodeToObject">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="stylesheet">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outputObject">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="172" name="get_data">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="data">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="176" name="put_data">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="data">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="180" name="get_length">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dataLength">
              <ptr>
                <prim domain="SignedInt" size="4" />
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="184" name="substringData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="offset">
              <prim domain="SignedInt" size="4" />
              <stack size="4" />
            </arg>
            <arg name="count">
              <prim domain="SignedInt" size="4" />
              <stack size="4" />
            </arg>
            <arg name="data">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="188" name="appendData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="data">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="192" name="insertData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="offset">
              <prim domain="SignedInt" size="4" />
              <stack size="4" />
            </arg>
            <arg name="data">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="196" name="deleteData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="offset">
              <prim domain="SignedInt" size="4" />
              <stack size="4" />
            </arg>
            <arg name="count">
              <prim domain="SignedInt" size="4" />
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="200" name="replaceData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCharacterData</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="offset">
              <prim domain="SignedInt" size="4" />
              <stack size="4" />
            </arg>
            <arg name="count">
              <prim domain="SignedInt" size="4" />
              <stack size="4" />
            </arg>
            <arg name="data">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IXMLDOMCharacterDataVtbl">
      <struct name="IXMLDOMCharacterDataVtbl" />
    </typedef>
    <struct name="IXMLDOMCharacterData">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IXMLDOMCharacterDataVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IXMLDOMAttributeVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetTypeInfoCount">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pctinfo">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="iTInfo">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="ppTInfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetIDsOfNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rgszNames">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cNames">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="rgDispId">
              <ptr>
                <type>DISPID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Invoke">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dispIdMember">
              <type>DISPID</type>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="wFlags">
              <type>WORD</type>
              <stack size="4" />
            </arg>
            <arg name="pDispParams">
              <ptr>
                <type>DISPPARAMS</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarResult">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pExcepInfo">
              <ptr>
                <type>EXCEPINFO</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="puArgErr">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="get_nodeName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="name">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="get_nodeValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="value">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="put_nodeValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="value">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="get_nodeType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="type">
              <ptr>
                <type>DOMNodeType</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="get_parentNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="parent">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="get_childNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="childList">
              <ptr>
                <ptr>
                  <type>IXMLDOMNodeList</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="get_firstChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="firstChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="get_lastChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lastChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="60" name="get_previousSibling">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="previousSibling">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="64" name="get_nextSibling">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nextSibling">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="68" name="get_attributes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="attributeMap">
              <ptr>
                <ptr>
                  <type>IXMLDOMNamedNodeMap</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="72" name="insertBefore">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="refChild">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
            <arg name="outNewChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="76" name="replaceChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="oldChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outOldChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="80" name="removeChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="childNode">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="oldChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="84" name="appendChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outNewChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="88" name="hasChildNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="hasChild">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="92" name="get_ownerDocument">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="XMLDOMDocument">
              <ptr>
                <ptr>
                  <type>IXMLDOMDocument</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="96" name="cloneNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="deep">
              <type>VARIANT_BOOL</type>
              <stack size="4" />
            </arg>
            <arg name="cloneRoot">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="100" name="get_nodeTypeString">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nodeType">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="104" name="get_text">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="text">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="108" name="put_text">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="text">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="112" name="get_specified">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="isSpecified">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="116" name="get_definition">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="definitionNode">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="120" name="get_nodeTypedValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="typedValue">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="124" name="put_nodeTypedValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="typedValue">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="128" name="get_dataType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dataTypeName">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="132" name="put_dataType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dataTypeName">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="136" name="get_xml">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="xmlString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="140" name="transformNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="stylesheet">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="xmlString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="144" name="selectNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="queryString">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="resultList">
              <ptr>
                <ptr>
                  <type>IXMLDOMNodeList</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="148" name="selectSingleNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="queryString">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="resultNode">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="152" name="get_parsed">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="isParsed">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="156" name="get_namespaceURI">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="namespaceURI">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="160" name="get_prefix">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="prefixString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="164" name="get_baseName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nameString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="168" name="transformNodeToObject">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="stylesheet">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outputObject">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="172" name="get_name">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="attributeName">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="176" name="get_value">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="attributeValue">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="180" name="put_value">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="attributeValue">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IXMLDOMAttributeVtbl">
      <struct name="IXMLDOMAttributeVtbl" />
    </typedef>
    <struct name="IXMLDOMAttribute">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IXMLDOMAttributeVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IXMLDOMElementVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetTypeInfoCount">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pctinfo">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="iTInfo">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="ppTInfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetIDsOfNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rgszNames">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cNames">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="rgDispId">
              <ptr>
                <type>DISPID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Invoke">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dispIdMember">
              <type>DISPID</type>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="wFlags">
              <type>WORD</type>
              <stack size="4" />
            </arg>
            <arg name="pDispParams">
              <ptr>
                <type>DISPPARAMS</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarResult">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pExcepInfo">
              <ptr>
                <type>EXCEPINFO</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="puArgErr">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="get_nodeName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="name">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="get_nodeValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="value">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="put_nodeValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="value">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="get_nodeType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="type">
              <ptr>
                <type>DOMNodeType</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="get_parentNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="parent">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="get_childNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="childList">
              <ptr>
                <ptr>
                  <type>IXMLDOMNodeList</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="get_firstChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="firstChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="get_lastChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lastChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="60" name="get_previousSibling">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="previousSibling">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="64" name="get_nextSibling">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nextSibling">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="68" name="get_attributes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="attributeMap">
              <ptr>
                <ptr>
                  <type>IXMLDOMNamedNodeMap</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="72" name="insertBefore">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="refChild">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
            <arg name="outNewChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="76" name="replaceChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="oldChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outOldChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="80" name="removeChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="childNode">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="oldChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="84" name="appendChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outNewChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="88" name="hasChildNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="hasChild">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="92" name="get_ownerDocument">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="XMLDOMDocument">
              <ptr>
                <ptr>
                  <type>IXMLDOMDocument</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="96" name="cloneNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="deep">
              <type>VARIANT_BOOL</type>
              <stack size="4" />
            </arg>
            <arg name="cloneRoot">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="100" name="get_nodeTypeString">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nodeType">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="104" name="get_text">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="text">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="108" name="put_text">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="text">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="112" name="get_specified">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="isSpecified">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="116" name="get_definition">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="definitionNode">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="120" name="get_nodeTypedValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="typedValue">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="124" name="put_nodeTypedValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="typedValue">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="128" name="get_dataType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dataTypeName">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="132" name="put_dataType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dataTypeName">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="136" name="get_xml">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="xmlString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="140" name="transformNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="stylesheet">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="xmlString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="144" name="selectNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="queryString">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="resultList">
              <ptr>
                <ptr>
                  <type>IXMLDOMNodeList</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="148" name="selectSingleNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="queryString">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="resultNode">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="152" name="get_parsed">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="isParsed">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="156" name="get_namespaceURI">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="namespaceURI">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="160" name="get_prefix">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="prefixString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="164" name="get_baseName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nameString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="168" name="transformNodeToObject">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="stylesheet">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outputObject">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="172" name="get_tagName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="tagName">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="176" name="getAttribute">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="name">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="value">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="180" name="setAttribute">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="name">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="value">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="184" name="removeAttribute">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="name">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="188" name="getAttributeNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="name">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="attributeNode">
              <ptr>
                <ptr>
                  <type>IXMLDOMAttribute</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="192" name="setAttributeNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="DOMAttribute">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="attributeNode">
              <ptr>
                <ptr>
                  <type>IXMLDOMAttribute</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="196" name="removeAttributeNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="DOMAttribute">
              <ptr>
                <type>IXMLDOMAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="attributeNode">
              <ptr>
                <ptr>
                  <type>IXMLDOMAttribute</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="200" name="getElementsByTagName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="tagName">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="resultList">
              <ptr>
                <ptr>
                  <type>IXMLDOMNodeList</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="204" name="normalize">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMElement</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IXMLDOMElementVtbl">
      <struct name="IXMLDOMElementVtbl" />
    </typedef>
    <struct name="IXMLDOMElement">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IXMLDOMElementVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IXMLDOMTextVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetTypeInfoCount">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pctinfo">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="iTInfo">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="ppTInfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetIDsOfNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rgszNames">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cNames">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="rgDispId">
              <ptr>
                <type>DISPID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Invoke">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dispIdMember">
              <type>DISPID</type>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="wFlags">
              <type>WORD</type>
              <stack size="4" />
            </arg>
            <arg name="pDispParams">
              <ptr>
                <type>DISPPARAMS</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarResult">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pExcepInfo">
              <ptr>
                <type>EXCEPINFO</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="puArgErr">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="get_nodeName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="name">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="get_nodeValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="value">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="put_nodeValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="value">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="get_nodeType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="type">
              <ptr>
                <type>DOMNodeType</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="get_parentNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="parent">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="get_childNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="childList">
              <ptr>
                <ptr>
                  <type>IXMLDOMNodeList</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="get_firstChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="firstChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="get_lastChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lastChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="60" name="get_previousSibling">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="previousSibling">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="64" name="get_nextSibling">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nextSibling">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="68" name="get_attributes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="attributeMap">
              <ptr>
                <ptr>
                  <type>IXMLDOMNamedNodeMap</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="72" name="insertBefore">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="refChild">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
            <arg name="outNewChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="76" name="replaceChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="oldChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outOldChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="80" name="removeChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="childNode">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="oldChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="84" name="appendChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outNewChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="88" name="hasChildNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="hasChild">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="92" name="get_ownerDocument">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="XMLDOMDocument">
              <ptr>
                <ptr>
                  <type>IXMLDOMDocument</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="96" name="cloneNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="deep">
              <type>VARIANT_BOOL</type>
              <stack size="4" />
            </arg>
            <arg name="cloneRoot">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="100" name="get_nodeTypeString">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nodeType">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="104" name="get_text">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="text">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="108" name="put_text">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="text">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="112" name="get_specified">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="isSpecified">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="116" name="get_definition">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="definitionNode">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="120" name="get_nodeTypedValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="typedValue">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="124" name="put_nodeTypedValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="typedValue">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="128" name="get_dataType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dataTypeName">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="132" name="put_dataType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dataTypeName">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="136" name="get_xml">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="xmlString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="140" name="transformNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="stylesheet">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="xmlString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="144" name="selectNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="queryString">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="resultList">
              <ptr>
                <ptr>
                  <type>IXMLDOMNodeList</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="148" name="selectSingleNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="queryString">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="resultNode">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="152" name="get_parsed">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="isParsed">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="156" name="get_namespaceURI">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="namespaceURI">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="160" name="get_prefix">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="prefixString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="164" name="get_baseName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nameString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="168" name="transformNodeToObject">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="stylesheet">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outputObject">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="172" name="get_data">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="data">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="176" name="put_data">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="data">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="180" name="get_length">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dataLength">
              <ptr>
                <prim domain="SignedInt" size="4" />
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="184" name="substringData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="offset">
              <prim domain="SignedInt" size="4" />
              <stack size="4" />
            </arg>
            <arg name="count">
              <prim domain="SignedInt" size="4" />
              <stack size="4" />
            </arg>
            <arg name="data">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="188" name="appendData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="data">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="192" name="insertData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="offset">
              <prim domain="SignedInt" size="4" />
              <stack size="4" />
            </arg>
            <arg name="data">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="196" name="deleteData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="offset">
              <prim domain="SignedInt" size="4" />
              <stack size="4" />
            </arg>
            <arg name="count">
              <prim domain="SignedInt" size="4" />
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="200" name="replaceData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="offset">
              <prim domain="SignedInt" size="4" />
              <stack size="4" />
            </arg>
            <arg name="count">
              <prim domain="SignedInt" size="4" />
              <stack size="4" />
            </arg>
            <arg name="data">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="204" name="splitText">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMText</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="offset">
              <prim domain="SignedInt" size="4" />
              <stack size="4" />
            </arg>
            <arg name="rightHandTextNode">
              <ptr>
                <ptr>
                  <type>IXMLDOMText</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IXMLDOMTextVtbl">
      <struct name="IXMLDOMTextVtbl" />
    </typedef>
    <struct name="IXMLDOMText">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IXMLDOMTextVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IXMLDOMCommentVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetTypeInfoCount">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pctinfo">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="iTInfo">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="ppTInfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetIDsOfNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rgszNames">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cNames">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="rgDispId">
              <ptr>
                <type>DISPID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Invoke">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dispIdMember">
              <type>DISPID</type>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="wFlags">
              <type>WORD</type>
              <stack size="4" />
            </arg>
            <arg name="pDispParams">
              <ptr>
                <type>DISPPARAMS</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarResult">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pExcepInfo">
              <ptr>
                <type>EXCEPINFO</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="puArgErr">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="get_nodeName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="name">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="get_nodeValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="value">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="put_nodeValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="value">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="get_nodeType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="type">
              <ptr>
                <type>DOMNodeType</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="get_parentNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="parent">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="get_childNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="childList">
              <ptr>
                <ptr>
                  <type>IXMLDOMNodeList</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="get_firstChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="firstChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="get_lastChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lastChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="60" name="get_previousSibling">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="previousSibling">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="64" name="get_nextSibling">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nextSibling">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="68" name="get_attributes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="attributeMap">
              <ptr>
                <ptr>
                  <type>IXMLDOMNamedNodeMap</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="72" name="insertBefore">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="refChild">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
            <arg name="outNewChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="76" name="replaceChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="oldChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outOldChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="80" name="removeChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="childNode">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="oldChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="84" name="appendChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outNewChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="88" name="hasChildNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="hasChild">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="92" name="get_ownerDocument">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="XMLDOMDocument">
              <ptr>
                <ptr>
                  <type>IXMLDOMDocument</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="96" name="cloneNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="deep">
              <type>VARIANT_BOOL</type>
              <stack size="4" />
            </arg>
            <arg name="cloneRoot">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="100" name="get_nodeTypeString">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nodeType">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="104" name="get_text">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="text">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="108" name="put_text">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="text">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="112" name="get_specified">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="isSpecified">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="116" name="get_definition">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="definitionNode">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="120" name="get_nodeTypedValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="typedValue">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="124" name="put_nodeTypedValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="typedValue">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="128" name="get_dataType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dataTypeName">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="132" name="put_dataType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dataTypeName">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="136" name="get_xml">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="xmlString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="140" name="transformNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="stylesheet">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="xmlString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="144" name="selectNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="queryString">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="resultList">
              <ptr>
                <ptr>
                  <type>IXMLDOMNodeList</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="148" name="selectSingleNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="queryString">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="resultNode">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="152" name="get_parsed">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="isParsed">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="156" name="get_namespaceURI">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="namespaceURI">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="160" name="get_prefix">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="prefixString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="164" name="get_baseName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nameString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="168" name="transformNodeToObject">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="stylesheet">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outputObject">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="172" name="get_data">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="data">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="176" name="put_data">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="data">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="180" name="get_length">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dataLength">
              <ptr>
                <prim domain="SignedInt" size="4" />
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="184" name="substringData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="offset">
              <prim domain="SignedInt" size="4" />
              <stack size="4" />
            </arg>
            <arg name="count">
              <prim domain="SignedInt" size="4" />
              <stack size="4" />
            </arg>
            <arg name="data">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="188" name="appendData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="data">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="192" name="insertData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="offset">
              <prim domain="SignedInt" size="4" />
              <stack size="4" />
            </arg>
            <arg name="data">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="196" name="deleteData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="offset">
              <prim domain="SignedInt" size="4" />
              <stack size="4" />
            </arg>
            <arg name="count">
              <prim domain="SignedInt" size="4" />
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="200" name="replaceData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMComment</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="offset">
              <prim domain="SignedInt" size="4" />
              <stack size="4" />
            </arg>
            <arg name="count">
              <prim domain="SignedInt" size="4" />
              <stack size="4" />
            </arg>
            <arg name="data">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IXMLDOMCommentVtbl">
      <struct name="IXMLDOMCommentVtbl" />
    </typedef>
    <struct name="IXMLDOMComment">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IXMLDOMCommentVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IXMLDOMProcessingInstructionVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetTypeInfoCount">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pctinfo">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="iTInfo">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="ppTInfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetIDsOfNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rgszNames">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cNames">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="rgDispId">
              <ptr>
                <type>DISPID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Invoke">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dispIdMember">
              <type>DISPID</type>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="wFlags">
              <type>WORD</type>
              <stack size="4" />
            </arg>
            <arg name="pDispParams">
              <ptr>
                <type>DISPPARAMS</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarResult">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pExcepInfo">
              <ptr>
                <type>EXCEPINFO</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="puArgErr">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="get_nodeName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="name">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="get_nodeValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="value">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="put_nodeValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="value">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="get_nodeType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="type">
              <ptr>
                <type>DOMNodeType</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="get_parentNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="parent">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="get_childNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="childList">
              <ptr>
                <ptr>
                  <type>IXMLDOMNodeList</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="get_firstChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="firstChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="get_lastChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lastChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="60" name="get_previousSibling">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="previousSibling">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="64" name="get_nextSibling">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nextSibling">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="68" name="get_attributes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="attributeMap">
              <ptr>
                <ptr>
                  <type>IXMLDOMNamedNodeMap</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="72" name="insertBefore">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="refChild">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
            <arg name="outNewChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="76" name="replaceChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="oldChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outOldChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="80" name="removeChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="childNode">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="oldChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="84" name="appendChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outNewChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="88" name="hasChildNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="hasChild">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="92" name="get_ownerDocument">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="XMLDOMDocument">
              <ptr>
                <ptr>
                  <type>IXMLDOMDocument</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="96" name="cloneNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="deep">
              <type>VARIANT_BOOL</type>
              <stack size="4" />
            </arg>
            <arg name="cloneRoot">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="100" name="get_nodeTypeString">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nodeType">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="104" name="get_text">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="text">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="108" name="put_text">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="text">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="112" name="get_specified">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="isSpecified">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="116" name="get_definition">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="definitionNode">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="120" name="get_nodeTypedValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="typedValue">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="124" name="put_nodeTypedValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="typedValue">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="128" name="get_dataType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dataTypeName">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="132" name="put_dataType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dataTypeName">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="136" name="get_xml">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="xmlString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="140" name="transformNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="stylesheet">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="xmlString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="144" name="selectNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="queryString">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="resultList">
              <ptr>
                <ptr>
                  <type>IXMLDOMNodeList</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="148" name="selectSingleNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="queryString">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="resultNode">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="152" name="get_parsed">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="isParsed">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="156" name="get_namespaceURI">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="namespaceURI">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="160" name="get_prefix">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="prefixString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="164" name="get_baseName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nameString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="168" name="transformNodeToObject">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="stylesheet">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outputObject">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="172" name="get_target">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="name">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="176" name="get_data">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="value">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="180" name="put_data">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMProcessingInstruction</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="value">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IXMLDOMProcessingInstructionVtbl">
      <struct name="IXMLDOMProcessingInstructionVtbl" />
    </typedef>
    <struct name="IXMLDOMProcessingInstruction">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IXMLDOMProcessingInstructionVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IXMLDOMCDATASectionVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetTypeInfoCount">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pctinfo">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="iTInfo">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="ppTInfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetIDsOfNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rgszNames">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cNames">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="rgDispId">
              <ptr>
                <type>DISPID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Invoke">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dispIdMember">
              <type>DISPID</type>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="wFlags">
              <type>WORD</type>
              <stack size="4" />
            </arg>
            <arg name="pDispParams">
              <ptr>
                <type>DISPPARAMS</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarResult">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pExcepInfo">
              <ptr>
                <type>EXCEPINFO</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="puArgErr">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="get_nodeName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="name">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="get_nodeValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="value">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="put_nodeValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="value">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="get_nodeType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="type">
              <ptr>
                <type>DOMNodeType</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="get_parentNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="parent">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="get_childNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="childList">
              <ptr>
                <ptr>
                  <type>IXMLDOMNodeList</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="get_firstChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="firstChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="get_lastChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lastChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="60" name="get_previousSibling">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="previousSibling">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="64" name="get_nextSibling">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nextSibling">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="68" name="get_attributes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="attributeMap">
              <ptr>
                <ptr>
                  <type>IXMLDOMNamedNodeMap</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="72" name="insertBefore">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="refChild">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
            <arg name="outNewChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="76" name="replaceChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="oldChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outOldChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="80" name="removeChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="childNode">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="oldChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="84" name="appendChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outNewChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="88" name="hasChildNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="hasChild">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="92" name="get_ownerDocument">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="XMLDOMDocument">
              <ptr>
                <ptr>
                  <type>IXMLDOMDocument</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="96" name="cloneNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="deep">
              <type>VARIANT_BOOL</type>
              <stack size="4" />
            </arg>
            <arg name="cloneRoot">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="100" name="get_nodeTypeString">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nodeType">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="104" name="get_text">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="text">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="108" name="put_text">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="text">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="112" name="get_specified">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="isSpecified">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="116" name="get_definition">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="definitionNode">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="120" name="get_nodeTypedValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="typedValue">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="124" name="put_nodeTypedValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="typedValue">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="128" name="get_dataType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dataTypeName">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="132" name="put_dataType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dataTypeName">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="136" name="get_xml">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="xmlString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="140" name="transformNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="stylesheet">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="xmlString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="144" name="selectNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="queryString">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="resultList">
              <ptr>
                <ptr>
                  <type>IXMLDOMNodeList</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="148" name="selectSingleNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="queryString">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="resultNode">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="152" name="get_parsed">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="isParsed">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="156" name="get_namespaceURI">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="namespaceURI">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="160" name="get_prefix">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="prefixString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="164" name="get_baseName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nameString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="168" name="transformNodeToObject">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="stylesheet">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outputObject">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="172" name="get_data">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="data">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="176" name="put_data">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="data">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="180" name="get_length">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dataLength">
              <ptr>
                <prim domain="SignedInt" size="4" />
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="184" name="substringData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="offset">
              <prim domain="SignedInt" size="4" />
              <stack size="4" />
            </arg>
            <arg name="count">
              <prim domain="SignedInt" size="4" />
              <stack size="4" />
            </arg>
            <arg name="data">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="188" name="appendData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="data">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="192" name="insertData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="offset">
              <prim domain="SignedInt" size="4" />
              <stack size="4" />
            </arg>
            <arg name="data">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="196" name="deleteData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="offset">
              <prim domain="SignedInt" size="4" />
              <stack size="4" />
            </arg>
            <arg name="count">
              <prim domain="SignedInt" size="4" />
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="200" name="replaceData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="offset">
              <prim domain="SignedInt" size="4" />
              <stack size="4" />
            </arg>
            <arg name="count">
              <prim domain="SignedInt" size="4" />
              <stack size="4" />
            </arg>
            <arg name="data">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="204" name="splitText">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMCDATASection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="offset">
              <prim domain="SignedInt" size="4" />
              <stack size="4" />
            </arg>
            <arg name="rightHandTextNode">
              <ptr>
                <ptr>
                  <type>IXMLDOMText</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IXMLDOMCDATASectionVtbl">
      <struct name="IXMLDOMCDATASectionVtbl" />
    </typedef>
    <struct name="IXMLDOMCDATASection">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IXMLDOMCDATASectionVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IXMLDOMDocumentTypeVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetTypeInfoCount">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pctinfo">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="iTInfo">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="ppTInfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetIDsOfNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rgszNames">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cNames">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="rgDispId">
              <ptr>
                <type>DISPID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Invoke">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dispIdMember">
              <type>DISPID</type>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="wFlags">
              <type>WORD</type>
              <stack size="4" />
            </arg>
            <arg name="pDispParams">
              <ptr>
                <type>DISPPARAMS</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarResult">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pExcepInfo">
              <ptr>
                <type>EXCEPINFO</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="puArgErr">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="get_nodeName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="name">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="get_nodeValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="value">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="put_nodeValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="value">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="get_nodeType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="type">
              <ptr>
                <type>DOMNodeType</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="get_parentNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="parent">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="get_childNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="childList">
              <ptr>
                <ptr>
                  <type>IXMLDOMNodeList</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="get_firstChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="firstChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="get_lastChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lastChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="60" name="get_previousSibling">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="previousSibling">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="64" name="get_nextSibling">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nextSibling">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="68" name="get_attributes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="attributeMap">
              <ptr>
                <ptr>
                  <type>IXMLDOMNamedNodeMap</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="72" name="insertBefore">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="refChild">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
            <arg name="outNewChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="76" name="replaceChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="oldChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outOldChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="80" name="removeChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="childNode">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="oldChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="84" name="appendChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outNewChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="88" name="hasChildNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="hasChild">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="92" name="get_ownerDocument">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="XMLDOMDocument">
              <ptr>
                <ptr>
                  <type>IXMLDOMDocument</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="96" name="cloneNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="deep">
              <type>VARIANT_BOOL</type>
              <stack size="4" />
            </arg>
            <arg name="cloneRoot">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="100" name="get_nodeTypeString">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nodeType">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="104" name="get_text">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="text">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="108" name="put_text">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="text">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="112" name="get_specified">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="isSpecified">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="116" name="get_definition">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="definitionNode">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="120" name="get_nodeTypedValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="typedValue">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="124" name="put_nodeTypedValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="typedValue">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="128" name="get_dataType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dataTypeName">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="132" name="put_dataType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dataTypeName">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="136" name="get_xml">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="xmlString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="140" name="transformNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="stylesheet">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="xmlString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="144" name="selectNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="queryString">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="resultList">
              <ptr>
                <ptr>
                  <type>IXMLDOMNodeList</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="148" name="selectSingleNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="queryString">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="resultNode">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="152" name="get_parsed">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="isParsed">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="156" name="get_namespaceURI">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="namespaceURI">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="160" name="get_prefix">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="prefixString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="164" name="get_baseName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nameString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="168" name="transformNodeToObject">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="stylesheet">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outputObject">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="172" name="get_name">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rootName">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="176" name="get_entities">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="entityMap">
              <ptr>
                <ptr>
                  <type>IXMLDOMNamedNodeMap</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="180" name="get_notations">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMDocumentType</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="notationMap">
              <ptr>
                <ptr>
                  <type>IXMLDOMNamedNodeMap</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IXMLDOMDocumentTypeVtbl">
      <struct name="IXMLDOMDocumentTypeVtbl" />
    </typedef>
    <struct name="IXMLDOMDocumentType">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IXMLDOMDocumentTypeVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IXMLDOMNotationVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetTypeInfoCount">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pctinfo">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="iTInfo">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="ppTInfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetIDsOfNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rgszNames">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cNames">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="rgDispId">
              <ptr>
                <type>DISPID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Invoke">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dispIdMember">
              <type>DISPID</type>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="wFlags">
              <type>WORD</type>
              <stack size="4" />
            </arg>
            <arg name="pDispParams">
              <ptr>
                <type>DISPPARAMS</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarResult">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pExcepInfo">
              <ptr>
                <type>EXCEPINFO</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="puArgErr">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="get_nodeName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="name">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="get_nodeValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="value">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="put_nodeValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="value">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="get_nodeType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="type">
              <ptr>
                <type>DOMNodeType</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="get_parentNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="parent">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="get_childNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="childList">
              <ptr>
                <ptr>
                  <type>IXMLDOMNodeList</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="get_firstChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="firstChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="get_lastChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lastChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="60" name="get_previousSibling">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="previousSibling">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="64" name="get_nextSibling">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nextSibling">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="68" name="get_attributes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="attributeMap">
              <ptr>
                <ptr>
                  <type>IXMLDOMNamedNodeMap</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="72" name="insertBefore">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="refChild">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
            <arg name="outNewChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="76" name="replaceChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="oldChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outOldChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="80" name="removeChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="childNode">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="oldChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="84" name="appendChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outNewChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="88" name="hasChildNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="hasChild">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="92" name="get_ownerDocument">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="XMLDOMDocument">
              <ptr>
                <ptr>
                  <type>IXMLDOMDocument</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="96" name="cloneNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="deep">
              <type>VARIANT_BOOL</type>
              <stack size="4" />
            </arg>
            <arg name="cloneRoot">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="100" name="get_nodeTypeString">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nodeType">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="104" name="get_text">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="text">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="108" name="put_text">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="text">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="112" name="get_specified">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="isSpecified">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="116" name="get_definition">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="definitionNode">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="120" name="get_nodeTypedValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="typedValue">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="124" name="put_nodeTypedValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="typedValue">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="128" name="get_dataType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dataTypeName">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="132" name="put_dataType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dataTypeName">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="136" name="get_xml">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="xmlString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="140" name="transformNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="stylesheet">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="xmlString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="144" name="selectNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="queryString">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="resultList">
              <ptr>
                <ptr>
                  <type>IXMLDOMNodeList</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="148" name="selectSingleNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="queryString">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="resultNode">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="152" name="get_parsed">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="isParsed">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="156" name="get_namespaceURI">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="namespaceURI">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="160" name="get_prefix">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="prefixString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="164" name="get_baseName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nameString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="168" name="transformNodeToObject">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="stylesheet">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outputObject">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="172" name="get_publicId">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="publicID">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="176" name="get_systemId">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMNotation</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="systemID">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IXMLDOMNotationVtbl">
      <struct name="IXMLDOMNotationVtbl" />
    </typedef>
    <struct name="IXMLDOMNotation">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IXMLDOMNotationVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IXMLDOMEntityVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetTypeInfoCount">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pctinfo">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="iTInfo">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="ppTInfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetIDsOfNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rgszNames">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cNames">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="rgDispId">
              <ptr>
                <type>DISPID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Invoke">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dispIdMember">
              <type>DISPID</type>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="wFlags">
              <type>WORD</type>
              <stack size="4" />
            </arg>
            <arg name="pDispParams">
              <ptr>
                <type>DISPPARAMS</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarResult">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pExcepInfo">
              <ptr>
                <type>EXCEPINFO</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="puArgErr">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="get_nodeName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="name">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="get_nodeValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="value">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="put_nodeValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="value">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="get_nodeType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="type">
              <ptr>
                <type>DOMNodeType</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="get_parentNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="parent">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="get_childNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="childList">
              <ptr>
                <ptr>
                  <type>IXMLDOMNodeList</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="get_firstChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="firstChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="get_lastChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lastChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="60" name="get_previousSibling">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="previousSibling">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="64" name="get_nextSibling">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nextSibling">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="68" name="get_attributes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="attributeMap">
              <ptr>
                <ptr>
                  <type>IXMLDOMNamedNodeMap</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="72" name="insertBefore">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="refChild">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
            <arg name="outNewChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="76" name="replaceChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="oldChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outOldChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="80" name="removeChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="childNode">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="oldChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="84" name="appendChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outNewChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="88" name="hasChildNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="hasChild">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="92" name="get_ownerDocument">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="XMLDOMDocument">
              <ptr>
                <ptr>
                  <type>IXMLDOMDocument</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="96" name="cloneNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="deep">
              <type>VARIANT_BOOL</type>
              <stack size="4" />
            </arg>
            <arg name="cloneRoot">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="100" name="get_nodeTypeString">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nodeType">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="104" name="get_text">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="text">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="108" name="put_text">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="text">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="112" name="get_specified">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="isSpecified">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="116" name="get_definition">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="definitionNode">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="120" name="get_nodeTypedValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="typedValue">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="124" name="put_nodeTypedValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="typedValue">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="128" name="get_dataType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dataTypeName">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="132" name="put_dataType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dataTypeName">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="136" name="get_xml">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="xmlString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="140" name="transformNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="stylesheet">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="xmlString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="144" name="selectNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="queryString">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="resultList">
              <ptr>
                <ptr>
                  <type>IXMLDOMNodeList</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="148" name="selectSingleNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="queryString">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="resultNode">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="152" name="get_parsed">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="isParsed">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="156" name="get_namespaceURI">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="namespaceURI">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="160" name="get_prefix">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="prefixString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="164" name="get_baseName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nameString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="168" name="transformNodeToObject">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="stylesheet">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outputObject">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="172" name="get_publicId">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="publicID">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="176" name="get_systemId">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="systemID">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="180" name="get_notationName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="name">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IXMLDOMEntityVtbl">
      <struct name="IXMLDOMEntityVtbl" />
    </typedef>
    <struct name="IXMLDOMEntity">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IXMLDOMEntityVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IXMLDOMEntityReferenceVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetTypeInfoCount">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pctinfo">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="iTInfo">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="ppTInfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetIDsOfNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rgszNames">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cNames">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="rgDispId">
              <ptr>
                <type>DISPID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Invoke">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dispIdMember">
              <type>DISPID</type>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="wFlags">
              <type>WORD</type>
              <stack size="4" />
            </arg>
            <arg name="pDispParams">
              <ptr>
                <type>DISPPARAMS</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarResult">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pExcepInfo">
              <ptr>
                <type>EXCEPINFO</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="puArgErr">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="get_nodeName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="name">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="get_nodeValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="value">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="put_nodeValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="value">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="get_nodeType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="type">
              <ptr>
                <type>DOMNodeType</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="get_parentNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="parent">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="get_childNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="childList">
              <ptr>
                <ptr>
                  <type>IXMLDOMNodeList</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="get_firstChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="firstChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="get_lastChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lastChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="60" name="get_previousSibling">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="previousSibling">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="64" name="get_nextSibling">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nextSibling">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="68" name="get_attributes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="attributeMap">
              <ptr>
                <ptr>
                  <type>IXMLDOMNamedNodeMap</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="72" name="insertBefore">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="refChild">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
            <arg name="outNewChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="76" name="replaceChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="oldChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outOldChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="80" name="removeChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="childNode">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="oldChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="84" name="appendChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outNewChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="88" name="hasChildNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="hasChild">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="92" name="get_ownerDocument">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="XMLDOMDocument">
              <ptr>
                <ptr>
                  <type>IXMLDOMDocument</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="96" name="cloneNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="deep">
              <type>VARIANT_BOOL</type>
              <stack size="4" />
            </arg>
            <arg name="cloneRoot">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="100" name="get_nodeTypeString">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nodeType">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="104" name="get_text">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="text">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="108" name="put_text">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="text">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="112" name="get_specified">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="isSpecified">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="116" name="get_definition">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="definitionNode">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="120" name="get_nodeTypedValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="typedValue">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="124" name="put_nodeTypedValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="typedValue">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="128" name="get_dataType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dataTypeName">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="132" name="put_dataType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dataTypeName">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="136" name="get_xml">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="xmlString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="140" name="transformNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="stylesheet">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="xmlString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="144" name="selectNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="queryString">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="resultList">
              <ptr>
                <ptr>
                  <type>IXMLDOMNodeList</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="148" name="selectSingleNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="queryString">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="resultNode">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="152" name="get_parsed">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="isParsed">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="156" name="get_namespaceURI">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="namespaceURI">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="160" name="get_prefix">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="prefixString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="164" name="get_baseName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nameString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="168" name="transformNodeToObject">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMEntityReference</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="stylesheet">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outputObject">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IXMLDOMEntityReferenceVtbl">
      <struct name="IXMLDOMEntityReferenceVtbl" />
    </typedef>
    <struct name="IXMLDOMEntityReference">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IXMLDOMEntityReferenceVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IXMLDOMParseErrorVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMParseError</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMParseError</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMParseError</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetTypeInfoCount">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMParseError</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pctinfo">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMParseError</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="iTInfo">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="ppTInfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetIDsOfNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMParseError</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rgszNames">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cNames">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="rgDispId">
              <ptr>
                <type>DISPID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Invoke">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMParseError</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dispIdMember">
              <type>DISPID</type>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="wFlags">
              <type>WORD</type>
              <stack size="4" />
            </arg>
            <arg name="pDispParams">
              <ptr>
                <type>DISPPARAMS</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarResult">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pExcepInfo">
              <ptr>
                <type>EXCEPINFO</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="puArgErr">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="get_errorCode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMParseError</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="errorCode">
              <ptr>
                <prim domain="SignedInt" size="4" />
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="get_url">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMParseError</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="urlString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="get_reason">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMParseError</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="reasonString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="get_srcText">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMParseError</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="sourceString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="get_line">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMParseError</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lineNumber">
              <ptr>
                <prim domain="SignedInt" size="4" />
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="get_linepos">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMParseError</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="linePosition">
              <ptr>
                <prim domain="SignedInt" size="4" />
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="get_filepos">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDOMParseError</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="filePosition">
              <ptr>
                <prim domain="SignedInt" size="4" />
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IXMLDOMParseErrorVtbl">
      <struct name="IXMLDOMParseErrorVtbl" />
    </typedef>
    <struct name="IXMLDOMParseError">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IXMLDOMParseErrorVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IXTLRuntimeVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetTypeInfoCount">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pctinfo">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="iTInfo">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="ppTInfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetIDsOfNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rgszNames">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cNames">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="rgDispId">
              <ptr>
                <type>DISPID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Invoke">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dispIdMember">
              <type>DISPID</type>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="wFlags">
              <type>WORD</type>
              <stack size="4" />
            </arg>
            <arg name="pDispParams">
              <ptr>
                <type>DISPPARAMS</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarResult">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pExcepInfo">
              <ptr>
                <type>EXCEPINFO</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="puArgErr">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="get_nodeName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="name">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="get_nodeValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="value">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="put_nodeValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="value">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="get_nodeType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="type">
              <ptr>
                <type>DOMNodeType</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="get_parentNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="parent">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="get_childNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="childList">
              <ptr>
                <ptr>
                  <type>IXMLDOMNodeList</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="get_firstChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="firstChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="get_lastChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lastChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="60" name="get_previousSibling">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="previousSibling">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="64" name="get_nextSibling">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nextSibling">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="68" name="get_attributes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="attributeMap">
              <ptr>
                <ptr>
                  <type>IXMLDOMNamedNodeMap</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="72" name="insertBefore">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="refChild">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
            <arg name="outNewChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="76" name="replaceChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="oldChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outOldChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="80" name="removeChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="childNode">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="oldChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="84" name="appendChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="newChild">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outNewChild">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="88" name="hasChildNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="hasChild">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="92" name="get_ownerDocument">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="XMLDOMDocument">
              <ptr>
                <ptr>
                  <type>IXMLDOMDocument</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="96" name="cloneNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="deep">
              <type>VARIANT_BOOL</type>
              <stack size="4" />
            </arg>
            <arg name="cloneRoot">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="100" name="get_nodeTypeString">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nodeType">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="104" name="get_text">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="text">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="108" name="put_text">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="text">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="112" name="get_specified">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="isSpecified">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="116" name="get_definition">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="definitionNode">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="120" name="get_nodeTypedValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="typedValue">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="124" name="put_nodeTypedValue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="typedValue">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="128" name="get_dataType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dataTypeName">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="132" name="put_dataType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dataTypeName">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="136" name="get_xml">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="xmlString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="140" name="transformNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="stylesheet">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="xmlString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="144" name="selectNodes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="queryString">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="resultList">
              <ptr>
                <ptr>
                  <type>IXMLDOMNodeList</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="148" name="selectSingleNode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="queryString">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="resultNode">
              <ptr>
                <ptr>
                  <type>IXMLDOMNode</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="152" name="get_parsed">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="isParsed">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="156" name="get_namespaceURI">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="namespaceURI">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="160" name="get_prefix">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="prefixString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="164" name="get_baseName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nameString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="168" name="transformNodeToObject">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="stylesheet">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="outputObject">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="172" name="uniqueID">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pNode">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pID">
              <ptr>
                <prim domain="SignedInt" size="4" />
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="176" name="depth">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pNode">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pDepth">
              <ptr>
                <prim domain="SignedInt" size="4" />
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="180" name="childNumber">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pNode">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pNumber">
              <ptr>
                <prim domain="SignedInt" size="4" />
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="184" name="ancestorChildNumber">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="bstrNodeName">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="pNode">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pNumber">
              <ptr>
                <prim domain="SignedInt" size="4" />
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="188" name="absoluteChildNumber">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pNode">
              <ptr>
                <type>IXMLDOMNode</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pNumber">
              <ptr>
                <prim domain="SignedInt" size="4" />
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="192" name="formatIndex">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lIndex">
              <prim domain="SignedInt" size="4" />
              <stack size="4" />
            </arg>
            <arg name="bstrFormat">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="pbstrFormattedString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="196" name="formatNumber">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dblNumber">
              <prim domain="Real" size="8" />
              <stack size="8" />
            </arg>
            <arg name="bstrFormat">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="pbstrFormattedString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="200" name="formatDate">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="varDate">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
            <arg name="bstrFormat">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="varDestLocale">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
            <arg name="pbstrFormattedString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="204" name="formatTime">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXTLRuntime</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="varTime">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
            <arg name="bstrFormat">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="varDestLocale">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
            <arg name="pbstrFormattedString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IXTLRuntimeVtbl">
      <struct name="IXTLRuntimeVtbl" />
    </typedef>
    <struct name="IXTLRuntime">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IXTLRuntimeVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="XMLDOMDocumentEventsVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>XMLDOMDocumentEvents</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>XMLDOMDocumentEvents</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>XMLDOMDocumentEvents</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetTypeInfoCount">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>XMLDOMDocumentEvents</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pctinfo">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>XMLDOMDocumentEvents</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="iTInfo">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="ppTInfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetIDsOfNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>XMLDOMDocumentEvents</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rgszNames">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cNames">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="rgDispId">
              <ptr>
                <type>DISPID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Invoke">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>XMLDOMDocumentEvents</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dispIdMember">
              <type>DISPID</type>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="wFlags">
              <type>WORD</type>
              <stack size="4" />
            </arg>
            <arg name="pDispParams">
              <ptr>
                <type>DISPPARAMS</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarResult">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pExcepInfo">
              <ptr>
                <type>EXCEPINFO</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="puArgErr">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="XMLDOMDocumentEventsVtbl">
      <struct name="XMLDOMDocumentEventsVtbl" />
    </typedef>
    <struct name="XMLDOMDocumentEvents">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="XMLDOMDocumentEventsVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IXMLHttpRequestVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLHttpRequest</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLHttpRequest</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLHttpRequest</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetTypeInfoCount">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLHttpRequest</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pctinfo">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLHttpRequest</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="iTInfo">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="ppTInfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetIDsOfNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLHttpRequest</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rgszNames">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cNames">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="rgDispId">
              <ptr>
                <type>DISPID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Invoke">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLHttpRequest</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dispIdMember">
              <type>DISPID</type>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="wFlags">
              <type>WORD</type>
              <stack size="4" />
            </arg>
            <arg name="pDispParams">
              <ptr>
                <type>DISPPARAMS</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarResult">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pExcepInfo">
              <ptr>
                <type>EXCEPINFO</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="puArgErr">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="open">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLHttpRequest</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="bstrMethod">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="bstrUrl">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="varAsync">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
            <arg name="bstrUser">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
            <arg name="bstrPassword">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="setRequestHeader">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLHttpRequest</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="bstrHeader">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="bstrValue">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="getResponseHeader">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLHttpRequest</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="bstrHeader">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="pbstrValue">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="getAllResponseHeaders">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLHttpRequest</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbstrHeaders">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="send">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLHttpRequest</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="varBody">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="abort">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLHttpRequest</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="get_status">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLHttpRequest</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="plStatus">
              <ptr>
                <prim domain="SignedInt" size="4" />
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="get_statusText">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLHttpRequest</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbstrStatus">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="60" name="get_responseXML">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLHttpRequest</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppBody">
              <ptr>
                <ptr>
                  <type>IDispatch</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="64" name="get_responseText">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLHttpRequest</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbstrBody">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="68" name="get_responseBody">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLHttpRequest</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pvarBody">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="72" name="get_responseStream">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLHttpRequest</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pvarBody">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="76" name="get_readyState">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLHttpRequest</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="plState">
              <ptr>
                <prim domain="SignedInt" size="4" />
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="80" name="put_onreadystatechange">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLHttpRequest</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pReadyStateSink">
              <ptr>
                <type>IDispatch</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IXMLHttpRequestVtbl">
      <struct name="IXMLHttpRequestVtbl" />
    </typedef>
    <struct name="IXMLHttpRequest">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IXMLHttpRequestVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IXMLDSOControlVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDSOControl</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDSOControl</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDSOControl</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetTypeInfoCount">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDSOControl</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pctinfo">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDSOControl</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="iTInfo">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="ppTInfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetIDsOfNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDSOControl</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rgszNames">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cNames">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="rgDispId">
              <ptr>
                <type>DISPID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Invoke">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDSOControl</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dispIdMember">
              <type>DISPID</type>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="wFlags">
              <type>WORD</type>
              <stack size="4" />
            </arg>
            <arg name="pDispParams">
              <ptr>
                <type>DISPPARAMS</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarResult">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pExcepInfo">
              <ptr>
                <type>EXCEPINFO</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="puArgErr">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="get_XMLDocument">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDSOControl</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppDoc">
              <ptr>
                <ptr>
                  <type>IXMLDOMDocument</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="put_XMLDocument">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDSOControl</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppDoc">
              <ptr>
                <type>IXMLDOMDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="get_JavaDSOCompatible">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDSOControl</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fJavaDSOCompatible">
              <ptr>
                <type>BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="put_JavaDSOCompatible">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDSOControl</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fJavaDSOCompatible">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="get_readyState">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDSOControl</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="state">
              <ptr>
                <prim domain="SignedInt" size="4" />
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IXMLDSOControlVtbl">
      <struct name="IXMLDSOControlVtbl" />
    </typedef>
    <struct name="IXMLDSOControl">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IXMLDSOControlVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IXMLElementCollectionVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElementCollection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElementCollection</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElementCollection</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetTypeInfoCount">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElementCollection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pctinfo">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElementCollection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="iTInfo">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="ppTInfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetIDsOfNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElementCollection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rgszNames">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cNames">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="rgDispId">
              <ptr>
                <type>DISPID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Invoke">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElementCollection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dispIdMember">
              <type>DISPID</type>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="wFlags">
              <type>WORD</type>
              <stack size="4" />
            </arg>
            <arg name="pDispParams">
              <ptr>
                <type>DISPPARAMS</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarResult">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pExcepInfo">
              <ptr>
                <type>EXCEPINFO</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="puArgErr">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="put_length">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElementCollection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="v">
              <prim domain="SignedInt" size="4" />
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="get_length">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElementCollection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="p">
              <ptr>
                <prim domain="SignedInt" size="4" />
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="get__newEnum">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElementCollection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppUnk">
              <ptr>
                <ptr>
                  <type>IUnknown</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="item">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElementCollection</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="var1">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
            <arg name="var2">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
            <arg name="ppDisp">
              <ptr>
                <ptr>
                  <type>IDispatch</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IXMLElementCollectionVtbl">
      <struct name="IXMLElementCollectionVtbl" />
    </typedef>
    <struct name="IXMLElementCollection">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IXMLElementCollectionVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IXMLDocumentVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetTypeInfoCount">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pctinfo">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="iTInfo">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="ppTInfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetIDsOfNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rgszNames">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cNames">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="rgDispId">
              <ptr>
                <type>DISPID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Invoke">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dispIdMember">
              <type>DISPID</type>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="wFlags">
              <type>WORD</type>
              <stack size="4" />
            </arg>
            <arg name="pDispParams">
              <ptr>
                <type>DISPPARAMS</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarResult">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pExcepInfo">
              <ptr>
                <type>EXCEPINFO</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="puArgErr">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="get_root">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="p">
              <ptr>
                <ptr>
                  <type>IXMLElement</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="get_fileSize">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="p">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="get_fileModifiedDate">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="p">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="get_fileUpdatedDate">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="p">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="get_URL">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="p">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="put_URL">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="p">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="get_mimeType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="p">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="get_readyState">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pl">
              <ptr>
                <prim domain="SignedInt" size="4" />
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="60" name="get_charset">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="p">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="64" name="put_charset">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="p">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="68" name="get_version">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="p">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="72" name="get_doctype">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="p">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="76" name="get_dtdURL">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="p">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="80" name="createElement">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="vType">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
            <arg name="var1">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
            <arg name="ppElem">
              <ptr>
                <ptr>
                  <type>IXMLElement</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IXMLDocumentVtbl">
      <struct name="IXMLDocumentVtbl" />
    </typedef>
    <struct name="IXMLDocument">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IXMLDocumentVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IXMLDocument2Vtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetTypeInfoCount">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pctinfo">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="iTInfo">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="ppTInfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetIDsOfNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rgszNames">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cNames">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="rgDispId">
              <ptr>
                <type>DISPID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Invoke">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dispIdMember">
              <type>DISPID</type>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="wFlags">
              <type>WORD</type>
              <stack size="4" />
            </arg>
            <arg name="pDispParams">
              <ptr>
                <type>DISPPARAMS</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarResult">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pExcepInfo">
              <ptr>
                <type>EXCEPINFO</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="puArgErr">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="get_root">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="p">
              <ptr>
                <ptr>
                  <type>IXMLElement2</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="get_fileSize">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="p">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="get_fileModifiedDate">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="p">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="get_fileUpdatedDate">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="p">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="get_URL">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="p">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="put_URL">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="p">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="get_mimeType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="p">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="get_readyState">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pl">
              <ptr>
                <prim domain="SignedInt" size="4" />
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="60" name="get_charset">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="p">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="64" name="put_charset">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="p">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="68" name="get_version">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="p">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="72" name="get_doctype">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="p">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="76" name="get_dtdURL">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="p">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="80" name="createElement">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="vType">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
            <arg name="var1">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
            <arg name="ppElem">
              <ptr>
                <ptr>
                  <type>IXMLElement2</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="84" name="get_async">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pf">
              <ptr>
                <type>VARIANT_BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="88" name="put_async">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLDocument2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="f">
              <type>VARIANT_BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IXMLDocument2Vtbl">
      <struct name="IXMLDocument2Vtbl" />
    </typedef>
    <struct name="IXMLDocument2">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IXMLDocument2Vtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IXMLElementVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElement</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElement</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetTypeInfoCount">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pctinfo">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="iTInfo">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="ppTInfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetIDsOfNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rgszNames">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cNames">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="rgDispId">
              <ptr>
                <type>DISPID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Invoke">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dispIdMember">
              <type>DISPID</type>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="wFlags">
              <type>WORD</type>
              <stack size="4" />
            </arg>
            <arg name="pDispParams">
              <ptr>
                <type>DISPPARAMS</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarResult">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pExcepInfo">
              <ptr>
                <type>EXCEPINFO</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="puArgErr">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="get_tagName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="p">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="put_tagName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="p">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="get_parent">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppParent">
              <ptr>
                <ptr>
                  <type>IXMLElement</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="setAttribute">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="strPropertyName">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="PropertyValue">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="getAttribute">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="strPropertyName">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="PropertyValue">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="removeAttribute">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="strPropertyName">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="get_children">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pp">
              <ptr>
                <ptr>
                  <type>IXMLElementCollection</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="get_type">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="plType">
              <ptr>
                <prim domain="SignedInt" size="4" />
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="60" name="get_text">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="p">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="64" name="put_text">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="p">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="68" name="addChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pChildElem">
              <ptr>
                <type>IXMLElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lIndex">
              <prim domain="SignedInt" size="4" />
              <stack size="4" />
            </arg>
            <arg name="lReserved">
              <prim domain="SignedInt" size="4" />
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="72" name="removeChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pChildElem">
              <ptr>
                <type>IXMLElement</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IXMLElementVtbl">
      <struct name="IXMLElementVtbl" />
    </typedef>
    <struct name="IXMLElement">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IXMLElementVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IXMLElement2Vtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElement2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElement2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElement2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetTypeInfoCount">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElement2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pctinfo">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElement2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="iTInfo">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="ppTInfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetIDsOfNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElement2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rgszNames">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cNames">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="rgDispId">
              <ptr>
                <type>DISPID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Invoke">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElement2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dispIdMember">
              <type>DISPID</type>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="wFlags">
              <type>WORD</type>
              <stack size="4" />
            </arg>
            <arg name="pDispParams">
              <ptr>
                <type>DISPPARAMS</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarResult">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pExcepInfo">
              <ptr>
                <type>EXCEPINFO</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="puArgErr">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="get_tagName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElement2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="p">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="put_tagName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElement2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="p">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="get_parent">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElement2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppParent">
              <ptr>
                <ptr>
                  <type>IXMLElement2</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="setAttribute">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElement2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="strPropertyName">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="PropertyValue">
              <type>VARIANT</type>
              <stack size="16" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="getAttribute">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElement2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="strPropertyName">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
            <arg name="PropertyValue">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="removeAttribute">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElement2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="strPropertyName">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="get_children">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElement2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pp">
              <ptr>
                <ptr>
                  <type>IXMLElementCollection</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="get_type">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElement2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="plType">
              <ptr>
                <prim domain="SignedInt" size="4" />
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="60" name="get_text">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElement2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="p">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="64" name="put_text">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElement2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="p">
              <type>BSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="68" name="addChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElement2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pChildElem">
              <ptr>
                <type>IXMLElement2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lIndex">
              <prim domain="SignedInt" size="4" />
              <stack size="4" />
            </arg>
            <arg name="lReserved">
              <prim domain="SignedInt" size="4" />
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="72" name="removeChild">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElement2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pChildElem">
              <ptr>
                <type>IXMLElement2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="76" name="get_attributes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLElement2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pp">
              <ptr>
                <ptr>
                  <type>IXMLElementCollection</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IXMLElement2Vtbl">
      <struct name="IXMLElement2Vtbl" />
    </typedef>
    <struct name="IXMLElement2">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IXMLElement2Vtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IXMLAttributeVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetTypeInfoCount">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pctinfo">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetTypeInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="iTInfo">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="ppTInfo">
              <ptr>
                <ptr>
                  <type>ITypeInfo</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetIDsOfNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rgszNames">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cNames">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="rgDispId">
              <ptr>
                <type>DISPID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Invoke">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dispIdMember">
              <type>DISPID</type>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lcid">
              <type>LCID</type>
              <stack size="4" />
            </arg>
            <arg name="wFlags">
              <type>WORD</type>
              <stack size="4" />
            </arg>
            <arg name="pDispParams">
              <ptr>
                <type>DISPPARAMS</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pVarResult">
              <ptr>
                <type>VARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pExcepInfo">
              <ptr>
                <type>EXCEPINFO</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="puArgErr">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="get_name">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="n">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="get_value">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLAttribute</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="v">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IXMLAttributeVtbl">
      <struct name="IXMLAttributeVtbl" />
    </typedef>
    <struct name="IXMLAttribute">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IXMLAttributeVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IXMLErrorVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLError</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLError</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLError</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetErrorInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IXMLError</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pErrorReturn">
              <ptr>
                <type>XML_ERROR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IXMLErrorVtbl">
      <struct name="IXMLErrorVtbl" />
    </typedef>
    <struct name="IXMLError">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IXMLErrorVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPPERSISTMONIKER">
      <ptr>
        <type>IPersistMoniker</type>
      </ptr>
    </typedef>
    <struct name="IPersistMonikerVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersistMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersistMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersistMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetClassID">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersistMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pClassID">
              <ptr>
                <type>CLSID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="IsDirty">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersistMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="Load">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersistMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fFullyAvailable">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
            <arg name="pimkName">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pibc">
              <type>LPBC</type>
              <stack size="4" />
            </arg>
            <arg name="grfMode">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Save">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersistMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pimkName">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbc">
              <type>LPBC</type>
              <stack size="4" />
            </arg>
            <arg name="fRemember">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="SaveCompleted">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersistMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pimkName">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pibc">
              <type>LPBC</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="GetCurMoniker">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPersistMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppimkName">
              <ptr>
                <ptr>
                  <type>IMoniker</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IPersistMonikerVtbl">
      <struct name="IPersistMonikerVtbl" />
    </typedef>
    <struct name="IPersistMoniker">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IPersistMonikerVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPMONIKERPROP">
      <ptr>
        <type>IMonikerProp</type>
      </ptr>
    </typedef>
    <enum name="__MIDL_IMonikerProp_0001">
      <member name="MIMETYPEPROP" value="0" />
      <member name="USE_SRC_URL" value="1" />
      <member name="CLASSIDPROP" value="2" />
      <member name="TRUSTEDDOWNLOADPROP" value="3" />
      <member name="POPUPLEVELPROP" value="4" />
    </enum>
    <typedef name="MONIKERPROPERTY">
      <enum name="__MIDL_IMonikerProp_0001" />
    </typedef>
    <struct name="IMonikerPropVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMonikerProp</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMonikerProp</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMonikerProp</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="PutProperty">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IMonikerProp</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="mkp">
              <type>MONIKERPROPERTY</type>
              <stack size="4" />
            </arg>
            <arg name="val">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IMonikerPropVtbl">
      <struct name="IMonikerPropVtbl" />
    </typedef>
    <struct name="IMonikerProp">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IMonikerPropVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPBINDPROTOCOL">
      <ptr>
        <type>IBindProtocol</type>
      </ptr>
    </typedef>
    <struct name="IBindProtocolVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindProtocol</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindProtocol</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindProtocol</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="CreateBinding">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindProtocol</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="szUrl">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="pbc">
              <ptr>
                <type>IBindCtx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppb">
              <ptr>
                <ptr>
                  <type>IBinding</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IBindProtocolVtbl">
      <struct name="IBindProtocolVtbl" />
    </typedef>
    <struct name="IBindProtocol">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IBindProtocolVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPBINDING">
      <ptr>
        <type>IBinding</type>
      </ptr>
    </typedef>
    <struct name="IBindingVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBinding</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBinding</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBinding</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Abort">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBinding</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Suspend">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBinding</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="Resume">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBinding</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="SetPriority">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBinding</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nPriority">
              <type>LONG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="GetPriority">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBinding</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pnPriority">
              <ptr>
                <type>LONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="GetBindResult">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBinding</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pclsidProtocol">
              <ptr>
                <type>CLSID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwResult">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pszResult">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwReserved">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IBindingVtbl">
      <struct name="IBindingVtbl" />
    </typedef>
    <struct name="IBinding">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IBindingVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPBINDSTATUSCALLBACK">
      <ptr>
        <type>IBindStatusCallback</type>
      </ptr>
    </typedef>
    <enum name="__MIDL_IBindStatusCallback_0001">
      <member name="BINDVERB_GET" value="0" />
      <member name="BINDVERB_POST" value="1" />
      <member name="BINDVERB_PUT" value="2" />
      <member name="BINDVERB_CUSTOM" value="3" />
      <member name="BINDVERB_RESERVED1" value="4" />
    </enum>
    <typedef name="BINDVERB">
      <enum name="__MIDL_IBindStatusCallback_0001" />
    </typedef>
    <enum name="__MIDL_IBindStatusCallback_0002">
      <member name="BINDINFOF_URLENCODESTGMEDDATA" value="1" />
      <member name="BINDINFOF_URLENCODEDEXTRAINFO" value="2" />
    </enum>
    <typedef name="BINDINFOF">
      <enum name="__MIDL_IBindStatusCallback_0002" />
    </typedef>
    <enum name="__MIDL_IBindStatusCallback_0003">
      <member name="BINDF_ASYNCHRONOUS" value="1" />
      <member name="BINDF_ASYNCSTORAGE" value="2" />
      <member name="BINDF_NOPROGRESSIVERENDERING" value="4" />
      <member name="BINDF_OFFLINEOPERATION" value="8" />
      <member name="BINDF_GETNEWESTVERSION" value="16" />
      <member name="BINDF_NOWRITECACHE" value="32" />
      <member name="BINDF_NEEDFILE" value="64" />
      <member name="BINDF_PULLDATA" value="128" />
      <member name="BINDF_IGNORESECURITYPROBLEM" value="256" />
      <member name="BINDF_RESYNCHRONIZE" value="512" />
      <member name="BINDF_HYPERLINK" value="1024" />
      <member name="BINDF_NO_UI" value="2048" />
      <member name="BINDF_SILENTOPERATION" value="4096" />
      <member name="BINDF_PRAGMA_NO_CACHE" value="8192" />
      <member name="BINDF_GETCLASSOBJECT" value="16384" />
      <member name="BINDF_RESERVED_1" value="32768" />
      <member name="BINDF_FREE_THREADED" value="65536" />
      <member name="BINDF_DIRECT_READ" value="131072" />
      <member name="BINDF_FORMS_SUBMIT" value="262144" />
      <member name="BINDF_GETFROMCACHE_IF_NET_FAIL" value="524288" />
      <member name="BINDF_FROMURLMON" value="1048576" />
      <member name="BINDF_FWD_BACK" value="2097152" />
      <member name="BINDF_PREFERDEFAULTHANDLER" value="4194304" />
      <member name="BINDF_ENFORCERESTRICTED" value="8388608" />
    </enum>
    <typedef name="BINDF">
      <enum name="__MIDL_IBindStatusCallback_0003" />
    </typedef>
    <enum name="__MIDL_IBindStatusCallback_0004">
      <member name="URL_ENCODING_NONE" value="0" />
      <member name="URL_ENCODING_ENABLE_UTF8" value="268435456" />
      <member name="URL_ENCODING_DISABLE_UTF8" value="536870912" />
    </enum>
    <typedef name="URL_ENCODING">
      <enum name="__MIDL_IBindStatusCallback_0004" />
    </typedef>
    <struct name="_tagBINDINFO">
      <field offset="0" name="cbSize">
        <type>ULONG</type>
      </field>
      <field offset="4" name="szExtraInfo">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="stgmedData">
        <type>STGMEDIUM</type>
      </field>
      <field offset="20" name="grfBindInfoF">
        <type>DWORD</type>
      </field>
      <field offset="24" name="dwBindVerb">
        <type>DWORD</type>
      </field>
      <field offset="28" name="szCustomVerb">
        <type>LPWSTR</type>
      </field>
      <field offset="32" name="cbstgmedData">
        <type>DWORD</type>
      </field>
      <field offset="36" name="dwOptions">
        <type>DWORD</type>
      </field>
      <field offset="40" name="dwOptionsFlags">
        <type>DWORD</type>
      </field>
      <field offset="44" name="dwCodePage">
        <type>DWORD</type>
      </field>
      <field offset="48" name="securityAttributes">
        <type>SECURITY_ATTRIBUTES</type>
      </field>
      <field offset="64" name="iid">
        <type>IID</type>
      </field>
      <field offset="80" name="pUnk">
        <ptr>
          <type>IUnknown</type>
        </ptr>
      </field>
      <field offset="84" name="dwReserved">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="BINDINFO">
      <struct name="_tagBINDINFO" />
    </typedef>
    <struct name="_REMSECURITY_ATTRIBUTES">
      <field offset="0" name="nLength">
        <type>DWORD</type>
      </field>
      <field offset="4" name="lpSecurityDescriptor">
        <type>DWORD</type>
      </field>
      <field offset="8" name="bInheritHandle">
        <type>BOOL</type>
      </field>
    </struct>
    <typedef name="REMSECURITY_ATTRIBUTES">
      <struct name="_REMSECURITY_ATTRIBUTES" />
    </typedef>
    <typedef name="PREMSECURITY_ATTRIBUTES">
      <ptr>
        <struct name="_REMSECURITY_ATTRIBUTES" />
      </ptr>
    </typedef>
    <typedef name="LPREMSECURITY_ATTRIBUTES">
      <ptr>
        <struct name="_REMSECURITY_ATTRIBUTES" />
      </ptr>
    </typedef>
    <struct name="_tagRemBINDINFO">
      <field offset="0" name="cbSize">
        <type>ULONG</type>
      </field>
      <field offset="4" name="szExtraInfo">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="grfBindInfoF">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwBindVerb">
        <type>DWORD</type>
      </field>
      <field offset="16" name="szCustomVerb">
        <type>LPWSTR</type>
      </field>
      <field offset="20" name="cbstgmedData">
        <type>DWORD</type>
      </field>
      <field offset="24" name="dwOptions">
        <type>DWORD</type>
      </field>
      <field offset="28" name="dwOptionsFlags">
        <type>DWORD</type>
      </field>
      <field offset="32" name="dwCodePage">
        <type>DWORD</type>
      </field>
      <field offset="40" name="securityAttributes">
        <type>REMSECURITY_ATTRIBUTES</type>
      </field>
      <field offset="56" name="iid">
        <type>IID</type>
      </field>
      <field offset="72" name="pUnk">
        <ptr>
          <type>IUnknown</type>
        </ptr>
      </field>
      <field offset="76" name="dwReserved">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="RemBINDINFO">
      <struct name="_tagRemBINDINFO" />
    </typedef>
    <struct name="tagRemFORMATETC">
      <field offset="0" name="cfFormat">
        <type>DWORD</type>
      </field>
      <field offset="4" name="ptd">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwAspect">
        <type>DWORD</type>
      </field>
      <field offset="12" name="lindex">
        <type>LONG</type>
      </field>
      <field offset="16" name="tymed">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="RemFORMATETC">
      <struct name="tagRemFORMATETC" />
    </typedef>
    <typedef name="LPREMFORMATETC">
      <ptr>
        <struct name="tagRemFORMATETC" />
      </ptr>
    </typedef>
    <enum name="__MIDL_IBindStatusCallback_0005">
      <member name="BINDINFO_OPTIONS_WININETFLAG" value="65536" />
      <member name="BINDINFO_OPTIONS_ENABLE_UTF8" value="131072" />
      <member name="BINDINFO_OPTIONS_DISABLE_UTF8" value="262144" />
      <member name="BINDINFO_OPTIONS_USE_IE_ENCODING" value="524288" />
      <member name="BINDINFO_OPTIONS_BINDTOOBJECT" value="1048576" />
      <member name="BINDINFO_OPTIONS_SECURITYOPTOUT" value="2097152" />
      <member name="BINDINFO_OPTIONS_IGNOREMIMETEXTPLAIN" value="4194304" />
      <member name="BINDINFO_OPTIONS_USEBINDSTRINGCREDS" value="8388608" />
      <member name="BINDINFO_OPTIONS_IGNOREHTTPHTTPSREDIRECTS" value="16777216" />
      <member name="BINDINFO_OPTIONS_IGNORE_SSLERRORS_ONCE" value="33554432" />
      <member name="BINDINFO_WPC_DOWNLOADBLOCKED" value="134217728" />
      <member name="BINDINFO_WPC_LOGGING_ENABLED" value="268435456" />
      <member name="BINDINFO_OPTIONS_ALLOWCONNECTDATA" value="536870912" />
      <member name="BINDINFO_OPTIONS_DISABLEAUTOREDIRECTS" value="1073741824" />
      <member name="BINDINFO_OPTIONS_SHDOCVW_NAVIGATE" value="-2147483648" />
    </enum>
    <typedef name="BINDINFO_OPTIONS">
      <enum name="__MIDL_IBindStatusCallback_0005" />
    </typedef>
    <enum name="__MIDL_IBindStatusCallback_0006">
      <member name="BSCF_FIRSTDATANOTIFICATION" value="1" />
      <member name="BSCF_INTERMEDIATEDATANOTIFICATION" value="2" />
      <member name="BSCF_LASTDATANOTIFICATION" value="4" />
      <member name="BSCF_DATAFULLYAVAILABLE" value="8" />
      <member name="BSCF_AVAILABLEDATASIZEUNKNOWN" value="16" />
      <member name="BSCF_SKIPDRAINDATAFORFILEURLS" value="32" />
      <member name="BSCF_64BITLENGTHDOWNLOAD" value="64" />
    </enum>
    <typedef name="BSCF">
      <enum name="__MIDL_IBindStatusCallback_0006" />
    </typedef>
    <enum name="tagBINDSTATUS">
      <member name="BINDSTATUS_FINDINGRESOURCE" value="1" />
      <member name="BINDSTATUS_CONNECTING" value="2" />
      <member name="BINDSTATUS_REDIRECTING" value="3" />
      <member name="BINDSTATUS_BEGINDOWNLOADDATA" value="4" />
      <member name="BINDSTATUS_DOWNLOADINGDATA" value="5" />
      <member name="BINDSTATUS_ENDDOWNLOADDATA" value="6" />
      <member name="BINDSTATUS_BEGINDOWNLOADCOMPONENTS" value="7" />
      <member name="BINDSTATUS_INSTALLINGCOMPONENTS" value="8" />
      <member name="BINDSTATUS_ENDDOWNLOADCOMPONENTS" value="9" />
      <member name="BINDSTATUS_USINGCACHEDCOPY" value="10" />
      <member name="BINDSTATUS_SENDINGREQUEST" value="11" />
      <member name="BINDSTATUS_CLASSIDAVAILABLE" value="12" />
      <member name="BINDSTATUS_MIMETYPEAVAILABLE" value="13" />
      <member name="BINDSTATUS_CACHEFILENAMEAVAILABLE" value="14" />
      <member name="BINDSTATUS_BEGINSYNCOPERATION" value="15" />
      <member name="BINDSTATUS_ENDSYNCOPERATION" value="16" />
      <member name="BINDSTATUS_BEGINUPLOADDATA" value="17" />
      <member name="BINDSTATUS_UPLOADINGDATA" value="18" />
      <member name="BINDSTATUS_ENDUPLOADDATA" value="19" />
      <member name="BINDSTATUS_PROTOCOLCLASSID" value="20" />
      <member name="BINDSTATUS_ENCODING" value="21" />
      <member name="BINDSTATUS_VERIFIEDMIMETYPEAVAILABLE" value="22" />
      <member name="BINDSTATUS_CLASSINSTALLLOCATION" value="23" />
      <member name="BINDSTATUS_DECODING" value="24" />
      <member name="BINDSTATUS_LOADINGMIMEHANDLER" value="25" />
      <member name="BINDSTATUS_CONTENTDISPOSITIONATTACH" value="26" />
      <member name="BINDSTATUS_FILTERREPORTMIMETYPE" value="27" />
      <member name="BINDSTATUS_CLSIDCANINSTANTIATE" value="28" />
      <member name="BINDSTATUS_IUNKNOWNAVAILABLE" value="29" />
      <member name="BINDSTATUS_DIRECTBIND" value="30" />
      <member name="BINDSTATUS_RAWMIMETYPE" value="31" />
      <member name="BINDSTATUS_PROXYDETECTING" value="32" />
      <member name="BINDSTATUS_ACCEPTRANGES" value="33" />
      <member name="BINDSTATUS_COOKIE_SENT" value="34" />
      <member name="BINDSTATUS_COMPACT_POLICY_RECEIVED" value="35" />
      <member name="BINDSTATUS_COOKIE_SUPPRESSED" value="36" />
      <member name="BINDSTATUS_COOKIE_STATE_UNKNOWN" value="37" />
      <member name="BINDSTATUS_COOKIE_STATE_ACCEPT" value="38" />
      <member name="BINDSTATUS_COOKIE_STATE_REJECT" value="39" />
      <member name="BINDSTATUS_COOKIE_STATE_PROMPT" value="40" />
      <member name="BINDSTATUS_COOKIE_STATE_LEASH" value="41" />
      <member name="BINDSTATUS_COOKIE_STATE_DOWNGRADE" value="42" />
      <member name="BINDSTATUS_POLICY_HREF" value="43" />
      <member name="BINDSTATUS_P3P_HEADER" value="44" />
      <member name="BINDSTATUS_SESSION_COOKIE_RECEIVED" value="45" />
      <member name="BINDSTATUS_PERSISTENT_COOKIE_RECEIVED" value="46" />
      <member name="BINDSTATUS_SESSION_COOKIES_ALLOWED" value="47" />
      <member name="BINDSTATUS_CACHECONTROL" value="48" />
      <member name="BINDSTATUS_CONTENTDISPOSITIONFILENAME" value="49" />
      <member name="BINDSTATUS_MIMETEXTPLAINMISMATCH" value="50" />
      <member name="BINDSTATUS_PUBLISHERAVAILABLE" value="51" />
      <member name="BINDSTATUS_DISPLAYNAMEAVAILABLE" value="52" />
      <member name="BINDSTATUS_SSLUX_NAVBLOCKED" value="53" />
      <member name="BINDSTATUS_SERVER_MIMETYPEAVAILABLE" value="54" />
      <member name="BINDSTATUS_SNIFFED_CLASSIDAVAILABLE" value="55" />
      <member name="BINDSTATUS_64BIT_PROGRESS" value="56" />
    </enum>
    <typedef name="BINDSTATUS">
      <enum name="tagBINDSTATUS" />
    </typedef>
    <struct name="IBindStatusCallbackVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindStatusCallback</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindStatusCallback</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindStatusCallback</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="OnStartBinding">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindStatusCallback</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pib">
              <ptr>
                <type>IBinding</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetPriority">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindStatusCallback</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pnPriority">
              <ptr>
                <type>LONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="OnLowResource">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindStatusCallback</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="reserved">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="OnProgress">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindStatusCallback</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ulProgress">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="ulProgressMax">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="ulStatusCode">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="szStatusText">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="OnStopBinding">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindStatusCallback</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="hresult">
              <type>HRESULT</type>
              <stack size="4" />
            </arg>
            <arg name="szError">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="GetBindInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindStatusCallback</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="grfBINDF">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbindinfo">
              <ptr>
                <type>BINDINFO</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="OnDataAvailable">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindStatusCallback</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="grfBSCF">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwSize">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pformatetc">
              <ptr>
                <type>FORMATETC</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pstgmed">
              <ptr>
                <type>STGMEDIUM</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="OnObjectAvailable">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindStatusCallback</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="punk">
              <ptr>
                <type>IUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IBindStatusCallbackVtbl">
      <struct name="IBindStatusCallbackVtbl" />
    </typedef>
    <struct name="IBindStatusCallback">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IBindStatusCallbackVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPBINDSTATUSCALLBACKEX">
      <ptr>
        <type>IBindStatusCallbackEx</type>
      </ptr>
    </typedef>
    <enum name="__MIDL_IBindStatusCallbackEx_0001">
      <member name="BINDF2_DISABLEBASICOVERHTTP" value="1" />
      <member name="BINDF2_DISABLEAUTOCOOKIEHANDLING" value="2" />
      <member name="BINDF2_READ_DATA_GREATER_THAN_4GB" value="4" />
      <member name="BINDF2_DISABLE_HTTP_REDIRECT_XSECURITYID" value="8" />
      <member name="BINDF2_RESERVED_3" value="536870912" />
      <member name="BINDF2_RESERVED_2" value="1073741824" />
      <member name="BINDF2_RESERVED_1" value="-2147483648" />
    </enum>
    <typedef name="BINDF2">
      <enum name="__MIDL_IBindStatusCallbackEx_0001" />
    </typedef>
    <struct name="IBindStatusCallbackExVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindStatusCallbackEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindStatusCallbackEx</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindStatusCallbackEx</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="OnStartBinding">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindStatusCallbackEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pib">
              <ptr>
                <type>IBinding</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetPriority">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindStatusCallbackEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pnPriority">
              <ptr>
                <type>LONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="OnLowResource">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindStatusCallbackEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="reserved">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="OnProgress">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindStatusCallbackEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ulProgress">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="ulProgressMax">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="ulStatusCode">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="szStatusText">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="OnStopBinding">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindStatusCallbackEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="hresult">
              <type>HRESULT</type>
              <stack size="4" />
            </arg>
            <arg name="szError">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="GetBindInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindStatusCallbackEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="grfBINDF">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbindinfo">
              <ptr>
                <type>BINDINFO</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="OnDataAvailable">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindStatusCallbackEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="grfBSCF">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwSize">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pformatetc">
              <ptr>
                <type>FORMATETC</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pstgmed">
              <ptr>
                <type>STGMEDIUM</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="OnObjectAvailable">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindStatusCallbackEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="punk">
              <ptr>
                <type>IUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="GetBindInfoEx">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindStatusCallbackEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="grfBINDF">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbindinfo">
              <ptr>
                <type>BINDINFO</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="grfBINDF2">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwReserved">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IBindStatusCallbackExVtbl">
      <struct name="IBindStatusCallbackExVtbl" />
    </typedef>
    <struct name="IBindStatusCallbackEx">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IBindStatusCallbackExVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPAUTHENTICATION">
      <ptr>
        <type>IAuthenticate</type>
      </ptr>
    </typedef>
    <struct name="IAuthenticateVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAuthenticate</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAuthenticate</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAuthenticate</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Authenticate">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAuthenticate</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="phwnd">
              <ptr>
                <type>HWND</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pszUsername">
              <ptr>
                <type>LPWSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pszPassword">
              <ptr>
                <type>LPWSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IAuthenticateVtbl">
      <struct name="IAuthenticateVtbl" />
    </typedef>
    <struct name="IAuthenticate">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IAuthenticateVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPAUTHENTICATIONEX">
      <ptr>
        <type>IAuthenticateEx</type>
      </ptr>
    </typedef>
    <enum name="__MIDL_IAuthenticateEx_0001">
      <member name="AUTHENTICATEF_PROXY" value="1" />
      <member name="AUTHENTICATEF_BASIC" value="2" />
      <member name="AUTHENTICATEF_HTTP" value="4" />
    </enum>
    <typedef name="AUTHENTICATEF">
      <enum name="__MIDL_IAuthenticateEx_0001" />
    </typedef>
    <struct name="_tagAUTHENTICATEINFO">
      <field offset="0" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwReserved">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="AUTHENTICATEINFO">
      <struct name="_tagAUTHENTICATEINFO" />
    </typedef>
    <struct name="IAuthenticateExVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAuthenticateEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAuthenticateEx</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAuthenticateEx</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Authenticate">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAuthenticateEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="phwnd">
              <ptr>
                <type>HWND</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pszUsername">
              <ptr>
                <type>LPWSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pszPassword">
              <ptr>
                <type>LPWSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="AuthenticateEx">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IAuthenticateEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="phwnd">
              <ptr>
                <type>HWND</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pszUsername">
              <ptr>
                <type>LPWSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pszPassword">
              <ptr>
                <type>LPWSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pauthinfo">
              <ptr>
                <type>AUTHENTICATEINFO</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IAuthenticateExVtbl">
      <struct name="IAuthenticateExVtbl" />
    </typedef>
    <struct name="IAuthenticateEx">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IAuthenticateExVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPHTTPNEGOTIATE">
      <ptr>
        <type>IHttpNegotiate</type>
      </ptr>
    </typedef>
    <struct name="IHttpNegotiateVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IHttpNegotiate</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IHttpNegotiate</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IHttpNegotiate</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="BeginningTransaction">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IHttpNegotiate</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="szURL">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="szHeaders">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pszAdditionalHeaders">
              <ptr>
                <type>LPWSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="OnResponse">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IHttpNegotiate</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwResponseCode">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="szResponseHeaders">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="szRequestHeaders">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="pszAdditionalRequestHeaders">
              <ptr>
                <type>LPWSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IHttpNegotiateVtbl">
      <struct name="IHttpNegotiateVtbl" />
    </typedef>
    <struct name="IHttpNegotiate">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IHttpNegotiateVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPHTTPNEGOTIATE2">
      <ptr>
        <type>IHttpNegotiate2</type>
      </ptr>
    </typedef>
    <struct name="IHttpNegotiate2Vtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IHttpNegotiate2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IHttpNegotiate2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IHttpNegotiate2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="BeginningTransaction">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IHttpNegotiate2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="szURL">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="szHeaders">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pszAdditionalHeaders">
              <ptr>
                <type>LPWSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="OnResponse">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IHttpNegotiate2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwResponseCode">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="szResponseHeaders">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="szRequestHeaders">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="pszAdditionalRequestHeaders">
              <ptr>
                <type>LPWSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetRootSecurityId">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IHttpNegotiate2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbSecurityId">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pcbSecurityId">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD_PTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IHttpNegotiate2Vtbl">
      <struct name="IHttpNegotiate2Vtbl" />
    </typedef>
    <struct name="IHttpNegotiate2">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IHttpNegotiate2Vtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPHTTPNEGOTIATE3">
      <ptr>
        <type>IHttpNegotiate3</type>
      </ptr>
    </typedef>
    <struct name="IHttpNegotiate3Vtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IHttpNegotiate3</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IHttpNegotiate3</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IHttpNegotiate3</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="BeginningTransaction">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IHttpNegotiate3</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="szURL">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="szHeaders">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pszAdditionalHeaders">
              <ptr>
                <type>LPWSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="OnResponse">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IHttpNegotiate3</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwResponseCode">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="szResponseHeaders">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="szRequestHeaders">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="pszAdditionalRequestHeaders">
              <ptr>
                <type>LPWSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetRootSecurityId">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IHttpNegotiate3</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbSecurityId">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pcbSecurityId">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD_PTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="GetSerializedClientCertContext">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IHttpNegotiate3</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppbCert">
              <ptr>
                <ptr>
                  <type>BYTE</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pcbCert">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IHttpNegotiate3Vtbl">
      <struct name="IHttpNegotiate3Vtbl" />
    </typedef>
    <struct name="IHttpNegotiate3">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IHttpNegotiate3Vtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPWININETFILESTREAM">
      <ptr>
        <type>IWinInetFileStream</type>
      </ptr>
    </typedef>
    <struct name="IWinInetFileStreamVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IWinInetFileStream</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IWinInetFileStream</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IWinInetFileStream</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="SetHandleForUnlock">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IWinInetFileStream</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="hWinInetLockHandle">
              <type>DWORD_PTR</type>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD_PTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="SetDeleteFile">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IWinInetFileStream</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD_PTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IWinInetFileStreamVtbl">
      <struct name="IWinInetFileStreamVtbl" />
    </typedef>
    <struct name="IWinInetFileStream">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IWinInetFileStreamVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPWINDOWFORBINDINGUI">
      <ptr>
        <type>IWindowForBindingUI</type>
      </ptr>
    </typedef>
    <struct name="IWindowForBindingUIVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IWindowForBindingUI</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IWindowForBindingUI</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IWindowForBindingUI</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetWindow">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IWindowForBindingUI</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rguidReason">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="phwnd">
              <ptr>
                <type>HWND</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IWindowForBindingUIVtbl">
      <struct name="IWindowForBindingUIVtbl" />
    </typedef>
    <struct name="IWindowForBindingUI">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IWindowForBindingUIVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPCODEINSTALL">
      <ptr>
        <type>ICodeInstall</type>
      </ptr>
    </typedef>
    <enum name="__MIDL_ICodeInstall_0001">
      <member name="CIP_DISK_FULL" value="0" />
      <member name="CIP_ACCESS_DENIED" value="1" />
      <member name="CIP_NEWER_VERSION_EXISTS" value="2" />
      <member name="CIP_OLDER_VERSION_EXISTS" value="3" />
      <member name="CIP_NAME_CONFLICT" value="4" />
      <member name="CIP_TRUST_VERIFICATION_COMPONENT_MISSING" value="5" />
      <member name="CIP_EXE_SELF_REGISTERATION_TIMEOUT" value="6" />
      <member name="CIP_UNSAFE_TO_ABORT" value="7" />
      <member name="CIP_NEED_REBOOT" value="8" />
      <member name="CIP_NEED_REBOOT_UI_PERMISSION" value="9" />
    </enum>
    <typedef name="CIP_STATUS">
      <enum name="__MIDL_ICodeInstall_0001" />
    </typedef>
    <struct name="ICodeInstallVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICodeInstall</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICodeInstall</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICodeInstall</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetWindow">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICodeInstall</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rguidReason">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="phwnd">
              <ptr>
                <type>HWND</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="OnCodeInstallProblem">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICodeInstall</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ulStatusCode">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="szDestination">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="szSource">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="ICodeInstallVtbl">
      <struct name="ICodeInstallVtbl" />
    </typedef>
    <struct name="ICodeInstall">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="ICodeInstallVtbl" />
        </ptr>
      </field>
    </struct>
    <enum name="__MIDL_IUri_0001">
      <member name="Uri_PROPERTY_ABSOLUTE_URI" value="0" />
      <member name="Uri_PROPERTY_STRING_START" value="0" />
      <member name="Uri_PROPERTY_AUTHORITY" value="1" />
      <member name="Uri_PROPERTY_DISPLAY_URI" value="2" />
      <member name="Uri_PROPERTY_DOMAIN" value="3" />
      <member name="Uri_PROPERTY_EXTENSION" value="4" />
      <member name="Uri_PROPERTY_FRAGMENT" value="5" />
      <member name="Uri_PROPERTY_HOST" value="6" />
      <member name="Uri_PROPERTY_PASSWORD" value="7" />
      <member name="Uri_PROPERTY_PATH" value="8" />
      <member name="Uri_PROPERTY_PATH_AND_QUERY" value="9" />
      <member name="Uri_PROPERTY_QUERY" value="10" />
      <member name="Uri_PROPERTY_RAW_URI" value="11" />
      <member name="Uri_PROPERTY_SCHEME_NAME" value="12" />
      <member name="Uri_PROPERTY_USER_INFO" value="13" />
      <member name="Uri_PROPERTY_USER_NAME" value="14" />
      <member name="Uri_PROPERTY_STRING_LAST" value="14" />
      <member name="Uri_PROPERTY_HOST_TYPE" value="15" />
      <member name="Uri_PROPERTY_DWORD_START" value="15" />
      <member name="Uri_PROPERTY_PORT" value="16" />
      <member name="Uri_PROPERTY_SCHEME" value="17" />
      <member name="Uri_PROPERTY_ZONE" value="18" />
      <member name="Uri_PROPERTY_DWORD_LAST" value="18" />
    </enum>
    <typedef name="Uri_PROPERTY">
      <enum name="__MIDL_IUri_0001" />
    </typedef>
    <enum name="__MIDL_IUri_0002">
      <member name="Uri_HOST_UNKNOWN" value="0" />
      <member name="Uri_HOST_DNS" value="1" />
      <member name="Uri_HOST_IPV4" value="2" />
      <member name="Uri_HOST_IPV6" value="3" />
      <member name="Uri_HOST_IDN" value="4" />
    </enum>
    <typedef name="Uri_HOST_TYPE">
      <enum name="__MIDL_IUri_0002" />
    </typedef>
    <struct name="IUriVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUri</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUri</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUri</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetPropertyBSTR">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUri</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="uriProp">
              <type>Uri_PROPERTY</type>
              <stack size="4" />
            </arg>
            <arg name="pbstrProperty">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetPropertyLength">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUri</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="uriProp">
              <type>Uri_PROPERTY</type>
              <stack size="4" />
            </arg>
            <arg name="pcchProperty">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetPropertyDWORD">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUri</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="uriProp">
              <type>Uri_PROPERTY</type>
              <stack size="4" />
            </arg>
            <arg name="pdwProperty">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="HasProperty">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUri</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="uriProp">
              <type>Uri_PROPERTY</type>
              <stack size="4" />
            </arg>
            <arg name="pfHasProperty">
              <ptr>
                <type>BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="GetAbsoluteUri">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUri</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbstrAbsoluteUri">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="GetAuthority">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUri</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbstrAuthority">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="GetDisplayUri">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUri</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbstrDisplayString">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="GetDomain">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUri</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbstrDomain">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="GetExtension">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUri</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbstrExtension">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="GetFragment">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUri</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbstrFragment">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="GetHost">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUri</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbstrHost">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="GetPassword">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUri</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbstrPassword">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="60" name="GetPath">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUri</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbstrPath">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="64" name="GetPathAndQuery">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUri</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbstrPathAndQuery">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="68" name="GetQuery">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUri</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbstrQuery">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="72" name="GetRawUri">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUri</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbstrRawUri">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="76" name="GetSchemeName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUri</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbstrSchemeName">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="80" name="GetUserInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUri</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbstrUserInfo">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="84" name="GetUserNameA">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUri</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbstrUserName">
              <ptr>
                <type>BSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="88" name="GetHostType">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUri</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwHostType">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="92" name="GetPort">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUri</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwPort">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="96" name="GetScheme">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUri</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwScheme">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="100" name="GetZone">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUri</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwZone">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="104" name="GetProperties">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUri</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwFlags">
              <type>LPDWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="108" name="IsEqual">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUri</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pUri">
              <ptr>
                <type>IUri</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pfEqual">
              <ptr>
                <type>BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IUriVtbl">
      <struct name="IUriVtbl" />
    </typedef>
    <struct name="IUri">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IUriVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IUriContainerVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUriContainer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUriContainer</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUriContainer</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetIUri">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUriContainer</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppIUri">
              <ptr>
                <ptr>
                  <type>IUri</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IUriContainerVtbl">
      <struct name="IUriContainerVtbl" />
    </typedef>
    <struct name="IUriContainer">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IUriContainerVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IUriBuilderVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUriBuilder</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUriBuilder</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUriBuilder</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="CreateUriSimple">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUriBuilder</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwAllowEncodingPropertyMask">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD_PTR</type>
              <stack size="4" />
            </arg>
            <arg name="ppIUri">
              <ptr>
                <ptr>
                  <type>IUri</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="CreateUri">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUriBuilder</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwCreateFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwAllowEncodingPropertyMask">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD_PTR</type>
              <stack size="4" />
            </arg>
            <arg name="ppIUri">
              <ptr>
                <ptr>
                  <type>IUri</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="CreateUriWithFlags">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUriBuilder</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwCreateFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwUriBuilderFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwAllowEncodingPropertyMask">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD_PTR</type>
              <stack size="4" />
            </arg>
            <arg name="ppIUri">
              <ptr>
                <ptr>
                  <type>IUri</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="GetIUri">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUriBuilder</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppIUri">
              <ptr>
                <ptr>
                  <type>IUri</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="SetIUri">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUriBuilder</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pIUri">
              <ptr>
                <type>IUri</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="GetFragment">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUriBuilder</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pcchFragment">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppwzFragment">
              <ptr>
                <type>LPCWSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="GetHost">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUriBuilder</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pcchHost">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppwzHost">
              <ptr>
                <type>LPCWSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="GetPassword">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUriBuilder</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pcchPassword">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppwzPassword">
              <ptr>
                <type>LPCWSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="GetPath">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUriBuilder</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pcchPath">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppwzPath">
              <ptr>
                <type>LPCWSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="GetPort">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUriBuilder</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pfHasPort">
              <ptr>
                <type>BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwPort">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="GetQuery">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUriBuilder</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pcchQuery">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppwzQuery">
              <ptr>
                <type>LPCWSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="GetSchemeName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUriBuilder</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pcchSchemeName">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppwzSchemeName">
              <ptr>
                <type>LPCWSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="60" name="GetUserNameA">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUriBuilder</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pcchUserName">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppwzUserName">
              <ptr>
                <type>LPCWSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="64" name="SetFragment">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUriBuilder</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwzNewValue">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="68" name="SetHost">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUriBuilder</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwzNewValue">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="72" name="SetPassword">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUriBuilder</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwzNewValue">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="76" name="SetPath">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUriBuilder</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwzNewValue">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="80" name="SetPortA">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUriBuilder</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fHasPort">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
            <arg name="dwNewValue">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="84" name="SetQuery">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUriBuilder</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwzNewValue">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="88" name="SetSchemeName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUriBuilder</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwzNewValue">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="92" name="SetUserName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUriBuilder</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwzNewValue">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="96" name="RemoveProperties">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUriBuilder</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwPropertyMask">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="100" name="HasBeenModified">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUriBuilder</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pfModified">
              <ptr>
                <type>BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IUriBuilderVtbl">
      <struct name="IUriBuilderVtbl" />
    </typedef>
    <struct name="IUriBuilder">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IUriBuilderVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IUriBuilderFactoryVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUriBuilderFactory</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUriBuilderFactory</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUriBuilderFactory</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="CreateIUriBuilder">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUriBuilderFactory</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD_PTR</type>
              <stack size="4" />
            </arg>
            <arg name="ppIUriBuilder">
              <ptr>
                <ptr>
                  <type>IUriBuilder</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="CreateInitializedIUriBuilder">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IUriBuilderFactory</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD_PTR</type>
              <stack size="4" />
            </arg>
            <arg name="ppIUriBuilder">
              <ptr>
                <ptr>
                  <type>IUriBuilder</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IUriBuilderFactoryVtbl">
      <struct name="IUriBuilderFactoryVtbl" />
    </typedef>
    <struct name="IUriBuilderFactory">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IUriBuilderFactoryVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPWININETINFO">
      <ptr>
        <type>IWinInetInfo</type>
      </ptr>
    </typedef>
    <struct name="IWinInetInfoVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IWinInetInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IWinInetInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IWinInetInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="QueryOption">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IWinInetInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwOption">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pBuffer">
              <type>LPVOID</type>
              <stack size="4" />
            </arg>
            <arg name="pcbBuf">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IWinInetInfoVtbl">
      <struct name="IWinInetInfoVtbl" />
    </typedef>
    <struct name="IWinInetInfo">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IWinInetInfoVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPHTTPSECURITY">
      <ptr>
        <type>IHttpSecurity</type>
      </ptr>
    </typedef>
    <struct name="IHttpSecurityVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IHttpSecurity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IHttpSecurity</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IHttpSecurity</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetWindow">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IHttpSecurity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rguidReason">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="phwnd">
              <ptr>
                <type>HWND</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="OnSecurityProblem">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IHttpSecurity</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwProblem">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IHttpSecurityVtbl">
      <struct name="IHttpSecurityVtbl" />
    </typedef>
    <struct name="IHttpSecurity">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IHttpSecurityVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPWININETHTTPINFO">
      <ptr>
        <type>IWinInetHttpInfo</type>
      </ptr>
    </typedef>
    <struct name="IWinInetHttpInfoVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IWinInetHttpInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IWinInetHttpInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IWinInetHttpInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="QueryOption">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IWinInetHttpInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwOption">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pBuffer">
              <type>LPVOID</type>
              <stack size="4" />
            </arg>
            <arg name="pcbBuf">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="QueryInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IWinInetHttpInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwOption">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pBuffer">
              <type>LPVOID</type>
              <stack size="4" />
            </arg>
            <arg name="pcbBuf">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwFlags">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwReserved">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IWinInetHttpInfoVtbl">
      <struct name="IWinInetHttpInfoVtbl" />
    </typedef>
    <struct name="IWinInetHttpInfo">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IWinInetHttpInfoVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPWININETCACHEHINTS">
      <ptr>
        <type>IWinInetCacheHints</type>
      </ptr>
    </typedef>
    <struct name="IWinInetCacheHintsVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IWinInetCacheHints</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IWinInetCacheHints</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IWinInetCacheHints</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="SetCacheExtension">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IWinInetCacheHints</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwzExt">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="pszCacheFile">
              <type>LPVOID</type>
              <stack size="4" />
            </arg>
            <arg name="pcbCacheFile">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwWinInetError">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwReserved">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IWinInetCacheHintsVtbl">
      <struct name="IWinInetCacheHintsVtbl" />
    </typedef>
    <struct name="IWinInetCacheHints">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IWinInetCacheHintsVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPWININETCACHEHINTS2">
      <ptr>
        <type>IWinInetCacheHints2</type>
      </ptr>
    </typedef>
    <struct name="IWinInetCacheHints2Vtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IWinInetCacheHints2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IWinInetCacheHints2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IWinInetCacheHints2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="SetCacheExtension">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IWinInetCacheHints2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwzExt">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="pszCacheFile">
              <type>LPVOID</type>
              <stack size="4" />
            </arg>
            <arg name="pcbCacheFile">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwWinInetError">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwReserved">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="SetCacheExtension2">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IWinInetCacheHints2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwzExt">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="pwzCacheFile">
              <ptr>
                <type>WCHAR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pcchCacheFile">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwWinInetError">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwReserved">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IWinInetCacheHints2Vtbl">
      <struct name="IWinInetCacheHints2Vtbl" />
    </typedef>
    <struct name="IWinInetCacheHints2">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IWinInetCacheHints2Vtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPBINDHOST">
      <ptr>
        <type>IBindHost</type>
      </ptr>
    </typedef>
    <struct name="IBindHostVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindHost</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindHost</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindHost</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="CreateMoniker">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindHost</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="szName">
              <type>LPOLESTR</type>
              <stack size="4" />
            </arg>
            <arg name="pBC">
              <ptr>
                <type>IBindCtx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppmk">
              <ptr>
                <ptr>
                  <type>IMoniker</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="MonikerBindToStorage">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindHost</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pMk">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pBC">
              <ptr>
                <type>IBindCtx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pBSC">
              <ptr>
                <type>IBindStatusCallback</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObj">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="MonikerBindToObject">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IBindHost</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pMk">
              <ptr>
                <type>IMoniker</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pBC">
              <ptr>
                <type>IBindCtx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pBSC">
              <ptr>
                <type>IBindStatusCallback</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObj">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IBindHostVtbl">
      <struct name="IBindHostVtbl" />
    </typedef>
    <struct name="IBindHost">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IBindHostVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPIINTERNET">
      <ptr>
        <type>IInternet</type>
      </ptr>
    </typedef>
    <struct name="IInternetVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternet</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternet</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternet</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IInternetVtbl">
      <struct name="IInternetVtbl" />
    </typedef>
    <struct name="IInternet">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IInternetVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPIINTERNETBINDINFO">
      <ptr>
        <type>IInternetBindInfo</type>
      </ptr>
    </typedef>
    <enum name="tagBINDSTRING">
      <member name="BINDSTRING_HEADERS" value="1" />
      <member name="BINDSTRING_ACCEPT_MIMES" value="2" />
      <member name="BINDSTRING_EXTRA_URL" value="3" />
      <member name="BINDSTRING_LANGUAGE" value="4" />
      <member name="BINDSTRING_USERNAME" value="5" />
      <member name="BINDSTRING_PASSWORD" value="6" />
      <member name="BINDSTRING_UA_PIXELS" value="7" />
      <member name="BINDSTRING_UA_COLOR" value="8" />
      <member name="BINDSTRING_OS" value="9" />
      <member name="BINDSTRING_USER_AGENT" value="10" />
      <member name="BINDSTRING_ACCEPT_ENCODINGS" value="11" />
      <member name="BINDSTRING_POST_COOKIE" value="12" />
      <member name="BINDSTRING_POST_DATA_MIME" value="13" />
      <member name="BINDSTRING_URL" value="14" />
      <member name="BINDSTRING_IID" value="15" />
      <member name="BINDSTRING_FLAG_BIND_TO_OBJECT" value="16" />
      <member name="BINDSTRING_PTR_BIND_CONTEXT" value="17" />
      <member name="BINDSTRING_XDR_ORIGIN" value="18" />
    </enum>
    <typedef name="BINDSTRING">
      <enum name="tagBINDSTRING" />
    </typedef>
    <struct name="IInternetBindInfoVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetBindInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetBindInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetBindInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetBindInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetBindInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="grfBINDF">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbindinfo">
              <ptr>
                <type>BINDINFO</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetBindString">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetBindInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ulStringType">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="ppwzStr">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cEl">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="pcElFetched">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IInternetBindInfoVtbl">
      <struct name="IInternetBindInfoVtbl" />
    </typedef>
    <struct name="IInternetBindInfo">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IInternetBindInfoVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPIINTERNETBINDINFOEX">
      <ptr>
        <type>IInternetBindInfoEx</type>
      </ptr>
    </typedef>
    <struct name="IInternetBindInfoExVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetBindInfoEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetBindInfoEx</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetBindInfoEx</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetBindInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetBindInfoEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="grfBINDF">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbindinfo">
              <ptr>
                <type>BINDINFO</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetBindString">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetBindInfoEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ulStringType">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="ppwzStr">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cEl">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="pcElFetched">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetBindInfoEx">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetBindInfoEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="grfBINDF">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbindinfo">
              <ptr>
                <type>BINDINFO</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="grfBINDF2">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwReserved">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IInternetBindInfoExVtbl">
      <struct name="IInternetBindInfoExVtbl" />
    </typedef>
    <struct name="IInternetBindInfoEx">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IInternetBindInfoExVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPIINTERNETPROTOCOLROOT">
      <ptr>
        <type>IInternetProtocolRoot</type>
      </ptr>
    </typedef>
    <enum name="_tagPI_FLAGS">
      <member name="PI_PARSE_URL" value="1" />
      <member name="PI_FILTER_MODE" value="2" />
      <member name="PI_FORCE_ASYNC" value="4" />
      <member name="PI_USE_WORKERTHREAD" value="8" />
      <member name="PI_MIMEVERIFICATION" value="16" />
      <member name="PI_CLSIDLOOKUP" value="32" />
      <member name="PI_DATAPROGRESS" value="64" />
      <member name="PI_SYNCHRONOUS" value="128" />
      <member name="PI_APARTMENTTHREADED" value="256" />
      <member name="PI_CLASSINSTALL" value="512" />
      <member name="PI_PASSONBINDCTX" value="8192" />
      <member name="PI_NOMIMEHANDLER" value="32768" />
      <member name="PI_LOADAPPDIRECT" value="16384" />
      <member name="PD_FORCE_SWITCH" value="65536" />
      <member name="PI_PREFERDEFAULTHANDLER" value="131072" />
    </enum>
    <typedef name="PI_FLAGS">
      <enum name="_tagPI_FLAGS" />
    </typedef>
    <struct name="_tagPROTOCOLDATA">
      <field offset="0" name="grfFlags">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwState">
        <type>DWORD</type>
      </field>
      <field offset="8" name="pData">
        <type>LPVOID</type>
      </field>
      <field offset="12" name="cbData">
        <type>ULONG</type>
      </field>
    </struct>
    <typedef name="PROTOCOLDATA">
      <struct name="_tagPROTOCOLDATA" />
    </typedef>
    <struct name="_tagStartParam">
      <field offset="0" name="iid">
        <type>IID</type>
      </field>
      <field offset="16" name="pIBindCtx">
        <ptr>
          <type>IBindCtx</type>
        </ptr>
      </field>
      <field offset="20" name="pItf">
        <ptr>
          <type>IUnknown</type>
        </ptr>
      </field>
    </struct>
    <typedef name="StartParam">
      <struct name="_tagStartParam" />
    </typedef>
    <struct name="IInternetProtocolRootVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolRoot</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolRoot</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolRoot</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Start">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolRoot</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="szUrl">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="pOIProtSink">
              <ptr>
                <type>IInternetProtocolSink</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pOIBindInfo">
              <ptr>
                <type>IInternetBindInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="grfPI">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>HANDLE_PTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Continue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolRoot</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pProtocolData">
              <ptr>
                <type>PROTOCOLDATA</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="Abort">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolRoot</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="hrReason">
              <type>HRESULT</type>
              <stack size="4" />
            </arg>
            <arg name="dwOptions">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Terminate">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolRoot</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwOptions">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="Suspend">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolRoot</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="Resume">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolRoot</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IInternetProtocolRootVtbl">
      <struct name="IInternetProtocolRootVtbl" />
    </typedef>
    <struct name="IInternetProtocolRoot">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IInternetProtocolRootVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPIINTERNETPROTOCOL">
      <ptr>
        <type>IInternetProtocol</type>
      </ptr>
    </typedef>
    <struct name="IInternetProtocolVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocol</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocol</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocol</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Start">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocol</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="szUrl">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="pOIProtSink">
              <ptr>
                <type>IInternetProtocolSink</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pOIBindInfo">
              <ptr>
                <type>IInternetBindInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="grfPI">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>HANDLE_PTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Continue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocol</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pProtocolData">
              <ptr>
                <type>PROTOCOLDATA</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="Abort">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocol</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="hrReason">
              <type>HRESULT</type>
              <stack size="4" />
            </arg>
            <arg name="dwOptions">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Terminate">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocol</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwOptions">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="Suspend">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocol</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="Resume">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocol</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="Read">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocol</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pv">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cb">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="pcbRead">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="Seek">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocol</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dlibMove">
              <type>LARGE_INTEGER</type>
              <stack size="8" />
            </arg>
            <arg name="dwOrigin">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="plibNewPosition">
              <ptr>
                <type>ULARGE_INTEGER</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="LockRequest">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocol</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwOptions">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="UnlockRequest">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocol</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IInternetProtocolVtbl">
      <struct name="IInternetProtocolVtbl" />
    </typedef>
    <struct name="IInternetProtocol">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IInternetProtocolVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IInternetProtocolExVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolEx</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolEx</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Start">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="szUrl">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="pOIProtSink">
              <ptr>
                <type>IInternetProtocolSink</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pOIBindInfo">
              <ptr>
                <type>IInternetBindInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="grfPI">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>HANDLE_PTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Continue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pProtocolData">
              <ptr>
                <type>PROTOCOLDATA</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="Abort">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="hrReason">
              <type>HRESULT</type>
              <stack size="4" />
            </arg>
            <arg name="dwOptions">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Terminate">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwOptions">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="Suspend">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolEx</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="Resume">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolEx</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="Read">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pv">
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cb">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="pcbRead">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="Seek">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dlibMove">
              <type>LARGE_INTEGER</type>
              <stack size="8" />
            </arg>
            <arg name="dwOrigin">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="plibNewPosition">
              <ptr>
                <type>ULARGE_INTEGER</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="LockRequest">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwOptions">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="UnlockRequest">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolEx</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="StartEx">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pUri">
              <ptr>
                <type>IUri</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pOIProtSink">
              <ptr>
                <type>IInternetProtocolSink</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pOIBindInfo">
              <ptr>
                <type>IInternetBindInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="grfPI">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>HANDLE_PTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IInternetProtocolExVtbl">
      <struct name="IInternetProtocolExVtbl" />
    </typedef>
    <struct name="IInternetProtocolEx">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IInternetProtocolExVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPIINTERNETPROTOCOLSINK">
      <ptr>
        <type>IInternetProtocolSink</type>
      </ptr>
    </typedef>
    <struct name="IInternetProtocolSinkVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolSink</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolSink</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolSink</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Switch">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolSink</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pProtocolData">
              <ptr>
                <type>PROTOCOLDATA</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="ReportProgress">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolSink</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ulStatusCode">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="szStatusText">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="ReportData">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolSink</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="grfBSCF">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="ulProgress">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="ulProgressMax">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="ReportResult">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolSink</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="hrResult">
              <type>HRESULT</type>
              <stack size="4" />
            </arg>
            <arg name="dwError">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="szResult">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IInternetProtocolSinkVtbl">
      <struct name="IInternetProtocolSinkVtbl" />
    </typedef>
    <struct name="IInternetProtocolSink">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IInternetProtocolSinkVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPIINTERNETPROTOCOLSINKStackable">
      <ptr>
        <type>IInternetProtocolSinkStackable</type>
      </ptr>
    </typedef>
    <struct name="IInternetProtocolSinkStackableVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolSinkStackable</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolSinkStackable</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolSinkStackable</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="SwitchSink">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolSinkStackable</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pOIProtSink">
              <ptr>
                <type>IInternetProtocolSink</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="CommitSwitch">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolSinkStackable</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="RollbackSwitch">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolSinkStackable</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IInternetProtocolSinkStackableVtbl">
      <struct name="IInternetProtocolSinkStackableVtbl" />
    </typedef>
    <struct name="IInternetProtocolSinkStackable">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IInternetProtocolSinkStackableVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPIINTERNETSESSION">
      <ptr>
        <type>IInternetSession</type>
      </ptr>
    </typedef>
    <enum name="_tagOIBDG_FLAGS">
      <member name="OIBDG_APARTMENTTHREADED" value="256" />
      <member name="OIBDG_DATAONLY" value="4096" />
    </enum>
    <typedef name="OIBDG_FLAGS">
      <enum name="_tagOIBDG_FLAGS" />
    </typedef>
    <struct name="IInternetSessionVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSession</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSession</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSession</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="RegisterNameSpace">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSession</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pCF">
              <ptr>
                <type>IClassFactory</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rclsid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwzProtocol">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="cPatterns">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="ppwzPatterns">
              <ptr>
                <type>LPCWSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="UnregisterNameSpace">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSession</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pCF">
              <ptr>
                <type>IClassFactory</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pszProtocol">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="RegisterMimeFilter">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSession</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pCF">
              <ptr>
                <type>IClassFactory</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rclsid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwzType">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="UnregisterMimeFilter">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSession</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pCF">
              <ptr>
                <type>IClassFactory</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwzType">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="CreateBinding">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSession</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pBC">
              <type>LPBC</type>
              <stack size="4" />
            </arg>
            <arg name="szUrl">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="pUnkOuter">
              <ptr>
                <type>IUnknown</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppUnk">
              <ptr>
                <ptr>
                  <type>IUnknown</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppOInetProt">
              <ptr>
                <ptr>
                  <type>IInternetProtocol</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwOption">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="SetSessionOption">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSession</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwOption">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pBuffer">
              <type>LPVOID</type>
              <stack size="4" />
            </arg>
            <arg name="dwBufferLength">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="GetSessionOption">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSession</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwOption">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pBuffer">
              <type>LPVOID</type>
              <stack size="4" />
            </arg>
            <arg name="pdwBufferLength">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IInternetSessionVtbl">
      <struct name="IInternetSessionVtbl" />
    </typedef>
    <struct name="IInternetSession">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IInternetSessionVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPIINTERNETTHREADSWITCH">
      <ptr>
        <type>IInternetThreadSwitch</type>
      </ptr>
    </typedef>
    <struct name="IInternetThreadSwitchVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetThreadSwitch</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetThreadSwitch</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetThreadSwitch</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Prepare">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetThreadSwitch</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Continue">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetThreadSwitch</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IInternetThreadSwitchVtbl">
      <struct name="IInternetThreadSwitchVtbl" />
    </typedef>
    <struct name="IInternetThreadSwitch">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IInternetThreadSwitchVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPIINTERNETPRIORITY">
      <ptr>
        <type>IInternetPriority</type>
      </ptr>
    </typedef>
    <struct name="IInternetPriorityVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetPriority</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetPriority</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetPriority</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="SetPriority">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetPriority</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="nPriority">
              <type>LONG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetPriority">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetPriority</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pnPriority">
              <ptr>
                <type>LONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IInternetPriorityVtbl">
      <struct name="IInternetPriorityVtbl" />
    </typedef>
    <struct name="IInternetPriority">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IInternetPriorityVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPIINTERNETPROTOCOLINFO">
      <ptr>
        <type>IInternetProtocolInfo</type>
      </ptr>
    </typedef>
    <enum name="_tagPARSEACTION">
      <member name="PARSE_CANONICALIZE" value="1" />
      <member name="PARSE_FRIENDLY" value="2" />
      <member name="PARSE_SECURITY_URL" value="3" />
      <member name="PARSE_ROOTDOCUMENT" value="4" />
      <member name="PARSE_DOCUMENT" value="5" />
      <member name="PARSE_ANCHOR" value="6" />
      <member name="PARSE_ENCODE_IS_UNESCAPE" value="7" />
      <member name="PARSE_DECODE_IS_ESCAPE" value="8" />
      <member name="PARSE_PATH_FROM_URL" value="9" />
      <member name="PARSE_URL_FROM_PATH" value="10" />
      <member name="PARSE_MIME" value="11" />
      <member name="PARSE_SERVER" value="12" />
      <member name="PARSE_SCHEMA" value="13" />
      <member name="PARSE_SITE" value="14" />
      <member name="PARSE_DOMAIN" value="15" />
      <member name="PARSE_LOCATION" value="16" />
      <member name="PARSE_SECURITY_DOMAIN" value="17" />
      <member name="PARSE_ESCAPE" value="18" />
      <member name="PARSE_UNESCAPE" value="19" />
    </enum>
    <typedef name="PARSEACTION">
      <enum name="_tagPARSEACTION" />
    </typedef>
    <enum name="_tagPSUACTION">
      <member name="PSU_DEFAULT" value="1" />
      <member name="PSU_SECURITY_URL_ONLY" value="2" />
    </enum>
    <typedef name="PSUACTION">
      <enum name="_tagPSUACTION" />
    </typedef>
    <enum name="_tagQUERYOPTION">
      <member name="QUERY_EXPIRATION_DATE" value="1" />
      <member name="QUERY_TIME_OF_LAST_CHANGE" value="2" />
      <member name="QUERY_CONTENT_ENCODING" value="3" />
      <member name="QUERY_CONTENT_TYPE" value="4" />
      <member name="QUERY_REFRESH" value="5" />
      <member name="QUERY_RECOMBINE" value="6" />
      <member name="QUERY_CAN_NAVIGATE" value="7" />
      <member name="QUERY_USES_NETWORK" value="8" />
      <member name="QUERY_IS_CACHED" value="9" />
      <member name="QUERY_IS_INSTALLEDENTRY" value="10" />
      <member name="QUERY_IS_CACHED_OR_MAPPED" value="11" />
      <member name="QUERY_USES_CACHE" value="12" />
      <member name="QUERY_IS_SECURE" value="13" />
      <member name="QUERY_IS_SAFE" value="14" />
      <member name="QUERY_USES_HISTORYFOLDER" value="15" />
    </enum>
    <typedef name="QUERYOPTION">
      <enum name="_tagQUERYOPTION" />
    </typedef>
    <struct name="IInternetProtocolInfoVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="ParseUrl">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwzUrl">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="ParseAction">
              <type>PARSEACTION</type>
              <stack size="4" />
            </arg>
            <arg name="dwParseFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pwzResult">
              <type>LPWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="cchResult">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pcchResult">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="CombineUrl">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwzBaseUrl">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="pwzRelativeUrl">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="dwCombineFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pwzResult">
              <type>LPWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="cchResult">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pcchResult">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="CompareUrl">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwzUrl1">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="pwzUrl2">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="dwCompareFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="QueryInfo">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetProtocolInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwzUrl">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="OueryOption">
              <type>QUERYOPTION</type>
              <stack size="4" />
            </arg>
            <arg name="dwQueryFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pBuffer">
              <type>LPVOID</type>
              <stack size="4" />
            </arg>
            <arg name="cbBuffer">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pcbBuf">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IInternetProtocolInfoVtbl">
      <struct name="IInternetProtocolInfoVtbl" />
    </typedef>
    <struct name="IInternetProtocolInfo">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IInternetProtocolInfoVtbl" />
        </ptr>
      </field>
    </struct>
    <enum name="_tagINTERNETFEATURELIST">
      <member name="FEATURE_OBJECT_CACHING" value="0" />
      <member name="FEATURE_ZONE_ELEVATION" value="1" />
      <member name="FEATURE_MIME_HANDLING" value="2" />
      <member name="FEATURE_MIME_SNIFFING" value="3" />
      <member name="FEATURE_WINDOW_RESTRICTIONS" value="4" />
      <member name="FEATURE_WEBOC_POPUPMANAGEMENT" value="5" />
      <member name="FEATURE_BEHAVIORS" value="6" />
      <member name="FEATURE_DISABLE_MK_PROTOCOL" value="7" />
      <member name="FEATURE_LOCALMACHINE_LOCKDOWN" value="8" />
      <member name="FEATURE_SECURITYBAND" value="9" />
      <member name="FEATURE_RESTRICT_ACTIVEXINSTALL" value="10" />
      <member name="FEATURE_VALIDATE_NAVIGATE_URL" value="11" />
      <member name="FEATURE_RESTRICT_FILEDOWNLOAD" value="12" />
      <member name="FEATURE_ADDON_MANAGEMENT" value="13" />
      <member name="FEATURE_PROTOCOL_LOCKDOWN" value="14" />
      <member name="FEATURE_HTTP_USERNAME_PASSWORD_DISABLE" value="15" />
      <member name="FEATURE_SAFE_BINDTOOBJECT" value="16" />
      <member name="FEATURE_UNC_SAVEDFILECHECK" value="17" />
      <member name="FEATURE_GET_URL_DOM_FILEPATH_UNENCODED" value="18" />
      <member name="FEATURE_TABBED_BROWSING" value="19" />
      <member name="FEATURE_SSLUX" value="20" />
      <member name="FEATURE_DISABLE_NAVIGATION_SOUNDS" value="21" />
      <member name="FEATURE_DISABLE_LEGACY_COMPRESSION" value="22" />
      <member name="FEATURE_FORCE_ADDR_AND_STATUS" value="23" />
      <member name="FEATURE_XMLHTTP" value="24" />
      <member name="FEATURE_DISABLE_TELNET_PROTOCOL" value="25" />
      <member name="FEATURE_FEEDS" value="26" />
      <member name="FEATURE_BLOCK_INPUT_PROMPTS" value="27" />
      <member name="FEATURE_ENTRY_COUNT" value="28" />
    </enum>
    <typedef name="INTERNETFEATURELIST">
      <enum name="_tagINTERNETFEATURELIST" />
    </typedef>
    <struct name="IInternetSecurityMgrSiteVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityMgrSite</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityMgrSite</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityMgrSite</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetWindow">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityMgrSite</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="phwnd">
              <ptr>
                <type>HWND</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="EnableModeless">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityMgrSite</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fEnable">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IInternetSecurityMgrSiteVtbl">
      <struct name="IInternetSecurityMgrSiteVtbl" />
    </typedef>
    <struct name="IInternetSecurityMgrSite">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IInternetSecurityMgrSiteVtbl" />
        </ptr>
      </field>
    </struct>
    <enum name="__MIDL_IInternetSecurityManager_0001">
      <member name="PUAF_DEFAULT" value="0" />
      <member name="PUAF_NOUI" value="1" />
      <member name="PUAF_ISFILE" value="2" />
      <member name="PUAF_WARN_IF_DENIED" value="4" />
      <member name="PUAF_FORCEUI_FOREGROUND" value="8" />
      <member name="PUAF_CHECK_TIFS" value="16" />
      <member name="PUAF_DONTCHECKBOXINDIALOG" value="32" />
      <member name="PUAF_TRUSTED" value="64" />
      <member name="PUAF_ACCEPT_WILDCARD_SCHEME" value="128" />
      <member name="PUAF_ENFORCERESTRICTED" value="256" />
      <member name="PUAF_NOSAVEDFILECHECK" value="512" />
      <member name="PUAF_REQUIRESAVEDFILECHECK" value="1024" />
      <member name="PUAF_DONT_USE_CACHE" value="4096" />
      <member name="PUAF_RESERVED1" value="8192" />
      <member name="PUAF_RESERVED2" value="16384" />
      <member name="PUAF_LMZ_UNLOCKED" value="65536" />
      <member name="PUAF_LMZ_LOCKED" value="131072" />
      <member name="PUAF_DEFAULTZONEPOL" value="262144" />
      <member name="PUAF_NPL_USE_LOCKED_IF_RESTRICTED" value="524288" />
      <member name="PUAF_NOUIIFLOCKED" value="1048576" />
      <member name="PUAF_DRAGPROTOCOLCHECK" value="2097152" />
    </enum>
    <typedef name="PUAF">
      <enum name="__MIDL_IInternetSecurityManager_0001" />
    </typedef>
    <enum name="__MIDL_IInternetSecurityManager_0002">
      <member name="PUAFOUT_DEFAULT" value="0" />
      <member name="PUAFOUT_ISLOCKZONEPOLICY" value="1" />
    </enum>
    <typedef name="PUAFOUT">
      <enum name="__MIDL_IInternetSecurityManager_0002" />
    </typedef>
    <enum name="__MIDL_IInternetSecurityManager_0003">
      <member name="SZM_CREATE" value="0" />
      <member name="SZM_DELETE" value="1" />
    </enum>
    <typedef name="SZM_FLAGS">
      <enum name="__MIDL_IInternetSecurityManager_0003" />
    </typedef>
    <struct name="IInternetSecurityManagerVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityManager</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityManager</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityManager</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="SetSecuritySite">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityManager</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pSite">
              <ptr>
                <type>IInternetSecurityMgrSite</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetSecuritySite">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityManager</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppSite">
              <ptr>
                <ptr>
                  <type>IInternetSecurityMgrSite</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="MapUrlToZone">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityManager</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwszUrl">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="pdwZone">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="GetSecurityId">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityManager</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwszUrl">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="pbSecurityId">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pcbSecurityId">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD_PTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="ProcessUrlAction">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityManager</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwszUrl">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="dwAction">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pPolicy">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbPolicy">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pContext">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbContext">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="QueryCustomPolicy">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityManager</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwszUrl">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="guidKey">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppPolicy">
              <ptr>
                <ptr>
                  <type>BYTE</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pcbPolicy">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pContext">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbContext">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="SetZoneMapping">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityManager</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwZone">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="lpszPattern">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="dwFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="GetZoneMappings">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityManager</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwZone">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="ppenumString">
              <ptr>
                <ptr>
                  <type>IEnumString</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IInternetSecurityManagerVtbl">
      <struct name="IInternetSecurityManagerVtbl" />
    </typedef>
    <struct name="IInternetSecurityManager">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IInternetSecurityManagerVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IInternetSecurityManagerExVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityManagerEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityManagerEx</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityManagerEx</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="SetSecuritySite">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityManagerEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pSite">
              <ptr>
                <type>IInternetSecurityMgrSite</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetSecuritySite">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityManagerEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppSite">
              <ptr>
                <ptr>
                  <type>IInternetSecurityMgrSite</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="MapUrlToZone">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityManagerEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwszUrl">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="pdwZone">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="GetSecurityId">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityManagerEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwszUrl">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="pbSecurityId">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pcbSecurityId">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD_PTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="ProcessUrlAction">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityManagerEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwszUrl">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="dwAction">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pPolicy">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbPolicy">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pContext">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbContext">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="QueryCustomPolicy">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityManagerEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwszUrl">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="guidKey">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppPolicy">
              <ptr>
                <ptr>
                  <type>BYTE</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pcbPolicy">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pContext">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbContext">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="SetZoneMapping">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityManagerEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwZone">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="lpszPattern">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="dwFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="GetZoneMappings">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityManagerEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwZone">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="ppenumString">
              <ptr>
                <ptr>
                  <type>IEnumString</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="ProcessUrlActionEx">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityManagerEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwszUrl">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="dwAction">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pPolicy">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbPolicy">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pContext">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbContext">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pdwOutFlags">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IInternetSecurityManagerExVtbl">
      <struct name="IInternetSecurityManagerExVtbl" />
    </typedef>
    <struct name="IInternetSecurityManagerEx">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IInternetSecurityManagerExVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IInternetSecurityManagerEx2Vtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityManagerEx2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityManagerEx2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityManagerEx2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="SetSecuritySite">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityManagerEx2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pSite">
              <ptr>
                <type>IInternetSecurityMgrSite</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetSecuritySite">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityManagerEx2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppSite">
              <ptr>
                <ptr>
                  <type>IInternetSecurityMgrSite</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="MapUrlToZone">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityManagerEx2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwszUrl">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="pdwZone">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="GetSecurityId">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityManagerEx2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwszUrl">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="pbSecurityId">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pcbSecurityId">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD_PTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="ProcessUrlAction">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityManagerEx2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwszUrl">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="dwAction">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pPolicy">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbPolicy">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pContext">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbContext">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="QueryCustomPolicy">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityManagerEx2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwszUrl">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="guidKey">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppPolicy">
              <ptr>
                <ptr>
                  <type>BYTE</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pcbPolicy">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pContext">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbContext">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="SetZoneMapping">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityManagerEx2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwZone">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="lpszPattern">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="dwFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="GetZoneMappings">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityManagerEx2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwZone">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="ppenumString">
              <ptr>
                <ptr>
                  <type>IEnumString</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="ProcessUrlActionEx">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityManagerEx2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwszUrl">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="dwAction">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pPolicy">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbPolicy">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pContext">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbContext">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pdwOutFlags">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="MapUrlToZoneEx2">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityManagerEx2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pUri">
              <ptr>
                <type>IUri</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwZone">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="ppwszMappedUrl">
              <ptr>
                <type>LPWSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwOutFlags">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="ProcessUrlActionEx2">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityManagerEx2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pUri">
              <ptr>
                <type>IUri</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwAction">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pPolicy">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbPolicy">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pContext">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbContext">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD_PTR</type>
              <stack size="4" />
            </arg>
            <arg name="pdwOutFlags">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="GetSecurityIdEx2">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityManagerEx2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pUri">
              <ptr>
                <type>IUri</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbSecurityId">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pcbSecurityId">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD_PTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="60" name="QueryCustomPolicyEx2">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetSecurityManagerEx2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pUri">
              <ptr>
                <type>IUri</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="guidKey">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppPolicy">
              <ptr>
                <ptr>
                  <type>BYTE</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pcbPolicy">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pContext">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbContext">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD_PTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IInternetSecurityManagerEx2Vtbl">
      <struct name="IInternetSecurityManagerEx2Vtbl" />
    </typedef>
    <struct name="IInternetSecurityManagerEx2">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IInternetSecurityManagerEx2Vtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IZoneIdentifierVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IZoneIdentifier</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IZoneIdentifier</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IZoneIdentifier</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetId">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IZoneIdentifier</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwZone">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="SetId">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IZoneIdentifier</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwZone">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="Remove">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IZoneIdentifier</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IZoneIdentifierVtbl">
      <struct name="IZoneIdentifierVtbl" />
    </typedef>
    <struct name="IZoneIdentifier">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IZoneIdentifierVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IInternetHostSecurityManagerVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetHostSecurityManager</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetHostSecurityManager</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetHostSecurityManager</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetSecurityId">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetHostSecurityManager</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbSecurityId">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pcbSecurityId">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD_PTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="ProcessUrlAction">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetHostSecurityManager</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwAction">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pPolicy">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbPolicy">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pContext">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbContext">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="QueryCustomPolicy">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetHostSecurityManager</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="guidKey">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppPolicy">
              <ptr>
                <ptr>
                  <type>BYTE</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pcbPolicy">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pContext">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbContext">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IInternetHostSecurityManagerVtbl">
      <struct name="IInternetHostSecurityManagerVtbl" />
    </typedef>
    <struct name="IInternetHostSecurityManager">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IInternetHostSecurityManagerVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPURLZONEMANAGER">
      <ptr>
        <type>IInternetZoneManager</type>
      </ptr>
    </typedef>
    <enum name="tagURLZONE">
      <member name="URLZONE_INVALID" value="-1" />
      <member name="URLZONE_PREDEFINED_MIN" value="0" />
      <member name="URLZONE_LOCAL_MACHINE" value="0" />
      <member name="URLZONE_INTRANET" value="1" />
      <member name="URLZONE_TRUSTED" value="2" />
      <member name="URLZONE_INTERNET" value="3" />
      <member name="URLZONE_UNTRUSTED" value="4" />
      <member name="URLZONE_PREDEFINED_MAX" value="999" />
      <member name="URLZONE_USER_MIN" value="1000" />
      <member name="URLZONE_USER_MAX" value="10000" />
    </enum>
    <typedef name="URLZONE">
      <enum name="tagURLZONE" />
    </typedef>
    <enum name="tagURLTEMPLATE">
      <member name="URLTEMPLATE_CUSTOM" value="0" />
      <member name="URLTEMPLATE_PREDEFINED_MIN" value="65536" />
      <member name="URLTEMPLATE_LOW" value="65536" />
      <member name="URLTEMPLATE_MEDLOW" value="66816" />
      <member name="URLTEMPLATE_MEDIUM" value="69632" />
      <member name="URLTEMPLATE_MEDHIGH" value="70912" />
      <member name="URLTEMPLATE_HIGH" value="73728" />
      <member name="URLTEMPLATE_PREDEFINED_MAX" value="131072" />
    </enum>
    <typedef name="URLTEMPLATE">
      <enum name="tagURLTEMPLATE" />
    </typedef>
    <enum name="__MIDL_IInternetZoneManager_0001">
      <member name="MAX_ZONE_PATH" value="260" />
      <member name="MAX_ZONE_DESCRIPTION" value="200" />
    </enum>
    <enum name="__MIDL_IInternetZoneManager_0002">
      <member name="ZAFLAGS_CUSTOM_EDIT" value="1" />
      <member name="ZAFLAGS_ADD_SITES" value="2" />
      <member name="ZAFLAGS_REQUIRE_VERIFICATION" value="4" />
      <member name="ZAFLAGS_INCLUDE_PROXY_OVERRIDE" value="8" />
      <member name="ZAFLAGS_INCLUDE_INTRANET_SITES" value="16" />
      <member name="ZAFLAGS_NO_UI" value="32" />
      <member name="ZAFLAGS_SUPPORTS_VERIFICATION" value="64" />
      <member name="ZAFLAGS_UNC_AS_INTRANET" value="128" />
      <member name="ZAFLAGS_DETECT_INTRANET" value="256" />
      <member name="ZAFLAGS_USE_LOCKED_ZONES" value="65536" />
      <member name="ZAFLAGS_VERIFY_TEMPLATE_SETTINGS" value="131072" />
      <member name="ZAFLAGS_NO_CACHE" value="262144" />
    </enum>
    <typedef name="ZAFLAGS">
      <enum name="__MIDL_IInternetZoneManager_0002" />
    </typedef>
    <struct name="_ZONEATTRIBUTES">
      <field offset="0" name="cbSize">
        <type>ULONG</type>
      </field>
      <field offset="8" name="szDisplayName">
        <arr length="260">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="528" name="szDescription">
        <arr length="200">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="928" name="szIconPath">
        <arr length="260">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="1448" name="dwTemplateMinLevel">
        <type>DWORD</type>
      </field>
      <field offset="1452" name="dwTemplateRecommended">
        <type>DWORD</type>
      </field>
      <field offset="1456" name="dwTemplateCurrentLevel">
        <type>DWORD</type>
      </field>
      <field offset="1460" name="dwFlags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="ZONEATTRIBUTES">
      <struct name="_ZONEATTRIBUTES" />
    </typedef>
    <typedef name="LPZONEATTRIBUTES">
      <ptr>
        <struct name="_ZONEATTRIBUTES" />
      </ptr>
    </typedef>
    <enum name="_URLZONEREG">
      <member name="URLZONEREG_DEFAULT" value="0" />
      <member name="URLZONEREG_HKLM" value="1" />
      <member name="URLZONEREG_HKCU" value="2" />
    </enum>
    <typedef name="URLZONEREG">
      <enum name="_URLZONEREG" />
    </typedef>
    <struct name="IInternetZoneManagerVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManager</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManager</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManager</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetZoneAttributes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManager</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwZone">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pZoneAttributes">
              <ptr>
                <type>ZONEATTRIBUTES</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="SetZoneAttributes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManager</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwZone">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pZoneAttributes">
              <ptr>
                <type>ZONEATTRIBUTES</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetZoneCustomPolicy">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManager</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwZone">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="guidKey">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppPolicy">
              <ptr>
                <ptr>
                  <type>BYTE</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pcbPolicy">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="urlZoneReg">
              <type>URLZONEREG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="SetZoneCustomPolicy">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManager</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwZone">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="guidKey">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pPolicy">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbPolicy">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="urlZoneReg">
              <type>URLZONEREG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="GetZoneActionPolicy">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManager</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwZone">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwAction">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pPolicy">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbPolicy">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="urlZoneReg">
              <type>URLZONEREG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="SetZoneActionPolicy">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManager</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwZone">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwAction">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pPolicy">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbPolicy">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="urlZoneReg">
              <type>URLZONEREG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="PromptAction">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManager</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwAction">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="hwndParent">
              <type>HWND</type>
              <stack size="4" />
            </arg>
            <arg name="pwszUrl">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="pwszText">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="dwPromptFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="LogAction">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManager</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwAction">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pwszUrl">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="pwszText">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="dwLogFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="CreateZoneEnumerator">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManager</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwEnum">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwCount">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="GetZoneAt">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManager</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwEnum">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwIndex">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pdwZone">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="DestroyZoneEnumerator">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManager</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwEnum">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="CopyTemplatePoliciesToZone">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManager</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwTemplate">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwZone">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IInternetZoneManagerVtbl">
      <struct name="IInternetZoneManagerVtbl" />
    </typedef>
    <struct name="IInternetZoneManager">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IInternetZoneManagerVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IInternetZoneManagerExVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManagerEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManagerEx</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManagerEx</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetZoneAttributes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManagerEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwZone">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pZoneAttributes">
              <ptr>
                <type>ZONEATTRIBUTES</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="SetZoneAttributes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManagerEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwZone">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pZoneAttributes">
              <ptr>
                <type>ZONEATTRIBUTES</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetZoneCustomPolicy">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManagerEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwZone">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="guidKey">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppPolicy">
              <ptr>
                <ptr>
                  <type>BYTE</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pcbPolicy">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="urlZoneReg">
              <type>URLZONEREG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="SetZoneCustomPolicy">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManagerEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwZone">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="guidKey">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pPolicy">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbPolicy">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="urlZoneReg">
              <type>URLZONEREG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="GetZoneActionPolicy">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManagerEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwZone">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwAction">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pPolicy">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbPolicy">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="urlZoneReg">
              <type>URLZONEREG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="SetZoneActionPolicy">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManagerEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwZone">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwAction">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pPolicy">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbPolicy">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="urlZoneReg">
              <type>URLZONEREG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="PromptAction">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManagerEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwAction">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="hwndParent">
              <type>HWND</type>
              <stack size="4" />
            </arg>
            <arg name="pwszUrl">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="pwszText">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="dwPromptFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="LogAction">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManagerEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwAction">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pwszUrl">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="pwszText">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="dwLogFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="CreateZoneEnumerator">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManagerEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwEnum">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwCount">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="GetZoneAt">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManagerEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwEnum">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwIndex">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pdwZone">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="DestroyZoneEnumerator">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManagerEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwEnum">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="CopyTemplatePoliciesToZone">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManagerEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwTemplate">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwZone">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="60" name="GetZoneActionPolicyEx">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManagerEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwZone">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwAction">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pPolicy">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbPolicy">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="urlZoneReg">
              <type>URLZONEREG</type>
              <stack size="4" />
            </arg>
            <arg name="dwFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="64" name="SetZoneActionPolicyEx">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManagerEx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwZone">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwAction">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pPolicy">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbPolicy">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="urlZoneReg">
              <type>URLZONEREG</type>
              <stack size="4" />
            </arg>
            <arg name="dwFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IInternetZoneManagerExVtbl">
      <struct name="IInternetZoneManagerExVtbl" />
    </typedef>
    <struct name="IInternetZoneManagerEx">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IInternetZoneManagerExVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="IInternetZoneManagerEx2Vtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManagerEx2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManagerEx2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManagerEx2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetZoneAttributes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManagerEx2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwZone">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pZoneAttributes">
              <ptr>
                <type>ZONEATTRIBUTES</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="SetZoneAttributes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManagerEx2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwZone">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pZoneAttributes">
              <ptr>
                <type>ZONEATTRIBUTES</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetZoneCustomPolicy">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManagerEx2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwZone">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="guidKey">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppPolicy">
              <ptr>
                <ptr>
                  <type>BYTE</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pcbPolicy">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="urlZoneReg">
              <type>URLZONEREG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="SetZoneCustomPolicy">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManagerEx2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwZone">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="guidKey">
              <ptr>
                <type>GUID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pPolicy">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbPolicy">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="urlZoneReg">
              <type>URLZONEREG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="GetZoneActionPolicy">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManagerEx2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwZone">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwAction">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pPolicy">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbPolicy">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="urlZoneReg">
              <type>URLZONEREG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="SetZoneActionPolicy">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManagerEx2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwZone">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwAction">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pPolicy">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbPolicy">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="urlZoneReg">
              <type>URLZONEREG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="PromptAction">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManagerEx2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwAction">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="hwndParent">
              <type>HWND</type>
              <stack size="4" />
            </arg>
            <arg name="pwszUrl">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="pwszText">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="dwPromptFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="LogAction">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManagerEx2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwAction">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pwszUrl">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="pwszText">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="dwLogFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="CreateZoneEnumerator">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManagerEx2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwEnum">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pdwCount">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="GetZoneAt">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManagerEx2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwEnum">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwIndex">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pdwZone">
              <ptr>
                <type>DWORD</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="DestroyZoneEnumerator">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManagerEx2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwEnum">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="CopyTemplatePoliciesToZone">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManagerEx2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwTemplate">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwZone">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="60" name="GetZoneActionPolicyEx">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManagerEx2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwZone">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwAction">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pPolicy">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbPolicy">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="urlZoneReg">
              <type>URLZONEREG</type>
              <stack size="4" />
            </arg>
            <arg name="dwFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="64" name="SetZoneActionPolicyEx">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManagerEx2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwZone">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="dwAction">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pPolicy">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cbPolicy">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="urlZoneReg">
              <type>URLZONEREG</type>
              <stack size="4" />
            </arg>
            <arg name="dwFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="68" name="GetZoneAttributesEx">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManagerEx2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwZone">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pZoneAttributes">
              <ptr>
                <type>ZONEATTRIBUTES</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="72" name="GetZoneSecurityState">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManagerEx2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwZoneIndex">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="fRespectPolicy">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
            <arg name="pdwState">
              <type>LPDWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pfPolicyEncountered">
              <ptr>
                <type>BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="76" name="GetIESecurityState">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManagerEx2</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fRespectPolicy">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
            <arg name="pdwState">
              <type>LPDWORD</type>
              <stack size="4" />
            </arg>
            <arg name="pfPolicyEncountered">
              <ptr>
                <type>BOOL</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="fNoCache">
              <type>BOOL</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="80" name="FixUnsecureSettings">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IInternetZoneManagerEx2</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IInternetZoneManagerEx2Vtbl">
      <struct name="IInternetZoneManagerEx2Vtbl" />
    </typedef>
    <struct name="IInternetZoneManagerEx2">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IInternetZoneManagerEx2Vtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="_tagCODEBASEHOLD">
      <field offset="0" name="cbSize">
        <type>ULONG</type>
      </field>
      <field offset="4" name="szDistUnit">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="szCodeBase">
        <type>LPWSTR</type>
      </field>
      <field offset="12" name="dwVersionMS">
        <type>DWORD</type>
      </field>
      <field offset="16" name="dwVersionLS">
        <type>DWORD</type>
      </field>
      <field offset="20" name="dwStyle">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="CODEBASEHOLD">
      <struct name="_tagCODEBASEHOLD" />
    </typedef>
    <typedef name="LPCODEBASEHOLD">
      <ptr>
        <struct name="_tagCODEBASEHOLD" />
      </ptr>
    </typedef>
    <struct name="_tagSOFTDISTINFO">
      <field offset="0" name="cbSize">
        <type>ULONG</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwAdState">
        <type>DWORD</type>
      </field>
      <field offset="12" name="szTitle">
        <type>LPWSTR</type>
      </field>
      <field offset="16" name="szAbstract">
        <type>LPWSTR</type>
      </field>
      <field offset="20" name="szHREF">
        <type>LPWSTR</type>
      </field>
      <field offset="24" name="dwInstalledVersionMS">
        <type>DWORD</type>
      </field>
      <field offset="28" name="dwInstalledVersionLS">
        <type>DWORD</type>
      </field>
      <field offset="32" name="dwUpdateVersionMS">
        <type>DWORD</type>
      </field>
      <field offset="36" name="dwUpdateVersionLS">
        <type>DWORD</type>
      </field>
      <field offset="40" name="dwAdvertisedVersionMS">
        <type>DWORD</type>
      </field>
      <field offset="44" name="dwAdvertisedVersionLS">
        <type>DWORD</type>
      </field>
      <field offset="48" name="dwReserved">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="SOFTDISTINFO">
      <struct name="_tagSOFTDISTINFO" />
    </typedef>
    <typedef name="LPSOFTDISTINFO">
      <ptr>
        <struct name="_tagSOFTDISTINFO" />
      </ptr>
    </typedef>
    <struct name="ISoftDistExtVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISoftDistExt</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISoftDistExt</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISoftDistExt</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="ProcessSoftDist">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISoftDistExt</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="szCDFURL">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="pSoftDistElement">
              <ptr>
                <type>IXMLElement</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lpsdi">
              <type>LPSOFTDISTINFO</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetFirstCodeBase">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISoftDistExt</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="szCodeBase">
              <ptr>
                <type>LPWSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwMaxSize">
              <type>LPDWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetNextCodeBase">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISoftDistExt</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="szCodeBase">
              <ptr>
                <type>LPWSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwMaxSize">
              <type>LPDWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="AsyncInstallDistributionUnit">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ISoftDistExt</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pbc">
              <ptr>
                <type>IBindCtx</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pvReserved">
              <type>LPVOID</type>
              <stack size="4" />
            </arg>
            <arg name="flags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="lpcbh">
              <type>LPCODEBASEHOLD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="ISoftDistExtVtbl">
      <struct name="ISoftDistExtVtbl" />
    </typedef>
    <struct name="ISoftDistExt">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="ISoftDistExtVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPCATALOGFILEINFO">
      <ptr>
        <type>ICatalogFileInfo</type>
      </ptr>
    </typedef>
    <struct name="ICatalogFileInfoVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICatalogFileInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICatalogFileInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICatalogFileInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetCatalogFile">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICatalogFileInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppszCatalogFile">
              <ptr>
                <type>LPSTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetJavaTrust">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>ICatalogFileInfo</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppJavaTrust">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="ICatalogFileInfoVtbl">
      <struct name="ICatalogFileInfoVtbl" />
    </typedef>
    <struct name="ICatalogFileInfo">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="ICatalogFileInfoVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPDATAFILTER">
      <ptr>
        <type>IDataFilter</type>
      </ptr>
    </typedef>
    <struct name="IDataFilterVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDataFilter</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDataFilter</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDataFilter</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="DoEncode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDataFilter</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="lInBufferSize">
              <type>LONG</type>
              <stack size="4" />
            </arg>
            <arg name="pbInBuffer">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lOutBufferSize">
              <type>LONG</type>
              <stack size="4" />
            </arg>
            <arg name="pbOutBuffer">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lInBytesAvailable">
              <type>LONG</type>
              <stack size="4" />
            </arg>
            <arg name="plInBytesRead">
              <ptr>
                <type>LONG</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="plOutBytesWritten">
              <ptr>
                <type>LONG</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="DoDecode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDataFilter</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="lInBufferSize">
              <type>LONG</type>
              <stack size="4" />
            </arg>
            <arg name="pbInBuffer">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lOutBufferSize">
              <type>LONG</type>
              <stack size="4" />
            </arg>
            <arg name="pbOutBuffer">
              <ptr>
                <type>BYTE</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="lInBytesAvailable">
              <type>LONG</type>
              <stack size="4" />
            </arg>
            <arg name="plInBytesRead">
              <ptr>
                <type>LONG</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="plOutBytesWritten">
              <ptr>
                <type>LONG</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="SetEncodingLevel">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IDataFilter</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwEncLevel">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IDataFilterVtbl">
      <struct name="IDataFilterVtbl" />
    </typedef>
    <struct name="IDataFilter">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IDataFilterVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="_tagPROTOCOLFILTERDATA">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pProtocolSink">
        <ptr>
          <type>IInternetProtocolSink</type>
        </ptr>
      </field>
      <field offset="8" name="pProtocol">
        <ptr>
          <type>IInternetProtocol</type>
        </ptr>
      </field>
      <field offset="12" name="pUnk">
        <ptr>
          <type>IUnknown</type>
        </ptr>
      </field>
      <field offset="16" name="dwFilterFlags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PROTOCOLFILTERDATA">
      <struct name="_tagPROTOCOLFILTERDATA" />
    </typedef>
    <typedef name="LPENCODINGFILTERFACTORY">
      <ptr>
        <type>IEncodingFilterFactory</type>
      </ptr>
    </typedef>
    <struct name="_tagDATAINFO">
      <field offset="0" name="ulTotalSize">
        <type>ULONG</type>
      </field>
      <field offset="4" name="ulavrPacketSize">
        <type>ULONG</type>
      </field>
      <field offset="8" name="ulConnectSpeed">
        <type>ULONG</type>
      </field>
      <field offset="12" name="ulProcessorSpeed">
        <type>ULONG</type>
      </field>
    </struct>
    <typedef name="DATAINFO">
      <struct name="_tagDATAINFO" />
    </typedef>
    <struct name="IEncodingFilterFactoryVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEncodingFilterFactory</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEncodingFilterFactory</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEncodingFilterFactory</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="FindBestFilter">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEncodingFilterFactory</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwzCodeIn">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="pwzCodeOut">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="info">
              <type>DATAINFO</type>
              <stack size="16" />
            </arg>
            <arg name="ppDF">
              <ptr>
                <ptr>
                  <type>IDataFilter</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetDefaultFilter">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEncodingFilterFactory</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pwzCodeIn">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="pwzCodeOut">
              <type>LPCWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="ppDF">
              <ptr>
                <ptr>
                  <type>IDataFilter</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IEncodingFilterFactoryVtbl">
      <struct name="IEncodingFilterFactoryVtbl" />
    </typedef>
    <struct name="IEncodingFilterFactory">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IEncodingFilterFactoryVtbl" />
        </ptr>
      </field>
    </struct>
    <struct name="_tagHIT_LOGGING_INFO">
      <field offset="0" name="dwStructSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="lpszLoggedUrlName">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="StartTime">
        <type>SYSTEMTIME</type>
      </field>
      <field offset="24" name="EndTime">
        <type>SYSTEMTIME</type>
      </field>
      <field offset="40" name="lpszExtendedInfo">
        <type>LPSTR</type>
      </field>
    </struct>
    <typedef name="HIT_LOGGING_INFO">
      <struct name="_tagHIT_LOGGING_INFO" />
    </typedef>
    <typedef name="LPHIT_LOGGING_INFO">
      <ptr>
        <struct name="_tagHIT_LOGGING_INFO" />
      </ptr>
    </typedef>
    <struct name="CONFIRMSAFETY">
      <field offset="0" name="clsid">
        <type>CLSID</type>
      </field>
      <field offset="16" name="pUnk">
        <ptr>
          <type>IUnknown</type>
        </ptr>
      </field>
      <field offset="20" name="dwFlags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="LPIWRAPPEDPROTOCOL">
      <ptr>
        <type>IWrappedProtocol</type>
      </ptr>
    </typedef>
    <struct name="IWrappedProtocolVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IWrappedProtocol</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IWrappedProtocol</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IWrappedProtocol</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetWrapperCode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IWrappedProtocol</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pnCode">
              <ptr>
                <type>LONG</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="dwReserved">
              <type>DWORD_PTR</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IWrappedProtocolVtbl">
      <struct name="IWrappedProtocolVtbl" />
    </typedef>
    <struct name="IWrappedProtocol">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IWrappedProtocolVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="IPropertyStorage">
      <struct name="IPropertyStorage" />
    </typedef>
    <typedef name="IPropertySetStorage">
      <struct name="IPropertySetStorage" />
    </typedef>
    <typedef name="IEnumSTATPROPSTG">
      <struct name="IEnumSTATPROPSTG" />
    </typedef>
    <typedef name="IEnumSTATPROPSETSTG">
      <struct name="IEnumSTATPROPSETSTG" />
    </typedef>
    <struct name="tagVersionedStream">
      <field offset="0" name="guidVersion">
        <type>GUID</type>
      </field>
      <field offset="16" name="pStream">
        <ptr>
          <type>IStream</type>
        </ptr>
      </field>
    </struct>
    <typedef name="VERSIONEDSTREAM">
      <struct name="tagVersionedStream" />
    </typedef>
    <typedef name="LPVERSIONEDSTREAM">
      <ptr>
        <struct name="tagVersionedStream" />
      </ptr>
    </typedef>
    <typedef name="PROPVARIANT">
      <struct name="tagPROPVARIANT" />
    </typedef>
    <struct name="tagCAC">
      <field offset="0" name="cElems">
        <type>ULONG</type>
      </field>
      <field offset="4" name="pElems">
        <ptr>
          <type>CHAR</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CAC">
      <struct name="tagCAC" />
    </typedef>
    <struct name="tagCAUB">
      <field offset="0" name="cElems">
        <type>ULONG</type>
      </field>
      <field offset="4" name="pElems">
        <ptr>
          <type>UCHAR</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CAUB">
      <struct name="tagCAUB" />
    </typedef>
    <struct name="tagCAI">
      <field offset="0" name="cElems">
        <type>ULONG</type>
      </field>
      <field offset="4" name="pElems">
        <ptr>
          <type>SHORT</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CAI">
      <struct name="tagCAI" />
    </typedef>
    <struct name="tagCAUI">
      <field offset="0" name="cElems">
        <type>ULONG</type>
      </field>
      <field offset="4" name="pElems">
        <ptr>
          <type>USHORT</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CAUI">
      <struct name="tagCAUI" />
    </typedef>
    <struct name="tagCAL">
      <field offset="0" name="cElems">
        <type>ULONG</type>
      </field>
      <field offset="4" name="pElems">
        <ptr>
          <type>LONG</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CAL">
      <struct name="tagCAL" />
    </typedef>
    <struct name="tagCAUL">
      <field offset="0" name="cElems">
        <type>ULONG</type>
      </field>
      <field offset="4" name="pElems">
        <ptr>
          <type>ULONG</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CAUL">
      <struct name="tagCAUL" />
    </typedef>
    <struct name="tagCAFLT">
      <field offset="0" name="cElems">
        <type>ULONG</type>
      </field>
      <field offset="4" name="pElems">
        <ptr>
          <type>FLOAT</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CAFLT">
      <struct name="tagCAFLT" />
    </typedef>
    <struct name="tagCADBL">
      <field offset="0" name="cElems">
        <type>ULONG</type>
      </field>
      <field offset="4" name="pElems">
        <ptr>
          <type>DOUBLE</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CADBL">
      <struct name="tagCADBL" />
    </typedef>
    <struct name="tagCACY">
      <field offset="0" name="cElems">
        <type>ULONG</type>
      </field>
      <field offset="4" name="pElems">
        <ptr>
          <type>CY</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CACY">
      <struct name="tagCACY" />
    </typedef>
    <struct name="tagCADATE">
      <field offset="0" name="cElems">
        <type>ULONG</type>
      </field>
      <field offset="4" name="pElems">
        <ptr>
          <type>DATE</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CADATE">
      <struct name="tagCADATE" />
    </typedef>
    <struct name="tagCABSTR">
      <field offset="0" name="cElems">
        <type>ULONG</type>
      </field>
      <field offset="4" name="pElems">
        <ptr>
          <type>BSTR</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CABSTR">
      <struct name="tagCABSTR" />
    </typedef>
    <struct name="tagCABSTRBLOB">
      <field offset="0" name="cElems">
        <type>ULONG</type>
      </field>
      <field offset="4" name="pElems">
        <ptr>
          <type>BSTRBLOB</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CABSTRBLOB">
      <struct name="tagCABSTRBLOB" />
    </typedef>
    <struct name="tagCABOOL">
      <field offset="0" name="cElems">
        <type>ULONG</type>
      </field>
      <field offset="4" name="pElems">
        <ptr>
          <type>VARIANT_BOOL</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CABOOL">
      <struct name="tagCABOOL" />
    </typedef>
    <struct name="tagCASCODE">
      <field offset="0" name="cElems">
        <type>ULONG</type>
      </field>
      <field offset="4" name="pElems">
        <ptr>
          <type>SCODE</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CASCODE">
      <struct name="tagCASCODE" />
    </typedef>
    <struct name="tagCAPROPVARIANT">
      <field offset="0" name="cElems">
        <type>ULONG</type>
      </field>
      <field offset="4" name="pElems">
        <ptr>
          <type>PROPVARIANT</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CAPROPVARIANT">
      <struct name="tagCAPROPVARIANT" />
    </typedef>
    <struct name="tagCAH">
      <field offset="0" name="cElems">
        <type>ULONG</type>
      </field>
      <field offset="4" name="pElems">
        <ptr>
          <type>LARGE_INTEGER</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CAH">
      <struct name="tagCAH" />
    </typedef>
    <struct name="tagCAUH">
      <field offset="0" name="cElems">
        <type>ULONG</type>
      </field>
      <field offset="4" name="pElems">
        <ptr>
          <type>ULARGE_INTEGER</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CAUH">
      <struct name="tagCAUH" />
    </typedef>
    <struct name="tagCALPSTR">
      <field offset="0" name="cElems">
        <type>ULONG</type>
      </field>
      <field offset="4" name="pElems">
        <ptr>
          <type>LPSTR</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CALPSTR">
      <struct name="tagCALPSTR" />
    </typedef>
    <struct name="tagCALPWSTR">
      <field offset="0" name="cElems">
        <type>ULONG</type>
      </field>
      <field offset="4" name="pElems">
        <ptr>
          <type>LPWSTR</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CALPWSTR">
      <struct name="tagCALPWSTR" />
    </typedef>
    <struct name="tagCAFILETIME">
      <field offset="0" name="cElems">
        <type>ULONG</type>
      </field>
      <field offset="4" name="pElems">
        <ptr>
          <type>FILETIME</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CAFILETIME">
      <struct name="tagCAFILETIME" />
    </typedef>
    <struct name="tagCACLIPDATA">
      <field offset="0" name="cElems">
        <type>ULONG</type>
      </field>
      <field offset="4" name="pElems">
        <ptr>
          <type>CLIPDATA</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CACLIPDATA">
      <struct name="tagCACLIPDATA" />
    </typedef>
    <struct name="tagCACLSID">
      <field offset="0" name="cElems">
        <type>ULONG</type>
      </field>
      <field offset="4" name="pElems">
        <ptr>
          <type>CLSID</type>
        </ptr>
      </field>
    </struct>
    <typedef name="CACLSID">
      <struct name="tagCACLSID" />
    </typedef>
    <typedef name="PROPVAR_PAD1">
      <type>WORD</type>
    </typedef>
    <typedef name="PROPVAR_PAD2">
      <type>WORD</type>
    </typedef>
    <typedef name="PROPVAR_PAD3">
      <type>WORD</type>
    </typedef>
    <struct name="struct_179">
      <field offset="0" name="vt">
        <type>VARTYPE</type>
      </field>
      <field offset="2" name="wReserved1">
        <type>PROPVAR_PAD1</type>
      </field>
      <field offset="4" name="wReserved2">
        <type>PROPVAR_PAD2</type>
      </field>
      <field offset="6" name="wReserved3">
        <type>PROPVAR_PAD3</type>
      </field>
      <field offset="8">
        <union>
          <alt name="cVal">
            <type>CHAR</type>
          </alt>
          <alt name="bVal">
            <type>UCHAR</type>
          </alt>
          <alt name="iVal">
            <type>SHORT</type>
          </alt>
          <alt name="uiVal">
            <type>USHORT</type>
          </alt>
          <alt name="lVal">
            <type>LONG</type>
          </alt>
          <alt name="ulVal">
            <type>ULONG</type>
          </alt>
          <alt name="intVal">
            <type>INT</type>
          </alt>
          <alt name="uintVal">
            <type>UINT</type>
          </alt>
          <alt name="hVal">
            <type>LARGE_INTEGER</type>
          </alt>
          <alt name="uhVal">
            <type>ULARGE_INTEGER</type>
          </alt>
          <alt name="fltVal">
            <type>FLOAT</type>
          </alt>
          <alt name="dblVal">
            <type>DOUBLE</type>
          </alt>
          <alt name="boolVal">
            <type>VARIANT_BOOL</type>
          </alt>
          <alt name="scode">
            <type>SCODE</type>
          </alt>
          <alt name="cyVal">
            <type>CY</type>
          </alt>
          <alt name="date">
            <type>DATE</type>
          </alt>
          <alt name="filetime">
            <type>FILETIME</type>
          </alt>
          <alt name="puuid">
            <ptr>
              <type>CLSID</type>
            </ptr>
          </alt>
          <alt name="pclipdata">
            <ptr>
              <type>CLIPDATA</type>
            </ptr>
          </alt>
          <alt name="bstrVal">
            <type>BSTR</type>
          </alt>
          <alt name="bstrblobVal">
            <type>BSTRBLOB</type>
          </alt>
          <alt name="blob">
            <type>BLOB</type>
          </alt>
          <alt name="pszVal">
            <type>LPSTR</type>
          </alt>
          <alt name="pwszVal">
            <type>LPWSTR</type>
          </alt>
          <alt name="punkVal">
            <ptr>
              <type>IUnknown</type>
            </ptr>
          </alt>
          <alt name="pdispVal">
            <ptr>
              <type>IDispatch</type>
            </ptr>
          </alt>
          <alt name="pStream">
            <ptr>
              <type>IStream</type>
            </ptr>
          </alt>
          <alt name="pStorage">
            <ptr>
              <type>IStorage</type>
            </ptr>
          </alt>
          <alt name="pVersionedStream">
            <type>LPVERSIONEDSTREAM</type>
          </alt>
          <alt name="parray">
            <type>LPSAFEARRAY</type>
          </alt>
          <alt name="cac">
            <type>CAC</type>
          </alt>
          <alt name="caub">
            <type>CAUB</type>
          </alt>
          <alt name="cai">
            <type>CAI</type>
          </alt>
          <alt name="caui">
            <type>CAUI</type>
          </alt>
          <alt name="cal">
            <type>CAL</type>
          </alt>
          <alt name="caul">
            <type>CAUL</type>
          </alt>
          <alt name="cah">
            <type>CAH</type>
          </alt>
          <alt name="cauh">
            <type>CAUH</type>
          </alt>
          <alt name="caflt">
            <type>CAFLT</type>
          </alt>
          <alt name="cadbl">
            <type>CADBL</type>
          </alt>
          <alt name="cabool">
            <type>CABOOL</type>
          </alt>
          <alt name="cascode">
            <type>CASCODE</type>
          </alt>
          <alt name="cacy">
            <type>CACY</type>
          </alt>
          <alt name="cadate">
            <type>CADATE</type>
          </alt>
          <alt name="cafiletime">
            <type>CAFILETIME</type>
          </alt>
          <alt name="cauuid">
            <type>CACLSID</type>
          </alt>
          <alt name="caclipdata">
            <type>CACLIPDATA</type>
          </alt>
          <alt name="cabstr">
            <type>CABSTR</type>
          </alt>
          <alt name="cabstrblob">
            <type>CABSTRBLOB</type>
          </alt>
          <alt name="calpstr">
            <type>CALPSTR</type>
          </alt>
          <alt name="calpwstr">
            <type>CALPWSTR</type>
          </alt>
          <alt name="capropvar">
            <type>CAPROPVARIANT</type>
          </alt>
          <alt name="pcVal">
            <ptr>
              <type>CHAR</type>
            </ptr>
          </alt>
          <alt name="pbVal">
            <ptr>
              <type>UCHAR</type>
            </ptr>
          </alt>
          <alt name="piVal">
            <ptr>
              <type>SHORT</type>
            </ptr>
          </alt>
          <alt name="puiVal">
            <ptr>
              <type>USHORT</type>
            </ptr>
          </alt>
          <alt name="plVal">
            <ptr>
              <type>LONG</type>
            </ptr>
          </alt>
          <alt name="pulVal">
            <ptr>
              <type>ULONG</type>
            </ptr>
          </alt>
          <alt name="pintVal">
            <ptr>
              <type>INT</type>
            </ptr>
          </alt>
          <alt name="puintVal">
            <ptr>
              <type>UINT</type>
            </ptr>
          </alt>
          <alt name="pfltVal">
            <ptr>
              <type>FLOAT</type>
            </ptr>
          </alt>
          <alt name="pdblVal">
            <ptr>
              <type>DOUBLE</type>
            </ptr>
          </alt>
          <alt name="pboolVal">
            <ptr>
              <type>VARIANT_BOOL</type>
            </ptr>
          </alt>
          <alt name="pdecVal">
            <ptr>
              <type>DECIMAL</type>
            </ptr>
          </alt>
          <alt name="pscode">
            <ptr>
              <type>SCODE</type>
            </ptr>
          </alt>
          <alt name="pcyVal">
            <ptr>
              <type>CY</type>
            </ptr>
          </alt>
          <alt name="pdate">
            <ptr>
              <type>DATE</type>
            </ptr>
          </alt>
          <alt name="pbstrVal">
            <ptr>
              <type>BSTR</type>
            </ptr>
          </alt>
          <alt name="ppunkVal">
            <ptr>
              <ptr>
                <type>IUnknown</type>
              </ptr>
            </ptr>
          </alt>
          <alt name="ppdispVal">
            <ptr>
              <ptr>
                <type>IDispatch</type>
              </ptr>
            </ptr>
          </alt>
          <alt name="pparray">
            <ptr>
              <type>LPSAFEARRAY</type>
            </ptr>
          </alt>
          <alt name="pvarVal">
            <ptr>
              <type>PROPVARIANT</type>
            </ptr>
          </alt>
        </union>
      </field>
    </struct>
    <struct name="tagPROPVARIANT">
      <field offset="0">
        <union>
          <alt>
            <struct name="struct_179" />
          </alt>
          <alt name="decVal">
            <type>DECIMAL</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="LPPROPVARIANT">
      <ptr>
        <struct name="tagPROPVARIANT" />
      </ptr>
    </typedef>
    <enum name="PIDMSI_STATUS_VALUE">
      <member name="PIDMSI_STATUS_NORMAL" value="0" />
      <member name="PIDMSI_STATUS_NEW" value="1" />
      <member name="PIDMSI_STATUS_PRELIM" value="2" />
      <member name="PIDMSI_STATUS_DRAFT" value="3" />
      <member name="PIDMSI_STATUS_INPROGRESS" value="4" />
      <member name="PIDMSI_STATUS_EDIT" value="5" />
      <member name="PIDMSI_STATUS_REVIEW" value="6" />
      <member name="PIDMSI_STATUS_PROOF" value="7" />
      <member name="PIDMSI_STATUS_FINAL" value="8" />
      <member name="PIDMSI_STATUS_OTHER" value="32767" />
    </enum>
    <struct name="tagPROPSPEC">
      <field offset="0" name="ulKind">
        <type>ULONG</type>
      </field>
      <field offset="4">
        <union>
          <alt name="propid">
            <type>PROPID</type>
          </alt>
          <alt name="lpwstr">
            <type>LPOLESTR</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="PROPSPEC">
      <struct name="tagPROPSPEC" />
    </typedef>
    <struct name="tagSTATPROPSTG">
      <field offset="0" name="lpwstrName">
        <type>LPOLESTR</type>
      </field>
      <field offset="4" name="propid">
        <type>PROPID</type>
      </field>
      <field offset="8" name="vt">
        <type>VARTYPE</type>
      </field>
    </struct>
    <typedef name="STATPROPSTG">
      <struct name="tagSTATPROPSTG" />
    </typedef>
    <struct name="tagSTATPROPSETSTG">
      <field offset="0" name="fmtid">
        <type>FMTID</type>
      </field>
      <field offset="16" name="clsid">
        <type>CLSID</type>
      </field>
      <field offset="32" name="grfFlags">
        <type>DWORD</type>
      </field>
      <field offset="40" name="mtime">
        <type>FILETIME</type>
      </field>
      <field offset="48" name="ctime">
        <type>FILETIME</type>
      </field>
      <field offset="56" name="atime">
        <type>FILETIME</type>
      </field>
      <field offset="64" name="dwOSVersion">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="STATPROPSETSTG">
      <struct name="tagSTATPROPSETSTG" />
    </typedef>
    <struct name="IPropertyStorageVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPropertyStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPropertyStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPropertyStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="ReadMultiple">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPropertyStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cpspec">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="rgpspec">
              <ptr>
                <type>PROPSPEC</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rgpropvar">
              <ptr>
                <type>PROPVARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="WriteMultiple">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPropertyStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cpspec">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="rgpspec">
              <ptr>
                <type>PROPSPEC</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rgpropvar">
              <ptr>
                <type>PROPVARIANT</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="propidNameFirst">
              <type>PROPID</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="DeleteMultiple">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPropertyStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cpspec">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="rgpspec">
              <ptr>
                <type>PROPSPEC</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="ReadPropertyNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPropertyStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cpropid">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="rgpropid">
              <ptr>
                <type>PROPID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rglpwstrName">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="28" name="WritePropertyNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPropertyStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cpropid">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="rgpropid">
              <ptr>
                <type>PROPID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rglpwstrName">
              <ptr>
                <type>LPOLESTR</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="32" name="DeletePropertyNames">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPropertyStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="cpropid">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="rgpropid">
              <ptr>
                <type>PROPID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="36" name="Commit">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPropertyStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="grfCommitFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="40" name="Revert">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPropertyStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="44" name="Enum">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPropertyStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppenum">
              <ptr>
                <ptr>
                  <type>IEnumSTATPROPSTG</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="48" name="SetTimes">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPropertyStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pctime">
              <ptr>
                <type>FILETIME</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="patime">
              <ptr>
                <type>FILETIME</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pmtime">
              <ptr>
                <type>FILETIME</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="52" name="SetClass">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPropertyStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="clsid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="56" name="Stat">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPropertyStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pstatpsstg">
              <ptr>
                <type>STATPROPSETSTG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IPropertyStorageVtbl">
      <struct name="IPropertyStorageVtbl" />
    </typedef>
    <struct name="IPropertyStorage">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IPropertyStorageVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPPROPERTYSETSTORAGE">
      <ptr>
        <type>IPropertySetStorage</type>
      </ptr>
    </typedef>
    <struct name="IPropertySetStorageVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPropertySetStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPropertySetStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPropertySetStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Create">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPropertySetStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rfmtid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pclsid">
              <ptr>
                <type>CLSID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="grfFlags">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="grfMode">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="ppprstg">
              <ptr>
                <ptr>
                  <type>IPropertyStorage</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Open">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPropertySetStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rfmtid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="grfMode">
              <type>DWORD</type>
              <stack size="4" />
            </arg>
            <arg name="ppprstg">
              <ptr>
                <ptr>
                  <type>IPropertyStorage</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="Delete">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPropertySetStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="rfmtid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Enum">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPropertySetStorage</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppenum">
              <ptr>
                <ptr>
                  <type>IEnumSTATPROPSETSTG</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IPropertySetStorageVtbl">
      <struct name="IPropertySetStorageVtbl" />
    </typedef>
    <struct name="IPropertySetStorage">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IPropertySetStorageVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPENUMSTATPROPSTG">
      <ptr>
        <type>IEnumSTATPROPSTG</type>
      </ptr>
    </typedef>
    <struct name="IEnumSTATPROPSTGVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumSTATPROPSTG</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumSTATPROPSTG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumSTATPROPSTG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Next">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumSTATPROPSTG</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="celt">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="rgelt">
              <ptr>
                <type>STATPROPSTG</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pceltFetched">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Skip">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumSTATPROPSTG</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="celt">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="Reset">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumSTATPROPSTG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Clone">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumSTATPROPSTG</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppenum">
              <ptr>
                <ptr>
                  <type>IEnumSTATPROPSTG</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IEnumSTATPROPSTGVtbl">
      <struct name="IEnumSTATPROPSTGVtbl" />
    </typedef>
    <struct name="IEnumSTATPROPSTG">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IEnumSTATPROPSTGVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPENUMSTATPROPSETSTG">
      <ptr>
        <type>IEnumSTATPROPSETSTG</type>
      </ptr>
    </typedef>
    <struct name="IEnumSTATPROPSETSTGVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumSTATPROPSETSTG</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObject">
              <ptr>
                <ptr>
                  <void />
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumSTATPROPSETSTG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumSTATPROPSETSTG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="Next">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumSTATPROPSETSTG</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="celt">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
            <arg name="rgelt">
              <ptr>
                <type>STATPROPSETSTG</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pceltFetched">
              <ptr>
                <type>ULONG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="Skip">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumSTATPROPSETSTG</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="celt">
              <type>ULONG</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="Reset">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumSTATPROPSETSTG</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="24" name="Clone">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IEnumSTATPROPSETSTG</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppenum">
              <ptr>
                <ptr>
                  <type>IEnumSTATPROPSETSTG</type>
                </ptr>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="IEnumSTATPROPSETSTGVtbl">
      <struct name="IEnumSTATPROPSETSTGVtbl" />
    </typedef>
    <struct name="IEnumSTATPROPSETSTG">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IEnumSTATPROPSETSTGVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="LPPROPERTYSTORAGE">
      <ptr>
        <type>IPropertyStorage</type>
      </ptr>
    </typedef>
    <struct name="tagSERIALIZEDPROPERTYVALUE">
      <field offset="0" name="dwType">
        <type>DWORD</type>
      </field>
      <field offset="4" name="rgb">
        <arr length="1">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="SERIALIZEDPROPERTYVALUE">
      <struct name="tagSERIALIZEDPROPERTYVALUE" />
    </typedef>
    <struct name="struct_180">
      <field offset="0" name="cDig">
        <type>INT</type>
      </field>
      <field offset="4" name="dwInFlags">
        <type>ULONG</type>
      </field>
      <field offset="8" name="dwOutFlags">
        <type>ULONG</type>
      </field>
      <field offset="12" name="cchUsed">
        <type>INT</type>
      </field>
      <field offset="16" name="nBaseShift">
        <type>INT</type>
      </field>
      <field offset="20" name="nPwr10">
        <type>INT</type>
      </field>
    </struct>
    <typedef name="NUMPARSE">
      <struct name="struct_180" />
    </typedef>
    <struct name="struct_181">
      <field offset="0" name="st">
        <type>SYSTEMTIME</type>
      </field>
      <field offset="16" name="wDayOfYear">
        <type>USHORT</type>
      </field>
    </struct>
    <typedef name="UDATE">
      <struct name="struct_181" />
    </typedef>
    <typedef name="LPTYPELIB">
      <ptr>
        <type>ITypeLib</type>
      </ptr>
    </typedef>
    <typedef name="DISPID">
      <type>LONG</type>
    </typedef>
    <typedef name="MEMBERID">
      <type>DISPID</type>
    </typedef>
    <typedef name="LPTYPEINFO">
      <ptr>
        <type>ITypeInfo</type>
      </ptr>
    </typedef>
    <typedef name="LPTYPECOMP">
      <ptr>
        <type>ITypeComp</type>
      </ptr>
    </typedef>
    <typedef name="LPCREATETYPELIB">
      <ptr>
        <type>ICreateTypeLib</type>
      </ptr>
    </typedef>
    <typedef name="LPCREATETYPEINFO">
      <ptr>
        <type>ICreateTypeInfo</type>
      </ptr>
    </typedef>
    <enum name="tagREGKIND">
      <member name="REGKIND_DEFAULT" value="0" />
      <member name="REGKIND_REGISTER" value="1" />
      <member name="REGKIND_NONE" value="2" />
    </enum>
    <typedef name="REGKIND">
      <enum name="tagREGKIND" />
    </typedef>
    <typedef name="LPDISPATCH">
      <ptr>
        <type>IDispatch</type>
      </ptr>
    </typedef>
    <struct name="tagPARAMDATA">
      <field offset="0" name="szName">
        <ptr>
          <type>OLECHAR</type>
        </ptr>
      </field>
      <field offset="4" name="vt">
        <type>VARTYPE</type>
      </field>
    </struct>
    <typedef name="PARAMDATA">
      <struct name="tagPARAMDATA" />
    </typedef>
    <typedef name="LPPARAMDATA">
      <ptr>
        <struct name="tagPARAMDATA" />
      </ptr>
    </typedef>
    <struct name="tagMETHODDATA">
      <field offset="0" name="szName">
        <ptr>
          <type>OLECHAR</type>
        </ptr>
      </field>
      <field offset="4" name="ppdata">
        <ptr>
          <type>PARAMDATA</type>
        </ptr>
      </field>
      <field offset="8" name="dispid">
        <type>DISPID</type>
      </field>
      <field offset="12" name="iMeth">
        <type>UINT</type>
      </field>
      <field offset="16" name="cc">
        <type>CALLCONV</type>
      </field>
      <field offset="20" name="cArgs">
        <type>UINT</type>
      </field>
      <field offset="24" name="wFlags">
        <type>WORD</type>
      </field>
      <field offset="26" name="vtReturn">
        <type>VARTYPE</type>
      </field>
    </struct>
    <typedef name="METHODDATA">
      <struct name="tagMETHODDATA" />
    </typedef>
    <typedef name="LPMETHODDATA">
      <ptr>
        <struct name="tagMETHODDATA" />
      </ptr>
    </typedef>
    <struct name="tagINTERFACEDATA">
      <field offset="0" name="pmethdata">
        <ptr>
          <type>METHODDATA</type>
        </ptr>
      </field>
      <field offset="4" name="cMembers">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="INTERFACEDATA">
      <struct name="tagINTERFACEDATA" />
    </typedef>
    <typedef name="LPINTERFACEDATA">
      <ptr>
        <struct name="tagINTERFACEDATA" />
      </ptr>
    </typedef>
    <typedef name="LPOLESTREAM">
      <ptr>
        <struct name="_OLESTREAM" />
      </ptr>
    </typedef>
    <struct name="_OLESTREAMVTBL">
      <field offset="0" name="Get">
        <ptr>
          <fn>
            <return>
              <type>DWORD</type>
              <reg>eax</reg>
            </return>
            <arg>
              <type>LPOLESTREAM</type>
              <stack size="4" />
            </arg>
            <arg>
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg>
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="Put">
        <ptr>
          <fn>
            <return>
              <type>DWORD</type>
              <reg>eax</reg>
            </return>
            <arg>
              <type>LPOLESTREAM</type>
              <stack size="4" />
            </arg>
            <arg>
              <ptr>
                <void />
              </ptr>
              <stack size="4" />
            </arg>
            <arg>
              <type>DWORD</type>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <typedef name="OLESTREAMVTBL">
      <struct name="_OLESTREAMVTBL" />
    </typedef>
    <typedef name="LPOLESTREAMVTBL">
      <ptr>
        <type>OLESTREAMVTBL</type>
      </ptr>
    </typedef>
    <struct name="_OLESTREAM">
      <field offset="0" name="lpstbl">
        <type>LPOLESTREAMVTBL</type>
      </field>
    </struct>
    <typedef name="OLESTREAM">
      <struct name="_OLESTREAM" />
    </typedef>
    <typedef name="LPOFNHOOKPROC">
      <ptr>
        <fn>
          <return>
            <type>UINT_PTR</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>HWND</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>UINT</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>WPARAM</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="tagOFN_NT4A">
      <field offset="0" name="lStructSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="hwndOwner">
        <type>HWND</type>
      </field>
      <field offset="8" name="hInstance">
        <type>HINSTANCE</type>
      </field>
      <field offset="12" name="lpstrFilter">
        <type>LPCSTR</type>
      </field>
      <field offset="16" name="lpstrCustomFilter">
        <type>LPSTR</type>
      </field>
      <field offset="20" name="nMaxCustFilter">
        <type>DWORD</type>
      </field>
      <field offset="24" name="nFilterIndex">
        <type>DWORD</type>
      </field>
      <field offset="28" name="lpstrFile">
        <type>LPSTR</type>
      </field>
      <field offset="32" name="nMaxFile">
        <type>DWORD</type>
      </field>
      <field offset="36" name="lpstrFileTitle">
        <type>LPSTR</type>
      </field>
      <field offset="40" name="nMaxFileTitle">
        <type>DWORD</type>
      </field>
      <field offset="44" name="lpstrInitialDir">
        <type>LPCSTR</type>
      </field>
      <field offset="48" name="lpstrTitle">
        <type>LPCSTR</type>
      </field>
      <field offset="52" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="56" name="nFileOffset">
        <type>WORD</type>
      </field>
      <field offset="58" name="nFileExtension">
        <type>WORD</type>
      </field>
      <field offset="60" name="lpstrDefExt">
        <type>LPCSTR</type>
      </field>
      <field offset="64" name="lCustData">
        <type>LPARAM</type>
      </field>
      <field offset="68" name="lpfnHook">
        <type>LPOFNHOOKPROC</type>
      </field>
      <field offset="72" name="lpTemplateName">
        <type>LPCSTR</type>
      </field>
    </struct>
    <typedef name="OPENFILENAME_NT4A">
      <struct name="tagOFN_NT4A" />
    </typedef>
    <typedef name="LPOPENFILENAME_NT4A">
      <ptr>
        <struct name="tagOFN_NT4A" />
      </ptr>
    </typedef>
    <struct name="tagOFN_NT4W">
      <field offset="0" name="lStructSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="hwndOwner">
        <type>HWND</type>
      </field>
      <field offset="8" name="hInstance">
        <type>HINSTANCE</type>
      </field>
      <field offset="12" name="lpstrFilter">
        <type>LPCWSTR</type>
      </field>
      <field offset="16" name="lpstrCustomFilter">
        <type>LPWSTR</type>
      </field>
      <field offset="20" name="nMaxCustFilter">
        <type>DWORD</type>
      </field>
      <field offset="24" name="nFilterIndex">
        <type>DWORD</type>
      </field>
      <field offset="28" name="lpstrFile">
        <type>LPWSTR</type>
      </field>
      <field offset="32" name="nMaxFile">
        <type>DWORD</type>
      </field>
      <field offset="36" name="lpstrFileTitle">
        <type>LPWSTR</type>
      </field>
      <field offset="40" name="nMaxFileTitle">
        <type>DWORD</type>
      </field>
      <field offset="44" name="lpstrInitialDir">
        <type>LPCWSTR</type>
      </field>
      <field offset="48" name="lpstrTitle">
        <type>LPCWSTR</type>
      </field>
      <field offset="52" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="56" name="nFileOffset">
        <type>WORD</type>
      </field>
      <field offset="58" name="nFileExtension">
        <type>WORD</type>
      </field>
      <field offset="60" name="lpstrDefExt">
        <type>LPCWSTR</type>
      </field>
      <field offset="64" name="lCustData">
        <type>LPARAM</type>
      </field>
      <field offset="68" name="lpfnHook">
        <type>LPOFNHOOKPROC</type>
      </field>
      <field offset="72" name="lpTemplateName">
        <type>LPCWSTR</type>
      </field>
    </struct>
    <typedef name="OPENFILENAME_NT4W">
      <struct name="tagOFN_NT4W" />
    </typedef>
    <typedef name="LPOPENFILENAME_NT4W">
      <ptr>
        <struct name="tagOFN_NT4W" />
      </ptr>
    </typedef>
    <typedef name="OPENFILENAME_NT4">
      <type>OPENFILENAME_NT4A</type>
    </typedef>
    <typedef name="LPOPENFILENAME_NT4">
      <type>LPOPENFILENAME_NT4A</type>
    </typedef>
    <struct name="tagOFNA">
      <field offset="0" name="lStructSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="hwndOwner">
        <type>HWND</type>
      </field>
      <field offset="8" name="hInstance">
        <type>HINSTANCE</type>
      </field>
      <field offset="12" name="lpstrFilter">
        <type>LPCSTR</type>
      </field>
      <field offset="16" name="lpstrCustomFilter">
        <type>LPSTR</type>
      </field>
      <field offset="20" name="nMaxCustFilter">
        <type>DWORD</type>
      </field>
      <field offset="24" name="nFilterIndex">
        <type>DWORD</type>
      </field>
      <field offset="28" name="lpstrFile">
        <type>LPSTR</type>
      </field>
      <field offset="32" name="nMaxFile">
        <type>DWORD</type>
      </field>
      <field offset="36" name="lpstrFileTitle">
        <type>LPSTR</type>
      </field>
      <field offset="40" name="nMaxFileTitle">
        <type>DWORD</type>
      </field>
      <field offset="44" name="lpstrInitialDir">
        <type>LPCSTR</type>
      </field>
      <field offset="48" name="lpstrTitle">
        <type>LPCSTR</type>
      </field>
      <field offset="52" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="56" name="nFileOffset">
        <type>WORD</type>
      </field>
      <field offset="58" name="nFileExtension">
        <type>WORD</type>
      </field>
      <field offset="60" name="lpstrDefExt">
        <type>LPCSTR</type>
      </field>
      <field offset="64" name="lCustData">
        <type>LPARAM</type>
      </field>
      <field offset="68" name="lpfnHook">
        <type>LPOFNHOOKPROC</type>
      </field>
      <field offset="72" name="lpTemplateName">
        <type>LPCSTR</type>
      </field>
      <field offset="76" name="pvReserved">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="80" name="dwReserved">
        <type>DWORD</type>
      </field>
      <field offset="84" name="FlagsEx">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="OPENFILENAMEA">
      <struct name="tagOFNA" />
    </typedef>
    <typedef name="LPOPENFILENAMEA">
      <ptr>
        <struct name="tagOFNA" />
      </ptr>
    </typedef>
    <struct name="tagOFNW">
      <field offset="0" name="lStructSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="hwndOwner">
        <type>HWND</type>
      </field>
      <field offset="8" name="hInstance">
        <type>HINSTANCE</type>
      </field>
      <field offset="12" name="lpstrFilter">
        <type>LPCWSTR</type>
      </field>
      <field offset="16" name="lpstrCustomFilter">
        <type>LPWSTR</type>
      </field>
      <field offset="20" name="nMaxCustFilter">
        <type>DWORD</type>
      </field>
      <field offset="24" name="nFilterIndex">
        <type>DWORD</type>
      </field>
      <field offset="28" name="lpstrFile">
        <type>LPWSTR</type>
      </field>
      <field offset="32" name="nMaxFile">
        <type>DWORD</type>
      </field>
      <field offset="36" name="lpstrFileTitle">
        <type>LPWSTR</type>
      </field>
      <field offset="40" name="nMaxFileTitle">
        <type>DWORD</type>
      </field>
      <field offset="44" name="lpstrInitialDir">
        <type>LPCWSTR</type>
      </field>
      <field offset="48" name="lpstrTitle">
        <type>LPCWSTR</type>
      </field>
      <field offset="52" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="56" name="nFileOffset">
        <type>WORD</type>
      </field>
      <field offset="58" name="nFileExtension">
        <type>WORD</type>
      </field>
      <field offset="60" name="lpstrDefExt">
        <type>LPCWSTR</type>
      </field>
      <field offset="64" name="lCustData">
        <type>LPARAM</type>
      </field>
      <field offset="68" name="lpfnHook">
        <type>LPOFNHOOKPROC</type>
      </field>
      <field offset="72" name="lpTemplateName">
        <type>LPCWSTR</type>
      </field>
      <field offset="76" name="pvReserved">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="80" name="dwReserved">
        <type>DWORD</type>
      </field>
      <field offset="84" name="FlagsEx">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="OPENFILENAMEW">
      <struct name="tagOFNW" />
    </typedef>
    <typedef name="LPOPENFILENAMEW">
      <ptr>
        <struct name="tagOFNW" />
      </ptr>
    </typedef>
    <typedef name="OPENFILENAME">
      <type>OPENFILENAMEA</type>
    </typedef>
    <typedef name="LPOPENFILENAME">
      <type>LPOPENFILENAMEA</type>
    </typedef>
    <typedef name="LPCCHOOKPROC">
      <ptr>
        <fn>
          <return>
            <type>UINT_PTR</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>HWND</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>UINT</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>WPARAM</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="_OFNOTIFYA">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="lpOFN">
        <type>LPOPENFILENAMEA</type>
      </field>
      <field offset="16" name="pszFile">
        <type>LPSTR</type>
      </field>
    </struct>
    <typedef name="OFNOTIFYA">
      <struct name="_OFNOTIFYA" />
    </typedef>
    <typedef name="LPOFNOTIFYA">
      <ptr>
        <struct name="_OFNOTIFYA" />
      </ptr>
    </typedef>
    <struct name="_OFNOTIFYW">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="lpOFN">
        <type>LPOPENFILENAMEW</type>
      </field>
      <field offset="16" name="pszFile">
        <type>LPWSTR</type>
      </field>
    </struct>
    <typedef name="OFNOTIFYW">
      <struct name="_OFNOTIFYW" />
    </typedef>
    <typedef name="LPOFNOTIFYW">
      <ptr>
        <struct name="_OFNOTIFYW" />
      </ptr>
    </typedef>
    <typedef name="OFNOTIFY">
      <type>OFNOTIFYA</type>
    </typedef>
    <typedef name="LPOFNOTIFY">
      <type>LPOFNOTIFYA</type>
    </typedef>
    <struct name="_OFNOTIFYEXA">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="lpOFN">
        <type>LPOPENFILENAMEA</type>
      </field>
      <field offset="16" name="psf">
        <type>LPVOID</type>
      </field>
      <field offset="20" name="pidl">
        <type>LPVOID</type>
      </field>
    </struct>
    <typedef name="OFNOTIFYEXA">
      <struct name="_OFNOTIFYEXA" />
    </typedef>
    <typedef name="LPOFNOTIFYEXA">
      <ptr>
        <struct name="_OFNOTIFYEXA" />
      </ptr>
    </typedef>
    <struct name="_OFNOTIFYEXW">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="lpOFN">
        <type>LPOPENFILENAMEW</type>
      </field>
      <field offset="16" name="psf">
        <type>LPVOID</type>
      </field>
      <field offset="20" name="pidl">
        <type>LPVOID</type>
      </field>
    </struct>
    <typedef name="OFNOTIFYEXW">
      <struct name="_OFNOTIFYEXW" />
    </typedef>
    <typedef name="LPOFNOTIFYEXW">
      <ptr>
        <struct name="_OFNOTIFYEXW" />
      </ptr>
    </typedef>
    <typedef name="OFNOTIFYEX">
      <type>OFNOTIFYEXA</type>
    </typedef>
    <typedef name="LPOFNOTIFYEX">
      <type>LPOFNOTIFYEXA</type>
    </typedef>
    <struct name="tagCHOOSECOLORA">
      <field offset="0" name="lStructSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="hwndOwner">
        <type>HWND</type>
      </field>
      <field offset="8" name="hInstance">
        <type>HWND</type>
      </field>
      <field offset="12" name="rgbResult">
        <type>COLORREF</type>
      </field>
      <field offset="16" name="lpCustColors">
        <ptr>
          <type>COLORREF</type>
        </ptr>
      </field>
      <field offset="20" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="24" name="lCustData">
        <type>LPARAM</type>
      </field>
      <field offset="28" name="lpfnHook">
        <type>LPCCHOOKPROC</type>
      </field>
      <field offset="32" name="lpTemplateName">
        <type>LPCSTR</type>
      </field>
    </struct>
    <typedef name="CHOOSECOLORA">
      <struct name="tagCHOOSECOLORA" />
    </typedef>
    <typedef name="LPCHOOSECOLORA">
      <ptr>
        <struct name="tagCHOOSECOLORA" />
      </ptr>
    </typedef>
    <struct name="tagCHOOSECOLORW">
      <field offset="0" name="lStructSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="hwndOwner">
        <type>HWND</type>
      </field>
      <field offset="8" name="hInstance">
        <type>HWND</type>
      </field>
      <field offset="12" name="rgbResult">
        <type>COLORREF</type>
      </field>
      <field offset="16" name="lpCustColors">
        <ptr>
          <type>COLORREF</type>
        </ptr>
      </field>
      <field offset="20" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="24" name="lCustData">
        <type>LPARAM</type>
      </field>
      <field offset="28" name="lpfnHook">
        <type>LPCCHOOKPROC</type>
      </field>
      <field offset="32" name="lpTemplateName">
        <type>LPCWSTR</type>
      </field>
    </struct>
    <typedef name="CHOOSECOLORW">
      <struct name="tagCHOOSECOLORW" />
    </typedef>
    <typedef name="LPCHOOSECOLORW">
      <ptr>
        <struct name="tagCHOOSECOLORW" />
      </ptr>
    </typedef>
    <typedef name="CHOOSECOLOR">
      <type>CHOOSECOLORA</type>
    </typedef>
    <typedef name="LPCHOOSECOLOR">
      <type>LPCHOOSECOLORA</type>
    </typedef>
    <typedef name="LPFRHOOKPROC">
      <ptr>
        <fn>
          <return>
            <type>UINT_PTR</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>HWND</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>UINT</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>WPARAM</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="tagFINDREPLACEA">
      <field offset="0" name="lStructSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="hwndOwner">
        <type>HWND</type>
      </field>
      <field offset="8" name="hInstance">
        <type>HINSTANCE</type>
      </field>
      <field offset="12" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="16" name="lpstrFindWhat">
        <type>LPSTR</type>
      </field>
      <field offset="20" name="lpstrReplaceWith">
        <type>LPSTR</type>
      </field>
      <field offset="24" name="wFindWhatLen">
        <type>WORD</type>
      </field>
      <field offset="26" name="wReplaceWithLen">
        <type>WORD</type>
      </field>
      <field offset="28" name="lCustData">
        <type>LPARAM</type>
      </field>
      <field offset="32" name="lpfnHook">
        <type>LPFRHOOKPROC</type>
      </field>
      <field offset="36" name="lpTemplateName">
        <type>LPCSTR</type>
      </field>
    </struct>
    <typedef name="FINDREPLACEA">
      <struct name="tagFINDREPLACEA" />
    </typedef>
    <typedef name="LPFINDREPLACEA">
      <ptr>
        <struct name="tagFINDREPLACEA" />
      </ptr>
    </typedef>
    <struct name="tagFINDREPLACEW">
      <field offset="0" name="lStructSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="hwndOwner">
        <type>HWND</type>
      </field>
      <field offset="8" name="hInstance">
        <type>HINSTANCE</type>
      </field>
      <field offset="12" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="16" name="lpstrFindWhat">
        <type>LPWSTR</type>
      </field>
      <field offset="20" name="lpstrReplaceWith">
        <type>LPWSTR</type>
      </field>
      <field offset="24" name="wFindWhatLen">
        <type>WORD</type>
      </field>
      <field offset="26" name="wReplaceWithLen">
        <type>WORD</type>
      </field>
      <field offset="28" name="lCustData">
        <type>LPARAM</type>
      </field>
      <field offset="32" name="lpfnHook">
        <type>LPFRHOOKPROC</type>
      </field>
      <field offset="36" name="lpTemplateName">
        <type>LPCWSTR</type>
      </field>
    </struct>
    <typedef name="FINDREPLACEW">
      <struct name="tagFINDREPLACEW" />
    </typedef>
    <typedef name="LPFINDREPLACEW">
      <ptr>
        <struct name="tagFINDREPLACEW" />
      </ptr>
    </typedef>
    <typedef name="FINDREPLACE">
      <type>FINDREPLACEA</type>
    </typedef>
    <typedef name="LPFINDREPLACE">
      <type>LPFINDREPLACEA</type>
    </typedef>
    <typedef name="LPCFHOOKPROC">
      <ptr>
        <fn>
          <return>
            <type>UINT_PTR</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>HWND</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>UINT</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>WPARAM</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="tagCHOOSEFONTA">
      <field offset="0" name="lStructSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="hwndOwner">
        <type>HWND</type>
      </field>
      <field offset="8" name="hDC">
        <type>HDC</type>
      </field>
      <field offset="12" name="lpLogFont">
        <type>LPLOGFONTA</type>
      </field>
      <field offset="16" name="iPointSize">
        <type>INT</type>
      </field>
      <field offset="20" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="24" name="rgbColors">
        <type>COLORREF</type>
      </field>
      <field offset="28" name="lCustData">
        <type>LPARAM</type>
      </field>
      <field offset="32" name="lpfnHook">
        <type>LPCFHOOKPROC</type>
      </field>
      <field offset="36" name="lpTemplateName">
        <type>LPCSTR</type>
      </field>
      <field offset="40" name="hInstance">
        <type>HINSTANCE</type>
      </field>
      <field offset="44" name="lpszStyle">
        <type>LPSTR</type>
      </field>
      <field offset="48" name="nFontType">
        <type>WORD</type>
      </field>
      <field offset="50" name="___MISSING_ALIGNMENT__">
        <type>WORD</type>
      </field>
      <field offset="52" name="nSizeMin">
        <type>INT</type>
      </field>
      <field offset="56" name="nSizeMax">
        <type>INT</type>
      </field>
    </struct>
    <typedef name="CHOOSEFONTA">
      <struct name="tagCHOOSEFONTA" />
    </typedef>
    <struct name="tagCHOOSEFONTW">
      <field offset="0" name="lStructSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="hwndOwner">
        <type>HWND</type>
      </field>
      <field offset="8" name="hDC">
        <type>HDC</type>
      </field>
      <field offset="12" name="lpLogFont">
        <type>LPLOGFONTW</type>
      </field>
      <field offset="16" name="iPointSize">
        <type>INT</type>
      </field>
      <field offset="20" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="24" name="rgbColors">
        <type>COLORREF</type>
      </field>
      <field offset="28" name="lCustData">
        <type>LPARAM</type>
      </field>
      <field offset="32" name="lpfnHook">
        <type>LPCFHOOKPROC</type>
      </field>
      <field offset="36" name="lpTemplateName">
        <type>LPCWSTR</type>
      </field>
      <field offset="40" name="hInstance">
        <type>HINSTANCE</type>
      </field>
      <field offset="44" name="lpszStyle">
        <type>LPWSTR</type>
      </field>
      <field offset="48" name="nFontType">
        <type>WORD</type>
      </field>
      <field offset="50" name="___MISSING_ALIGNMENT__">
        <type>WORD</type>
      </field>
      <field offset="52" name="nSizeMin">
        <type>INT</type>
      </field>
      <field offset="56" name="nSizeMax">
        <type>INT</type>
      </field>
    </struct>
    <typedef name="CHOOSEFONTW">
      <struct name="tagCHOOSEFONTW" />
    </typedef>
    <typedef name="CHOOSEFONT">
      <type>CHOOSEFONTA</type>
    </typedef>
    <typedef name="LPCHOOSEFONTA">
      <ptr>
        <type>CHOOSEFONTA</type>
      </ptr>
    </typedef>
    <typedef name="LPCHOOSEFONTW">
      <ptr>
        <type>CHOOSEFONTW</type>
      </ptr>
    </typedef>
    <typedef name="LPCHOOSEFONT">
      <type>LPCHOOSEFONTA</type>
    </typedef>
    <typedef name="PCCHOOSEFONTA">
      <ptr>
        <type>CHOOSEFONTA</type>
      </ptr>
    </typedef>
    <typedef name="PCCHOOSEFONTW">
      <ptr>
        <type>CHOOSEFONTW</type>
      </ptr>
    </typedef>
    <typedef name="CHOOSEFONT">
      <type>CHOOSEFONTA</type>
    </typedef>
    <typedef name="PCCHOOSEFONT">
      <type>PCCHOOSEFONTA</type>
    </typedef>
    <typedef name="LPPRINTHOOKPROC">
      <ptr>
        <fn>
          <return>
            <type>UINT_PTR</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>HWND</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>UINT</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>WPARAM</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="LPSETUPHOOKPROC">
      <ptr>
        <fn>
          <return>
            <type>UINT_PTR</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>HWND</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>UINT</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>WPARAM</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="tagPDA">
      <field offset="0" name="lStructSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="hwndOwner">
        <type>HWND</type>
      </field>
      <field offset="8" name="hDevMode">
        <type>HGLOBAL</type>
      </field>
      <field offset="12" name="hDevNames">
        <type>HGLOBAL</type>
      </field>
      <field offset="16" name="hDC">
        <type>HDC</type>
      </field>
      <field offset="20" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="24" name="nFromPage">
        <type>WORD</type>
      </field>
      <field offset="26" name="nToPage">
        <type>WORD</type>
      </field>
      <field offset="28" name="nMinPage">
        <type>WORD</type>
      </field>
      <field offset="30" name="nMaxPage">
        <type>WORD</type>
      </field>
      <field offset="32" name="nCopies">
        <type>WORD</type>
      </field>
      <field offset="36" name="hInstance">
        <type>HINSTANCE</type>
      </field>
      <field offset="40" name="lCustData">
        <type>LPARAM</type>
      </field>
      <field offset="44" name="lpfnPrintHook">
        <type>LPPRINTHOOKPROC</type>
      </field>
      <field offset="48" name="lpfnSetupHook">
        <type>LPSETUPHOOKPROC</type>
      </field>
      <field offset="52" name="lpPrintTemplateName">
        <type>LPCSTR</type>
      </field>
      <field offset="56" name="lpSetupTemplateName">
        <type>LPCSTR</type>
      </field>
      <field offset="60" name="hPrintTemplate">
        <type>HGLOBAL</type>
      </field>
      <field offset="64" name="hSetupTemplate">
        <type>HGLOBAL</type>
      </field>
    </struct>
    <typedef name="PRINTDLGA">
      <struct name="tagPDA" />
    </typedef>
    <typedef name="LPPRINTDLGA">
      <ptr>
        <struct name="tagPDA" />
      </ptr>
    </typedef>
    <struct name="tagPDW">
      <field offset="0" name="lStructSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="hwndOwner">
        <type>HWND</type>
      </field>
      <field offset="8" name="hDevMode">
        <type>HGLOBAL</type>
      </field>
      <field offset="12" name="hDevNames">
        <type>HGLOBAL</type>
      </field>
      <field offset="16" name="hDC">
        <type>HDC</type>
      </field>
      <field offset="20" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="24" name="nFromPage">
        <type>WORD</type>
      </field>
      <field offset="26" name="nToPage">
        <type>WORD</type>
      </field>
      <field offset="28" name="nMinPage">
        <type>WORD</type>
      </field>
      <field offset="30" name="nMaxPage">
        <type>WORD</type>
      </field>
      <field offset="32" name="nCopies">
        <type>WORD</type>
      </field>
      <field offset="36" name="hInstance">
        <type>HINSTANCE</type>
      </field>
      <field offset="40" name="lCustData">
        <type>LPARAM</type>
      </field>
      <field offset="44" name="lpfnPrintHook">
        <type>LPPRINTHOOKPROC</type>
      </field>
      <field offset="48" name="lpfnSetupHook">
        <type>LPSETUPHOOKPROC</type>
      </field>
      <field offset="52" name="lpPrintTemplateName">
        <type>LPCWSTR</type>
      </field>
      <field offset="56" name="lpSetupTemplateName">
        <type>LPCWSTR</type>
      </field>
      <field offset="60" name="hPrintTemplate">
        <type>HGLOBAL</type>
      </field>
      <field offset="64" name="hSetupTemplate">
        <type>HGLOBAL</type>
      </field>
    </struct>
    <typedef name="PRINTDLGW">
      <struct name="tagPDW" />
    </typedef>
    <typedef name="LPPRINTDLGW">
      <ptr>
        <struct name="tagPDW" />
      </ptr>
    </typedef>
    <typedef name="PRINTDLG">
      <type>PRINTDLGA</type>
    </typedef>
    <typedef name="LPPRINTDLG">
      <type>LPPRINTDLGA</type>
    </typedef>
    <struct name="IPrintDialogCallback">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IPrintDialogCallbackVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="IPrintDialogCallback">
      <struct name="IPrintDialogCallback" />
    </typedef>
    <typedef name="IPrintDialogCallbackVtbl">
      <struct name="IPrintDialogCallbackVtbl" />
    </typedef>
    <struct name="IPrintDialogCallbackVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPrintDialogCallback</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObj">
              <ptr>
                <type>LPVOID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPrintDialogCallback</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPrintDialogCallback</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="InitDone">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPrintDialogCallback</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="SelectionChange">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPrintDialogCallback</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="HandleMessage">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPrintDialogCallback</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="hDlg">
              <type>HWND</type>
              <stack size="4" />
            </arg>
            <arg name="uMsg">
              <type>UINT</type>
              <stack size="4" />
            </arg>
            <arg name="wParam">
              <type>WPARAM</type>
              <stack size="4" />
            </arg>
            <arg name="lParam">
              <type>LPARAM</type>
              <stack size="4" />
            </arg>
            <arg name="pResult">
              <ptr>
                <type>LRESULT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <struct name="IPrintDialogServices">
      <field offset="0" name="lpVtbl">
        <ptr>
          <struct name="IPrintDialogServicesVtbl" />
        </ptr>
      </field>
    </struct>
    <typedef name="IPrintDialogServices">
      <struct name="IPrintDialogServices" />
    </typedef>
    <typedef name="IPrintDialogServicesVtbl">
      <struct name="IPrintDialogServicesVtbl" />
    </typedef>
    <struct name="IPrintDialogServicesVtbl">
      <field offset="0" name="QueryInterface">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPrintDialogServices</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="riid">
              <ptr>
                <type>IID</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="ppvObj">
              <ptr>
                <type>LPVOID</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="4" name="AddRef">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPrintDialogServices</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="8" name="Release">
        <ptr>
          <fn>
            <return>
              <type>ULONG</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPrintDialogServices</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="12" name="GetCurrentDevMode">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPrintDialogServices</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pDevMode">
              <type>LPDEVMODE</type>
              <stack size="4" />
            </arg>
            <arg name="pcbSize">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="16" name="GetCurrentPrinterName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPrintDialogServices</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pPrinterName">
              <type>LPWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="pcchSize">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
      <field offset="20" name="GetCurrentPortName">
        <ptr>
          <fn>
            <return>
              <type>HRESULT</type>
              <reg>eax</reg>
            </return>
            <arg name="This">
              <ptr>
                <type>IPrintDialogServices</type>
              </ptr>
              <stack size="4" />
            </arg>
            <arg name="pPortName">
              <type>LPWSTR</type>
              <stack size="4" />
            </arg>
            <arg name="pcchSize">
              <ptr>
                <type>UINT</type>
              </ptr>
              <stack size="4" />
            </arg>
          </fn>
        </ptr>
      </field>
    </struct>
    <struct name="tagPRINTPAGERANGE">
      <field offset="0" name="nFromPage">
        <type>DWORD</type>
      </field>
      <field offset="4" name="nToPage">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PRINTPAGERANGE">
      <struct name="tagPRINTPAGERANGE" />
    </typedef>
    <typedef name="LPPRINTPAGERANGE">
      <ptr>
        <type>PRINTPAGERANGE</type>
      </ptr>
    </typedef>
    <typedef name="PCPRINTPAGERANGE">
      <ptr>
        <type>PRINTPAGERANGE</type>
      </ptr>
    </typedef>
    <struct name="tagPDEXA">
      <field offset="0" name="lStructSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="hwndOwner">
        <type>HWND</type>
      </field>
      <field offset="8" name="hDevMode">
        <type>HGLOBAL</type>
      </field>
      <field offset="12" name="hDevNames">
        <type>HGLOBAL</type>
      </field>
      <field offset="16" name="hDC">
        <type>HDC</type>
      </field>
      <field offset="20" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="24" name="Flags2">
        <type>DWORD</type>
      </field>
      <field offset="28" name="ExclusionFlags">
        <type>DWORD</type>
      </field>
      <field offset="32" name="nPageRanges">
        <type>DWORD</type>
      </field>
      <field offset="36" name="nMaxPageRanges">
        <type>DWORD</type>
      </field>
      <field offset="40" name="lpPageRanges">
        <type>LPPRINTPAGERANGE</type>
      </field>
      <field offset="44" name="nMinPage">
        <type>DWORD</type>
      </field>
      <field offset="48" name="nMaxPage">
        <type>DWORD</type>
      </field>
      <field offset="52" name="nCopies">
        <type>DWORD</type>
      </field>
      <field offset="56" name="hInstance">
        <type>HINSTANCE</type>
      </field>
      <field offset="60" name="lpPrintTemplateName">
        <type>LPCSTR</type>
      </field>
      <field offset="64" name="lpCallback">
        <type>LPUNKNOWN</type>
      </field>
      <field offset="68" name="nPropertyPages">
        <type>DWORD</type>
      </field>
      <field offset="72" name="lphPropertyPages">
        <ptr>
          <type>HPROPSHEETPAGE</type>
        </ptr>
      </field>
      <field offset="76" name="nStartPage">
        <type>DWORD</type>
      </field>
      <field offset="80" name="dwResultAction">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PRINTDLGEXA">
      <struct name="tagPDEXA" />
    </typedef>
    <typedef name="LPPRINTDLGEXA">
      <ptr>
        <struct name="tagPDEXA" />
      </ptr>
    </typedef>
    <struct name="tagPDEXW">
      <field offset="0" name="lStructSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="hwndOwner">
        <type>HWND</type>
      </field>
      <field offset="8" name="hDevMode">
        <type>HGLOBAL</type>
      </field>
      <field offset="12" name="hDevNames">
        <type>HGLOBAL</type>
      </field>
      <field offset="16" name="hDC">
        <type>HDC</type>
      </field>
      <field offset="20" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="24" name="Flags2">
        <type>DWORD</type>
      </field>
      <field offset="28" name="ExclusionFlags">
        <type>DWORD</type>
      </field>
      <field offset="32" name="nPageRanges">
        <type>DWORD</type>
      </field>
      <field offset="36" name="nMaxPageRanges">
        <type>DWORD</type>
      </field>
      <field offset="40" name="lpPageRanges">
        <type>LPPRINTPAGERANGE</type>
      </field>
      <field offset="44" name="nMinPage">
        <type>DWORD</type>
      </field>
      <field offset="48" name="nMaxPage">
        <type>DWORD</type>
      </field>
      <field offset="52" name="nCopies">
        <type>DWORD</type>
      </field>
      <field offset="56" name="hInstance">
        <type>HINSTANCE</type>
      </field>
      <field offset="60" name="lpPrintTemplateName">
        <type>LPCWSTR</type>
      </field>
      <field offset="64" name="lpCallback">
        <type>LPUNKNOWN</type>
      </field>
      <field offset="68" name="nPropertyPages">
        <type>DWORD</type>
      </field>
      <field offset="72" name="lphPropertyPages">
        <ptr>
          <type>HPROPSHEETPAGE</type>
        </ptr>
      </field>
      <field offset="76" name="nStartPage">
        <type>DWORD</type>
      </field>
      <field offset="80" name="dwResultAction">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="PRINTDLGEXW">
      <struct name="tagPDEXW" />
    </typedef>
    <typedef name="LPPRINTDLGEXW">
      <ptr>
        <struct name="tagPDEXW" />
      </ptr>
    </typedef>
    <typedef name="PRINTDLGEX">
      <type>PRINTDLGEXA</type>
    </typedef>
    <typedef name="LPPRINTDLGEX">
      <type>LPPRINTDLGEXA</type>
    </typedef>
    <struct name="tagDEVNAMES">
      <field offset="0" name="wDriverOffset">
        <type>WORD</type>
      </field>
      <field offset="2" name="wDeviceOffset">
        <type>WORD</type>
      </field>
      <field offset="4" name="wOutputOffset">
        <type>WORD</type>
      </field>
      <field offset="6" name="wDefault">
        <type>WORD</type>
      </field>
    </struct>
    <typedef name="DEVNAMES">
      <struct name="tagDEVNAMES" />
    </typedef>
    <typedef name="LPDEVNAMES">
      <ptr>
        <type>DEVNAMES</type>
      </ptr>
    </typedef>
    <typedef name="PCDEVNAMES">
      <ptr>
        <type>DEVNAMES</type>
      </ptr>
    </typedef>
    <typedef name="LPPAGEPAINTHOOK">
      <ptr>
        <fn>
          <return>
            <type>UINT_PTR</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>HWND</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>UINT</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>WPARAM</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="LPPAGESETUPHOOK">
      <ptr>
        <fn>
          <return>
            <type>UINT_PTR</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>HWND</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>UINT</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>WPARAM</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="tagPSDA">
      <field offset="0" name="lStructSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="hwndOwner">
        <type>HWND</type>
      </field>
      <field offset="8" name="hDevMode">
        <type>HGLOBAL</type>
      </field>
      <field offset="12" name="hDevNames">
        <type>HGLOBAL</type>
      </field>
      <field offset="16" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="24" name="ptPaperSize">
        <type>POINT</type>
      </field>
      <field offset="32" name="rtMinMargin">
        <type>RECT</type>
      </field>
      <field offset="48" name="rtMargin">
        <type>RECT</type>
      </field>
      <field offset="64" name="hInstance">
        <type>HINSTANCE</type>
      </field>
      <field offset="68" name="lCustData">
        <type>LPARAM</type>
      </field>
      <field offset="72" name="lpfnPageSetupHook">
        <type>LPPAGESETUPHOOK</type>
      </field>
      <field offset="76" name="lpfnPagePaintHook">
        <type>LPPAGEPAINTHOOK</type>
      </field>
      <field offset="80" name="lpPageSetupTemplateName">
        <type>LPCSTR</type>
      </field>
      <field offset="84" name="hPageSetupTemplate">
        <type>HGLOBAL</type>
      </field>
    </struct>
    <typedef name="PAGESETUPDLGA">
      <struct name="tagPSDA" />
    </typedef>
    <typedef name="LPPAGESETUPDLGA">
      <ptr>
        <struct name="tagPSDA" />
      </ptr>
    </typedef>
    <struct name="tagPSDW">
      <field offset="0" name="lStructSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="hwndOwner">
        <type>HWND</type>
      </field>
      <field offset="8" name="hDevMode">
        <type>HGLOBAL</type>
      </field>
      <field offset="12" name="hDevNames">
        <type>HGLOBAL</type>
      </field>
      <field offset="16" name="Flags">
        <type>DWORD</type>
      </field>
      <field offset="24" name="ptPaperSize">
        <type>POINT</type>
      </field>
      <field offset="32" name="rtMinMargin">
        <type>RECT</type>
      </field>
      <field offset="48" name="rtMargin">
        <type>RECT</type>
      </field>
      <field offset="64" name="hInstance">
        <type>HINSTANCE</type>
      </field>
      <field offset="68" name="lCustData">
        <type>LPARAM</type>
      </field>
      <field offset="72" name="lpfnPageSetupHook">
        <type>LPPAGESETUPHOOK</type>
      </field>
      <field offset="76" name="lpfnPagePaintHook">
        <type>LPPAGEPAINTHOOK</type>
      </field>
      <field offset="80" name="lpPageSetupTemplateName">
        <type>LPCWSTR</type>
      </field>
      <field offset="84" name="hPageSetupTemplate">
        <type>HGLOBAL</type>
      </field>
    </struct>
    <typedef name="PAGESETUPDLGW">
      <struct name="tagPSDW" />
    </typedef>
    <typedef name="LPPAGESETUPDLGW">
      <ptr>
        <struct name="tagPSDW" />
      </ptr>
    </typedef>
    <typedef name="PAGESETUPDLG">
      <type>PAGESETUPDLGA</type>
    </typedef>
    <typedef name="LPPAGESETUPDLG">
      <type>LPPAGESETUPDLGA</type>
    </typedef>
    <struct name="_SERVICE_DESCRIPTIONA">
      <field offset="0" name="lpDescription">
        <type>LPSTR</type>
      </field>
    </struct>
    <typedef name="SERVICE_DESCRIPTIONA">
      <struct name="_SERVICE_DESCRIPTIONA" />
    </typedef>
    <typedef name="LPSERVICE_DESCRIPTIONA">
      <ptr>
        <struct name="_SERVICE_DESCRIPTIONA" />
      </ptr>
    </typedef>
    <struct name="_SERVICE_DESCRIPTIONW">
      <field offset="0" name="lpDescription">
        <type>LPWSTR</type>
      </field>
    </struct>
    <typedef name="SERVICE_DESCRIPTIONW">
      <struct name="_SERVICE_DESCRIPTIONW" />
    </typedef>
    <typedef name="LPSERVICE_DESCRIPTIONW">
      <ptr>
        <struct name="_SERVICE_DESCRIPTIONW" />
      </ptr>
    </typedef>
    <typedef name="SERVICE_DESCRIPTION">
      <type>SERVICE_DESCRIPTIONA</type>
    </typedef>
    <typedef name="LPSERVICE_DESCRIPTION">
      <type>LPSERVICE_DESCRIPTIONA</type>
    </typedef>
    <enum name="_SC_ACTION_TYPE">
      <member name="SC_ACTION_NONE" value="0" />
      <member name="SC_ACTION_RESTART" value="1" />
      <member name="SC_ACTION_REBOOT" value="2" />
      <member name="SC_ACTION_RUN_COMMAND" value="3" />
    </enum>
    <typedef name="SC_ACTION_TYPE">
      <enum name="_SC_ACTION_TYPE" />
    </typedef>
    <struct name="_SC_ACTION">
      <field offset="0" name="Type">
        <type>SC_ACTION_TYPE</type>
      </field>
      <field offset="4" name="Delay">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="SC_ACTION">
      <struct name="_SC_ACTION" />
    </typedef>
    <typedef name="LPSC_ACTION">
      <ptr>
        <struct name="_SC_ACTION" />
      </ptr>
    </typedef>
    <struct name="_SERVICE_FAILURE_ACTIONSA">
      <field offset="0" name="dwResetPeriod">
        <type>DWORD</type>
      </field>
      <field offset="4" name="lpRebootMsg">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="lpCommand">
        <type>LPSTR</type>
      </field>
      <field offset="12" name="cActions">
        <type>DWORD</type>
      </field>
      <field offset="16" name="lpsaActions">
        <ptr>
          <type>SC_ACTION</type>
        </ptr>
      </field>
    </struct>
    <typedef name="SERVICE_FAILURE_ACTIONSA">
      <struct name="_SERVICE_FAILURE_ACTIONSA" />
    </typedef>
    <typedef name="LPSERVICE_FAILURE_ACTIONSA">
      <ptr>
        <struct name="_SERVICE_FAILURE_ACTIONSA" />
      </ptr>
    </typedef>
    <struct name="_SERVICE_FAILURE_ACTIONSW">
      <field offset="0" name="dwResetPeriod">
        <type>DWORD</type>
      </field>
      <field offset="4" name="lpRebootMsg">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="lpCommand">
        <type>LPWSTR</type>
      </field>
      <field offset="12" name="cActions">
        <type>DWORD</type>
      </field>
      <field offset="16" name="lpsaActions">
        <ptr>
          <type>SC_ACTION</type>
        </ptr>
      </field>
    </struct>
    <typedef name="SERVICE_FAILURE_ACTIONSW">
      <struct name="_SERVICE_FAILURE_ACTIONSW" />
    </typedef>
    <typedef name="LPSERVICE_FAILURE_ACTIONSW">
      <ptr>
        <struct name="_SERVICE_FAILURE_ACTIONSW" />
      </ptr>
    </typedef>
    <typedef name="SERVICE_FAILURE_ACTIONS">
      <type>SERVICE_FAILURE_ACTIONSA</type>
    </typedef>
    <typedef name="LPSERVICE_FAILURE_ACTIONS">
      <type>LPSERVICE_FAILURE_ACTIONSA</type>
    </typedef>
    <struct name="_SERVICE_DELAYED_AUTO_START_INFO">
      <field offset="0" name="fDelayedAutostart">
        <type>BOOL</type>
      </field>
    </struct>
    <typedef name="SERVICE_DELAYED_AUTO_START_INFO">
      <struct name="_SERVICE_DELAYED_AUTO_START_INFO" />
    </typedef>
    <typedef name="LPSERVICE_DELAYED_AUTO_START_INFO">
      <ptr>
        <struct name="_SERVICE_DELAYED_AUTO_START_INFO" />
      </ptr>
    </typedef>
    <struct name="_SERVICE_FAILURE_ACTIONS_FLAG">
      <field offset="0" name="fFailureActionsOnNonCrashFailures">
        <type>BOOL</type>
      </field>
    </struct>
    <typedef name="SERVICE_FAILURE_ACTIONS_FLAG">
      <struct name="_SERVICE_FAILURE_ACTIONS_FLAG" />
    </typedef>
    <typedef name="LPSERVICE_FAILURE_ACTIONS_FLAG">
      <ptr>
        <struct name="_SERVICE_FAILURE_ACTIONS_FLAG" />
      </ptr>
    </typedef>
    <struct name="_SERVICE_SID_INFO">
      <field offset="0" name="dwServiceSidType">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="SERVICE_SID_INFO">
      <struct name="_SERVICE_SID_INFO" />
    </typedef>
    <typedef name="LPSERVICE_SID_INFO">
      <ptr>
        <struct name="_SERVICE_SID_INFO" />
      </ptr>
    </typedef>
    <struct name="_SERVICE_REQUIRED_PRIVILEGES_INFOA">
      <field offset="0" name="pmszRequiredPrivileges">
        <type>LPSTR</type>
      </field>
    </struct>
    <typedef name="SERVICE_REQUIRED_PRIVILEGES_INFOA">
      <struct name="_SERVICE_REQUIRED_PRIVILEGES_INFOA" />
    </typedef>
    <typedef name="LPSERVICE_REQUIRED_PRIVILEGES_INFOA">
      <ptr>
        <struct name="_SERVICE_REQUIRED_PRIVILEGES_INFOA" />
      </ptr>
    </typedef>
    <struct name="_SERVICE_REQUIRED_PRIVILEGES_INFOW">
      <field offset="0" name="pmszRequiredPrivileges">
        <type>LPWSTR</type>
      </field>
    </struct>
    <typedef name="SERVICE_REQUIRED_PRIVILEGES_INFOW">
      <struct name="_SERVICE_REQUIRED_PRIVILEGES_INFOW" />
    </typedef>
    <typedef name="LPSERVICE_REQUIRED_PRIVILEGES_INFOW">
      <ptr>
        <struct name="_SERVICE_REQUIRED_PRIVILEGES_INFOW" />
      </ptr>
    </typedef>
    <typedef name="SERVICE_REQUIRED_PRIVILEGES_INFO">
      <type>SERVICE_REQUIRED_PRIVILEGES_INFOA</type>
    </typedef>
    <typedef name="LPSERVICE_REQUIRED_PRIVILEGES_INFO">
      <type>LPSERVICE_REQUIRED_PRIVILEGES_INFOA</type>
    </typedef>
    <struct name="_SERVICE_PRESHUTDOWN_INFO">
      <field offset="0" name="dwPreshutdownTimeout">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="SERVICE_PRESHUTDOWN_INFO">
      <struct name="_SERVICE_PRESHUTDOWN_INFO" />
    </typedef>
    <typedef name="LPSERVICE_PRESHUTDOWN_INFO">
      <ptr>
        <struct name="_SERVICE_PRESHUTDOWN_INFO" />
      </ptr>
    </typedef>
    <struct name="_SERVICE_TRIGGER_SPECIFIC_DATA_ITEM">
      <field offset="0" name="dwDataType">
        <type>DWORD</type>
      </field>
      <field offset="4" name="cbData">
        <type>DWORD</type>
      </field>
      <field offset="8" name="pData">
        <type>PBYTE</type>
      </field>
    </struct>
    <typedef name="SERVICE_TRIGGER_SPECIFIC_DATA_ITEM">
      <struct name="_SERVICE_TRIGGER_SPECIFIC_DATA_ITEM" />
    </typedef>
    <typedef name="PSERVICE_TRIGGER_SPECIFIC_DATA_ITEM">
      <ptr>
        <struct name="_SERVICE_TRIGGER_SPECIFIC_DATA_ITEM" />
      </ptr>
    </typedef>
    <struct name="_SERVICE_TRIGGER">
      <field offset="0" name="dwTriggerType">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwAction">
        <type>DWORD</type>
      </field>
      <field offset="8" name="pTriggerSubtype">
        <ptr>
          <type>GUID</type>
        </ptr>
      </field>
      <field offset="12" name="cDataItems">
        <type>DWORD</type>
      </field>
      <field offset="16" name="pDataItems">
        <type>PSERVICE_TRIGGER_SPECIFIC_DATA_ITEM</type>
      </field>
    </struct>
    <typedef name="SERVICE_TRIGGER">
      <struct name="_SERVICE_TRIGGER" />
    </typedef>
    <typedef name="PSERVICE_TRIGGER">
      <ptr>
        <struct name="_SERVICE_TRIGGER" />
      </ptr>
    </typedef>
    <struct name="_SERVICE_TRIGGER_INFO">
      <field offset="0" name="cTriggers">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pTriggers">
        <type>PSERVICE_TRIGGER</type>
      </field>
      <field offset="8" name="pReserved">
        <type>PBYTE</type>
      </field>
    </struct>
    <typedef name="SERVICE_TRIGGER_INFO">
      <struct name="_SERVICE_TRIGGER_INFO" />
    </typedef>
    <typedef name="PSERVICE_TRIGGER_INFO">
      <ptr>
        <struct name="_SERVICE_TRIGGER_INFO" />
      </ptr>
    </typedef>
    <struct name="_SERVICE_PREFERRED_NODE_INFO">
      <field offset="0" name="usPreferredNode">
        <type>USHORT</type>
      </field>
      <field offset="2" name="fDelete">
        <type>BOOLEAN</type>
      </field>
    </struct>
    <typedef name="SERVICE_PREFERRED_NODE_INFO">
      <struct name="_SERVICE_PREFERRED_NODE_INFO" />
    </typedef>
    <typedef name="LPSERVICE_PREFERRED_NODE_INFO">
      <ptr>
        <struct name="_SERVICE_PREFERRED_NODE_INFO" />
      </ptr>
    </typedef>
    <struct name="_SERVICE_TIMECHANGE_INFO">
      <field offset="0" name="liNewTime">
        <type>LARGE_INTEGER</type>
      </field>
      <field offset="8" name="liOldTime">
        <type>LARGE_INTEGER</type>
      </field>
    </struct>
    <typedef name="SERVICE_TIMECHANGE_INFO">
      <struct name="_SERVICE_TIMECHANGE_INFO" />
    </typedef>
    <typedef name="PSERVICE_TIMECHANGE_INFO">
      <ptr>
        <struct name="_SERVICE_TIMECHANGE_INFO" />
      </ptr>
    </typedef>
    <struct name="SC_HANDLE__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="SC_HANDLE">
      <ptr>
        <struct name="SC_HANDLE__" />
      </ptr>
    </typedef>
    <typedef name="LPSC_HANDLE">
      <ptr>
        <type>SC_HANDLE</type>
      </ptr>
    </typedef>
    <struct name="SERVICE_STATUS_HANDLE__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="SERVICE_STATUS_HANDLE">
      <ptr>
        <struct name="SERVICE_STATUS_HANDLE__" />
      </ptr>
    </typedef>
    <enum name="_SC_STATUS_TYPE">
      <member name="SC_STATUS_PROCESS_INFO" value="0" />
    </enum>
    <typedef name="SC_STATUS_TYPE">
      <enum name="_SC_STATUS_TYPE" />
    </typedef>
    <enum name="_SC_ENUM_TYPE">
      <member name="SC_ENUM_PROCESS_INFO" value="0" />
    </enum>
    <typedef name="SC_ENUM_TYPE">
      <enum name="_SC_ENUM_TYPE" />
    </typedef>
    <struct name="_SERVICE_STATUS">
      <field offset="0" name="dwServiceType">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwCurrentState">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwControlsAccepted">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwWin32ExitCode">
        <type>DWORD</type>
      </field>
      <field offset="16" name="dwServiceSpecificExitCode">
        <type>DWORD</type>
      </field>
      <field offset="20" name="dwCheckPoint">
        <type>DWORD</type>
      </field>
      <field offset="24" name="dwWaitHint">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="SERVICE_STATUS">
      <struct name="_SERVICE_STATUS" />
    </typedef>
    <typedef name="LPSERVICE_STATUS">
      <ptr>
        <struct name="_SERVICE_STATUS" />
      </ptr>
    </typedef>
    <struct name="_SERVICE_STATUS_PROCESS">
      <field offset="0" name="dwServiceType">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwCurrentState">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwControlsAccepted">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwWin32ExitCode">
        <type>DWORD</type>
      </field>
      <field offset="16" name="dwServiceSpecificExitCode">
        <type>DWORD</type>
      </field>
      <field offset="20" name="dwCheckPoint">
        <type>DWORD</type>
      </field>
      <field offset="24" name="dwWaitHint">
        <type>DWORD</type>
      </field>
      <field offset="28" name="dwProcessId">
        <type>DWORD</type>
      </field>
      <field offset="32" name="dwServiceFlags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="SERVICE_STATUS_PROCESS">
      <struct name="_SERVICE_STATUS_PROCESS" />
    </typedef>
    <typedef name="LPSERVICE_STATUS_PROCESS">
      <ptr>
        <struct name="_SERVICE_STATUS_PROCESS" />
      </ptr>
    </typedef>
    <struct name="_ENUM_SERVICE_STATUSA">
      <field offset="0" name="lpServiceName">
        <type>LPSTR</type>
      </field>
      <field offset="4" name="lpDisplayName">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="ServiceStatus">
        <type>SERVICE_STATUS</type>
      </field>
    </struct>
    <typedef name="ENUM_SERVICE_STATUSA">
      <struct name="_ENUM_SERVICE_STATUSA" />
    </typedef>
    <typedef name="LPENUM_SERVICE_STATUSA">
      <ptr>
        <struct name="_ENUM_SERVICE_STATUSA" />
      </ptr>
    </typedef>
    <struct name="_ENUM_SERVICE_STATUSW">
      <field offset="0" name="lpServiceName">
        <type>LPWSTR</type>
      </field>
      <field offset="4" name="lpDisplayName">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="ServiceStatus">
        <type>SERVICE_STATUS</type>
      </field>
    </struct>
    <typedef name="ENUM_SERVICE_STATUSW">
      <struct name="_ENUM_SERVICE_STATUSW" />
    </typedef>
    <typedef name="LPENUM_SERVICE_STATUSW">
      <ptr>
        <struct name="_ENUM_SERVICE_STATUSW" />
      </ptr>
    </typedef>
    <typedef name="ENUM_SERVICE_STATUS">
      <type>ENUM_SERVICE_STATUSA</type>
    </typedef>
    <typedef name="LPENUM_SERVICE_STATUS">
      <type>LPENUM_SERVICE_STATUSA</type>
    </typedef>
    <struct name="_ENUM_SERVICE_STATUS_PROCESSA">
      <field offset="0" name="lpServiceName">
        <type>LPSTR</type>
      </field>
      <field offset="4" name="lpDisplayName">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="ServiceStatusProcess">
        <type>SERVICE_STATUS_PROCESS</type>
      </field>
    </struct>
    <typedef name="ENUM_SERVICE_STATUS_PROCESSA">
      <struct name="_ENUM_SERVICE_STATUS_PROCESSA" />
    </typedef>
    <typedef name="LPENUM_SERVICE_STATUS_PROCESSA">
      <ptr>
        <struct name="_ENUM_SERVICE_STATUS_PROCESSA" />
      </ptr>
    </typedef>
    <struct name="_ENUM_SERVICE_STATUS_PROCESSW">
      <field offset="0" name="lpServiceName">
        <type>LPWSTR</type>
      </field>
      <field offset="4" name="lpDisplayName">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="ServiceStatusProcess">
        <type>SERVICE_STATUS_PROCESS</type>
      </field>
    </struct>
    <typedef name="ENUM_SERVICE_STATUS_PROCESSW">
      <struct name="_ENUM_SERVICE_STATUS_PROCESSW" />
    </typedef>
    <typedef name="LPENUM_SERVICE_STATUS_PROCESSW">
      <ptr>
        <struct name="_ENUM_SERVICE_STATUS_PROCESSW" />
      </ptr>
    </typedef>
    <typedef name="ENUM_SERVICE_STATUS_PROCESS">
      <type>ENUM_SERVICE_STATUS_PROCESSA</type>
    </typedef>
    <typedef name="LPENUM_SERVICE_STATUS_PROCESS">
      <type>LPENUM_SERVICE_STATUS_PROCESSA</type>
    </typedef>
    <typedef name="SC_LOCK">
      <type>LPVOID</type>
    </typedef>
    <struct name="_QUERY_SERVICE_LOCK_STATUSA">
      <field offset="0" name="fIsLocked">
        <type>DWORD</type>
      </field>
      <field offset="4" name="lpLockOwner">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="dwLockDuration">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="QUERY_SERVICE_LOCK_STATUSA">
      <struct name="_QUERY_SERVICE_LOCK_STATUSA" />
    </typedef>
    <typedef name="LPQUERY_SERVICE_LOCK_STATUSA">
      <ptr>
        <struct name="_QUERY_SERVICE_LOCK_STATUSA" />
      </ptr>
    </typedef>
    <struct name="_QUERY_SERVICE_LOCK_STATUSW">
      <field offset="0" name="fIsLocked">
        <type>DWORD</type>
      </field>
      <field offset="4" name="lpLockOwner">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="dwLockDuration">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="QUERY_SERVICE_LOCK_STATUSW">
      <struct name="_QUERY_SERVICE_LOCK_STATUSW" />
    </typedef>
    <typedef name="LPQUERY_SERVICE_LOCK_STATUSW">
      <ptr>
        <struct name="_QUERY_SERVICE_LOCK_STATUSW" />
      </ptr>
    </typedef>
    <typedef name="QUERY_SERVICE_LOCK_STATUS">
      <type>QUERY_SERVICE_LOCK_STATUSA</type>
    </typedef>
    <typedef name="LPQUERY_SERVICE_LOCK_STATUS">
      <type>LPQUERY_SERVICE_LOCK_STATUSA</type>
    </typedef>
    <struct name="_QUERY_SERVICE_CONFIGA">
      <field offset="0" name="dwServiceType">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwStartType">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwErrorControl">
        <type>DWORD</type>
      </field>
      <field offset="12" name="lpBinaryPathName">
        <type>LPSTR</type>
      </field>
      <field offset="16" name="lpLoadOrderGroup">
        <type>LPSTR</type>
      </field>
      <field offset="20" name="dwTagId">
        <type>DWORD</type>
      </field>
      <field offset="24" name="lpDependencies">
        <type>LPSTR</type>
      </field>
      <field offset="28" name="lpServiceStartName">
        <type>LPSTR</type>
      </field>
      <field offset="32" name="lpDisplayName">
        <type>LPSTR</type>
      </field>
    </struct>
    <typedef name="QUERY_SERVICE_CONFIGA">
      <struct name="_QUERY_SERVICE_CONFIGA" />
    </typedef>
    <typedef name="LPQUERY_SERVICE_CONFIGA">
      <ptr>
        <struct name="_QUERY_SERVICE_CONFIGA" />
      </ptr>
    </typedef>
    <struct name="_QUERY_SERVICE_CONFIGW">
      <field offset="0" name="dwServiceType">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwStartType">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwErrorControl">
        <type>DWORD</type>
      </field>
      <field offset="12" name="lpBinaryPathName">
        <type>LPWSTR</type>
      </field>
      <field offset="16" name="lpLoadOrderGroup">
        <type>LPWSTR</type>
      </field>
      <field offset="20" name="dwTagId">
        <type>DWORD</type>
      </field>
      <field offset="24" name="lpDependencies">
        <type>LPWSTR</type>
      </field>
      <field offset="28" name="lpServiceStartName">
        <type>LPWSTR</type>
      </field>
      <field offset="32" name="lpDisplayName">
        <type>LPWSTR</type>
      </field>
    </struct>
    <typedef name="QUERY_SERVICE_CONFIGW">
      <struct name="_QUERY_SERVICE_CONFIGW" />
    </typedef>
    <typedef name="LPQUERY_SERVICE_CONFIGW">
      <ptr>
        <struct name="_QUERY_SERVICE_CONFIGW" />
      </ptr>
    </typedef>
    <typedef name="QUERY_SERVICE_CONFIG">
      <type>QUERY_SERVICE_CONFIGA</type>
    </typedef>
    <typedef name="LPQUERY_SERVICE_CONFIG">
      <type>LPQUERY_SERVICE_CONFIGA</type>
    </typedef>
    <typedef name="LPSERVICE_MAIN_FUNCTIONW">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="dwNumServicesArgs">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="lpServiceArgVectors">
            <ptr>
              <type>LPWSTR</type>
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="LPSERVICE_MAIN_FUNCTIONA">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="dwNumServicesArgs">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="lpServiceArgVectors">
            <ptr>
              <type>LPSTR</type>
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="_SERVICE_TABLE_ENTRYA">
      <field offset="0" name="lpServiceName">
        <type>LPSTR</type>
      </field>
      <field offset="4" name="lpServiceProc">
        <type>LPSERVICE_MAIN_FUNCTIONA</type>
      </field>
    </struct>
    <typedef name="SERVICE_TABLE_ENTRYA">
      <struct name="_SERVICE_TABLE_ENTRYA" />
    </typedef>
    <typedef name="LPSERVICE_TABLE_ENTRYA">
      <ptr>
        <struct name="_SERVICE_TABLE_ENTRYA" />
      </ptr>
    </typedef>
    <struct name="_SERVICE_TABLE_ENTRYW">
      <field offset="0" name="lpServiceName">
        <type>LPWSTR</type>
      </field>
      <field offset="4" name="lpServiceProc">
        <type>LPSERVICE_MAIN_FUNCTIONW</type>
      </field>
    </struct>
    <typedef name="SERVICE_TABLE_ENTRYW">
      <struct name="_SERVICE_TABLE_ENTRYW" />
    </typedef>
    <typedef name="LPSERVICE_TABLE_ENTRYW">
      <ptr>
        <struct name="_SERVICE_TABLE_ENTRYW" />
      </ptr>
    </typedef>
    <typedef name="SERVICE_TABLE_ENTRY">
      <type>SERVICE_TABLE_ENTRYA</type>
    </typedef>
    <typedef name="LPSERVICE_TABLE_ENTRY">
      <type>LPSERVICE_TABLE_ENTRYA</type>
    </typedef>
    <typedef name="LPHANDLER_FUNCTION">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="dwControl">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="LPHANDLER_FUNCTION_EX">
      <ptr>
        <fn>
          <return>
            <type>DWORD</type>
            <reg>eax</reg>
          </return>
          <arg name="dwControl">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="dwEventType">
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="lpEventData">
            <type>LPVOID</type>
            <stack size="4" />
          </arg>
          <arg name="lpContext">
            <type>LPVOID</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFN_SC_NOTIFY_CALLBACK">
      <ptr>
        <fn>
          <return>
            <void />
          </return>
          <arg name="pParameter">
            <type>PVOID</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="_SERVICE_NOTIFY_1">
      <field offset="0" name="dwVersion">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pfnNotifyCallback">
        <type>PFN_SC_NOTIFY_CALLBACK</type>
      </field>
      <field offset="8" name="pContext">
        <type>PVOID</type>
      </field>
      <field offset="12" name="dwNotificationStatus">
        <type>DWORD</type>
      </field>
      <field offset="16" name="ServiceStatus">
        <type>SERVICE_STATUS_PROCESS</type>
      </field>
    </struct>
    <typedef name="SERVICE_NOTIFY_1">
      <struct name="_SERVICE_NOTIFY_1" />
    </typedef>
    <typedef name="PSERVICE_NOTIFY_1">
      <ptr>
        <struct name="_SERVICE_NOTIFY_1" />
      </ptr>
    </typedef>
    <struct name="_SERVICE_NOTIFY_2A">
      <field offset="0" name="dwVersion">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pfnNotifyCallback">
        <type>PFN_SC_NOTIFY_CALLBACK</type>
      </field>
      <field offset="8" name="pContext">
        <type>PVOID</type>
      </field>
      <field offset="12" name="dwNotificationStatus">
        <type>DWORD</type>
      </field>
      <field offset="16" name="ServiceStatus">
        <type>SERVICE_STATUS_PROCESS</type>
      </field>
      <field offset="52" name="dwNotificationTriggered">
        <type>DWORD</type>
      </field>
      <field offset="56" name="pszServiceNames">
        <type>LPSTR</type>
      </field>
    </struct>
    <typedef name="SERVICE_NOTIFY_2A">
      <struct name="_SERVICE_NOTIFY_2A" />
    </typedef>
    <typedef name="PSERVICE_NOTIFY_2A">
      <ptr>
        <struct name="_SERVICE_NOTIFY_2A" />
      </ptr>
    </typedef>
    <struct name="_SERVICE_NOTIFY_2W">
      <field offset="0" name="dwVersion">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pfnNotifyCallback">
        <type>PFN_SC_NOTIFY_CALLBACK</type>
      </field>
      <field offset="8" name="pContext">
        <type>PVOID</type>
      </field>
      <field offset="12" name="dwNotificationStatus">
        <type>DWORD</type>
      </field>
      <field offset="16" name="ServiceStatus">
        <type>SERVICE_STATUS_PROCESS</type>
      </field>
      <field offset="52" name="dwNotificationTriggered">
        <type>DWORD</type>
      </field>
      <field offset="56" name="pszServiceNames">
        <type>LPWSTR</type>
      </field>
    </struct>
    <typedef name="SERVICE_NOTIFY_2W">
      <struct name="_SERVICE_NOTIFY_2W" />
    </typedef>
    <typedef name="PSERVICE_NOTIFY_2W">
      <ptr>
        <struct name="_SERVICE_NOTIFY_2W" />
      </ptr>
    </typedef>
    <typedef name="SERVICE_NOTIFY_2">
      <type>SERVICE_NOTIFY_2A</type>
    </typedef>
    <typedef name="PSERVICE_NOTIFY_2">
      <type>PSERVICE_NOTIFY_2A</type>
    </typedef>
    <typedef name="SERVICE_NOTIFYA">
      <type>SERVICE_NOTIFY_2A</type>
    </typedef>
    <typedef name="PSERVICE_NOTIFYA">
      <ptr>
        <type>SERVICE_NOTIFY_2A</type>
      </ptr>
    </typedef>
    <typedef name="SERVICE_NOTIFYW">
      <type>SERVICE_NOTIFY_2W</type>
    </typedef>
    <typedef name="PSERVICE_NOTIFYW">
      <ptr>
        <type>SERVICE_NOTIFY_2W</type>
      </ptr>
    </typedef>
    <typedef name="SERVICE_NOTIFY">
      <type>SERVICE_NOTIFYA</type>
    </typedef>
    <typedef name="PSERVICE_NOTIFY">
      <type>PSERVICE_NOTIFYA</type>
    </typedef>
    <struct name="_SERVICE_CONTROL_STATUS_REASON_PARAMSA">
      <field offset="0" name="dwReason">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pszComment">
        <type>LPSTR</type>
      </field>
      <field offset="8" name="ServiceStatus">
        <type>SERVICE_STATUS_PROCESS</type>
      </field>
    </struct>
    <typedef name="SERVICE_CONTROL_STATUS_REASON_PARAMSA">
      <struct name="_SERVICE_CONTROL_STATUS_REASON_PARAMSA" />
    </typedef>
    <typedef name="PSERVICE_CONTROL_STATUS_REASON_PARAMSA">
      <ptr>
        <struct name="_SERVICE_CONTROL_STATUS_REASON_PARAMSA" />
      </ptr>
    </typedef>
    <struct name="_SERVICE_CONTROL_STATUS_REASON_PARAMSW">
      <field offset="0" name="dwReason">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pszComment">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="ServiceStatus">
        <type>SERVICE_STATUS_PROCESS</type>
      </field>
    </struct>
    <typedef name="SERVICE_CONTROL_STATUS_REASON_PARAMSW">
      <struct name="_SERVICE_CONTROL_STATUS_REASON_PARAMSW" />
    </typedef>
    <typedef name="PSERVICE_CONTROL_STATUS_REASON_PARAMSW">
      <ptr>
        <struct name="_SERVICE_CONTROL_STATUS_REASON_PARAMSW" />
      </ptr>
    </typedef>
    <typedef name="SERVICE_CONTROL_STATUS_REASON_PARAMS">
      <type>SERVICE_CONTROL_STATUS_REASON_PARAMSA</type>
    </typedef>
    <typedef name="PSERVICE_CONTROL_STATUS_REASON_PARAMS">
      <type>PSERVICE_CONTROL_STATUS_REASON_PARAMSA</type>
    </typedef>
    <struct name="_MODEMDEVCAPS">
      <field offset="0" name="dwActualSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwRequiredSize">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwDevSpecificOffset">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwDevSpecificSize">
        <type>DWORD</type>
      </field>
      <field offset="16" name="dwModemProviderVersion">
        <type>DWORD</type>
      </field>
      <field offset="20" name="dwModemManufacturerOffset">
        <type>DWORD</type>
      </field>
      <field offset="24" name="dwModemManufacturerSize">
        <type>DWORD</type>
      </field>
      <field offset="28" name="dwModemModelOffset">
        <type>DWORD</type>
      </field>
      <field offset="32" name="dwModemModelSize">
        <type>DWORD</type>
      </field>
      <field offset="36" name="dwModemVersionOffset">
        <type>DWORD</type>
      </field>
      <field offset="40" name="dwModemVersionSize">
        <type>DWORD</type>
      </field>
      <field offset="44" name="dwDialOptions">
        <type>DWORD</type>
      </field>
      <field offset="48" name="dwCallSetupFailTimer">
        <type>DWORD</type>
      </field>
      <field offset="52" name="dwInactivityTimeout">
        <type>DWORD</type>
      </field>
      <field offset="56" name="dwSpeakerVolume">
        <type>DWORD</type>
      </field>
      <field offset="60" name="dwSpeakerMode">
        <type>DWORD</type>
      </field>
      <field offset="64" name="dwModemOptions">
        <type>DWORD</type>
      </field>
      <field offset="68" name="dwMaxDTERate">
        <type>DWORD</type>
      </field>
      <field offset="72" name="dwMaxDCERate">
        <type>DWORD</type>
      </field>
      <field offset="76" name="abVariablePortion">
        <arr length="1">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="MODEMDEVCAPS">
      <struct name="_MODEMDEVCAPS" />
    </typedef>
    <typedef name="PMODEMDEVCAPS">
      <ptr>
        <struct name="_MODEMDEVCAPS" />
      </ptr>
    </typedef>
    <typedef name="LPMODEMDEVCAPS">
      <ptr>
        <struct name="_MODEMDEVCAPS" />
      </ptr>
    </typedef>
    <struct name="_MODEMSETTINGS">
      <field offset="0" name="dwActualSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwRequiredSize">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwDevSpecificOffset">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwDevSpecificSize">
        <type>DWORD</type>
      </field>
      <field offset="16" name="dwCallSetupFailTimer">
        <type>DWORD</type>
      </field>
      <field offset="20" name="dwInactivityTimeout">
        <type>DWORD</type>
      </field>
      <field offset="24" name="dwSpeakerVolume">
        <type>DWORD</type>
      </field>
      <field offset="28" name="dwSpeakerMode">
        <type>DWORD</type>
      </field>
      <field offset="32" name="dwPreferredModemOptions">
        <type>DWORD</type>
      </field>
      <field offset="36" name="dwNegotiatedModemOptions">
        <type>DWORD</type>
      </field>
      <field offset="40" name="dwNegotiatedDCERate">
        <type>DWORD</type>
      </field>
      <field offset="44" name="abVariablePortion">
        <arr length="1">
          <type>BYTE</type>
        </arr>
      </field>
    </struct>
    <typedef name="MODEMSETTINGS">
      <struct name="_MODEMSETTINGS" />
    </typedef>
    <typedef name="PMODEMSETTINGS">
      <ptr>
        <struct name="_MODEMSETTINGS" />
      </ptr>
    </typedef>
    <typedef name="LPMODEMSETTINGS">
      <ptr>
        <struct name="_MODEMSETTINGS" />
      </ptr>
    </typedef>
    <struct name="HIMC__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HIMC">
      <ptr>
        <struct name="HIMC__" />
      </ptr>
    </typedef>
    <struct name="HIMCC__">
      <field offset="0" name="unused">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HIMCC">
      <ptr>
        <struct name="HIMCC__" />
      </ptr>
    </typedef>
    <typedef name="LPHKL">
      <ptr>
        <type>HKL</type>
      </ptr>
    </typedef>
    <typedef name="LPUINT">
      <ptr>
        <type>UINT</type>
      </ptr>
    </typedef>
    <struct name="tagCOMPOSITIONFORM">
      <field offset="0" name="dwStyle">
        <type>DWORD</type>
      </field>
      <field offset="8" name="ptCurrentPos">
        <type>POINT</type>
      </field>
      <field offset="16" name="rcArea">
        <type>RECT</type>
      </field>
    </struct>
    <typedef name="COMPOSITIONFORM">
      <struct name="tagCOMPOSITIONFORM" />
    </typedef>
    <typedef name="PCOMPOSITIONFORM">
      <ptr>
        <struct name="tagCOMPOSITIONFORM" />
      </ptr>
    </typedef>
    <typedef name="NPCOMPOSITIONFORM">
      <ptr>
        <struct name="tagCOMPOSITIONFORM" />
      </ptr>
    </typedef>
    <typedef name="LPCOMPOSITIONFORM">
      <ptr>
        <struct name="tagCOMPOSITIONFORM" />
      </ptr>
    </typedef>
    <struct name="tagCANDIDATEFORM">
      <field offset="0" name="dwIndex">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwStyle">
        <type>DWORD</type>
      </field>
      <field offset="8" name="ptCurrentPos">
        <type>POINT</type>
      </field>
      <field offset="16" name="rcArea">
        <type>RECT</type>
      </field>
    </struct>
    <typedef name="CANDIDATEFORM">
      <struct name="tagCANDIDATEFORM" />
    </typedef>
    <typedef name="PCANDIDATEFORM">
      <ptr>
        <struct name="tagCANDIDATEFORM" />
      </ptr>
    </typedef>
    <typedef name="NPCANDIDATEFORM">
      <ptr>
        <struct name="tagCANDIDATEFORM" />
      </ptr>
    </typedef>
    <typedef name="LPCANDIDATEFORM">
      <ptr>
        <struct name="tagCANDIDATEFORM" />
      </ptr>
    </typedef>
    <struct name="tagCANDIDATELIST">
      <field offset="0" name="dwSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwStyle">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwCount">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwSelection">
        <type>DWORD</type>
      </field>
      <field offset="16" name="dwPageStart">
        <type>DWORD</type>
      </field>
      <field offset="20" name="dwPageSize">
        <type>DWORD</type>
      </field>
      <field offset="24" name="dwOffset">
        <arr length="1">
          <type>DWORD</type>
        </arr>
      </field>
    </struct>
    <typedef name="CANDIDATELIST">
      <struct name="tagCANDIDATELIST" />
    </typedef>
    <typedef name="PCANDIDATELIST">
      <ptr>
        <struct name="tagCANDIDATELIST" />
      </ptr>
    </typedef>
    <typedef name="NPCANDIDATELIST">
      <ptr>
        <struct name="tagCANDIDATELIST" />
      </ptr>
    </typedef>
    <typedef name="LPCANDIDATELIST">
      <ptr>
        <struct name="tagCANDIDATELIST" />
      </ptr>
    </typedef>
    <struct name="tagREGISTERWORDA">
      <field offset="0" name="lpReading">
        <type>LPSTR</type>
      </field>
      <field offset="4" name="lpWord">
        <type>LPSTR</type>
      </field>
    </struct>
    <typedef name="REGISTERWORDA">
      <struct name="tagREGISTERWORDA" />
    </typedef>
    <typedef name="PREGISTERWORDA">
      <ptr>
        <struct name="tagREGISTERWORDA" />
      </ptr>
    </typedef>
    <typedef name="NPREGISTERWORDA">
      <ptr>
        <struct name="tagREGISTERWORDA" />
      </ptr>
    </typedef>
    <typedef name="LPREGISTERWORDA">
      <ptr>
        <struct name="tagREGISTERWORDA" />
      </ptr>
    </typedef>
    <struct name="tagREGISTERWORDW">
      <field offset="0" name="lpReading">
        <type>LPWSTR</type>
      </field>
      <field offset="4" name="lpWord">
        <type>LPWSTR</type>
      </field>
    </struct>
    <typedef name="REGISTERWORDW">
      <struct name="tagREGISTERWORDW" />
    </typedef>
    <typedef name="PREGISTERWORDW">
      <ptr>
        <struct name="tagREGISTERWORDW" />
      </ptr>
    </typedef>
    <typedef name="NPREGISTERWORDW">
      <ptr>
        <struct name="tagREGISTERWORDW" />
      </ptr>
    </typedef>
    <typedef name="LPREGISTERWORDW">
      <ptr>
        <struct name="tagREGISTERWORDW" />
      </ptr>
    </typedef>
    <typedef name="REGISTERWORD">
      <type>REGISTERWORDA</type>
    </typedef>
    <typedef name="PREGISTERWORD">
      <type>PREGISTERWORDA</type>
    </typedef>
    <typedef name="NPREGISTERWORD">
      <type>NPREGISTERWORDA</type>
    </typedef>
    <typedef name="LPREGISTERWORD">
      <type>LPREGISTERWORDA</type>
    </typedef>
    <struct name="tagRECONVERTSTRING">
      <field offset="0" name="dwSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwVersion">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwStrLen">
        <type>DWORD</type>
      </field>
      <field offset="12" name="dwStrOffset">
        <type>DWORD</type>
      </field>
      <field offset="16" name="dwCompStrLen">
        <type>DWORD</type>
      </field>
      <field offset="20" name="dwCompStrOffset">
        <type>DWORD</type>
      </field>
      <field offset="24" name="dwTargetStrLen">
        <type>DWORD</type>
      </field>
      <field offset="28" name="dwTargetStrOffset">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="RECONVERTSTRING">
      <struct name="tagRECONVERTSTRING" />
    </typedef>
    <typedef name="PRECONVERTSTRING">
      <ptr>
        <struct name="tagRECONVERTSTRING" />
      </ptr>
    </typedef>
    <typedef name="NPRECONVERTSTRING">
      <ptr>
        <struct name="tagRECONVERTSTRING" />
      </ptr>
    </typedef>
    <typedef name="LPRECONVERTSTRING">
      <ptr>
        <struct name="tagRECONVERTSTRING" />
      </ptr>
    </typedef>
    <struct name="tagSTYLEBUFA">
      <field offset="0" name="dwStyle">
        <type>DWORD</type>
      </field>
      <field offset="8" name="szDescription">
        <arr length="32">
          <type>CHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="STYLEBUFA">
      <struct name="tagSTYLEBUFA" />
    </typedef>
    <typedef name="PSTYLEBUFA">
      <ptr>
        <struct name="tagSTYLEBUFA" />
      </ptr>
    </typedef>
    <typedef name="NPSTYLEBUFA">
      <ptr>
        <struct name="tagSTYLEBUFA" />
      </ptr>
    </typedef>
    <typedef name="LPSTYLEBUFA">
      <ptr>
        <struct name="tagSTYLEBUFA" />
      </ptr>
    </typedef>
    <struct name="tagSTYLEBUFW">
      <field offset="0" name="dwStyle">
        <type>DWORD</type>
      </field>
      <field offset="8" name="szDescription">
        <arr length="32">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="STYLEBUFW">
      <struct name="tagSTYLEBUFW" />
    </typedef>
    <typedef name="PSTYLEBUFW">
      <ptr>
        <struct name="tagSTYLEBUFW" />
      </ptr>
    </typedef>
    <typedef name="NPSTYLEBUFW">
      <ptr>
        <struct name="tagSTYLEBUFW" />
      </ptr>
    </typedef>
    <typedef name="LPSTYLEBUFW">
      <ptr>
        <struct name="tagSTYLEBUFW" />
      </ptr>
    </typedef>
    <typedef name="STYLEBUF">
      <type>STYLEBUFA</type>
    </typedef>
    <typedef name="PSTYLEBUF">
      <type>PSTYLEBUFA</type>
    </typedef>
    <typedef name="NPSTYLEBUF">
      <type>NPSTYLEBUFA</type>
    </typedef>
    <typedef name="LPSTYLEBUF">
      <type>LPSTYLEBUFA</type>
    </typedef>
    <struct name="tagIMEMENUITEMINFOA">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="fType">
        <type>UINT</type>
      </field>
      <field offset="8" name="fState">
        <type>UINT</type>
      </field>
      <field offset="12" name="wID">
        <type>UINT</type>
      </field>
      <field offset="16" name="hbmpChecked">
        <type>HBITMAP</type>
      </field>
      <field offset="20" name="hbmpUnchecked">
        <type>HBITMAP</type>
      </field>
      <field offset="24" name="dwItemData">
        <type>DWORD</type>
      </field>
      <field offset="32" name="szString">
        <arr length="80">
          <type>CHAR</type>
        </arr>
      </field>
      <field offset="112" name="hbmpItem">
        <type>HBITMAP</type>
      </field>
    </struct>
    <typedef name="IMEMENUITEMINFOA">
      <struct name="tagIMEMENUITEMINFOA" />
    </typedef>
    <typedef name="PIMEMENUITEMINFOA">
      <ptr>
        <struct name="tagIMEMENUITEMINFOA" />
      </ptr>
    </typedef>
    <typedef name="NPIMEMENUITEMINFOA">
      <ptr>
        <struct name="tagIMEMENUITEMINFOA" />
      </ptr>
    </typedef>
    <typedef name="LPIMEMENUITEMINFOA">
      <ptr>
        <struct name="tagIMEMENUITEMINFOA" />
      </ptr>
    </typedef>
    <struct name="tagIMEMENUITEMINFOW">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="fType">
        <type>UINT</type>
      </field>
      <field offset="8" name="fState">
        <type>UINT</type>
      </field>
      <field offset="12" name="wID">
        <type>UINT</type>
      </field>
      <field offset="16" name="hbmpChecked">
        <type>HBITMAP</type>
      </field>
      <field offset="20" name="hbmpUnchecked">
        <type>HBITMAP</type>
      </field>
      <field offset="24" name="dwItemData">
        <type>DWORD</type>
      </field>
      <field offset="32" name="szString">
        <arr length="80">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="192" name="hbmpItem">
        <type>HBITMAP</type>
      </field>
    </struct>
    <typedef name="IMEMENUITEMINFOW">
      <struct name="tagIMEMENUITEMINFOW" />
    </typedef>
    <typedef name="PIMEMENUITEMINFOW">
      <ptr>
        <struct name="tagIMEMENUITEMINFOW" />
      </ptr>
    </typedef>
    <typedef name="NPIMEMENUITEMINFOW">
      <ptr>
        <struct name="tagIMEMENUITEMINFOW" />
      </ptr>
    </typedef>
    <typedef name="LPIMEMENUITEMINFOW">
      <ptr>
        <struct name="tagIMEMENUITEMINFOW" />
      </ptr>
    </typedef>
    <typedef name="IMEMENUITEMINFO">
      <type>IMEMENUITEMINFOA</type>
    </typedef>
    <typedef name="PIMEMENUITEMINFO">
      <type>PIMEMENUITEMINFOA</type>
    </typedef>
    <typedef name="NPIMEMENUITEMINFO">
      <type>NPIMEMENUITEMINFOA</type>
    </typedef>
    <typedef name="LPIMEMENUITEMINFO">
      <type>LPIMEMENUITEMINFOA</type>
    </typedef>
    <struct name="tagIMECHARPOSITION">
      <field offset="0" name="dwSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwCharPos">
        <type>DWORD</type>
      </field>
      <field offset="8" name="pt">
        <type>POINT</type>
      </field>
      <field offset="16" name="cLineHeight">
        <type>UINT</type>
      </field>
      <field offset="24" name="rcDocument">
        <type>RECT</type>
      </field>
    </struct>
    <typedef name="IMECHARPOSITION">
      <struct name="tagIMECHARPOSITION" />
    </typedef>
    <typedef name="PIMECHARPOSITION">
      <ptr>
        <struct name="tagIMECHARPOSITION" />
      </ptr>
    </typedef>
    <typedef name="NPIMECHARPOSITION">
      <ptr>
        <struct name="tagIMECHARPOSITION" />
      </ptr>
    </typedef>
    <typedef name="LPIMECHARPOSITION">
      <ptr>
        <struct name="tagIMECHARPOSITION" />
      </ptr>
    </typedef>
    <typedef name="IMCENUMPROC">
      <ptr>
        <fn>
          <return>
            <type>BOOL</type>
            <reg>eax</reg>
          </return>
          <arg>
            <type>HIMC</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="REGISTERWORDENUMPROCA">
      <ptr>
        <fn>
          <return>
            <prim domain="SignedInt" size="4" />
            <reg>eax</reg>
          </return>
          <arg name="lpszReading">
            <type>LPCSTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="lpszString">
            <type>LPCSTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPVOID</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="REGISTERWORDENUMPROCW">
      <ptr>
        <fn>
          <return>
            <prim domain="SignedInt" size="4" />
            <reg>eax</reg>
          </return>
          <arg name="lpszReading">
            <type>LPCWSTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>DWORD</type>
            <stack size="4" />
          </arg>
          <arg name="lpszString">
            <type>LPCWSTR</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPVOID</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="tagINITCOMMONCONTROLSEX">
      <field offset="0" name="dwSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="dwICC">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="INITCOMMONCONTROLSEX">
      <struct name="tagINITCOMMONCONTROLSEX" />
    </typedef>
    <typedef name="LPINITCOMMONCONTROLSEX">
      <ptr>
        <struct name="tagINITCOMMONCONTROLSEX" />
      </ptr>
    </typedef>
    <struct name="tagCOLORSCHEME">
      <field offset="0" name="dwSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="clrBtnHighlight">
        <type>COLORREF</type>
      </field>
      <field offset="8" name="clrBtnShadow">
        <type>COLORREF</type>
      </field>
    </struct>
    <typedef name="COLORSCHEME">
      <struct name="tagCOLORSCHEME" />
    </typedef>
    <typedef name="LPCOLORSCHEME">
      <ptr>
        <struct name="tagCOLORSCHEME" />
      </ptr>
    </typedef>
    <struct name="tagNMTOOLTIPSCREATED">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="hwndToolTips">
        <type>HWND</type>
      </field>
    </struct>
    <typedef name="NMTOOLTIPSCREATED">
      <struct name="tagNMTOOLTIPSCREATED" />
    </typedef>
    <typedef name="LPNMTOOLTIPSCREATED">
      <ptr>
        <struct name="tagNMTOOLTIPSCREATED" />
      </ptr>
    </typedef>
    <struct name="tagNMMOUSE">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="dwItemSpec">
        <type>DWORD_PTR</type>
      </field>
      <field offset="16" name="dwItemData">
        <type>DWORD_PTR</type>
      </field>
      <field offset="24" name="pt">
        <type>POINT</type>
      </field>
      <field offset="32" name="dwHitInfo">
        <type>LPARAM</type>
      </field>
    </struct>
    <typedef name="NMMOUSE">
      <struct name="tagNMMOUSE" />
    </typedef>
    <typedef name="LPNMMOUSE">
      <ptr>
        <struct name="tagNMMOUSE" />
      </ptr>
    </typedef>
    <typedef name="NMCLICK">
      <type>NMMOUSE</type>
    </typedef>
    <typedef name="LPNMCLICK">
      <type>LPNMMOUSE</type>
    </typedef>
    <struct name="tagNMOBJECTNOTIFY">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="iItem">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="piid">
        <ptr>
          <type>IID</type>
        </ptr>
      </field>
      <field offset="20" name="pObject">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="24" name="hResult">
        <type>HRESULT</type>
      </field>
      <field offset="28" name="dwFlags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="NMOBJECTNOTIFY">
      <struct name="tagNMOBJECTNOTIFY" />
    </typedef>
    <typedef name="LPNMOBJECTNOTIFY">
      <ptr>
        <struct name="tagNMOBJECTNOTIFY" />
      </ptr>
    </typedef>
    <struct name="tagNMKEY">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="nVKey">
        <type>UINT</type>
      </field>
      <field offset="16" name="uFlags">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="NMKEY">
      <struct name="tagNMKEY" />
    </typedef>
    <typedef name="LPNMKEY">
      <ptr>
        <struct name="tagNMKEY" />
      </ptr>
    </typedef>
    <struct name="tagNMCHAR">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="ch">
        <type>UINT</type>
      </field>
      <field offset="16" name="dwItemPrev">
        <type>DWORD</type>
      </field>
      <field offset="20" name="dwItemNext">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="NMCHAR">
      <struct name="tagNMCHAR" />
    </typedef>
    <typedef name="LPNMCHAR">
      <ptr>
        <struct name="tagNMCHAR" />
      </ptr>
    </typedef>
    <struct name="tagNMCUSTOMTEXT">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="hDC">
        <type>HDC</type>
      </field>
      <field offset="16" name="lpString">
        <type>LPCWSTR</type>
      </field>
      <field offset="20" name="nCount">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="24" name="lpRect">
        <type>LPRECT</type>
      </field>
      <field offset="28" name="uFormat">
        <type>UINT</type>
      </field>
      <field offset="32" name="fLink">
        <type>BOOL</type>
      </field>
    </struct>
    <typedef name="NMCUSTOMTEXT">
      <struct name="tagNMCUSTOMTEXT" />
    </typedef>
    <typedef name="LPNMCUSTOMTEXT">
      <ptr>
        <struct name="tagNMCUSTOMTEXT" />
      </ptr>
    </typedef>
    <struct name="tagNMCUSTOMDRAWINFO">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="dwDrawStage">
        <type>DWORD</type>
      </field>
      <field offset="16" name="hdc">
        <type>HDC</type>
      </field>
      <field offset="24" name="rc">
        <type>RECT</type>
      </field>
      <field offset="40" name="dwItemSpec">
        <type>DWORD_PTR</type>
      </field>
      <field offset="44" name="uItemState">
        <type>UINT</type>
      </field>
      <field offset="48" name="lItemlParam">
        <type>LPARAM</type>
      </field>
    </struct>
    <typedef name="NMCUSTOMDRAW">
      <struct name="tagNMCUSTOMDRAWINFO" />
    </typedef>
    <typedef name="LPNMCUSTOMDRAW">
      <ptr>
        <struct name="tagNMCUSTOMDRAWINFO" />
      </ptr>
    </typedef>
    <struct name="tagNMTTCUSTOMDRAW">
      <field offset="0" name="nmcd">
        <type>NMCUSTOMDRAW</type>
      </field>
      <field offset="48" name="uDrawFlags">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="NMTTCUSTOMDRAW">
      <struct name="tagNMTTCUSTOMDRAW" />
    </typedef>
    <typedef name="LPNMTTCUSTOMDRAW">
      <ptr>
        <struct name="tagNMTTCUSTOMDRAW" />
      </ptr>
    </typedef>
    <struct name="tagNMCUSTOMSPLITRECTINFO">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="16" name="rcClient">
        <type>RECT</type>
      </field>
      <field offset="32" name="rcButton">
        <type>RECT</type>
      </field>
      <field offset="48" name="rcSplit">
        <type>RECT</type>
      </field>
    </struct>
    <typedef name="NMCUSTOMSPLITRECTINFO">
      <struct name="tagNMCUSTOMSPLITRECTINFO" />
    </typedef>
    <typedef name="LPNMCUSTOMSPLITRECTINFO">
      <ptr>
        <struct name="tagNMCUSTOMSPLITRECTINFO" />
      </ptr>
    </typedef>
    <typedef name="HIMAGELIST">
      <ptr>
        <struct name="_IMAGELIST" />
      </ptr>
    </typedef>
    <struct name="_IMAGELISTDRAWPARAMS">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="himl">
        <type>HIMAGELIST</type>
      </field>
      <field offset="8" name="i">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="12" name="hdcDst">
        <type>HDC</type>
      </field>
      <field offset="16" name="x">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="y">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="24" name="cx">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="28" name="cy">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="32" name="xBitmap">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="36" name="yBitmap">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="40" name="rgbBk">
        <type>COLORREF</type>
      </field>
      <field offset="44" name="rgbFg">
        <type>COLORREF</type>
      </field>
      <field offset="48" name="fStyle">
        <type>UINT</type>
      </field>
      <field offset="52" name="dwRop">
        <type>DWORD</type>
      </field>
      <field offset="56" name="fState">
        <type>DWORD</type>
      </field>
      <field offset="60" name="Frame">
        <type>DWORD</type>
      </field>
      <field offset="64" name="crEffect">
        <type>COLORREF</type>
      </field>
    </struct>
    <typedef name="IMAGELISTDRAWPARAMS">
      <struct name="_IMAGELISTDRAWPARAMS" />
    </typedef>
    <typedef name="LPIMAGELISTDRAWPARAMS">
      <ptr>
        <struct name="_IMAGELISTDRAWPARAMS" />
      </ptr>
    </typedef>
    <struct name="_IMAGEINFO">
      <field offset="0" name="hbmImage">
        <type>HBITMAP</type>
      </field>
      <field offset="4" name="hbmMask">
        <type>HBITMAP</type>
      </field>
      <field offset="8" name="Unused1">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="12" name="Unused2">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="rcImage">
        <type>RECT</type>
      </field>
    </struct>
    <typedef name="IMAGEINFO">
      <struct name="_IMAGEINFO" />
    </typedef>
    <typedef name="LPIMAGEINFO">
      <ptr>
        <struct name="_IMAGEINFO" />
      </ptr>
    </typedef>
    <struct name="_HD_TEXTFILTERA">
      <field offset="0" name="pszText">
        <type>LPSTR</type>
      </field>
      <field offset="4" name="cchTextMax">
        <type>INT</type>
      </field>
    </struct>
    <typedef name="HD_TEXTFILTERA">
      <struct name="_HD_TEXTFILTERA" />
    </typedef>
    <typedef name="LPHD_TEXTFILTERA">
      <ptr>
        <struct name="_HD_TEXTFILTERA" />
      </ptr>
    </typedef>
    <struct name="_HD_TEXTFILTERW">
      <field offset="0" name="pszText">
        <type>LPWSTR</type>
      </field>
      <field offset="4" name="cchTextMax">
        <type>INT</type>
      </field>
    </struct>
    <typedef name="HD_TEXTFILTERW">
      <struct name="_HD_TEXTFILTERW" />
    </typedef>
    <typedef name="LPHD_TEXTFILTERW">
      <ptr>
        <struct name="_HD_TEXTFILTERW" />
      </ptr>
    </typedef>
    <struct name="_HD_ITEMA">
      <field offset="0" name="mask">
        <type>UINT</type>
      </field>
      <field offset="4" name="cxy">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="pszText">
        <type>LPSTR</type>
      </field>
      <field offset="12" name="hbm">
        <type>HBITMAP</type>
      </field>
      <field offset="16" name="cchTextMax">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="fmt">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="24" name="lParam">
        <type>LPARAM</type>
      </field>
      <field offset="28" name="iImage">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="32" name="iOrder">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="36" name="type">
        <type>UINT</type>
      </field>
      <field offset="40" name="pvFilter">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="44" name="state">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="HDITEMA">
      <struct name="_HD_ITEMA" />
    </typedef>
    <typedef name="LPHDITEMA">
      <ptr>
        <struct name="_HD_ITEMA" />
      </ptr>
    </typedef>
    <struct name="_HD_ITEMW">
      <field offset="0" name="mask">
        <type>UINT</type>
      </field>
      <field offset="4" name="cxy">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="pszText">
        <type>LPWSTR</type>
      </field>
      <field offset="12" name="hbm">
        <type>HBITMAP</type>
      </field>
      <field offset="16" name="cchTextMax">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="fmt">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="24" name="lParam">
        <type>LPARAM</type>
      </field>
      <field offset="28" name="iImage">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="32" name="iOrder">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="36" name="type">
        <type>UINT</type>
      </field>
      <field offset="40" name="pvFilter">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="44" name="state">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="HDITEMW">
      <struct name="_HD_ITEMW" />
    </typedef>
    <typedef name="LPHDITEMW">
      <ptr>
        <struct name="_HD_ITEMW" />
      </ptr>
    </typedef>
    <struct name="_HD_LAYOUT">
      <field offset="0" name="prc">
        <ptr>
          <type>RECT</type>
        </ptr>
      </field>
      <field offset="4" name="pwpos">
        <ptr>
          <type>WINDOWPOS</type>
        </ptr>
      </field>
    </struct>
    <typedef name="HDLAYOUT">
      <struct name="_HD_LAYOUT" />
    </typedef>
    <typedef name="LPHDLAYOUT">
      <ptr>
        <struct name="_HD_LAYOUT" />
      </ptr>
    </typedef>
    <struct name="_HD_HITTESTINFO">
      <field offset="0" name="pt">
        <type>POINT</type>
      </field>
      <field offset="8" name="flags">
        <type>UINT</type>
      </field>
      <field offset="12" name="iItem">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="HDHITTESTINFO">
      <struct name="_HD_HITTESTINFO" />
    </typedef>
    <typedef name="LPHDHITTESTINFO">
      <ptr>
        <struct name="_HD_HITTESTINFO" />
      </ptr>
    </typedef>
    <struct name="tagNMHEADERA">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="iItem">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="iButton">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="pitem">
        <ptr>
          <type>HDITEMA</type>
        </ptr>
      </field>
    </struct>
    <typedef name="NMHEADERA">
      <struct name="tagNMHEADERA" />
    </typedef>
    <typedef name="LPNMHEADERA">
      <ptr>
        <struct name="tagNMHEADERA" />
      </ptr>
    </typedef>
    <struct name="tagNMHEADERW">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="iItem">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="iButton">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="pitem">
        <ptr>
          <type>HDITEMW</type>
        </ptr>
      </field>
    </struct>
    <typedef name="NMHEADERW">
      <struct name="tagNMHEADERW" />
    </typedef>
    <typedef name="LPNMHEADERW">
      <ptr>
        <struct name="tagNMHEADERW" />
      </ptr>
    </typedef>
    <struct name="tagNMHDDISPINFOW">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="iItem">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="mask">
        <type>UINT</type>
      </field>
      <field offset="20" name="pszText">
        <type>LPWSTR</type>
      </field>
      <field offset="24" name="cchTextMax">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="28" name="iImage">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="32" name="lParam">
        <type>LPARAM</type>
      </field>
    </struct>
    <typedef name="NMHDDISPINFOW">
      <struct name="tagNMHDDISPINFOW" />
    </typedef>
    <typedef name="LPNMHDDISPINFOW">
      <ptr>
        <struct name="tagNMHDDISPINFOW" />
      </ptr>
    </typedef>
    <struct name="tagNMHDDISPINFOA">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="iItem">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="mask">
        <type>UINT</type>
      </field>
      <field offset="20" name="pszText">
        <type>LPSTR</type>
      </field>
      <field offset="24" name="cchTextMax">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="28" name="iImage">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="32" name="lParam">
        <type>LPARAM</type>
      </field>
    </struct>
    <typedef name="NMHDDISPINFOA">
      <struct name="tagNMHDDISPINFOA" />
    </typedef>
    <typedef name="LPNMHDDISPINFOA">
      <ptr>
        <struct name="tagNMHDDISPINFOA" />
      </ptr>
    </typedef>
    <struct name="tagNMHDFILTERBTNCLICK">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="iItem">
        <type>INT</type>
      </field>
      <field offset="16" name="rc">
        <type>RECT</type>
      </field>
    </struct>
    <typedef name="NMHDFILTERBTNCLICK">
      <struct name="tagNMHDFILTERBTNCLICK" />
    </typedef>
    <typedef name="LPNMHDFILTERBTNCLICK">
      <ptr>
        <struct name="tagNMHDFILTERBTNCLICK" />
      </ptr>
    </typedef>
    <struct name="_TBBUTTON">
      <field offset="0" name="iBitmap">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="4" name="idCommand">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="fsState">
        <type>BYTE</type>
      </field>
      <field offset="9" name="fsStyle">
        <type>BYTE</type>
      </field>
      <field offset="10" name="bReserved">
        <arr length="2">
          <type>BYTE</type>
        </arr>
      </field>
      <field offset="12" name="dwData">
        <type>DWORD_PTR</type>
      </field>
      <field offset="16" name="iString">
        <type>INT_PTR</type>
      </field>
    </struct>
    <typedef name="TBBUTTON">
      <struct name="_TBBUTTON" />
    </typedef>
    <typedef name="PTBBUTTON">
      <ptr>
        <struct name="_TBBUTTON" />
      </ptr>
    </typedef>
    <typedef name="LPTBBUTTON">
      <ptr>
        <struct name="_TBBUTTON" />
      </ptr>
    </typedef>
    <typedef name="LPCTBBUTTON">
      <ptr>
        <type>TBBUTTON</type>
      </ptr>
    </typedef>
    <struct name="_COLORMAP">
      <field offset="0" name="from">
        <type>COLORREF</type>
      </field>
      <field offset="4" name="to">
        <type>COLORREF</type>
      </field>
    </struct>
    <typedef name="COLORMAP">
      <struct name="_COLORMAP" />
    </typedef>
    <typedef name="LPCOLORMAP">
      <ptr>
        <struct name="_COLORMAP" />
      </ptr>
    </typedef>
    <struct name="_NMTBCUSTOMDRAW">
      <field offset="0" name="nmcd">
        <type>NMCUSTOMDRAW</type>
      </field>
      <field offset="48" name="hbrMonoDither">
        <type>HBRUSH</type>
      </field>
      <field offset="52" name="hbrLines">
        <type>HBRUSH</type>
      </field>
      <field offset="56" name="hpenLines">
        <type>HPEN</type>
      </field>
      <field offset="60" name="clrText">
        <type>COLORREF</type>
      </field>
      <field offset="64" name="clrMark">
        <type>COLORREF</type>
      </field>
      <field offset="68" name="clrTextHighlight">
        <type>COLORREF</type>
      </field>
      <field offset="72" name="clrBtnFace">
        <type>COLORREF</type>
      </field>
      <field offset="76" name="clrBtnHighlight">
        <type>COLORREF</type>
      </field>
      <field offset="80" name="clrHighlightHotTrack">
        <type>COLORREF</type>
      </field>
      <field offset="88" name="rcText">
        <type>RECT</type>
      </field>
      <field offset="104" name="nStringBkMode">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="108" name="nHLStringBkMode">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="112" name="iListGap">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="NMTBCUSTOMDRAW">
      <struct name="_NMTBCUSTOMDRAW" />
    </typedef>
    <typedef name="LPNMTBCUSTOMDRAW">
      <ptr>
        <struct name="_NMTBCUSTOMDRAW" />
      </ptr>
    </typedef>
    <struct name="tagTBADDBITMAP">
      <field offset="0" name="hInst">
        <type>HINSTANCE</type>
      </field>
      <field offset="4" name="nID">
        <type>UINT_PTR</type>
      </field>
    </struct>
    <typedef name="TBADDBITMAP">
      <struct name="tagTBADDBITMAP" />
    </typedef>
    <typedef name="LPTBADDBITMAP">
      <ptr>
        <struct name="tagTBADDBITMAP" />
      </ptr>
    </typedef>
    <struct name="tagTBSAVEPARAMSA">
      <field offset="0" name="hkr">
        <type>HKEY</type>
      </field>
      <field offset="4" name="pszSubKey">
        <type>LPCSTR</type>
      </field>
      <field offset="8" name="pszValueName">
        <type>LPCSTR</type>
      </field>
    </struct>
    <typedef name="TBSAVEPARAMSA">
      <struct name="tagTBSAVEPARAMSA" />
    </typedef>
    <typedef name="LPTBSAVEPARAMSA">
      <ptr>
        <struct name="tagTBSAVEPARAMSA" />
      </ptr>
    </typedef>
    <struct name="tagTBSAVEPARAMSW">
      <field offset="0" name="hkr">
        <type>HKEY</type>
      </field>
      <field offset="4" name="pszSubKey">
        <type>LPCWSTR</type>
      </field>
      <field offset="8" name="pszValueName">
        <type>LPCWSTR</type>
      </field>
    </struct>
    <typedef name="TBSAVEPARAMSW">
      <struct name="tagTBSAVEPARAMSW" />
    </typedef>
    <typedef name="LPTBSAVEPARAMW">
      <ptr>
        <struct name="tagTBSAVEPARAMSW" />
      </ptr>
    </typedef>
    <struct name="struct_182">
      <field offset="0" name="iButton">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="TBINSERTMARK">
      <struct name="struct_182" />
    </typedef>
    <typedef name="LPTBINSERTMARK">
      <ptr>
        <struct name="struct_182" />
      </ptr>
    </typedef>
    <struct name="struct_183">
      <field offset="0" name="hInstOld">
        <type>HINSTANCE</type>
      </field>
      <field offset="4" name="nIDOld">
        <type>UINT_PTR</type>
      </field>
      <field offset="8" name="hInstNew">
        <type>HINSTANCE</type>
      </field>
      <field offset="12" name="nIDNew">
        <type>UINT_PTR</type>
      </field>
      <field offset="16" name="nButtons">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="TBREPLACEBITMAP">
      <struct name="struct_183" />
    </typedef>
    <typedef name="LPTBREPLACEBITMAP">
      <ptr>
        <struct name="struct_183" />
      </ptr>
    </typedef>
    <struct name="struct_184">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="dwMask">
        <type>DWORD</type>
      </field>
      <field offset="8" name="idCommand">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="12" name="iImage">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="fsState">
        <type>BYTE</type>
      </field>
      <field offset="17" name="fsStyle">
        <type>BYTE</type>
      </field>
      <field offset="18" name="cx">
        <type>WORD</type>
      </field>
      <field offset="20" name="lParam">
        <type>DWORD_PTR</type>
      </field>
      <field offset="24" name="pszText">
        <type>LPSTR</type>
      </field>
      <field offset="28" name="cchText">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="TBBUTTONINFOA">
      <struct name="struct_184" />
    </typedef>
    <typedef name="LPTBBUTTONINFOA">
      <ptr>
        <struct name="struct_184" />
      </ptr>
    </typedef>
    <struct name="struct_185">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="dwMask">
        <type>DWORD</type>
      </field>
      <field offset="8" name="idCommand">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="12" name="iImage">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="fsState">
        <type>BYTE</type>
      </field>
      <field offset="17" name="fsStyle">
        <type>BYTE</type>
      </field>
      <field offset="18" name="cx">
        <type>WORD</type>
      </field>
      <field offset="20" name="lParam">
        <type>DWORD_PTR</type>
      </field>
      <field offset="24" name="pszText">
        <type>LPWSTR</type>
      </field>
      <field offset="28" name="cchText">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="TBBUTTONINFOW">
      <struct name="struct_185" />
    </typedef>
    <typedef name="LPTBBUTTONINFOW">
      <ptr>
        <struct name="struct_185" />
      </ptr>
    </typedef>
    <struct name="struct_186">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="dwMask">
        <type>DWORD</type>
      </field>
      <field offset="8" name="cxPad">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="12" name="cyPad">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="cxBarPad">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="cyBarPad">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="24" name="cxButtonSpacing">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="28" name="cyButtonSpacing">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="TBMETRICS">
      <struct name="struct_186" />
    </typedef>
    <typedef name="LPTBMETRICS">
      <ptr>
        <struct name="struct_186" />
      </ptr>
    </typedef>
    <struct name="tagNMTBHOTITEM">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="idOld">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="idNew">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="dwFlags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="NMTBHOTITEM">
      <struct name="tagNMTBHOTITEM" />
    </typedef>
    <typedef name="LPNMTBHOTITEM">
      <ptr>
        <struct name="tagNMTBHOTITEM" />
      </ptr>
    </typedef>
    <struct name="tagNMTBSAVE">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="pData">
        <ptr>
          <type>DWORD</type>
        </ptr>
      </field>
      <field offset="16" name="pCurrent">
        <ptr>
          <type>DWORD</type>
        </ptr>
      </field>
      <field offset="20" name="cbData">
        <type>UINT</type>
      </field>
      <field offset="24" name="iItem">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="28" name="cButtons">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="32" name="tbButton">
        <type>TBBUTTON</type>
      </field>
    </struct>
    <typedef name="NMTBSAVE">
      <struct name="tagNMTBSAVE" />
    </typedef>
    <typedef name="LPNMTBSAVE">
      <ptr>
        <struct name="tagNMTBSAVE" />
      </ptr>
    </typedef>
    <struct name="tagNMTBRESTORE">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="pData">
        <ptr>
          <type>DWORD</type>
        </ptr>
      </field>
      <field offset="16" name="pCurrent">
        <ptr>
          <type>DWORD</type>
        </ptr>
      </field>
      <field offset="20" name="cbData">
        <type>UINT</type>
      </field>
      <field offset="24" name="iItem">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="28" name="cButtons">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="32" name="cbBytesPerRecord">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="40" name="tbButton">
        <type>TBBUTTON</type>
      </field>
    </struct>
    <typedef name="NMTBRESTORE">
      <struct name="tagNMTBRESTORE" />
    </typedef>
    <typedef name="LPNMTBRESTORE">
      <ptr>
        <struct name="tagNMTBRESTORE" />
      </ptr>
    </typedef>
    <struct name="tagNMTBGETINFOTIPA">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="pszText">
        <type>LPSTR</type>
      </field>
      <field offset="16" name="cchTextMax">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="iItem">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="24" name="lParam">
        <type>LPARAM</type>
      </field>
    </struct>
    <typedef name="NMTBGETINFOTIPA">
      <struct name="tagNMTBGETINFOTIPA" />
    </typedef>
    <typedef name="LPNMTBGETINFOTIPA">
      <ptr>
        <struct name="tagNMTBGETINFOTIPA" />
      </ptr>
    </typedef>
    <struct name="tagNMTBGETINFOTIPW">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="pszText">
        <type>LPWSTR</type>
      </field>
      <field offset="16" name="cchTextMax">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="iItem">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="24" name="lParam">
        <type>LPARAM</type>
      </field>
    </struct>
    <typedef name="NMTBGETINFOTIPW">
      <struct name="tagNMTBGETINFOTIPW" />
    </typedef>
    <typedef name="LPNMTBGETINFOTIPW">
      <ptr>
        <struct name="tagNMTBGETINFOTIPW" />
      </ptr>
    </typedef>
    <struct name="struct_187">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="dwMask">
        <type>DWORD</type>
      </field>
      <field offset="16" name="idCommand">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="lParam">
        <type>DWORD_PTR</type>
      </field>
      <field offset="24" name="iImage">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="28" name="pszText">
        <type>LPSTR</type>
      </field>
      <field offset="32" name="cchText">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="NMTBDISPINFOA">
      <struct name="struct_187" />
    </typedef>
    <typedef name="LPNMTBDISPINFOA">
      <ptr>
        <struct name="struct_187" />
      </ptr>
    </typedef>
    <struct name="struct_188">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="dwMask">
        <type>DWORD</type>
      </field>
      <field offset="16" name="idCommand">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="lParam">
        <type>DWORD_PTR</type>
      </field>
      <field offset="24" name="iImage">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="28" name="pszText">
        <type>LPWSTR</type>
      </field>
      <field offset="32" name="cchText">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="NMTBDISPINFOW">
      <struct name="struct_188" />
    </typedef>
    <typedef name="LPNMTBDISPINFOW">
      <ptr>
        <struct name="struct_188" />
      </ptr>
    </typedef>
    <struct name="tagNMTOOLBARA">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="iItem">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="tbButton">
        <type>TBBUTTON</type>
      </field>
      <field offset="36" name="cchText">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="40" name="pszText">
        <type>LPSTR</type>
      </field>
      <field offset="48" name="rcButton">
        <type>RECT</type>
      </field>
    </struct>
    <typedef name="NMTOOLBARA">
      <struct name="tagNMTOOLBARA" />
    </typedef>
    <typedef name="LPNMTOOLBARA">
      <ptr>
        <struct name="tagNMTOOLBARA" />
      </ptr>
    </typedef>
    <struct name="tagNMTOOLBARW">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="iItem">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="tbButton">
        <type>TBBUTTON</type>
      </field>
      <field offset="36" name="cchText">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="40" name="pszText">
        <type>LPWSTR</type>
      </field>
      <field offset="48" name="rcButton">
        <type>RECT</type>
      </field>
    </struct>
    <typedef name="NMTOOLBARW">
      <struct name="tagNMTOOLBARW" />
    </typedef>
    <typedef name="LPNMTOOLBARW">
      <ptr>
        <struct name="tagNMTOOLBARW" />
      </ptr>
    </typedef>
    <struct name="tagREBARINFO">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="fMask">
        <type>UINT</type>
      </field>
      <field offset="8" name="himl">
        <type>HIMAGELIST</type>
      </field>
    </struct>
    <typedef name="REBARINFO">
      <struct name="tagREBARINFO" />
    </typedef>
    <typedef name="LPREBARINFO">
      <ptr>
        <struct name="tagREBARINFO" />
      </ptr>
    </typedef>
    <struct name="tagREBARBANDINFOA">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="fMask">
        <type>UINT</type>
      </field>
      <field offset="8" name="fStyle">
        <type>UINT</type>
      </field>
      <field offset="12" name="clrFore">
        <type>COLORREF</type>
      </field>
      <field offset="16" name="clrBack">
        <type>COLORREF</type>
      </field>
      <field offset="20" name="lpText">
        <type>LPSTR</type>
      </field>
      <field offset="24" name="cch">
        <type>UINT</type>
      </field>
      <field offset="28" name="iImage">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="32" name="hwndChild">
        <type>HWND</type>
      </field>
      <field offset="36" name="cxMinChild">
        <type>UINT</type>
      </field>
      <field offset="40" name="cyMinChild">
        <type>UINT</type>
      </field>
      <field offset="44" name="cx">
        <type>UINT</type>
      </field>
      <field offset="48" name="hbmBack">
        <type>HBITMAP</type>
      </field>
      <field offset="52" name="wID">
        <type>UINT</type>
      </field>
      <field offset="56" name="cyChild">
        <type>UINT</type>
      </field>
      <field offset="60" name="cyMaxChild">
        <type>UINT</type>
      </field>
      <field offset="64" name="cyIntegral">
        <type>UINT</type>
      </field>
      <field offset="68" name="cxIdeal">
        <type>UINT</type>
      </field>
      <field offset="72" name="lParam">
        <type>LPARAM</type>
      </field>
      <field offset="76" name="cxHeader">
        <type>UINT</type>
      </field>
      <field offset="80" name="rcChevronLocation">
        <type>RECT</type>
      </field>
      <field offset="96" name="uChevronState">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="REBARBANDINFOA">
      <struct name="tagREBARBANDINFOA" />
    </typedef>
    <typedef name="LPREBARBANDINFOA">
      <ptr>
        <struct name="tagREBARBANDINFOA" />
      </ptr>
    </typedef>
    <typedef name="LPCREBARBANDINFOA">
      <ptr>
        <type>REBARBANDINFOA</type>
      </ptr>
    </typedef>
    <struct name="tagREBARBANDINFOW">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="fMask">
        <type>UINT</type>
      </field>
      <field offset="8" name="fStyle">
        <type>UINT</type>
      </field>
      <field offset="12" name="clrFore">
        <type>COLORREF</type>
      </field>
      <field offset="16" name="clrBack">
        <type>COLORREF</type>
      </field>
      <field offset="20" name="lpText">
        <type>LPWSTR</type>
      </field>
      <field offset="24" name="cch">
        <type>UINT</type>
      </field>
      <field offset="28" name="iImage">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="32" name="hwndChild">
        <type>HWND</type>
      </field>
      <field offset="36" name="cxMinChild">
        <type>UINT</type>
      </field>
      <field offset="40" name="cyMinChild">
        <type>UINT</type>
      </field>
      <field offset="44" name="cx">
        <type>UINT</type>
      </field>
      <field offset="48" name="hbmBack">
        <type>HBITMAP</type>
      </field>
      <field offset="52" name="wID">
        <type>UINT</type>
      </field>
      <field offset="56" name="cyChild">
        <type>UINT</type>
      </field>
      <field offset="60" name="cyMaxChild">
        <type>UINT</type>
      </field>
      <field offset="64" name="cyIntegral">
        <type>UINT</type>
      </field>
      <field offset="68" name="cxIdeal">
        <type>UINT</type>
      </field>
      <field offset="72" name="lParam">
        <type>LPARAM</type>
      </field>
      <field offset="76" name="cxHeader">
        <type>UINT</type>
      </field>
      <field offset="80" name="rcChevronLocation">
        <type>RECT</type>
      </field>
      <field offset="96" name="uChevronState">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="REBARBANDINFOW">
      <struct name="tagREBARBANDINFOW" />
    </typedef>
    <typedef name="LPREBARBANDINFOW">
      <ptr>
        <struct name="tagREBARBANDINFOW" />
      </ptr>
    </typedef>
    <typedef name="LPCREBARBANDINFOW">
      <ptr>
        <type>REBARBANDINFOW</type>
      </ptr>
    </typedef>
    <struct name="tagNMREBARCHILDSIZE">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="uBand">
        <type>UINT</type>
      </field>
      <field offset="16" name="wID">
        <type>UINT</type>
      </field>
      <field offset="24" name="rcChild">
        <type>RECT</type>
      </field>
      <field offset="40" name="rcBand">
        <type>RECT</type>
      </field>
    </struct>
    <typedef name="NMREBARCHILDSIZE">
      <struct name="tagNMREBARCHILDSIZE" />
    </typedef>
    <typedef name="LPNMREBARCHILDSIZE">
      <ptr>
        <struct name="tagNMREBARCHILDSIZE" />
      </ptr>
    </typedef>
    <struct name="tagNMREBAR">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="dwMask">
        <type>DWORD</type>
      </field>
      <field offset="16" name="uBand">
        <type>UINT</type>
      </field>
      <field offset="20" name="fStyle">
        <type>UINT</type>
      </field>
      <field offset="24" name="wID">
        <type>UINT</type>
      </field>
      <field offset="28" name="lParam">
        <type>LPARAM</type>
      </field>
    </struct>
    <typedef name="NMREBAR">
      <struct name="tagNMREBAR" />
    </typedef>
    <typedef name="LPNMREBAR">
      <ptr>
        <struct name="tagNMREBAR" />
      </ptr>
    </typedef>
    <struct name="tagNMRBAUTOSIZE">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="fChanged">
        <type>BOOL</type>
      </field>
      <field offset="16" name="rcTarget">
        <type>RECT</type>
      </field>
      <field offset="32" name="rcActual">
        <type>RECT</type>
      </field>
    </struct>
    <typedef name="NMRBAUTOSIZE">
      <struct name="tagNMRBAUTOSIZE" />
    </typedef>
    <typedef name="LPNMRBAUTOSIZE">
      <ptr>
        <struct name="tagNMRBAUTOSIZE" />
      </ptr>
    </typedef>
    <struct name="tagNMREBARCHEVRON">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="uBand">
        <type>UINT</type>
      </field>
      <field offset="16" name="wID">
        <type>UINT</type>
      </field>
      <field offset="20" name="lParam">
        <type>LPARAM</type>
      </field>
      <field offset="24" name="rc">
        <type>RECT</type>
      </field>
      <field offset="40" name="lParamNM">
        <type>LPARAM</type>
      </field>
    </struct>
    <typedef name="NMREBARCHEVRON">
      <struct name="tagNMREBARCHEVRON" />
    </typedef>
    <typedef name="LPNMREBARCHEVRON">
      <ptr>
        <struct name="tagNMREBARCHEVRON" />
      </ptr>
    </typedef>
    <struct name="tagNMREBARSPLITTER">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="16" name="rcSizing">
        <type>RECT</type>
      </field>
    </struct>
    <typedef name="NMREBARSPLITTER">
      <struct name="tagNMREBARSPLITTER" />
    </typedef>
    <typedef name="LPNMREBARSPLITTER">
      <ptr>
        <struct name="tagNMREBARSPLITTER" />
      </ptr>
    </typedef>
    <struct name="tagNMREBARAUTOBREAK">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="uBand">
        <type>UINT</type>
      </field>
      <field offset="16" name="wID">
        <type>UINT</type>
      </field>
      <field offset="20" name="lParam">
        <type>LPARAM</type>
      </field>
      <field offset="24" name="uMsg">
        <type>UINT</type>
      </field>
      <field offset="28" name="fStyleCurrent">
        <type>UINT</type>
      </field>
      <field offset="32" name="fAutoBreak">
        <type>BOOL</type>
      </field>
    </struct>
    <typedef name="NMREBARAUTOBREAK">
      <struct name="tagNMREBARAUTOBREAK" />
    </typedef>
    <typedef name="LPNMREBARAUTOBREAK">
      <ptr>
        <struct name="tagNMREBARAUTOBREAK" />
      </ptr>
    </typedef>
    <struct name="_RB_HITTESTINFO">
      <field offset="0" name="pt">
        <type>POINT</type>
      </field>
      <field offset="8" name="flags">
        <type>UINT</type>
      </field>
      <field offset="12" name="iBand">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="RBHITTESTINFO">
      <struct name="_RB_HITTESTINFO" />
    </typedef>
    <typedef name="LPRBHITTESTINFO">
      <ptr>
        <struct name="_RB_HITTESTINFO" />
      </ptr>
    </typedef>
    <struct name="tagTOOLINFOA">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="uFlags">
        <type>UINT</type>
      </field>
      <field offset="8" name="hwnd">
        <type>HWND</type>
      </field>
      <field offset="12" name="uId">
        <type>UINT_PTR</type>
      </field>
      <field offset="16" name="rect">
        <type>RECT</type>
      </field>
      <field offset="32" name="hinst">
        <type>HINSTANCE</type>
      </field>
      <field offset="36" name="lpszText">
        <type>LPSTR</type>
      </field>
      <field offset="40" name="lParam">
        <type>LPARAM</type>
      </field>
      <field offset="44" name="lpReserved">
        <ptr>
          <void />
        </ptr>
      </field>
    </struct>
    <typedef name="TTTOOLINFOA">
      <struct name="tagTOOLINFOA" />
    </typedef>
    <typedef name="PTOOLINFOA">
      <ptr>
        <struct name="tagTOOLINFOA" />
      </ptr>
    </typedef>
    <typedef name="LPTTTOOLINFOA">
      <ptr>
        <struct name="tagTOOLINFOA" />
      </ptr>
    </typedef>
    <struct name="tagTOOLINFOW">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="uFlags">
        <type>UINT</type>
      </field>
      <field offset="8" name="hwnd">
        <type>HWND</type>
      </field>
      <field offset="12" name="uId">
        <type>UINT_PTR</type>
      </field>
      <field offset="16" name="rect">
        <type>RECT</type>
      </field>
      <field offset="32" name="hinst">
        <type>HINSTANCE</type>
      </field>
      <field offset="36" name="lpszText">
        <type>LPWSTR</type>
      </field>
      <field offset="40" name="lParam">
        <type>LPARAM</type>
      </field>
      <field offset="44" name="lpReserved">
        <ptr>
          <void />
        </ptr>
      </field>
    </struct>
    <typedef name="TTTOOLINFOW">
      <struct name="tagTOOLINFOW" />
    </typedef>
    <typedef name="PTOOLINFOW">
      <ptr>
        <struct name="tagTOOLINFOW" />
      </ptr>
    </typedef>
    <typedef name="LPTTTOOLINFOW">
      <ptr>
        <struct name="tagTOOLINFOW" />
      </ptr>
    </typedef>
    <struct name="_TTGETTITLE">
      <field offset="0" name="dwSize">
        <type>DWORD</type>
      </field>
      <field offset="4" name="uTitleBitmap">
        <type>UINT</type>
      </field>
      <field offset="8" name="cch">
        <type>UINT</type>
      </field>
      <field offset="12" name="pszTitle">
        <ptr>
          <type>WCHAR</type>
        </ptr>
      </field>
    </struct>
    <typedef name="TTGETTITLE">
      <struct name="_TTGETTITLE" />
    </typedef>
    <typedef name="PTTGETTITLE">
      <ptr>
        <struct name="_TTGETTITLE" />
      </ptr>
    </typedef>
    <struct name="_TT_HITTESTINFOA">
      <field offset="0" name="hwnd">
        <type>HWND</type>
      </field>
      <field offset="8" name="pt">
        <type>POINT</type>
      </field>
      <field offset="16" name="ti">
        <type>TTTOOLINFOA</type>
      </field>
    </struct>
    <typedef name="TTHITTESTINFOA">
      <struct name="_TT_HITTESTINFOA" />
    </typedef>
    <typedef name="LPTTHITTESTINFOA">
      <ptr>
        <struct name="_TT_HITTESTINFOA" />
      </ptr>
    </typedef>
    <struct name="_TT_HITTESTINFOW">
      <field offset="0" name="hwnd">
        <type>HWND</type>
      </field>
      <field offset="8" name="pt">
        <type>POINT</type>
      </field>
      <field offset="16" name="ti">
        <type>TTTOOLINFOW</type>
      </field>
    </struct>
    <typedef name="TTHITTESTINFOW">
      <struct name="_TT_HITTESTINFOW" />
    </typedef>
    <typedef name="LPTTHITTESTINFOW">
      <ptr>
        <struct name="_TT_HITTESTINFOW" />
      </ptr>
    </typedef>
    <struct name="tagNMTTDISPINFOA">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="lpszText">
        <type>LPSTR</type>
      </field>
      <field offset="16" name="szText">
        <arr length="80">
          <prim domain="Character" size="1" />
        </arr>
      </field>
      <field offset="96" name="hinst">
        <type>HINSTANCE</type>
      </field>
      <field offset="100" name="uFlags">
        <type>UINT</type>
      </field>
      <field offset="104" name="lParam">
        <type>LPARAM</type>
      </field>
    </struct>
    <typedef name="NMTTDISPINFOA">
      <struct name="tagNMTTDISPINFOA" />
    </typedef>
    <typedef name="LPNMTTDISPINFOA">
      <ptr>
        <struct name="tagNMTTDISPINFOA" />
      </ptr>
    </typedef>
    <struct name="tagNMTTDISPINFOW">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="lpszText">
        <type>LPWSTR</type>
      </field>
      <field offset="16" name="szText">
        <arr length="80">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="176" name="hinst">
        <type>HINSTANCE</type>
      </field>
      <field offset="180" name="uFlags">
        <type>UINT</type>
      </field>
      <field offset="184" name="lParam">
        <type>LPARAM</type>
      </field>
    </struct>
    <typedef name="NMTTDISPINFOW">
      <struct name="tagNMTTDISPINFOW" />
    </typedef>
    <typedef name="LPNMTTDISPINFOW">
      <ptr>
        <struct name="tagNMTTDISPINFOW" />
      </ptr>
    </typedef>
    <struct name="tagTRBTHUMBPOSCHANGING">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="dwPos">
        <type>DWORD</type>
      </field>
      <field offset="16" name="nReason">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="NMTRBTHUMBPOSCHANGING">
      <struct name="tagTRBTHUMBPOSCHANGING" />
    </typedef>
    <struct name="tagDRAGLISTINFO">
      <field offset="0" name="uNotification">
        <type>UINT</type>
      </field>
      <field offset="4" name="hWnd">
        <type>HWND</type>
      </field>
      <field offset="8" name="ptCursor">
        <type>POINT</type>
      </field>
    </struct>
    <typedef name="DRAGLISTINFO">
      <struct name="tagDRAGLISTINFO" />
    </typedef>
    <typedef name="LPDRAGLISTINFO">
      <ptr>
        <struct name="tagDRAGLISTINFO" />
      </ptr>
    </typedef>
    <struct name="_UDACCEL">
      <field offset="0" name="nSec">
        <type>UINT</type>
      </field>
      <field offset="4" name="nInc">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="UDACCEL">
      <struct name="_UDACCEL" />
    </typedef>
    <typedef name="LPUDACCEL">
      <ptr>
        <struct name="_UDACCEL" />
      </ptr>
    </typedef>
    <struct name="_NM_UPDOWN">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="iPos">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="iDelta">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="NMUPDOWN">
      <struct name="_NM_UPDOWN" />
    </typedef>
    <typedef name="LPNMUPDOWN">
      <ptr>
        <struct name="_NM_UPDOWN" />
      </ptr>
    </typedef>
    <struct name="struct_189">
      <field offset="0" name="iLow">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="4" name="iHigh">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="PBRANGE">
      <struct name="struct_189" />
    </typedef>
    <typedef name="PPBRANGE">
      <ptr>
        <struct name="struct_189" />
      </ptr>
    </typedef>
    <struct name="tagLITEM">
      <field offset="0" name="mask">
        <type>UINT</type>
      </field>
      <field offset="4" name="iLink">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="state">
        <type>UINT</type>
      </field>
      <field offset="12" name="stateMask">
        <type>UINT</type>
      </field>
      <field offset="16" name="szID">
        <arr length="48">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="112" name="szUrl">
        <arr length="2084">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="LITEM">
      <struct name="tagLITEM" />
    </typedef>
    <typedef name="PLITEM">
      <ptr>
        <struct name="tagLITEM" />
      </ptr>
    </typedef>
    <struct name="tagLHITTESTINFO">
      <field offset="0" name="pt">
        <type>POINT</type>
      </field>
      <field offset="8" name="item">
        <type>LITEM</type>
      </field>
    </struct>
    <typedef name="LHITTESTINFO">
      <struct name="tagLHITTESTINFO" />
    </typedef>
    <typedef name="PLHITTESTINFO">
      <ptr>
        <struct name="tagLHITTESTINFO" />
      </ptr>
    </typedef>
    <struct name="tagNMLINK">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="16" name="item">
        <type>LITEM</type>
      </field>
    </struct>
    <typedef name="NMLINK">
      <struct name="tagNMLINK" />
    </typedef>
    <typedef name="PNMLINK">
      <ptr>
        <struct name="tagNMLINK" />
      </ptr>
    </typedef>
    <struct name="tagLVITEMA">
      <field offset="0" name="mask">
        <type>UINT</type>
      </field>
      <field offset="4" name="iItem">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="iSubItem">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="12" name="state">
        <type>UINT</type>
      </field>
      <field offset="16" name="stateMask">
        <type>UINT</type>
      </field>
      <field offset="20" name="pszText">
        <type>LPSTR</type>
      </field>
      <field offset="24" name="cchTextMax">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="28" name="iImage">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="32" name="lParam">
        <type>LPARAM</type>
      </field>
      <field offset="36" name="iIndent">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="40" name="iGroupId">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="44" name="cColumns">
        <type>UINT</type>
      </field>
      <field offset="48" name="puColumns">
        <type>PUINT</type>
      </field>
      <field offset="52" name="piColFmt">
        <ptr>
          <prim domain="SignedInt" size="4" />
        </ptr>
      </field>
      <field offset="56" name="iGroup">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="LVITEMA">
      <struct name="tagLVITEMA" />
    </typedef>
    <typedef name="LPLVITEMA">
      <ptr>
        <struct name="tagLVITEMA" />
      </ptr>
    </typedef>
    <struct name="tagLVITEMW">
      <field offset="0" name="mask">
        <type>UINT</type>
      </field>
      <field offset="4" name="iItem">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="iSubItem">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="12" name="state">
        <type>UINT</type>
      </field>
      <field offset="16" name="stateMask">
        <type>UINT</type>
      </field>
      <field offset="20" name="pszText">
        <type>LPWSTR</type>
      </field>
      <field offset="24" name="cchTextMax">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="28" name="iImage">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="32" name="lParam">
        <type>LPARAM</type>
      </field>
      <field offset="36" name="iIndent">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="40" name="iGroupId">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="44" name="cColumns">
        <type>UINT</type>
      </field>
      <field offset="48" name="puColumns">
        <type>PUINT</type>
      </field>
      <field offset="52" name="piColFmt">
        <ptr>
          <prim domain="SignedInt" size="4" />
        </ptr>
      </field>
      <field offset="56" name="iGroup">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="LVITEMW">
      <struct name="tagLVITEMW" />
    </typedef>
    <typedef name="LPLVITEMW">
      <ptr>
        <struct name="tagLVITEMW" />
      </ptr>
    </typedef>
    <struct name="tagLVFINDINFOA">
      <field offset="0" name="flags">
        <type>UINT</type>
      </field>
      <field offset="4" name="psz">
        <type>LPCSTR</type>
      </field>
      <field offset="8" name="lParam">
        <type>LPARAM</type>
      </field>
      <field offset="16" name="pt">
        <type>POINT</type>
      </field>
      <field offset="24" name="vkDirection">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="LVFINDINFOA">
      <struct name="tagLVFINDINFOA" />
    </typedef>
    <typedef name="LPFINDINFOA">
      <ptr>
        <struct name="tagLVFINDINFOA" />
      </ptr>
    </typedef>
    <struct name="tagLVFINDINFOW">
      <field offset="0" name="flags">
        <type>UINT</type>
      </field>
      <field offset="4" name="psz">
        <type>LPCWSTR</type>
      </field>
      <field offset="8" name="lParam">
        <type>LPARAM</type>
      </field>
      <field offset="16" name="pt">
        <type>POINT</type>
      </field>
      <field offset="24" name="vkDirection">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="LVFINDINFOW">
      <struct name="tagLVFINDINFOW" />
    </typedef>
    <typedef name="LPFINDINFOW">
      <ptr>
        <struct name="tagLVFINDINFOW" />
      </ptr>
    </typedef>
    <struct name="tagLVHITTESTINFO">
      <field offset="0" name="pt">
        <type>POINT</type>
      </field>
      <field offset="8" name="flags">
        <type>UINT</type>
      </field>
      <field offset="12" name="iItem">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="iSubItem">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="iGroup">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="LVHITTESTINFO">
      <struct name="tagLVHITTESTINFO" />
    </typedef>
    <typedef name="LPLVHITTESTINFO">
      <ptr>
        <struct name="tagLVHITTESTINFO" />
      </ptr>
    </typedef>
    <struct name="tagLVCOLUMNA">
      <field offset="0" name="mask">
        <type>UINT</type>
      </field>
      <field offset="4" name="fmt">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="cx">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="12" name="pszText">
        <type>LPSTR</type>
      </field>
      <field offset="16" name="cchTextMax">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="iSubItem">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="24" name="iImage">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="28" name="iOrder">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="32" name="cxMin">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="36" name="cxDefault">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="40" name="cxIdeal">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="LVCOLUMNA">
      <struct name="tagLVCOLUMNA" />
    </typedef>
    <typedef name="LPLVCOLUMNA">
      <ptr>
        <struct name="tagLVCOLUMNA" />
      </ptr>
    </typedef>
    <struct name="tagLVCOLUMNW">
      <field offset="0" name="mask">
        <type>UINT</type>
      </field>
      <field offset="4" name="fmt">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="cx">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="12" name="pszText">
        <type>LPWSTR</type>
      </field>
      <field offset="16" name="cchTextMax">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="iSubItem">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="24" name="iImage">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="28" name="iOrder">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="32" name="cxMin">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="36" name="cxDefault">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="40" name="cxIdeal">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="LVCOLUMNW">
      <struct name="tagLVCOLUMNW" />
    </typedef>
    <typedef name="LPLVCOLUMNW">
      <ptr>
        <struct name="tagLVCOLUMNW" />
      </ptr>
    </typedef>
    <typedef name="PFNLVCOMPARE">
      <ptr>
        <fn>
          <return>
            <prim domain="SignedInt" size="4" />
            <reg>eax</reg>
          </return>
          <arg>
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
          <arg>
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="tagLVBKIMAGEA">
      <field offset="0" name="ulFlags">
        <type>ULONG</type>
      </field>
      <field offset="4" name="hbm">
        <type>HBITMAP</type>
      </field>
      <field offset="8" name="pszImage">
        <type>LPSTR</type>
      </field>
      <field offset="12" name="cchImageMax">
        <type>UINT</type>
      </field>
      <field offset="16" name="xOffsetPercent">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="yOffsetPercent">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="LVBKIMAGEA">
      <struct name="tagLVBKIMAGEA" />
    </typedef>
    <typedef name="LPLVBKIMAGEA">
      <ptr>
        <struct name="tagLVBKIMAGEA" />
      </ptr>
    </typedef>
    <struct name="tagLVBKIMAGEW">
      <field offset="0" name="ulFlags">
        <type>ULONG</type>
      </field>
      <field offset="4" name="hbm">
        <type>HBITMAP</type>
      </field>
      <field offset="8" name="pszImage">
        <type>LPWSTR</type>
      </field>
      <field offset="12" name="cchImageMax">
        <type>UINT</type>
      </field>
      <field offset="16" name="xOffsetPercent">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="yOffsetPercent">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="LVBKIMAGEW">
      <struct name="tagLVBKIMAGEW" />
    </typedef>
    <typedef name="LPLVBKIMAGEW">
      <ptr>
        <struct name="tagLVBKIMAGEW" />
      </ptr>
    </typedef>
    <struct name="tagLVGROUP">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="mask">
        <type>UINT</type>
      </field>
      <field offset="8" name="pszHeader">
        <type>LPWSTR</type>
      </field>
      <field offset="12" name="cchHeader">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="pszFooter">
        <type>LPWSTR</type>
      </field>
      <field offset="20" name="cchFooter">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="24" name="iGroupId">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="28" name="stateMask">
        <type>UINT</type>
      </field>
      <field offset="32" name="state">
        <type>UINT</type>
      </field>
      <field offset="36" name="uAlign">
        <type>UINT</type>
      </field>
      <field offset="40" name="pszSubtitle">
        <type>LPWSTR</type>
      </field>
      <field offset="44" name="cchSubtitle">
        <type>UINT</type>
      </field>
      <field offset="48" name="pszTask">
        <type>LPWSTR</type>
      </field>
      <field offset="52" name="cchTask">
        <type>UINT</type>
      </field>
      <field offset="56" name="pszDescriptionTop">
        <type>LPWSTR</type>
      </field>
      <field offset="60" name="cchDescriptionTop">
        <type>UINT</type>
      </field>
      <field offset="64" name="pszDescriptionBottom">
        <type>LPWSTR</type>
      </field>
      <field offset="68" name="cchDescriptionBottom">
        <type>UINT</type>
      </field>
      <field offset="72" name="iTitleImage">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="76" name="iExtendedImage">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="80" name="iFirstItem">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="84" name="cItems">
        <type>UINT</type>
      </field>
      <field offset="88" name="pszSubsetTitle">
        <type>LPWSTR</type>
      </field>
      <field offset="92" name="cchSubsetTitle">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="LVGROUP">
      <struct name="tagLVGROUP" />
    </typedef>
    <typedef name="PLVGROUP">
      <ptr>
        <struct name="tagLVGROUP" />
      </ptr>
    </typedef>
    <struct name="tagLVGROUPMETRICS">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="mask">
        <type>UINT</type>
      </field>
      <field offset="8" name="Left">
        <type>UINT</type>
      </field>
      <field offset="12" name="Top">
        <type>UINT</type>
      </field>
      <field offset="16" name="Right">
        <type>UINT</type>
      </field>
      <field offset="20" name="Bottom">
        <type>UINT</type>
      </field>
      <field offset="24" name="crLeft">
        <type>COLORREF</type>
      </field>
      <field offset="28" name="crTop">
        <type>COLORREF</type>
      </field>
      <field offset="32" name="crRight">
        <type>COLORREF</type>
      </field>
      <field offset="36" name="crBottom">
        <type>COLORREF</type>
      </field>
      <field offset="40" name="crHeader">
        <type>COLORREF</type>
      </field>
      <field offset="44" name="crFooter">
        <type>COLORREF</type>
      </field>
    </struct>
    <typedef name="LVGROUPMETRICS">
      <struct name="tagLVGROUPMETRICS" />
    </typedef>
    <typedef name="PLVGROUPMETRICS">
      <ptr>
        <struct name="tagLVGROUPMETRICS" />
      </ptr>
    </typedef>
    <typedef name="PFNLVGROUPCOMPARE">
      <ptr>
        <fn>
          <return>
            <prim domain="SignedInt" size="4" />
            <reg>eax</reg>
          </return>
          <arg>
            <prim domain="SignedInt" size="4" />
            <stack size="4" />
          </arg>
          <arg>
            <prim domain="SignedInt" size="4" />
            <stack size="4" />
          </arg>
          <arg>
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="tagLVINSERTGROUPSORTED">
      <field offset="0" name="pfnGroupCompare">
        <type>PFNLVGROUPCOMPARE</type>
      </field>
      <field offset="4" name="pvData">
        <ptr>
          <void />
        </ptr>
      </field>
      <field offset="8" name="lvGroup">
        <type>LVGROUP</type>
      </field>
    </struct>
    <typedef name="LVINSERTGROUPSORTED">
      <struct name="tagLVINSERTGROUPSORTED" />
    </typedef>
    <typedef name="PLVINSERTGROUPSORTED">
      <ptr>
        <struct name="tagLVINSERTGROUPSORTED" />
      </ptr>
    </typedef>
    <struct name="tagLVTILEVIEWINFO">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="dwMask">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="16" name="sizeTile">
        <type>SIZE</type>
      </field>
      <field offset="24" name="cLines">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="32" name="rcLabelMargin">
        <type>RECT</type>
      </field>
    </struct>
    <typedef name="LVTILEVIEWINFO">
      <struct name="tagLVTILEVIEWINFO" />
    </typedef>
    <typedef name="PLVTILEVIEWINFO">
      <ptr>
        <struct name="tagLVTILEVIEWINFO" />
      </ptr>
    </typedef>
    <struct name="tagLVTILEINFO">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="iItem">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="cColumns">
        <type>UINT</type>
      </field>
      <field offset="12" name="puColumns">
        <type>PUINT</type>
      </field>
      <field offset="16" name="piColFmt">
        <ptr>
          <prim domain="SignedInt" size="4" />
        </ptr>
      </field>
    </struct>
    <typedef name="LVTILEINFO">
      <struct name="tagLVTILEINFO" />
    </typedef>
    <typedef name="PLVTILEINFO">
      <ptr>
        <struct name="tagLVTILEINFO" />
      </ptr>
    </typedef>
    <struct name="struct_190">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="iItem">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="12" name="dwReserved">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="LVINSERTMARK">
      <struct name="struct_190" />
    </typedef>
    <typedef name="LPLVINSERTMARK">
      <ptr>
        <struct name="struct_190" />
      </ptr>
    </typedef>
    <struct name="tagLVSETINFOTIP">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="8" name="pszText">
        <type>LPWSTR</type>
      </field>
      <field offset="12" name="iItem">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="iSubItem">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="LVSETINFOTIP">
      <struct name="tagLVSETINFOTIP" />
    </typedef>
    <typedef name="PLVSETINFOTIP">
      <ptr>
        <struct name="tagLVSETINFOTIP" />
      </ptr>
    </typedef>
    <struct name="tagLVFOOTERINFO">
      <field offset="0" name="mask">
        <type>UINT</type>
      </field>
      <field offset="4" name="pszText">
        <type>LPWSTR</type>
      </field>
      <field offset="8" name="cchTextMax">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="12" name="cItems">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="LVFOOTERINFO">
      <struct name="tagLVFOOTERINFO" />
    </typedef>
    <typedef name="LPLVFOOTERINFO">
      <ptr>
        <struct name="tagLVFOOTERINFO" />
      </ptr>
    </typedef>
    <struct name="tagLVFOOTERITEM">
      <field offset="0" name="mask">
        <type>UINT</type>
      </field>
      <field offset="4" name="iItem">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="8" name="pszText">
        <type>LPWSTR</type>
      </field>
      <field offset="12" name="cchTextMax">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="state">
        <type>UINT</type>
      </field>
      <field offset="20" name="stateMask">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="LVFOOTERITEM">
      <struct name="tagLVFOOTERITEM" />
    </typedef>
    <typedef name="LPLVFOOTERITEM">
      <ptr>
        <struct name="tagLVFOOTERITEM" />
      </ptr>
    </typedef>
    <struct name="tagLVITEMINDEX">
      <field offset="0" name="iItem">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="4" name="iGroup">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="LVITEMINDEX">
      <struct name="tagLVITEMINDEX" />
    </typedef>
    <typedef name="PLVITEMINDEX">
      <ptr>
        <struct name="tagLVITEMINDEX" />
      </ptr>
    </typedef>
    <struct name="tagNMLISTVIEW">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="iItem">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="iSubItem">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="uNewState">
        <type>UINT</type>
      </field>
      <field offset="24" name="uOldState">
        <type>UINT</type>
      </field>
      <field offset="28" name="uChanged">
        <type>UINT</type>
      </field>
      <field offset="32" name="ptAction">
        <type>POINT</type>
      </field>
      <field offset="40" name="lParam">
        <type>LPARAM</type>
      </field>
    </struct>
    <typedef name="NMLISTVIEW">
      <struct name="tagNMLISTVIEW" />
    </typedef>
    <typedef name="LPNMLISTVIEW">
      <ptr>
        <struct name="tagNMLISTVIEW" />
      </ptr>
    </typedef>
    <struct name="tagNMITEMACTIVATE">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="iItem">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="iSubItem">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="uNewState">
        <type>UINT</type>
      </field>
      <field offset="24" name="uOldState">
        <type>UINT</type>
      </field>
      <field offset="28" name="uChanged">
        <type>UINT</type>
      </field>
      <field offset="32" name="ptAction">
        <type>POINT</type>
      </field>
      <field offset="40" name="lParam">
        <type>LPARAM</type>
      </field>
      <field offset="44" name="uKeyFlags">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="NMITEMACTIVATE">
      <struct name="tagNMITEMACTIVATE" />
    </typedef>
    <typedef name="LPNMITEMACTIVATE">
      <ptr>
        <struct name="tagNMITEMACTIVATE" />
      </ptr>
    </typedef>
    <struct name="tagNMLVCUSTOMDRAW">
      <field offset="0" name="nmcd">
        <type>NMCUSTOMDRAW</type>
      </field>
      <field offset="48" name="clrText">
        <type>COLORREF</type>
      </field>
      <field offset="52" name="clrTextBk">
        <type>COLORREF</type>
      </field>
      <field offset="56" name="iSubItem">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="60" name="dwItemType">
        <type>DWORD</type>
      </field>
      <field offset="64" name="clrFace">
        <type>COLORREF</type>
      </field>
      <field offset="68" name="iIconEffect">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="72" name="iIconPhase">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="76" name="iPartId">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="80" name="iStateId">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="88" name="rcText">
        <type>RECT</type>
      </field>
      <field offset="104" name="uAlign">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="NMLVCUSTOMDRAW">
      <struct name="tagNMLVCUSTOMDRAW" />
    </typedef>
    <typedef name="LPNMLVCUSTOMDRAW">
      <ptr>
        <struct name="tagNMLVCUSTOMDRAW" />
      </ptr>
    </typedef>
    <struct name="tagNMLVCACHEHINT">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="iFrom">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="iTo">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="NMLVCACHEHINT">
      <struct name="tagNMLVCACHEHINT" />
    </typedef>
    <typedef name="LPNMLVCACHEHINT">
      <ptr>
        <struct name="tagNMLVCACHEHINT" />
      </ptr>
    </typedef>
    <struct name="tagNMLVFINDITEMA">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="iStart">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="lvfi">
        <type>LVFINDINFOA</type>
      </field>
    </struct>
    <typedef name="NMLVFINDITEMA">
      <struct name="tagNMLVFINDITEMA" />
    </typedef>
    <typedef name="LPNMLVFINDITEMA">
      <ptr>
        <struct name="tagNMLVFINDITEMA" />
      </ptr>
    </typedef>
    <struct name="tagNMLVFINDITEMW">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="iStart">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="lvfi">
        <type>LVFINDINFOW</type>
      </field>
    </struct>
    <typedef name="NMLVFINDITEMW">
      <struct name="tagNMLVFINDITEMW" />
    </typedef>
    <typedef name="LPNMLVFINDITEMW">
      <ptr>
        <struct name="tagNMLVFINDITEMW" />
      </ptr>
    </typedef>
    <struct name="tagNMLVODSTATECHANGE">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="iFrom">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="iTo">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="uNewState">
        <type>UINT</type>
      </field>
      <field offset="24" name="uOldState">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="NMLVODSTATECHANGE">
      <struct name="tagNMLVODSTATECHANGE" />
    </typedef>
    <typedef name="LPNMLVODSTATECHANGE">
      <ptr>
        <struct name="tagNMLVODSTATECHANGE" />
      </ptr>
    </typedef>
    <struct name="tagLVDISPINFO">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="16" name="item">
        <type>LVITEMA</type>
      </field>
    </struct>
    <typedef name="NMLVDISPINFOA">
      <struct name="tagLVDISPINFO" />
    </typedef>
    <typedef name="LPNMLVDISPINFOA">
      <ptr>
        <struct name="tagLVDISPINFO" />
      </ptr>
    </typedef>
    <struct name="tagLVDISPINFOW">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="16" name="item">
        <type>LVITEMW</type>
      </field>
    </struct>
    <typedef name="NMLVDISPINFOW">
      <struct name="tagLVDISPINFOW" />
    </typedef>
    <typedef name="LPNMLVDISPINFOW">
      <ptr>
        <struct name="tagLVDISPINFOW" />
      </ptr>
    </typedef>
    <struct name="tagLVKEYDOWN">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="wVKey">
        <type>WORD</type>
      </field>
      <field offset="16" name="flags">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="NMLVKEYDOWN">
      <struct name="tagLVKEYDOWN" />
    </typedef>
    <typedef name="LPNMLVKEYDOWN">
      <ptr>
        <struct name="tagLVKEYDOWN" />
      </ptr>
    </typedef>
    <struct name="tagNMLVLINK">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="16" name="link">
        <type>LITEM</type>
      </field>
      <field offset="4296" name="iItem">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="4300" name="iSubItem">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="NMLVLINK">
      <struct name="tagNMLVLINK" />
    </typedef>
    <typedef name="PNMLVLINK">
      <ptr>
        <struct name="tagNMLVLINK" />
      </ptr>
    </typedef>
    <struct name="tagNMLVGETINFOTIPA">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="16" name="pszText">
        <type>LPSTR</type>
      </field>
      <field offset="20" name="cchTextMax">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="24" name="iItem">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="28" name="iSubItem">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="32" name="lParam">
        <type>LPARAM</type>
      </field>
    </struct>
    <typedef name="NMLVGETINFOTIPA">
      <struct name="tagNMLVGETINFOTIPA" />
    </typedef>
    <typedef name="LPNMLVGETINFOTIPA">
      <ptr>
        <struct name="tagNMLVGETINFOTIPA" />
      </ptr>
    </typedef>
    <struct name="tagNMLVGETINFOTIPW">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="16" name="pszText">
        <type>LPWSTR</type>
      </field>
      <field offset="20" name="cchTextMax">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="24" name="iItem">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="28" name="iSubItem">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="32" name="lParam">
        <type>LPARAM</type>
      </field>
    </struct>
    <typedef name="NMLVGETINFOTIPW">
      <struct name="tagNMLVGETINFOTIPW" />
    </typedef>
    <typedef name="LPNMLVGETINFOTIPW">
      <ptr>
        <struct name="tagNMLVGETINFOTIPW" />
      </ptr>
    </typedef>
    <struct name="tagNMLVSCROLL">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="dx">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="dy">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="NMLVSCROLL">
      <struct name="tagNMLVSCROLL" />
    </typedef>
    <typedef name="LPNMLVSCROLL">
      <ptr>
        <struct name="tagNMLVSCROLL" />
      </ptr>
    </typedef>
    <struct name="tagNMLVEMPTYMARKUP">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="16" name="szMarkup">
        <arr length="2084">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="NMLVEMPTYMARKUP">
      <struct name="tagNMLVEMPTYMARKUP" />
    </typedef>
    <typedef name="HTREEITEM">
      <ptr>
        <struct name="_TREEITEM" />
      </ptr>
    </typedef>
    <struct name="tagNMTVSTATEIMAGECHANGING">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="hti">
        <type>HTREEITEM</type>
      </field>
      <field offset="16" name="iOldStateImageIndex">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="iNewStateImageIndex">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="NMTVSTATEIMAGECHANGING">
      <struct name="tagNMTVSTATEIMAGECHANGING" />
    </typedef>
    <typedef name="LPNMTVSTATEIMAGECHANGING">
      <ptr>
        <struct name="tagNMTVSTATEIMAGECHANGING" />
      </ptr>
    </typedef>
    <struct name="tagTVITEMA">
      <field offset="0" name="mask">
        <type>UINT</type>
      </field>
      <field offset="4" name="hItem">
        <type>HTREEITEM</type>
      </field>
      <field offset="8" name="state">
        <type>UINT</type>
      </field>
      <field offset="12" name="stateMask">
        <type>UINT</type>
      </field>
      <field offset="16" name="pszText">
        <type>LPSTR</type>
      </field>
      <field offset="20" name="cchTextMax">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="24" name="iImage">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="28" name="iSelectedImage">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="32" name="cChildren">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="36" name="lParam">
        <type>LPARAM</type>
      </field>
    </struct>
    <typedef name="TVITEMA">
      <struct name="tagTVITEMA" />
    </typedef>
    <typedef name="LPTVITEMA">
      <ptr>
        <struct name="tagTVITEMA" />
      </ptr>
    </typedef>
    <struct name="tagTVITEMW">
      <field offset="0" name="mask">
        <type>UINT</type>
      </field>
      <field offset="4" name="hItem">
        <type>HTREEITEM</type>
      </field>
      <field offset="8" name="state">
        <type>UINT</type>
      </field>
      <field offset="12" name="stateMask">
        <type>UINT</type>
      </field>
      <field offset="16" name="pszText">
        <type>LPWSTR</type>
      </field>
      <field offset="20" name="cchTextMax">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="24" name="iImage">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="28" name="iSelectedImage">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="32" name="cChildren">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="36" name="lParam">
        <type>LPARAM</type>
      </field>
    </struct>
    <typedef name="TVITEMW">
      <struct name="tagTVITEMW" />
    </typedef>
    <typedef name="LPTVITEMW">
      <ptr>
        <struct name="tagTVITEMW" />
      </ptr>
    </typedef>
    <struct name="tagTVITEMEXA">
      <field offset="0" name="mask">
        <type>UINT</type>
      </field>
      <field offset="4" name="hItem">
        <type>HTREEITEM</type>
      </field>
      <field offset="8" name="state">
        <type>UINT</type>
      </field>
      <field offset="12" name="stateMask">
        <type>UINT</type>
      </field>
      <field offset="16" name="pszText">
        <type>LPSTR</type>
      </field>
      <field offset="20" name="cchTextMax">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="24" name="iImage">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="28" name="iSelectedImage">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="32" name="cChildren">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="36" name="lParam">
        <type>LPARAM</type>
      </field>
      <field offset="40" name="iIntegral">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="44" name="uStateEx">
        <type>UINT</type>
      </field>
      <field offset="48" name="hwnd">
        <type>HWND</type>
      </field>
      <field offset="52" name="iExpandedImage">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="56" name="iReserved">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="TVITEMEXA">
      <struct name="tagTVITEMEXA" />
    </typedef>
    <typedef name="LPTVITEMEXA">
      <ptr>
        <struct name="tagTVITEMEXA" />
      </ptr>
    </typedef>
    <struct name="tagTVITEMEXW">
      <field offset="0" name="mask">
        <type>UINT</type>
      </field>
      <field offset="4" name="hItem">
        <type>HTREEITEM</type>
      </field>
      <field offset="8" name="state">
        <type>UINT</type>
      </field>
      <field offset="12" name="stateMask">
        <type>UINT</type>
      </field>
      <field offset="16" name="pszText">
        <type>LPWSTR</type>
      </field>
      <field offset="20" name="cchTextMax">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="24" name="iImage">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="28" name="iSelectedImage">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="32" name="cChildren">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="36" name="lParam">
        <type>LPARAM</type>
      </field>
      <field offset="40" name="iIntegral">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="44" name="uStateEx">
        <type>UINT</type>
      </field>
      <field offset="48" name="hwnd">
        <type>HWND</type>
      </field>
      <field offset="52" name="iExpandedImage">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="56" name="iReserved">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="TVITEMEXW">
      <struct name="tagTVITEMEXW" />
    </typedef>
    <typedef name="LPTVITEMEXW">
      <ptr>
        <struct name="tagTVITEMEXW" />
      </ptr>
    </typedef>
    <typedef name="TVITEMEX">
      <type>TVITEMEXA</type>
    </typedef>
    <typedef name="LPTVITEMEX">
      <type>LPTVITEMEXA</type>
    </typedef>
    <struct name="tagTVINSERTSTRUCTA">
      <field offset="0" name="hParent">
        <type>HTREEITEM</type>
      </field>
      <field offset="4" name="hInsertAfter">
        <type>HTREEITEM</type>
      </field>
      <field offset="8">
        <union>
          <alt name="itemex">
            <type>TVITEMEXA</type>
          </alt>
          <alt name="item">
            <type>TVITEMA</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="TVINSERTSTRUCTA">
      <struct name="tagTVINSERTSTRUCTA" />
    </typedef>
    <typedef name="LPTVINSERTSTRUCTA">
      <ptr>
        <struct name="tagTVINSERTSTRUCTA" />
      </ptr>
    </typedef>
    <struct name="tagTVINSERTSTRUCTW">
      <field offset="0" name="hParent">
        <type>HTREEITEM</type>
      </field>
      <field offset="4" name="hInsertAfter">
        <type>HTREEITEM</type>
      </field>
      <field offset="8">
        <union>
          <alt name="itemex">
            <type>TVITEMEXW</type>
          </alt>
          <alt name="item">
            <type>TVITEMW</type>
          </alt>
        </union>
      </field>
    </struct>
    <typedef name="TVINSERTSTRUCTW">
      <struct name="tagTVINSERTSTRUCTW" />
    </typedef>
    <typedef name="LPTVINSERTSTRUCTW">
      <ptr>
        <struct name="tagTVINSERTSTRUCTW" />
      </ptr>
    </typedef>
    <struct name="tagTVHITTESTINFO">
      <field offset="0" name="pt">
        <type>POINT</type>
      </field>
      <field offset="8" name="flags">
        <type>UINT</type>
      </field>
      <field offset="12" name="hItem">
        <type>HTREEITEM</type>
      </field>
    </struct>
    <typedef name="TVHITTESTINFO">
      <struct name="tagTVHITTESTINFO" />
    </typedef>
    <typedef name="LPTVHITTESTINFO">
      <ptr>
        <struct name="tagTVHITTESTINFO" />
      </ptr>
    </typedef>
    <enum name="_TVITEMPART">
      <member name="TVGIPR_BUTTON" value="1" />
    </enum>
    <typedef name="TVITEMPART">
      <enum name="_TVITEMPART" />
    </typedef>
    <struct name="tagTVGETITEMPARTRECTINFO">
      <field offset="0" name="hti">
        <type>HTREEITEM</type>
      </field>
      <field offset="4" name="prc">
        <ptr>
          <type>RECT</type>
        </ptr>
      </field>
      <field offset="8" name="partID">
        <type>TVITEMPART</type>
      </field>
    </struct>
    <typedef name="TVGETITEMPARTRECTINFO">
      <struct name="tagTVGETITEMPARTRECTINFO" />
    </typedef>
    <typedef name="PFNTVCOMPARE">
      <ptr>
        <fn>
          <return>
            <prim domain="SignedInt" size="4" />
            <reg>eax</reg>
          </return>
          <arg name="lParam1">
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
          <arg name="lParam2">
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
          <arg name="lParamSort">
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <struct name="tagTVSORTCB">
      <field offset="0" name="hParent">
        <type>HTREEITEM</type>
      </field>
      <field offset="4" name="lpfnCompare">
        <type>PFNTVCOMPARE</type>
      </field>
      <field offset="8" name="lParam">
        <type>LPARAM</type>
      </field>
    </struct>
    <typedef name="TVSORTCB">
      <struct name="tagTVSORTCB" />
    </typedef>
    <typedef name="LPTVSORTCB">
      <ptr>
        <struct name="tagTVSORTCB" />
      </ptr>
    </typedef>
    <struct name="tagNMTREEVIEWA">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="action">
        <type>UINT</type>
      </field>
      <field offset="16" name="itemOld">
        <type>TVITEMA</type>
      </field>
      <field offset="56" name="itemNew">
        <type>TVITEMA</type>
      </field>
      <field offset="96" name="ptDrag">
        <type>POINT</type>
      </field>
    </struct>
    <typedef name="NMTREEVIEWA">
      <struct name="tagNMTREEVIEWA" />
    </typedef>
    <typedef name="LPNMTREEVIEWA">
      <ptr>
        <struct name="tagNMTREEVIEWA" />
      </ptr>
    </typedef>
    <struct name="tagNMTREEVIEWW">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="action">
        <type>UINT</type>
      </field>
      <field offset="16" name="itemOld">
        <type>TVITEMW</type>
      </field>
      <field offset="56" name="itemNew">
        <type>TVITEMW</type>
      </field>
      <field offset="96" name="ptDrag">
        <type>POINT</type>
      </field>
    </struct>
    <typedef name="NMTREEVIEWW">
      <struct name="tagNMTREEVIEWW" />
    </typedef>
    <typedef name="LPNMTREEVIEWW">
      <ptr>
        <struct name="tagNMTREEVIEWW" />
      </ptr>
    </typedef>
    <struct name="tagTVDISPINFOA">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="16" name="item">
        <type>TVITEMA</type>
      </field>
    </struct>
    <typedef name="NMTVDISPINFOA">
      <struct name="tagTVDISPINFOA" />
    </typedef>
    <typedef name="LPNMTVDISPINFOA">
      <ptr>
        <struct name="tagTVDISPINFOA" />
      </ptr>
    </typedef>
    <struct name="tagTVDISPINFOW">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="16" name="item">
        <type>TVITEMW</type>
      </field>
    </struct>
    <typedef name="NMTVDISPINFOW">
      <struct name="tagTVDISPINFOW" />
    </typedef>
    <typedef name="LPNMTVDISPINFOW">
      <ptr>
        <struct name="tagTVDISPINFOW" />
      </ptr>
    </typedef>
    <struct name="tagTVDISPINFOEXA">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="16" name="item">
        <type>TVITEMEXA</type>
      </field>
    </struct>
    <typedef name="NMTVDISPINFOEXA">
      <struct name="tagTVDISPINFOEXA" />
    </typedef>
    <typedef name="LPNMTVDISPINFOEXA">
      <ptr>
        <struct name="tagTVDISPINFOEXA" />
      </ptr>
    </typedef>
    <struct name="tagTVDISPINFOEXW">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="16" name="item">
        <type>TVITEMEXW</type>
      </field>
    </struct>
    <typedef name="NMTVDISPINFOEXW">
      <struct name="tagTVDISPINFOEXW" />
    </typedef>
    <typedef name="LPNMTVDISPINFOEXW">
      <ptr>
        <struct name="tagTVDISPINFOEXW" />
      </ptr>
    </typedef>
    <struct name="tagTVKEYDOWN">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="wVKey">
        <type>WORD</type>
      </field>
      <field offset="16" name="flags">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="NMTVKEYDOWN">
      <struct name="tagTVKEYDOWN" />
    </typedef>
    <typedef name="LPNMTVKEYDOWN">
      <ptr>
        <struct name="tagTVKEYDOWN" />
      </ptr>
    </typedef>
    <struct name="tagNMTVCUSTOMDRAW">
      <field offset="0" name="nmcd">
        <type>NMCUSTOMDRAW</type>
      </field>
      <field offset="48" name="clrText">
        <type>COLORREF</type>
      </field>
      <field offset="52" name="clrTextBk">
        <type>COLORREF</type>
      </field>
      <field offset="56" name="iLevel">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="NMTVCUSTOMDRAW">
      <struct name="tagNMTVCUSTOMDRAW" />
    </typedef>
    <typedef name="LPNMTVCUSTOMDRAW">
      <ptr>
        <struct name="tagNMTVCUSTOMDRAW" />
      </ptr>
    </typedef>
    <struct name="tagNMTVGETINFOTIPA">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="pszText">
        <type>LPSTR</type>
      </field>
      <field offset="16" name="cchTextMax">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="hItem">
        <type>HTREEITEM</type>
      </field>
      <field offset="24" name="lParam">
        <type>LPARAM</type>
      </field>
    </struct>
    <typedef name="NMTVGETINFOTIPA">
      <struct name="tagNMTVGETINFOTIPA" />
    </typedef>
    <typedef name="LPNMTVGETINFOTIPA">
      <ptr>
        <struct name="tagNMTVGETINFOTIPA" />
      </ptr>
    </typedef>
    <struct name="tagNMTVGETINFOTIPW">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="pszText">
        <type>LPWSTR</type>
      </field>
      <field offset="16" name="cchTextMax">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="hItem">
        <type>HTREEITEM</type>
      </field>
      <field offset="24" name="lParam">
        <type>LPARAM</type>
      </field>
    </struct>
    <typedef name="NMTVGETINFOTIPW">
      <struct name="tagNMTVGETINFOTIPW" />
    </typedef>
    <typedef name="LPNMTVGETINFOTIPW">
      <ptr>
        <struct name="tagNMTVGETINFOTIPW" />
      </ptr>
    </typedef>
    <struct name="tagTVITEMCHANGE">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="uChanged">
        <type>UINT</type>
      </field>
      <field offset="16" name="hItem">
        <type>HTREEITEM</type>
      </field>
      <field offset="20" name="uStateNew">
        <type>UINT</type>
      </field>
      <field offset="24" name="uStateOld">
        <type>UINT</type>
      </field>
      <field offset="28" name="lParam">
        <type>LPARAM</type>
      </field>
    </struct>
    <typedef name="NMTVITEMCHANGE">
      <struct name="tagTVITEMCHANGE" />
    </typedef>
    <struct name="tagNMTVASYNCDRAW">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="pimldp">
        <ptr>
          <type>IMAGELISTDRAWPARAMS</type>
        </ptr>
      </field>
      <field offset="16" name="hr">
        <type>HRESULT</type>
      </field>
      <field offset="20" name="hItem">
        <type>HTREEITEM</type>
      </field>
      <field offset="24" name="lParam">
        <type>LPARAM</type>
      </field>
      <field offset="28" name="dwRetFlags">
        <type>DWORD</type>
      </field>
      <field offset="32" name="iRetImageIndex">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="NMTVASYNCDRAW">
      <struct name="tagNMTVASYNCDRAW" />
    </typedef>
    <struct name="tagCOMBOBOXEXITEMA">
      <field offset="0" name="mask">
        <type>UINT</type>
      </field>
      <field offset="4" name="iItem">
        <type>INT_PTR</type>
      </field>
      <field offset="8" name="pszText">
        <type>LPSTR</type>
      </field>
      <field offset="12" name="cchTextMax">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="iImage">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="iSelectedImage">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="24" name="iOverlay">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="28" name="iIndent">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="32" name="lParam">
        <type>LPARAM</type>
      </field>
    </struct>
    <typedef name="COMBOBOXEXITEMA">
      <struct name="tagCOMBOBOXEXITEMA" />
    </typedef>
    <typedef name="PCOMBOBOXEXITEMA">
      <ptr>
        <struct name="tagCOMBOBOXEXITEMA" />
      </ptr>
    </typedef>
    <typedef name="PCCOMBOEXITEMA">
      <ptr>
        <type>COMBOBOXEXITEMA</type>
      </ptr>
    </typedef>
    <struct name="tagCOMBOBOXEXITEMW">
      <field offset="0" name="mask">
        <type>UINT</type>
      </field>
      <field offset="4" name="iItem">
        <type>INT_PTR</type>
      </field>
      <field offset="8" name="pszText">
        <type>LPWSTR</type>
      </field>
      <field offset="12" name="cchTextMax">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="iImage">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="iSelectedImage">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="24" name="iOverlay">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="28" name="iIndent">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="32" name="lParam">
        <type>LPARAM</type>
      </field>
    </struct>
    <typedef name="COMBOBOXEXITEMW">
      <struct name="tagCOMBOBOXEXITEMW" />
    </typedef>
    <typedef name="PCOMBOBOXEXITEMW">
      <ptr>
        <struct name="tagCOMBOBOXEXITEMW" />
      </ptr>
    </typedef>
    <typedef name="PCCOMBOEXITEMW">
      <ptr>
        <type>COMBOBOXEXITEMW</type>
      </ptr>
    </typedef>
    <struct name="struct_191">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="16" name="ceItem">
        <type>COMBOBOXEXITEMA</type>
      </field>
    </struct>
    <typedef name="NMCOMBOBOXEXA">
      <struct name="struct_191" />
    </typedef>
    <typedef name="PNMCOMBOBOXEXA">
      <ptr>
        <struct name="struct_191" />
      </ptr>
    </typedef>
    <struct name="struct_192">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="16" name="ceItem">
        <type>COMBOBOXEXITEMW</type>
      </field>
    </struct>
    <typedef name="NMCOMBOBOXEXW">
      <struct name="struct_192" />
    </typedef>
    <typedef name="PNMCOMBOBOXEXW">
      <ptr>
        <struct name="struct_192" />
      </ptr>
    </typedef>
    <struct name="struct_193">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="iItemid">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="szText">
        <arr length="260">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="NMCBEDRAGBEGINW">
      <struct name="struct_193" />
    </typedef>
    <typedef name="LPNMCBEDRAGBEGINW">
      <ptr>
        <struct name="struct_193" />
      </ptr>
    </typedef>
    <typedef name="PNMCBEDRAGBEGINW">
      <ptr>
        <struct name="struct_193" />
      </ptr>
    </typedef>
    <struct name="struct_194">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="iItemid">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="szText">
        <arr length="260">
          <prim domain="Character" size="1" />
        </arr>
      </field>
    </struct>
    <typedef name="NMCBEDRAGBEGINA">
      <struct name="struct_194" />
    </typedef>
    <typedef name="LPNMCBEDRAGBEGINA">
      <ptr>
        <struct name="struct_194" />
      </ptr>
    </typedef>
    <typedef name="PNMCBEDRAGBEGINA">
      <ptr>
        <struct name="struct_194" />
      </ptr>
    </typedef>
    <struct name="struct_195">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="fChanged">
        <type>BOOL</type>
      </field>
      <field offset="16" name="iNewSelection">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="24" name="szText">
        <arr length="260">
          <type>WCHAR</type>
        </arr>
      </field>
      <field offset="544" name="iWhy">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="NMCBEENDEDITW">
      <struct name="struct_195" />
    </typedef>
    <typedef name="LPNMCBEENDEDITW">
      <ptr>
        <struct name="struct_195" />
      </ptr>
    </typedef>
    <typedef name="PNMCBEENDEDITW">
      <ptr>
        <struct name="struct_195" />
      </ptr>
    </typedef>
    <struct name="struct_196">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="fChanged">
        <type>BOOL</type>
      </field>
      <field offset="16" name="iNewSelection">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="24" name="szText">
        <arr length="260">
          <prim domain="Character" size="1" />
        </arr>
      </field>
      <field offset="284" name="iWhy">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="NMCBEENDEDITA">
      <struct name="struct_196" />
    </typedef>
    <typedef name="LPNMCBEENDEDITA">
      <ptr>
        <struct name="struct_196" />
      </ptr>
    </typedef>
    <typedef name="PNMCBEENDEDITA">
      <ptr>
        <struct name="struct_196" />
      </ptr>
    </typedef>
    <struct name="tagTCITEMHEADERA">
      <field offset="0" name="mask">
        <type>UINT</type>
      </field>
      <field offset="4" name="lpReserved1">
        <type>UINT</type>
      </field>
      <field offset="8" name="lpReserved2">
        <type>UINT</type>
      </field>
      <field offset="12" name="pszText">
        <type>LPSTR</type>
      </field>
      <field offset="16" name="cchTextMax">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="iImage">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="TCITEMHEADERA">
      <struct name="tagTCITEMHEADERA" />
    </typedef>
    <typedef name="LPTCITEMHEADERA">
      <ptr>
        <struct name="tagTCITEMHEADERA" />
      </ptr>
    </typedef>
    <struct name="tagTCITEMHEADERW">
      <field offset="0" name="mask">
        <type>UINT</type>
      </field>
      <field offset="4" name="lpReserved1">
        <type>UINT</type>
      </field>
      <field offset="8" name="lpReserved2">
        <type>UINT</type>
      </field>
      <field offset="12" name="pszText">
        <type>LPWSTR</type>
      </field>
      <field offset="16" name="cchTextMax">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="iImage">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="TCITEMHEADERW">
      <struct name="tagTCITEMHEADERW" />
    </typedef>
    <typedef name="LPTCITEMHEADERW">
      <ptr>
        <struct name="tagTCITEMHEADERW" />
      </ptr>
    </typedef>
    <struct name="tagTCITEMA">
      <field offset="0" name="mask">
        <type>UINT</type>
      </field>
      <field offset="4" name="dwState">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwStateMask">
        <type>DWORD</type>
      </field>
      <field offset="12" name="pszText">
        <type>LPSTR</type>
      </field>
      <field offset="16" name="cchTextMax">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="iImage">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="24" name="lParam">
        <type>LPARAM</type>
      </field>
    </struct>
    <typedef name="TCITEMA">
      <struct name="tagTCITEMA" />
    </typedef>
    <typedef name="LPTCITEMA">
      <ptr>
        <struct name="tagTCITEMA" />
      </ptr>
    </typedef>
    <struct name="tagTCITEMW">
      <field offset="0" name="mask">
        <type>UINT</type>
      </field>
      <field offset="4" name="dwState">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwStateMask">
        <type>DWORD</type>
      </field>
      <field offset="12" name="pszText">
        <type>LPWSTR</type>
      </field>
      <field offset="16" name="cchTextMax">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="iImage">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="24" name="lParam">
        <type>LPARAM</type>
      </field>
    </struct>
    <typedef name="TCITEMW">
      <struct name="tagTCITEMW" />
    </typedef>
    <typedef name="LPTCITEMW">
      <ptr>
        <struct name="tagTCITEMW" />
      </ptr>
    </typedef>
    <struct name="tagTCHITTESTINFO">
      <field offset="0" name="pt">
        <type>POINT</type>
      </field>
      <field offset="8" name="flags">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="TCHITTESTINFO">
      <struct name="tagTCHITTESTINFO" />
    </typedef>
    <typedef name="LPTCHITTESTINFO">
      <ptr>
        <struct name="tagTCHITTESTINFO" />
      </ptr>
    </typedef>
    <struct name="tagTCKEYDOWN">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="wVKey">
        <type>WORD</type>
      </field>
      <field offset="16" name="flags">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="NMTCKEYDOWN">
      <struct name="tagTCKEYDOWN" />
    </typedef>
    <typedef name="MONTHDAYSTATE">
      <type>DWORD</type>
    </typedef>
    <typedef name="LPMONTHDAYSTATE">
      <ptr>
        <type>DWORD</type>
      </ptr>
    </typedef>
    <struct name="struct_197">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="8" name="pt">
        <type>POINT</type>
      </field>
      <field offset="16" name="uHit">
        <type>UINT</type>
      </field>
      <field offset="24" name="st">
        <type>SYSTEMTIME</type>
      </field>
      <field offset="40" name="rc">
        <type>RECT</type>
      </field>
      <field offset="56" name="iOffset">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="60" name="iRow">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="64" name="iCol">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="MCHITTESTINFO">
      <struct name="struct_197" />
    </typedef>
    <typedef name="PMCHITTESTINFO">
      <ptr>
        <struct name="struct_197" />
      </ptr>
    </typedef>
    <struct name="tagMCGRIDINFO">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="dwPart">
        <type>DWORD</type>
      </field>
      <field offset="8" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="12" name="iCalendar">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="iRow">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="iCol">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="24" name="bSelected">
        <type>BOOL</type>
      </field>
      <field offset="32" name="stStart">
        <type>SYSTEMTIME</type>
      </field>
      <field offset="48" name="stEnd">
        <type>SYSTEMTIME</type>
      </field>
      <field offset="64" name="rc">
        <type>RECT</type>
      </field>
      <field offset="80" name="pszName">
        <type>PWSTR</type>
      </field>
      <field offset="84" name="cchName">
        <type>size_t</type>
      </field>
    </struct>
    <typedef name="MCGRIDINFO">
      <struct name="tagMCGRIDINFO" />
    </typedef>
    <typedef name="PMCGRIDINFO">
      <ptr>
        <struct name="tagMCGRIDINFO" />
      </ptr>
    </typedef>
    <struct name="tagNMSELCHANGE">
      <field offset="0" name="nmhdr">
        <type>NMHDR</type>
      </field>
      <field offset="16" name="stSelStart">
        <type>SYSTEMTIME</type>
      </field>
      <field offset="32" name="stSelEnd">
        <type>SYSTEMTIME</type>
      </field>
    </struct>
    <typedef name="NMSELCHANGE">
      <struct name="tagNMSELCHANGE" />
    </typedef>
    <typedef name="LPNMSELCHANGE">
      <ptr>
        <struct name="tagNMSELCHANGE" />
      </ptr>
    </typedef>
    <struct name="tagNMDAYSTATE">
      <field offset="0" name="nmhdr">
        <type>NMHDR</type>
      </field>
      <field offset="16" name="stStart">
        <type>SYSTEMTIME</type>
      </field>
      <field offset="32" name="cDayState">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="36" name="prgDayState">
        <type>LPMONTHDAYSTATE</type>
      </field>
    </struct>
    <typedef name="NMDAYSTATE">
      <struct name="tagNMDAYSTATE" />
    </typedef>
    <typedef name="LPNMDAYSTATE">
      <ptr>
        <struct name="tagNMDAYSTATE" />
      </ptr>
    </typedef>
    <typedef name="NMSELECT">
      <type>NMSELCHANGE</type>
    </typedef>
    <typedef name="LPNMSELECT">
      <ptr>
        <type>NMSELCHANGE</type>
      </ptr>
    </typedef>
    <struct name="tagNMVIEWCHANGE">
      <field offset="0" name="nmhdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="dwOldView">
        <type>DWORD</type>
      </field>
      <field offset="16" name="dwNewView">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="NMVIEWCHANGE">
      <struct name="tagNMVIEWCHANGE" />
    </typedef>
    <typedef name="LPNMVIEWCHANGE">
      <ptr>
        <struct name="tagNMVIEWCHANGE" />
      </ptr>
    </typedef>
    <struct name="tagDATETIMEPICKERINFO">
      <field offset="0" name="cbSize">
        <type>DWORD</type>
      </field>
      <field offset="8" name="rcCheck">
        <type>RECT</type>
      </field>
      <field offset="24" name="stateCheck">
        <type>DWORD</type>
      </field>
      <field offset="32" name="rcButton">
        <type>RECT</type>
      </field>
      <field offset="48" name="stateButton">
        <type>DWORD</type>
      </field>
      <field offset="52" name="hwndEdit">
        <type>HWND</type>
      </field>
      <field offset="56" name="hwndUD">
        <type>HWND</type>
      </field>
      <field offset="60" name="hwndDropDown">
        <type>HWND</type>
      </field>
    </struct>
    <typedef name="DATETIMEPICKERINFO">
      <struct name="tagDATETIMEPICKERINFO" />
    </typedef>
    <typedef name="LPDATETIMEPICKERINFO">
      <ptr>
        <struct name="tagDATETIMEPICKERINFO" />
      </ptr>
    </typedef>
    <struct name="tagNMDATETIMECHANGE">
      <field offset="0" name="nmhdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="dwFlags">
        <type>DWORD</type>
      </field>
      <field offset="16" name="st">
        <type>SYSTEMTIME</type>
      </field>
    </struct>
    <typedef name="NMDATETIMECHANGE">
      <struct name="tagNMDATETIMECHANGE" />
    </typedef>
    <typedef name="LPNMDATETIMECHANGE">
      <ptr>
        <struct name="tagNMDATETIMECHANGE" />
      </ptr>
    </typedef>
    <struct name="tagNMDATETIMESTRINGA">
      <field offset="0" name="nmhdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="pszUserString">
        <type>LPCSTR</type>
      </field>
      <field offset="16" name="st">
        <type>SYSTEMTIME</type>
      </field>
      <field offset="32" name="dwFlags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="NMDATETIMESTRINGA">
      <struct name="tagNMDATETIMESTRINGA" />
    </typedef>
    <typedef name="LPNMDATETIMESTRINGA">
      <ptr>
        <struct name="tagNMDATETIMESTRINGA" />
      </ptr>
    </typedef>
    <struct name="tagNMDATETIMESTRINGW">
      <field offset="0" name="nmhdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="pszUserString">
        <type>LPCWSTR</type>
      </field>
      <field offset="16" name="st">
        <type>SYSTEMTIME</type>
      </field>
      <field offset="32" name="dwFlags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="NMDATETIMESTRINGW">
      <struct name="tagNMDATETIMESTRINGW" />
    </typedef>
    <typedef name="LPNMDATETIMESTRINGW">
      <ptr>
        <struct name="tagNMDATETIMESTRINGW" />
      </ptr>
    </typedef>
    <struct name="tagNMDATETIMEWMKEYDOWNA">
      <field offset="0" name="nmhdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="nVirtKey">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="pszFormat">
        <type>LPCSTR</type>
      </field>
      <field offset="24" name="st">
        <type>SYSTEMTIME</type>
      </field>
    </struct>
    <typedef name="NMDATETIMEWMKEYDOWNA">
      <struct name="tagNMDATETIMEWMKEYDOWNA" />
    </typedef>
    <typedef name="LPNMDATETIMEWMKEYDOWNA">
      <ptr>
        <struct name="tagNMDATETIMEWMKEYDOWNA" />
      </ptr>
    </typedef>
    <struct name="tagNMDATETIMEWMKEYDOWNW">
      <field offset="0" name="nmhdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="nVirtKey">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="pszFormat">
        <type>LPCWSTR</type>
      </field>
      <field offset="24" name="st">
        <type>SYSTEMTIME</type>
      </field>
    </struct>
    <typedef name="NMDATETIMEWMKEYDOWNW">
      <struct name="tagNMDATETIMEWMKEYDOWNW" />
    </typedef>
    <typedef name="LPNMDATETIMEWMKEYDOWNW">
      <ptr>
        <struct name="tagNMDATETIMEWMKEYDOWNW" />
      </ptr>
    </typedef>
    <struct name="tagNMDATETIMEFORMATA">
      <field offset="0" name="nmhdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="pszFormat">
        <type>LPCSTR</type>
      </field>
      <field offset="16" name="st">
        <type>SYSTEMTIME</type>
      </field>
      <field offset="32" name="pszDisplay">
        <type>LPCSTR</type>
      </field>
      <field offset="40" name="szDisplay">
        <arr length="64">
          <type>CHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="NMDATETIMEFORMATA">
      <struct name="tagNMDATETIMEFORMATA" />
    </typedef>
    <typedef name="LPNMDATETIMEFORMATA">
      <ptr>
        <struct name="tagNMDATETIMEFORMATA" />
      </ptr>
    </typedef>
    <struct name="tagNMDATETIMEFORMATW">
      <field offset="0" name="nmhdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="pszFormat">
        <type>LPCWSTR</type>
      </field>
      <field offset="16" name="st">
        <type>SYSTEMTIME</type>
      </field>
      <field offset="32" name="pszDisplay">
        <type>LPCWSTR</type>
      </field>
      <field offset="40" name="szDisplay">
        <arr length="64">
          <type>WCHAR</type>
        </arr>
      </field>
    </struct>
    <typedef name="NMDATETIMEFORMATW">
      <struct name="tagNMDATETIMEFORMATW" />
    </typedef>
    <typedef name="LPNMDATETIMEFORMATW">
      <ptr>
        <struct name="tagNMDATETIMEFORMATW" />
      </ptr>
    </typedef>
    <struct name="tagNMDATETIMEFORMATQUERYA">
      <field offset="0" name="nmhdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="pszFormat">
        <type>LPCSTR</type>
      </field>
      <field offset="16" name="szMax">
        <type>SIZE</type>
      </field>
    </struct>
    <typedef name="NMDATETIMEFORMATQUERYA">
      <struct name="tagNMDATETIMEFORMATQUERYA" />
    </typedef>
    <typedef name="LPNMDATETIMEFORMATQUERYA">
      <ptr>
        <struct name="tagNMDATETIMEFORMATQUERYA" />
      </ptr>
    </typedef>
    <struct name="tagNMDATETIMEFORMATQUERYW">
      <field offset="0" name="nmhdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="pszFormat">
        <type>LPCWSTR</type>
      </field>
      <field offset="16" name="szMax">
        <type>SIZE</type>
      </field>
    </struct>
    <typedef name="NMDATETIMEFORMATQUERYW">
      <struct name="tagNMDATETIMEFORMATQUERYW" />
    </typedef>
    <typedef name="LPNMDATETIMEFORMATQUERYW">
      <ptr>
        <struct name="tagNMDATETIMEFORMATQUERYW" />
      </ptr>
    </typedef>
    <struct name="tagNMIPADDRESS">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="iField">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="iValue">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="NMIPADDRESS">
      <struct name="tagNMIPADDRESS" />
    </typedef>
    <typedef name="LPNMIPADDRESS">
      <ptr>
        <struct name="tagNMIPADDRESS" />
      </ptr>
    </typedef>
    <struct name="struct_198">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="fwKeys">
        <type>WORD</type>
      </field>
      <field offset="16" name="rcParent">
        <type>RECT</type>
      </field>
      <field offset="32" name="iDir">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="36" name="iXpos">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="40" name="iYpos">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="44" name="iScroll">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="NMPGSCROLL">
      <struct name="struct_198" />
    </typedef>
    <typedef name="LPNMPGSCROLL">
      <ptr>
        <struct name="struct_198" />
      </ptr>
    </typedef>
    <struct name="struct_199">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="dwFlag">
        <type>DWORD</type>
      </field>
      <field offset="16" name="iWidth">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="iHeight">
        <prim domain="SignedInt" size="4" />
      </field>
    </struct>
    <typedef name="NMPGCALCSIZE">
      <struct name="struct_199" />
    </typedef>
    <typedef name="LPNMPGCALCSIZE">
      <ptr>
        <struct name="struct_199" />
      </ptr>
    </typedef>
    <struct name="tagNMPGHOTITEM">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="idOld">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="16" name="idNew">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="20" name="dwFlags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="NMPGHOTITEM">
      <struct name="tagNMPGHOTITEM" />
    </typedef>
    <typedef name="LPNMPGHOTITEM">
      <ptr>
        <struct name="tagNMPGHOTITEM" />
      </ptr>
    </typedef>
    <struct name="struct_200">
      <field offset="0" name="himl">
        <type>HIMAGELIST</type>
      </field>
      <field offset="8" name="margin">
        <type>RECT</type>
      </field>
      <field offset="24" name="uAlign">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="BUTTON_IMAGELIST">
      <struct name="struct_200" />
    </typedef>
    <typedef name="PBUTTON_IMAGELIST">
      <ptr>
        <struct name="struct_200" />
      </ptr>
    </typedef>
    <struct name="tagNMBCHOTITEM">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="12" name="dwFlags">
        <type>DWORD</type>
      </field>
    </struct>
    <typedef name="NMBCHOTITEM">
      <struct name="tagNMBCHOTITEM" />
    </typedef>
    <typedef name="LPNMBCHOTITEM">
      <ptr>
        <struct name="tagNMBCHOTITEM" />
      </ptr>
    </typedef>
    <struct name="tagBUTTON_SPLITINFO">
      <field offset="0" name="mask">
        <type>UINT</type>
      </field>
      <field offset="4" name="himlGlyph">
        <type>HIMAGELIST</type>
      </field>
      <field offset="8" name="uSplitStyle">
        <type>UINT</type>
      </field>
      <field offset="16" name="size">
        <type>SIZE</type>
      </field>
    </struct>
    <typedef name="BUTTON_SPLITINFO">
      <struct name="tagBUTTON_SPLITINFO" />
    </typedef>
    <typedef name="PBUTTON_SPLITINFO">
      <ptr>
        <struct name="tagBUTTON_SPLITINFO" />
      </ptr>
    </typedef>
    <struct name="tagNMBCDROPDOWN">
      <field offset="0" name="hdr">
        <type>NMHDR</type>
      </field>
      <field offset="16" name="rcButton">
        <type>RECT</type>
      </field>
    </struct>
    <typedef name="NMBCDROPDOWN">
      <struct name="tagNMBCDROPDOWN" />
    </typedef>
    <typedef name="LPNMBCDROPDOWN">
      <ptr>
        <struct name="tagNMBCDROPDOWN" />
      </ptr>
    </typedef>
    <struct name="_tagEDITBALLOONTIP">
      <field offset="0" name="cbStruct">
        <type>DWORD</type>
      </field>
      <field offset="4" name="pszTitle">
        <type>LPCWSTR</type>
      </field>
      <field offset="8" name="pszText">
        <type>LPCWSTR</type>
      </field>
      <field offset="12" name="ttiIcon">
        <type>INT</type>
      </field>
    </struct>
    <typedef name="EDITBALLOONTIP">
      <struct name="_tagEDITBALLOONTIP" />
    </typedef>
    <typedef name="PEDITBALLOONTIP">
      <ptr>
        <struct name="_tagEDITBALLOONTIP" />
      </ptr>
    </typedef>
    <typedef name="PFTASKDIALOGCALLBACK">
      <ptr>
        <fn>
          <return>
            <type>HRESULT</type>
            <reg>eax</reg>
          </return>
          <arg name="hwnd">
            <type>HWND</type>
            <stack size="4" />
          </arg>
          <arg name="msg">
            <type>UINT</type>
            <stack size="4" />
          </arg>
          <arg name="wParam">
            <type>WPARAM</type>
            <stack size="4" />
          </arg>
          <arg name="lParam">
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
          <arg name="lpRefData">
            <type>LONG_PTR</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <enum name="_TASKDIALOG_FLAGS">
      <member name="TDF_ENABLE_HYPERLINKS" value="1" />
      <member name="TDF_USE_HICON_MAIN" value="2" />
      <member name="TDF_USE_HICON_FOOTER" value="4" />
      <member name="TDF_ALLOW_DIALOG_CANCELLATION" value="8" />
      <member name="TDF_USE_COMMAND_LINKS" value="16" />
      <member name="TDF_USE_COMMAND_LINKS_NO_ICON" value="32" />
      <member name="TDF_EXPAND_FOOTER_AREA" value="64" />
      <member name="TDF_EXPANDED_BY_DEFAULT" value="128" />
      <member name="TDF_VERIFICATION_FLAG_CHECKED" value="256" />
      <member name="TDF_SHOW_PROGRESS_BAR" value="512" />
      <member name="TDF_SHOW_MARQUEE_PROGRESS_BAR" value="1024" />
      <member name="TDF_CALLBACK_TIMER" value="2048" />
      <member name="TDF_POSITION_RELATIVE_TO_WINDOW" value="4096" />
      <member name="TDF_RTL_LAYOUT" value="8192" />
      <member name="TDF_NO_DEFAULT_RADIO_BUTTON" value="16384" />
      <member name="TDF_CAN_BE_MINIMIZED" value="32768" />
    </enum>
    <typedef name="TASKDIALOG_FLAGS">
      <prim domain="SignedInt" size="4" />
    </typedef>
    <enum name="_TASKDIALOG_MESSAGES">
      <member name="TDM_NAVIGATE_PAGE" value="1125" />
      <member name="TDM_CLICK_BUTTON" value="1126" />
      <member name="TDM_SET_MARQUEE_PROGRESS_BAR" value="1127" />
      <member name="TDM_SET_PROGRESS_BAR_STATE" value="1128" />
      <member name="TDM_SET_PROGRESS_BAR_RANGE" value="1129" />
      <member name="TDM_SET_PROGRESS_BAR_POS" value="1130" />
      <member name="TDM_SET_PROGRESS_BAR_MARQUEE" value="1131" />
      <member name="TDM_SET_ELEMENT_TEXT" value="1132" />
      <member name="TDM_CLICK_RADIO_BUTTON" value="1134" />
      <member name="TDM_ENABLE_BUTTON" value="1135" />
      <member name="TDM_ENABLE_RADIO_BUTTON" value="1136" />
      <member name="TDM_CLICK_VERIFICATION" value="1137" />
      <member name="TDM_UPDATE_ELEMENT_TEXT" value="1138" />
      <member name="TDM_SET_BUTTON_ELEVATION_REQUIRED_STATE" value="1139" />
      <member name="TDM_UPDATE_ICON" value="1140" />
    </enum>
    <typedef name="TASKDIALOG_MESSAGES">
      <enum name="_TASKDIALOG_MESSAGES" />
    </typedef>
    <enum name="_TASKDIALOG_NOTIFICATIONS">
      <member name="TDN_CREATED" value="0" />
      <member name="TDN_NAVIGATED" value="1" />
      <member name="TDN_BUTTON_CLICKED" value="2" />
      <member name="TDN_HYPERLINK_CLICKED" value="3" />
      <member name="TDN_TIMER" value="4" />
      <member name="TDN_DESTROYED" value="5" />
      <member name="TDN_RADIO_BUTTON_CLICKED" value="6" />
      <member name="TDN_DIALOG_CONSTRUCTED" value="7" />
      <member name="TDN_VERIFICATION_CLICKED" value="8" />
      <member name="TDN_HELP" value="9" />
      <member name="TDN_EXPANDO_BUTTON_CLICKED" value="10" />
    </enum>
    <typedef name="TASKDIALOG_NOTIFICATIONS">
      <enum name="_TASKDIALOG_NOTIFICATIONS" />
    </typedef>
    <struct name="_TASKDIALOG_BUTTON">
      <field offset="0" name="nButtonID">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="4" name="pszButtonText">
        <type>PCWSTR</type>
      </field>
    </struct>
    <typedef name="TASKDIALOG_BUTTON">
      <struct name="_TASKDIALOG_BUTTON" />
    </typedef>
    <enum name="_TASKDIALOG_ELEMENTS">
      <member name="TDE_CONTENT" value="0" />
      <member name="TDE_EXPANDED_INFORMATION" value="1" />
      <member name="TDE_FOOTER" value="2" />
      <member name="TDE_MAIN_INSTRUCTION" value="3" />
    </enum>
    <typedef name="TASKDIALOG_ELEMENTS">
      <enum name="_TASKDIALOG_ELEMENTS" />
    </typedef>
    <enum name="_TASKDIALOG_ICON_ELEMENTS">
      <member name="TDIE_ICON_MAIN" value="0" />
      <member name="TDIE_ICON_FOOTER" value="1" />
    </enum>
    <typedef name="TASKDIALOG_ICON_ELEMENTS">
      <enum name="_TASKDIALOG_ICON_ELEMENTS" />
    </typedef>
    <enum name="_TASKDIALOG_COMMON_BUTTON_FLAGS">
      <member name="TDCBF_OK_BUTTON" value="1" />
      <member name="TDCBF_YES_BUTTON" value="2" />
      <member name="TDCBF_NO_BUTTON" value="4" />
      <member name="TDCBF_CANCEL_BUTTON" value="8" />
      <member name="TDCBF_RETRY_BUTTON" value="16" />
      <member name="TDCBF_CLOSE_BUTTON" value="32" />
    </enum>
    <typedef name="TASKDIALOG_COMMON_BUTTON_FLAGS">
      <prim domain="SignedInt" size="4" />
    </typedef>
    <struct name="_TASKDIALOGCONFIG">
      <field offset="0" name="cbSize">
        <type>UINT</type>
      </field>
      <field offset="4" name="hwndParent">
        <type>HWND</type>
      </field>
      <field offset="8" name="hInstance">
        <type>HINSTANCE</type>
      </field>
      <field offset="12" name="dwFlags">
        <type>TASKDIALOG_FLAGS</type>
      </field>
      <field offset="16" name="dwCommonButtons">
        <type>TASKDIALOG_COMMON_BUTTON_FLAGS</type>
      </field>
      <field offset="20" name="pszWindowTitle">
        <type>PCWSTR</type>
      </field>
      <field offset="24">
        <union>
          <alt name="hMainIcon">
            <type>HICON</type>
          </alt>
          <alt name="pszMainIcon">
            <type>PCWSTR</type>
          </alt>
        </union>
      </field>
      <field offset="28" name="pszMainInstruction">
        <type>PCWSTR</type>
      </field>
      <field offset="32" name="pszContent">
        <type>PCWSTR</type>
      </field>
      <field offset="36" name="cButtons">
        <type>UINT</type>
      </field>
      <field offset="40" name="pButtons">
        <ptr>
          <type>TASKDIALOG_BUTTON</type>
        </ptr>
      </field>
      <field offset="44" name="nDefaultButton">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="48" name="cRadioButtons">
        <type>UINT</type>
      </field>
      <field offset="52" name="pRadioButtons">
        <ptr>
          <type>TASKDIALOG_BUTTON</type>
        </ptr>
      </field>
      <field offset="56" name="nDefaultRadioButton">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="60" name="pszVerificationText">
        <type>PCWSTR</type>
      </field>
      <field offset="64" name="pszExpandedInformation">
        <type>PCWSTR</type>
      </field>
      <field offset="68" name="pszExpandedControlText">
        <type>PCWSTR</type>
      </field>
      <field offset="72" name="pszCollapsedControlText">
        <type>PCWSTR</type>
      </field>
      <field offset="76">
        <union>
          <alt name="hFooterIcon">
            <type>HICON</type>
          </alt>
          <alt name="pszFooterIcon">
            <type>PCWSTR</type>
          </alt>
        </union>
      </field>
      <field offset="80" name="pszFooter">
        <type>PCWSTR</type>
      </field>
      <field offset="84" name="pfCallback">
        <type>PFTASKDIALOGCALLBACK</type>
      </field>
      <field offset="88" name="lpCallbackData">
        <type>LONG_PTR</type>
      </field>
      <field offset="92" name="cxWidth">
        <type>UINT</type>
      </field>
    </struct>
    <typedef name="TASKDIALOGCONFIG">
      <struct name="_TASKDIALOGCONFIG" />
    </typedef>
    <typedef name="PFNDAENUMCALLBACK">
      <ptr>
        <fn>
          <return>
            <prim domain="SignedInt" size="4" />
            <reg>eax</reg>
          </return>
          <arg name="p">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pData">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFNDAENUMCALLBACKCONST">
      <ptr>
        <fn>
          <return>
            <prim domain="SignedInt" size="4" />
            <reg>eax</reg>
          </return>
          <arg name="p">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pData">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFNDACOMPARE">
      <ptr>
        <fn>
          <return>
            <prim domain="SignedInt" size="4" />
            <reg>eax</reg>
          </return>
          <arg name="p1">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="p2">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="lParam">
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFNDACOMPARECONST">
      <ptr>
        <fn>
          <return>
            <prim domain="SignedInt" size="4" />
            <reg>eax</reg>
          </return>
          <arg name="p1">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="p2">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="lParam">
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="HDSA">
      <ptr>
        <struct name="_DSA" />
      </ptr>
    </typedef>
    <typedef name="HDPA">
      <ptr>
        <struct name="_DPA" />
      </ptr>
    </typedef>
    <struct name="_DPASTREAMINFO">
      <field offset="0" name="iPos">
        <prim domain="SignedInt" size="4" />
      </field>
      <field offset="4" name="pvItem">
        <ptr>
          <void />
        </ptr>
      </field>
    </struct>
    <typedef name="DPASTREAMINFO">
      <struct name="_DPASTREAMINFO" />
    </typedef>
    <typedef name="PFNDPASTREAM">
      <ptr>
        <fn>
          <return>
            <type>HRESULT</type>
            <reg>eax</reg>
          </return>
          <arg name="pinfo">
            <ptr>
              <type>DPASTREAMINFO</type>
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pstream">
            <ptr>
              <struct name="IStream" />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pvInstData">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFNDPAMERGE">
      <ptr>
        <fn>
          <return>
            <ptr>
              <void />
            </ptr>
            <reg>eax</reg>
          </return>
          <arg name="uMsg">
            <type>UINT</type>
            <stack size="4" />
          </arg>
          <arg name="pvDest">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pvSrc">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="lParam">
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="PFNDPAMERGECONST">
      <ptr>
        <fn>
          <return>
            <ptr>
              <void />
            </ptr>
            <reg>eax</reg>
          </return>
          <arg name="uMsg">
            <type>UINT</type>
            <stack size="4" />
          </arg>
          <arg name="pvDest">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="pvSrc">
            <ptr>
              <void />
            </ptr>
            <stack size="4" />
          </arg>
          <arg name="lParam">
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <typedef name="SUBCLASSPROC">
      <ptr>
        <fn>
          <return>
            <type>LRESULT</type>
            <reg>eax</reg>
          </return>
          <arg name="hWnd">
            <type>HWND</type>
            <stack size="4" />
          </arg>
          <arg name="uMsg">
            <type>UINT</type>
            <stack size="4" />
          </arg>
          <arg name="wParam">
            <type>WPARAM</type>
            <stack size="4" />
          </arg>
          <arg name="lParam">
            <type>LPARAM</type>
            <stack size="4" />
          </arg>
          <arg name="uIdSubclass">
            <type>UINT_PTR</type>
            <stack size="4" />
          </arg>
          <arg name="dwRefData">
            <type>DWORD_PTR</type>
            <stack size="4" />
          </arg>
        </fn>
      </ptr>
    </typedef>
    <enum name="_LI_METRIC">
      <member name="LIM_SMALL" value="0" />
      <member name="LIM_LARGE" value="1" />
    </enum>
  </Types>
  <procedure name="InitCommonControls">
    <signature convention="__stdcall">
      <return>
        <void />
      </return>
    </signature>
  </procedure>
  <procedure name="InitCommonControlsEx">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg name="picce">
        <ptr>
          <type>INITCOMMONCONTROLSEX</type>
        </ptr>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="ImageList_Create">
    <signature convention="__stdcall">
      <return>
        <type>HIMAGELIST</type>
        <reg>eax</reg>
      </return>
      <arg name="cx">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="cy">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="flags">
        <type>UINT</type>
        <stack size="4" />
      </arg>
      <arg name="cInitial">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="cGrow">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="ImageList_Destroy">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg name="himl">
        <type>HIMAGELIST</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="ImageList_GetImageCount">
    <signature convention="__stdcall">
      <return>
        <prim domain="SignedInt" size="4" />
        <reg>eax</reg>
      </return>
      <arg name="himl">
        <type>HIMAGELIST</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="ImageList_SetImageCount">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg name="himl">
        <type>HIMAGELIST</type>
        <stack size="4" />
      </arg>
      <arg name="uNewCount">
        <type>UINT</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="ImageList_Add">
    <signature convention="__stdcall">
      <return>
        <prim domain="SignedInt" size="4" />
        <reg>eax</reg>
      </return>
      <arg name="himl">
        <type>HIMAGELIST</type>
        <stack size="4" />
      </arg>
      <arg name="hbmImage">
        <type>HBITMAP</type>
        <stack size="4" />
      </arg>
      <arg name="hbmMask">
        <type>HBITMAP</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="ImageList_ReplaceIcon">
    <signature convention="__stdcall">
      <return>
        <prim domain="SignedInt" size="4" />
        <reg>eax</reg>
      </return>
      <arg name="himl">
        <type>HIMAGELIST</type>
        <stack size="4" />
      </arg>
      <arg name="i">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="hicon">
        <type>HICON</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="ImageList_SetBkColor">
    <signature convention="__stdcall">
      <return>
        <type>COLORREF</type>
        <reg>eax</reg>
      </return>
      <arg name="himl">
        <type>HIMAGELIST</type>
        <stack size="4" />
      </arg>
      <arg name="clrBk">
        <type>COLORREF</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="ImageList_GetBkColor">
    <signature convention="__stdcall">
      <return>
        <type>COLORREF</type>
        <reg>eax</reg>
      </return>
      <arg name="himl">
        <type>HIMAGELIST</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="ImageList_SetOverlayImage">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg name="himl">
        <type>HIMAGELIST</type>
        <stack size="4" />
      </arg>
      <arg name="iImage">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="iOverlay">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="ImageList_Draw">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg name="himl">
        <type>HIMAGELIST</type>
        <stack size="4" />
      </arg>
      <arg name="i">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="hdcDst">
        <type>HDC</type>
        <stack size="4" />
      </arg>
      <arg name="x">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="y">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="fStyle">
        <type>UINT</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="ImageList_Replace">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg name="himl">
        <type>HIMAGELIST</type>
        <stack size="4" />
      </arg>
      <arg name="i">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="hbmImage">
        <type>HBITMAP</type>
        <stack size="4" />
      </arg>
      <arg name="hbmMask">
        <type>HBITMAP</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="ImageList_AddMasked">
    <signature convention="__stdcall">
      <return>
        <prim domain="SignedInt" size="4" />
        <reg>eax</reg>
      </return>
      <arg name="himl">
        <type>HIMAGELIST</type>
        <stack size="4" />
      </arg>
      <arg name="hbmImage">
        <type>HBITMAP</type>
        <stack size="4" />
      </arg>
      <arg name="crMask">
        <type>COLORREF</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="ImageList_DrawEx">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg name="himl">
        <type>HIMAGELIST</type>
        <stack size="4" />
      </arg>
      <arg name="i">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="hdcDst">
        <type>HDC</type>
        <stack size="4" />
      </arg>
      <arg name="x">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="y">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="dx">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="dy">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="rgbBk">
        <type>COLORREF</type>
        <stack size="4" />
      </arg>
      <arg name="rgbFg">
        <type>COLORREF</type>
        <stack size="4" />
      </arg>
      <arg name="fStyle">
        <type>UINT</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="ImageList_DrawIndirect">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg name="pimldp">
        <ptr>
          <type>IMAGELISTDRAWPARAMS</type>
        </ptr>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="ImageList_Remove">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg name="himl">
        <type>HIMAGELIST</type>
        <stack size="4" />
      </arg>
      <arg name="i">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="ImageList_GetIcon">
    <signature convention="__stdcall">
      <return>
        <type>HICON</type>
        <reg>eax</reg>
      </return>
      <arg name="himl">
        <type>HIMAGELIST</type>
        <stack size="4" />
      </arg>
      <arg name="i">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="flags">
        <type>UINT</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="ImageList_LoadImageA">
    <signature convention="__stdcall">
      <return>
        <type>HIMAGELIST</type>
        <reg>eax</reg>
      </return>
      <arg name="hi">
        <type>HINSTANCE</type>
        <stack size="4" />
      </arg>
      <arg name="lpbmp">
        <type>LPCSTR</type>
        <stack size="4" />
      </arg>
      <arg name="cx">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="cGrow">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="crMask">
        <type>COLORREF</type>
        <stack size="4" />
      </arg>
      <arg name="uType">
        <type>UINT</type>
        <stack size="4" />
      </arg>
      <arg name="uFlags">
        <type>UINT</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="ImageList_LoadImageW">
    <signature convention="__stdcall">
      <return>
        <type>HIMAGELIST</type>
        <reg>eax</reg>
      </return>
      <arg name="hi">
        <type>HINSTANCE</type>
        <stack size="4" />
      </arg>
      <arg name="lpbmp">
        <type>LPCWSTR</type>
        <stack size="4" />
      </arg>
      <arg name="cx">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="cGrow">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="crMask">
        <type>COLORREF</type>
        <stack size="4" />
      </arg>
      <arg name="uType">
        <type>UINT</type>
        <stack size="4" />
      </arg>
      <arg name="uFlags">
        <type>UINT</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="ImageList_Copy">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg name="himlDst">
        <type>HIMAGELIST</type>
        <stack size="4" />
      </arg>
      <arg name="iDst">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="himlSrc">
        <type>HIMAGELIST</type>
        <stack size="4" />
      </arg>
      <arg name="iSrc">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="uFlags">
        <type>UINT</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="ImageList_BeginDrag">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg name="himlTrack">
        <type>HIMAGELIST</type>
        <stack size="4" />
      </arg>
      <arg name="iTrack">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="dxHotspot">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="dyHotspot">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="ImageList_EndDrag">
    <signature convention="__stdcall">
      <return>
        <void />
      </return>
    </signature>
  </procedure>
  <procedure name="ImageList_DragEnter">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg name="hwndLock">
        <type>HWND</type>
        <stack size="4" />
      </arg>
      <arg name="x">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="y">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="ImageList_DragLeave">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg name="hwndLock">
        <type>HWND</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="ImageList_DragMove">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg name="x">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="y">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="ImageList_SetDragCursorImage">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg name="himlDrag">
        <type>HIMAGELIST</type>
        <stack size="4" />
      </arg>
      <arg name="iDrag">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="dxHotspot">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="dyHotspot">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="ImageList_DragShowNolock">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg name="fShow">
        <type>BOOL</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="ImageList_GetDragImage">
    <signature convention="__stdcall">
      <return>
        <type>HIMAGELIST</type>
        <reg>eax</reg>
      </return>
      <arg name="ppt">
        <ptr>
          <type>POINT</type>
        </ptr>
        <stack size="4" />
      </arg>
      <arg name="pptHotspot">
        <ptr>
          <type>POINT</type>
        </ptr>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="ImageList_Read">
    <signature convention="__stdcall">
      <return>
        <type>HIMAGELIST</type>
        <reg>eax</reg>
      </return>
      <arg name="pstm">
        <ptr>
          <struct name="IStream" />
        </ptr>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="ImageList_Write">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg name="himl">
        <type>HIMAGELIST</type>
        <stack size="4" />
      </arg>
      <arg name="pstm">
        <ptr>
          <struct name="IStream" />
        </ptr>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="ImageList_ReadEx">
    <signature convention="__stdcall">
      <return>
        <type>HRESULT</type>
        <reg>eax</reg>
      </return>
      <arg name="dwFlags">
        <type>DWORD</type>
        <stack size="4" />
      </arg>
      <arg name="pstm">
        <ptr>
          <struct name="IStream" />
        </ptr>
        <stack size="4" />
      </arg>
      <arg name="riid">
        <ptr>
          <type>IID</type>
        </ptr>
        <stack size="4" />
      </arg>
      <arg name="ppv">
        <ptr>
          <type>PVOID</type>
        </ptr>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="ImageList_WriteEx">
    <signature convention="__stdcall">
      <return>
        <type>HRESULT</type>
        <reg>eax</reg>
      </return>
      <arg name="himl">
        <type>HIMAGELIST</type>
        <stack size="4" />
      </arg>
      <arg name="dwFlags">
        <type>DWORD</type>
        <stack size="4" />
      </arg>
      <arg name="pstm">
        <ptr>
          <struct name="IStream" />
        </ptr>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="ImageList_GetIconSize">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg name="himl">
        <type>HIMAGELIST</type>
        <stack size="4" />
      </arg>
      <arg name="cx">
        <ptr>
          <prim domain="SignedInt" size="4" />
        </ptr>
        <stack size="4" />
      </arg>
      <arg name="cy">
        <ptr>
          <prim domain="SignedInt" size="4" />
        </ptr>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="ImageList_SetIconSize">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg name="himl">
        <type>HIMAGELIST</type>
        <stack size="4" />
      </arg>
      <arg name="cx">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="cy">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="ImageList_GetImageInfo">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg name="himl">
        <type>HIMAGELIST</type>
        <stack size="4" />
      </arg>
      <arg name="i">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="pImageInfo">
        <ptr>
          <type>IMAGEINFO</type>
        </ptr>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="ImageList_Merge">
    <signature convention="__stdcall">
      <return>
        <type>HIMAGELIST</type>
        <reg>eax</reg>
      </return>
      <arg name="himl1">
        <type>HIMAGELIST</type>
        <stack size="4" />
      </arg>
      <arg name="i1">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="himl2">
        <type>HIMAGELIST</type>
        <stack size="4" />
      </arg>
      <arg name="i2">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="dx">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="dy">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="ImageList_Duplicate">
    <signature convention="__stdcall">
      <return>
        <type>HIMAGELIST</type>
        <reg>eax</reg>
      </return>
      <arg name="himl">
        <type>HIMAGELIST</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="HIMAGELIST_QueryInterface">
    <signature convention="__stdcall">
      <return>
        <type>HRESULT</type>
        <reg>eax</reg>
      </return>
      <arg name="himl">
        <type>HIMAGELIST</type>
        <stack size="4" />
      </arg>
      <arg name="riid">
        <ptr>
          <type>IID</type>
        </ptr>
        <stack size="4" />
      </arg>
      <arg name="ppv">
        <ptr>
          <ptr>
            <void />
          </ptr>
        </ptr>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="CreateToolbarEx">
    <signature convention="__stdcall">
      <return>
        <type>HWND</type>
        <reg>eax</reg>
      </return>
      <arg name="hwnd">
        <type>HWND</type>
        <stack size="4" />
      </arg>
      <arg name="ws">
        <type>DWORD</type>
        <stack size="4" />
      </arg>
      <arg name="wID">
        <type>UINT</type>
        <stack size="4" />
      </arg>
      <arg name="nBitmaps">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="hBMInst">
        <type>HINSTANCE</type>
        <stack size="4" />
      </arg>
      <arg name="wBMID">
        <type>UINT_PTR</type>
        <stack size="4" />
      </arg>
      <arg name="lpButtons">
        <type>LPCTBBUTTON</type>
        <stack size="4" />
      </arg>
      <arg name="iNumButtons">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="dxButton">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="dyButton">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="dxBitmap">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="dyBitmap">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="uStructSize">
        <type>UINT</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="CreateMappedBitmap">
    <signature convention="__stdcall">
      <return>
        <type>HBITMAP</type>
        <reg>eax</reg>
      </return>
      <arg name="hInstance">
        <type>HINSTANCE</type>
        <stack size="4" />
      </arg>
      <arg name="idBitmap">
        <type>INT_PTR</type>
        <stack size="4" />
      </arg>
      <arg name="wFlags">
        <type>UINT</type>
        <stack size="4" />
      </arg>
      <arg name="lpColorMap">
        <type>LPCOLORMAP</type>
        <stack size="4" />
      </arg>
      <arg name="iNumMaps">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="DrawStatusTextA">
    <signature convention="__stdcall">
      <return>
        <void />
      </return>
      <arg name="hDC">
        <type>HDC</type>
        <stack size="4" />
      </arg>
      <arg name="lprc">
        <type>LPCRECT</type>
        <stack size="4" />
      </arg>
      <arg name="pszText">
        <type>LPCSTR</type>
        <stack size="4" />
      </arg>
      <arg name="uFlags">
        <type>UINT</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="DrawStatusTextW">
    <signature convention="__stdcall">
      <return>
        <void />
      </return>
      <arg name="hDC">
        <type>HDC</type>
        <stack size="4" />
      </arg>
      <arg name="lprc">
        <type>LPCRECT</type>
        <stack size="4" />
      </arg>
      <arg name="pszText">
        <type>LPCWSTR</type>
        <stack size="4" />
      </arg>
      <arg name="uFlags">
        <type>UINT</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="CreateStatusWindowA">
    <signature convention="__stdcall">
      <return>
        <type>HWND</type>
        <reg>eax</reg>
      </return>
      <arg name="style">
        <type>LONG</type>
        <stack size="4" />
      </arg>
      <arg name="lpszText">
        <type>LPCSTR</type>
        <stack size="4" />
      </arg>
      <arg name="hwndParent">
        <type>HWND</type>
        <stack size="4" />
      </arg>
      <arg name="wID">
        <type>UINT</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="CreateStatusWindowW">
    <signature convention="__stdcall">
      <return>
        <type>HWND</type>
        <reg>eax</reg>
      </return>
      <arg name="style">
        <type>LONG</type>
        <stack size="4" />
      </arg>
      <arg name="lpszText">
        <type>LPCWSTR</type>
        <stack size="4" />
      </arg>
      <arg name="hwndParent">
        <type>HWND</type>
        <stack size="4" />
      </arg>
      <arg name="wID">
        <type>UINT</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="MenuHelp">
    <signature convention="__stdcall">
      <return>
        <void />
      </return>
      <arg name="uMsg">
        <type>UINT</type>
        <stack size="4" />
      </arg>
      <arg name="wParam">
        <type>WPARAM</type>
        <stack size="4" />
      </arg>
      <arg name="lParam">
        <type>LPARAM</type>
        <stack size="4" />
      </arg>
      <arg name="hMainMenu">
        <type>HMENU</type>
        <stack size="4" />
      </arg>
      <arg name="hInst">
        <type>HINSTANCE</type>
        <stack size="4" />
      </arg>
      <arg name="hwndStatus">
        <type>HWND</type>
        <stack size="4" />
      </arg>
      <arg name="lpwIDs">
        <ptr>
          <type>UINT</type>
        </ptr>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="ShowHideMenuCtl">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg name="hWnd">
        <type>HWND</type>
        <stack size="4" />
      </arg>
      <arg name="uFlags">
        <type>UINT_PTR</type>
        <stack size="4" />
      </arg>
      <arg name="lpInfo">
        <type>LPINT</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="GetEffectiveClientRect">
    <signature convention="__stdcall">
      <return>
        <void />
      </return>
      <arg name="hWnd">
        <type>HWND</type>
        <stack size="4" />
      </arg>
      <arg name="lprc">
        <type>LPRECT</type>
        <stack size="4" />
      </arg>
      <arg name="lpInfo">
        <ptr>
          <type>INT</type>
        </ptr>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="MakeDragList">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg name="hLB">
        <type>HWND</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="DrawInsert">
    <signature convention="__stdcall">
      <return>
        <void />
      </return>
      <arg name="handParent">
        <type>HWND</type>
        <stack size="4" />
      </arg>
      <arg name="hLB">
        <type>HWND</type>
        <stack size="4" />
      </arg>
      <arg name="nItem">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="LBItemFromPt">
    <signature convention="__stdcall">
      <return>
        <prim domain="SignedInt" size="4" />
        <reg>eax</reg>
      </return>
      <arg name="hLB">
        <type>HWND</type>
        <stack size="4" />
      </arg>
      <arg name="pt">
        <type>POINT</type>
        <stack size="8" />
      </arg>
      <arg name="bAutoScroll">
        <type>BOOL</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="CreateUpDownControl">
    <signature convention="__stdcall">
      <return>
        <type>HWND</type>
        <reg>eax</reg>
      </return>
      <arg name="dwStyle">
        <type>DWORD</type>
        <stack size="4" />
      </arg>
      <arg name="x">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="y">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="cx">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="cy">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="hParent">
        <type>HWND</type>
        <stack size="4" />
      </arg>
      <arg name="nID">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="hInst">
        <type>HINSTANCE</type>
        <stack size="4" />
      </arg>
      <arg name="hBuddy">
        <type>HWND</type>
        <stack size="4" />
      </arg>
      <arg name="nUpper">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="nLower">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="nPos">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="TaskDialogIndirect">
    <signature convention="__stdcall">
      <return>
        <type>HRESULT</type>
        <reg>eax</reg>
      </return>
      <arg name="pTaskConfig">
        <ptr>
          <type>TASKDIALOGCONFIG</type>
        </ptr>
        <stack size="4" />
      </arg>
      <arg name="pnButton">
        <ptr>
          <prim domain="SignedInt" size="4" />
        </ptr>
        <stack size="4" />
      </arg>
      <arg name="pnRadioButton">
        <ptr>
          <prim domain="SignedInt" size="4" />
        </ptr>
        <stack size="4" />
      </arg>
      <arg name="pfVerificationFlagChecked">
        <ptr>
          <type>BOOL</type>
        </ptr>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="TaskDialog">
    <signature convention="__stdcall">
      <return>
        <type>HRESULT</type>
        <reg>eax</reg>
      </return>
      <arg name="hwndParent">
        <type>HWND</type>
        <stack size="4" />
      </arg>
      <arg name="hInstance">
        <type>HINSTANCE</type>
        <stack size="4" />
      </arg>
      <arg name="pszWindowTitle">
        <type>PCWSTR</type>
        <stack size="4" />
      </arg>
      <arg name="pszMainInstruction">
        <type>PCWSTR</type>
        <stack size="4" />
      </arg>
      <arg name="pszContent">
        <type>PCWSTR</type>
        <stack size="4" />
      </arg>
      <arg name="dwCommonButtons">
        <type>TASKDIALOG_COMMON_BUTTON_FLAGS</type>
        <stack size="4" />
      </arg>
      <arg name="pszIcon">
        <type>PCWSTR</type>
        <stack size="4" />
      </arg>
      <arg name="pnButton">
        <ptr>
          <prim domain="SignedInt" size="4" />
        </ptr>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="InitMUILanguage">
    <signature convention="__stdcall">
      <return>
        <void />
      </return>
      <arg name="uiLang">
        <type>LANGID</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="GetMUILanguage">
    <signature convention="__stdcall">
      <return>
        <type>LANGID</type>
        <reg>eax</reg>
      </return>
    </signature>
  </procedure>
  <procedure name="DSA_Create">
    <signature convention="__stdcall">
      <return>
        <type>HDSA</type>
        <reg>eax</reg>
      </return>
      <arg name="cbItem">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="cItemGrow">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="DSA_Destroy">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg name="hdsa">
        <type>HDSA</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="DSA_DestroyCallback">
    <signature convention="__stdcall">
      <return>
        <void />
      </return>
      <arg name="hdsa">
        <type>HDSA</type>
        <stack size="4" />
      </arg>
      <arg name="pfnCB">
        <type>PFNDAENUMCALLBACK</type>
        <stack size="4" />
      </arg>
      <arg name="pData">
        <ptr>
          <void />
        </ptr>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="DSA_DeleteItem">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg name="hdsa">
        <type>HDSA</type>
        <stack size="4" />
      </arg>
      <arg name="i">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="DSA_DeleteAllItems">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg name="hdsa">
        <type>HDSA</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="DSA_EnumCallback">
    <signature convention="__stdcall">
      <return>
        <void />
      </return>
      <arg name="hdsa">
        <type>HDSA</type>
        <stack size="4" />
      </arg>
      <arg name="pfnCB">
        <type>PFNDAENUMCALLBACK</type>
        <stack size="4" />
      </arg>
      <arg name="pData">
        <ptr>
          <void />
        </ptr>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="DSA_InsertItem">
    <signature convention="__stdcall">
      <return>
        <prim domain="SignedInt" size="4" />
        <reg>eax</reg>
      </return>
      <arg name="hdsa">
        <type>HDSA</type>
        <stack size="4" />
      </arg>
      <arg name="i">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="pitem">
        <ptr>
          <void />
        </ptr>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="DSA_GetItemPtr">
    <signature convention="__stdcall">
      <return>
        <type>PVOID</type>
        <reg>eax</reg>
      </return>
      <arg name="hdsa">
        <type>HDSA</type>
        <stack size="4" />
      </arg>
      <arg name="i">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="DSA_GetItem">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg name="hdsa">
        <type>HDSA</type>
        <stack size="4" />
      </arg>
      <arg name="i">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="pitem">
        <ptr>
          <void />
        </ptr>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="DSA_SetItem">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg name="hdsa">
        <type>HDSA</type>
        <stack size="4" />
      </arg>
      <arg name="i">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="pitem">
        <ptr>
          <void />
        </ptr>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="DSA_Clone">
    <signature convention="__stdcall">
      <return>
        <type>HDSA</type>
        <reg>eax</reg>
      </return>
      <arg name="hdsa">
        <type>HDSA</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="DSA_GetSize">
    <signature convention="__stdcall">
      <return>
        <type>ULONGLONG</type>
        <reg>eax</reg>
      </return>
      <arg name="hdsa">
        <type>HDSA</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="DSA_Sort">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg name="pdsa">
        <type>HDSA</type>
        <stack size="4" />
      </arg>
      <arg name="pfnCompare">
        <type>PFNDACOMPARE</type>
        <stack size="4" />
      </arg>
      <arg name="lParam">
        <type>LPARAM</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="DPA_Create">
    <signature convention="__stdcall">
      <return>
        <type>HDPA</type>
        <reg>eax</reg>
      </return>
      <arg name="cItemGrow">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="DPA_CreateEx">
    <signature convention="__stdcall">
      <return>
        <type>HDPA</type>
        <reg>eax</reg>
      </return>
      <arg name="cpGrow">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="hheap">
        <type>HANDLE</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="DPA_Clone">
    <signature convention="__stdcall">
      <return>
        <type>HDPA</type>
        <reg>eax</reg>
      </return>
      <arg name="hdpa">
        <type>HDPA</type>
        <stack size="4" />
      </arg>
      <arg name="hdpaNew">
        <type>HDPA</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="DPA_Destroy">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg name="hdpa">
        <type>HDPA</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="DPA_DestroyCallback">
    <signature convention="__stdcall">
      <return>
        <void />
      </return>
      <arg name="hdpa">
        <type>HDPA</type>
        <stack size="4" />
      </arg>
      <arg name="pfnCB">
        <type>PFNDAENUMCALLBACK</type>
        <stack size="4" />
      </arg>
      <arg name="pData">
        <ptr>
          <void />
        </ptr>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="DPA_DeletePtr">
    <signature convention="__stdcall">
      <return>
        <type>PVOID</type>
        <reg>eax</reg>
      </return>
      <arg name="hdpa">
        <type>HDPA</type>
        <stack size="4" />
      </arg>
      <arg name="i">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="DPA_DeleteAllPtrs">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg name="hdpa">
        <type>HDPA</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="DPA_EnumCallback">
    <signature convention="__stdcall">
      <return>
        <void />
      </return>
      <arg name="hdpa">
        <type>HDPA</type>
        <stack size="4" />
      </arg>
      <arg name="pfnCB">
        <type>PFNDAENUMCALLBACK</type>
        <stack size="4" />
      </arg>
      <arg name="pData">
        <ptr>
          <void />
        </ptr>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="DPA_Grow">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg name="pdpa">
        <type>HDPA</type>
        <stack size="4" />
      </arg>
      <arg name="cp">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="DPA_InsertPtr">
    <signature convention="__stdcall">
      <return>
        <prim domain="SignedInt" size="4" />
        <reg>eax</reg>
      </return>
      <arg name="hdpa">
        <type>HDPA</type>
        <stack size="4" />
      </arg>
      <arg name="i">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="p">
        <ptr>
          <void />
        </ptr>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="DPA_SetPtr">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg name="hdpa">
        <type>HDPA</type>
        <stack size="4" />
      </arg>
      <arg name="i">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="p">
        <ptr>
          <void />
        </ptr>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="DPA_GetPtr">
    <signature convention="__stdcall">
      <return>
        <type>PVOID</type>
        <reg>eax</reg>
      </return>
      <arg name="hdpa">
        <type>HDPA</type>
        <stack size="4" />
      </arg>
      <arg name="i">
        <type>INT_PTR</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="DPA_GetPtrIndex">
    <signature convention="__stdcall">
      <return>
        <prim domain="SignedInt" size="4" />
        <reg>eax</reg>
      </return>
      <arg name="hdpa">
        <type>HDPA</type>
        <stack size="4" />
      </arg>
      <arg name="p">
        <ptr>
          <void />
        </ptr>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="DPA_GetSize">
    <signature convention="__stdcall">
      <return>
        <type>ULONGLONG</type>
        <reg>eax</reg>
      </return>
      <arg name="hdpa">
        <type>HDPA</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="DPA_Sort">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg name="hdpa">
        <type>HDPA</type>
        <stack size="4" />
      </arg>
      <arg name="pfnCompare">
        <type>PFNDACOMPARE</type>
        <stack size="4" />
      </arg>
      <arg name="lParam">
        <type>LPARAM</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="DPA_LoadStream">
    <signature convention="__stdcall">
      <return>
        <type>HRESULT</type>
        <reg>eax</reg>
      </return>
      <arg name="phdpa">
        <ptr>
          <type>HDPA</type>
        </ptr>
        <stack size="4" />
      </arg>
      <arg name="pfn">
        <type>PFNDPASTREAM</type>
        <stack size="4" />
      </arg>
      <arg name="pstream">
        <ptr>
          <struct name="IStream" />
        </ptr>
        <stack size="4" />
      </arg>
      <arg name="pvInstData">
        <ptr>
          <void />
        </ptr>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="DPA_SaveStream">
    <signature convention="__stdcall">
      <return>
        <type>HRESULT</type>
        <reg>eax</reg>
      </return>
      <arg name="hdpa">
        <type>HDPA</type>
        <stack size="4" />
      </arg>
      <arg name="pfn">
        <type>PFNDPASTREAM</type>
        <stack size="4" />
      </arg>
      <arg name="pstream">
        <ptr>
          <struct name="IStream" />
        </ptr>
        <stack size="4" />
      </arg>
      <arg name="pvInstData">
        <ptr>
          <void />
        </ptr>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="DPA_Merge">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg name="hdpaDest">
        <type>HDPA</type>
        <stack size="4" />
      </arg>
      <arg name="hdpaSrc">
        <type>HDPA</type>
        <stack size="4" />
      </arg>
      <arg name="dwFlags">
        <type>DWORD</type>
        <stack size="4" />
      </arg>
      <arg name="pfnCompare">
        <type>PFNDACOMPARE</type>
        <stack size="4" />
      </arg>
      <arg name="pfnMerge">
        <type>PFNDPAMERGE</type>
        <stack size="4" />
      </arg>
      <arg name="lParam">
        <type>LPARAM</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="DPA_Search">
    <signature convention="__stdcall">
      <return>
        <prim domain="SignedInt" size="4" />
        <reg>eax</reg>
      </return>
      <arg name="hdpa">
        <type>HDPA</type>
        <stack size="4" />
      </arg>
      <arg name="pFind">
        <ptr>
          <void />
        </ptr>
        <stack size="4" />
      </arg>
      <arg name="iStart">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="pfnCompare">
        <type>PFNDACOMPARE</type>
        <stack size="4" />
      </arg>
      <arg name="lParam">
        <type>LPARAM</type>
        <stack size="4" />
      </arg>
      <arg name="options">
        <type>UINT</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="Str_SetPtrW">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg name="ppsz">
        <ptr>
          <type>LPWSTR</type>
        </ptr>
        <stack size="4" />
      </arg>
      <arg name="psz">
        <type>LPCWSTR</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="_TrackMouseEvent">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg name="lpEventTrack">
        <type>LPTRACKMOUSEEVENT</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="FlatSB_EnableScrollBar">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg>
        <type>HWND</type>
        <stack size="4" />
      </arg>
      <arg>
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg>
        <type>UINT</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="FlatSB_ShowScrollBar">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg>
        <type>HWND</type>
        <stack size="4" />
      </arg>
      <arg name="code">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg>
        <type>BOOL</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="FlatSB_GetScrollRange">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg>
        <type>HWND</type>
        <stack size="4" />
      </arg>
      <arg name="code">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg>
        <type>LPINT</type>
        <stack size="4" />
      </arg>
      <arg>
        <type>LPINT</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="FlatSB_GetScrollInfo">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg>
        <type>HWND</type>
        <stack size="4" />
      </arg>
      <arg name="code">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg>
        <type>LPSCROLLINFO</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="FlatSB_GetScrollPos">
    <signature convention="__stdcall">
      <return>
        <prim domain="SignedInt" size="4" />
        <reg>eax</reg>
      </return>
      <arg>
        <type>HWND</type>
        <stack size="4" />
      </arg>
      <arg name="code">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="FlatSB_GetScrollProp">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg>
        <type>HWND</type>
        <stack size="4" />
      </arg>
      <arg name="propIndex">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg>
        <type>LPINT</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="FlatSB_SetScrollPos">
    <signature convention="__stdcall">
      <return>
        <prim domain="SignedInt" size="4" />
        <reg>eax</reg>
      </return>
      <arg>
        <type>HWND</type>
        <stack size="4" />
      </arg>
      <arg name="code">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="pos">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="fRedraw">
        <type>BOOL</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="FlatSB_SetScrollInfo">
    <signature convention="__stdcall">
      <return>
        <prim domain="SignedInt" size="4" />
        <reg>eax</reg>
      </return>
      <arg>
        <type>HWND</type>
        <stack size="4" />
      </arg>
      <arg name="code">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="psi">
        <type>LPSCROLLINFO</type>
        <stack size="4" />
      </arg>
      <arg name="fRedraw">
        <type>BOOL</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="FlatSB_SetScrollRange">
    <signature convention="__stdcall">
      <return>
        <prim domain="SignedInt" size="4" />
        <reg>eax</reg>
      </return>
      <arg>
        <type>HWND</type>
        <stack size="4" />
      </arg>
      <arg name="code">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="min">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="max">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="fRedraw">
        <type>BOOL</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="FlatSB_SetScrollProp">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg>
        <type>HWND</type>
        <stack size="4" />
      </arg>
      <arg name="index">
        <type>UINT</type>
        <stack size="4" />
      </arg>
      <arg name="newValue">
        <type>INT_PTR</type>
        <stack size="4" />
      </arg>
      <arg>
        <type>BOOL</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="InitializeFlatSB">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg>
        <type>HWND</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="UninitializeFlatSB">
    <signature convention="__stdcall">
      <return>
        <type>HRESULT</type>
        <reg>eax</reg>
      </return>
      <arg>
        <type>HWND</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="SetWindowSubclass">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg name="hWnd">
        <type>HWND</type>
        <stack size="4" />
      </arg>
      <arg name="pfnSubclass">
        <type>SUBCLASSPROC</type>
        <stack size="4" />
      </arg>
      <arg name="uIdSubclass">
        <type>UINT_PTR</type>
        <stack size="4" />
      </arg>
      <arg name="dwRefData">
        <type>DWORD_PTR</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="GetWindowSubclass">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg name="hWnd">
        <type>HWND</type>
        <stack size="4" />
      </arg>
      <arg name="pfnSubclass">
        <type>SUBCLASSPROC</type>
        <stack size="4" />
      </arg>
      <arg name="uIdSubclass">
        <type>UINT_PTR</type>
        <stack size="4" />
      </arg>
      <arg name="pdwRefData">
        <ptr>
          <type>DWORD_PTR</type>
        </ptr>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="RemoveWindowSubclass">
    <signature convention="__stdcall">
      <return>
        <type>BOOL</type>
        <reg>eax</reg>
      </return>
      <arg name="hWnd">
        <type>HWND</type>
        <stack size="4" />
      </arg>
      <arg name="pfnSubclass">
        <type>SUBCLASSPROC</type>
        <stack size="4" />
      </arg>
      <arg name="uIdSubclass">
        <type>UINT_PTR</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="DefSubclassProc">
    <signature convention="__stdcall">
      <return>
        <type>LRESULT</type>
        <reg>eax</reg>
      </return>
      <arg name="hWnd">
        <type>HWND</type>
        <stack size="4" />
      </arg>
      <arg name="uMsg">
        <type>UINT</type>
        <stack size="4" />
      </arg>
      <arg name="wParam">
        <type>WPARAM</type>
        <stack size="4" />
      </arg>
      <arg name="lParam">
        <type>LPARAM</type>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="LoadIconMetric">
    <signature convention="__stdcall">
      <return>
        <type>HRESULT</type>
        <reg>eax</reg>
      </return>
      <arg name="hinst">
        <type>HINSTANCE</type>
        <stack size="4" />
      </arg>
      <arg name="pszName">
        <type>PCWSTR</type>
        <stack size="4" />
      </arg>
      <arg name="lims">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="phico">
        <ptr>
          <type>HICON</type>
        </ptr>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="LoadIconWithScaleDown">
    <signature convention="__stdcall">
      <return>
        <type>HRESULT</type>
        <reg>eax</reg>
      </return>
      <arg name="hinst">
        <type>HINSTANCE</type>
        <stack size="4" />
      </arg>
      <arg name="pszName">
        <type>PCWSTR</type>
        <stack size="4" />
      </arg>
      <arg name="cx">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="cy">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="phico">
        <ptr>
          <type>HICON</type>
        </ptr>
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
  <procedure name="DrawShadowText">
    <signature convention="__stdcall">
      <return>
        <prim domain="SignedInt" size="4" />
        <reg>eax</reg>
      </return>
      <arg name="hdc">
        <type>HDC</type>
        <stack size="4" />
      </arg>
      <arg name="pszText">
        <type>LPCWSTR</type>
        <stack size="4" />
      </arg>
      <arg name="cch">
        <type>UINT</type>
        <stack size="4" />
      </arg>
      <arg name="prc">
        <ptr>
          <type>RECT</type>
        </ptr>
        <stack size="4" />
      </arg>
      <arg name="dwFlags">
        <type>DWORD</type>
        <stack size="4" />
      </arg>
      <arg name="crText">
        <type>COLORREF</type>
        <stack size="4" />
      </arg>
      <arg name="crShadow">
        <type>COLORREF</type>
        <stack size="4" />
      </arg>
      <arg name="ixOffset">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
      <arg name="iyOffset">
        <prim domain="SignedInt" size="4" />
        <stack size="4" />
      </arg>
    </signature>
  </procedure>
</library>